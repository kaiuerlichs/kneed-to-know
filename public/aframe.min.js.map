{
    "version": 3,
    "sources": [
    "node_modules/browser-pack/_prelude.js",
    "package.json",
    "src/style/aframe.css",
    "src/style/rStats.css",
    "node_modules/an-array/index.js",
    "node_modules/as-number/index.js",
    "node_modules/base64-js/index.js",
    "node_modules/browserify-css/browser.js",
    "node_modules/browserify/node_modules/process/browser.js",
    "node_modules/buffer-equal/index.js",
    "node_modules/buffer/index.js",
    "node_modules/buffer/node_modules/isarray/index.js",
    "node_modules/custom-event-polyfill/polyfill.js",
    "node_modules/debug/browser.js",
    "node_modules/debug/debug.js",
    "node_modules/deep-assign/index.js",
    "node_modules/document-register-element/build/document-register-element.js",
    "node_modules/dtype/index.js",
    "node_modules/flatten-vertex-data/index.js",
    "node_modules/for-each/index.js",
    "node_modules/global/window.js",
    "node_modules/ieee754/index.js",
    "node_modules/inherits/inherits_browser.js",
    "node_modules/is-buffer/index.js",
    "node_modules/is-callable/index.js",
    "node_modules/is-function/index.js",
    "node_modules/is-obj/index.js",
    "node_modules/layout-bmfont-text/index.js",
    "node_modules/load-bmfont/browser.js",
    "node_modules/load-bmfont/lib/is-binary.js",
    "node_modules/object-assign/index.js",
    "node_modules/parse-bmfont-ascii/index.js",
    "node_modules/parse-bmfont-binary/index.js",
    "node_modules/parse-bmfont-xml/lib/browser.js",
    "node_modules/parse-bmfont-xml/lib/parse-attribs.js",
    "node_modules/parse-headers/parse-headers.js",
    "node_modules/present/lib/present-browser.js",
    "node_modules/promise-polyfill/Promise.js",
    "node_modules/quad-indices/index.js",
    "node_modules/super-animejs/lib/anime.js",
    "node_modules/super-three/build/three.js",
    "node_modules/super-three/examples/js/loaders/DRACOLoader.js",
    "node_modules/super-three/examples/js/loaders/GLTFLoader.js",
    "node_modules/super-three/examples/js/loaders/MTLLoader.js",
    "node_modules/super-three/examples/js/loaders/OBJLoader.js",
    "node_modules/three-bmfont-text/index.js",
    "node_modules/three-bmfont-text/lib/utils.js",
    "node_modules/three-bmfont-text/lib/vertices.js",
    "node_modules/three-buffer-vertex-data/index.js",
    "node_modules/timers-browserify/main.js",
    "node_modules/trim/index.js",
    "node_modules/webvr-polyfill/build/webvr-polyfill.js",
    "node_modules/word-wrapper/index.js",
    "node_modules/xhr/index.js",
    "node_modules/xml-parse-from-string/index.js",
    "node_modules/xtend/immutable.js",
    "src/components/animation.js",
    "src/components/camera.js",
    "src/components/cursor.js",
    "src/components/daydream-controls.js",
    "src/components/gearvr-controls.js",
    "src/components/geometry.js",
    "src/components/gltf-model.js",
    "src/components/hand-controls.js",
    "src/components/index.js",
    "src/components/laser-controls.js",
    "src/components/light.js",
    "src/components/line.js",
    "src/components/link.js",
    "src/components/look-controls.js",
    "src/components/material.js",
    "src/components/obj-model.js",
    "src/components/oculus-go-controls.js",
    "src/components/oculus-touch-controls.js",
    "src/components/position.js",
    "src/components/raycaster.js",
    "src/components/rotation.js",
    "src/components/scale.js",
    "src/components/scene/background.js",
    "src/components/scene/debug.js",
    "src/components/scene/embedded.js",
    "src/components/scene/fog.js",
    "src/components/scene/inspector.js",
    "src/components/scene/keyboard-shortcuts.js",
    "src/components/scene/pool.js",
    "src/components/scene/screenshot.js",
    "src/components/scene/stats.js",
    "src/components/scene/vr-mode-ui.js",
    "src/components/shadow.js",
    "src/components/sound.js",
    "src/components/text.js",
    "src/components/tracked-controls-webvr.js",
    "src/components/tracked-controls-webxr.js",
    "src/components/tracked-controls.js",
    "src/components/visible.js",
    "src/components/vive-controls.js",
    "src/components/vive-focus-controls.js",
    "src/components/wasd-controls.js",
    "src/components/windows-motion-controls.js",
    "src/constants/index.js",
    "src/constants/keyboardevent.js",
    "src/core/a-assets.js",
    "src/core/a-cubemap.js",
    "src/core/a-entity.js",
    "src/core/a-mixin.js",
    "src/core/a-node.js",
    "src/core/a-register-element.js",
    "src/core/component.js",
    "src/core/geometry.js",
    "src/core/propertyTypes.js",
    "src/core/scene/a-scene.js",
    "src/core/scene/loadingScreen.js",
    "src/core/scene/metaTags.js",
    "src/core/scene/postMessage.js",
    "src/core/scene/scenes.js",
    "src/core/scene/wakelock.js",
    "src/core/schema.js",
    "src/core/shader.js",
    "src/core/system.js",
    "src/extras/components/index.js",
    "src/extras/components/pivot.js",
    "src/extras/primitives/getMeshMixin.js",
    "src/extras/primitives/index.js",
    "src/extras/primitives/primitives.js",
    "src/extras/primitives/primitives/a-camera.js",
    "src/extras/primitives/primitives/a-cursor.js",
    "src/extras/primitives/primitives/a-curvedimage.js",
    "src/extras/primitives/primitives/a-gltf-model.js",
    "src/extras/primitives/primitives/a-image.js",
    "src/extras/primitives/primitives/a-light.js",
    "src/extras/primitives/primitives/a-link.js",
    "src/extras/primitives/primitives/a-obj-model.js",
    "src/extras/primitives/primitives/a-sky.js",
    "src/extras/primitives/primitives/a-sound.js",
    "src/extras/primitives/primitives/a-text.js",
    "src/extras/primitives/primitives/a-video.js",
    "src/extras/primitives/primitives/a-videosphere.js",
    "src/extras/primitives/primitives/meshPrimitives.js",
    "src/geometries/box.js",
    "src/geometries/circle.js",
    "src/geometries/cone.js",
    "src/geometries/cylinder.js",
    "src/geometries/dodecahedron.js",
    "src/geometries/icosahedron.js",
    "src/geometries/index.js",
    "src/geometries/octahedron.js",
    "src/geometries/plane.js",
    "src/geometries/ring.js",
    "src/geometries/sphere.js",
    "src/geometries/tetrahedron.js",
    "src/geometries/torus.js",
    "src/geometries/torusKnot.js",
    "src/geometries/triangle.js",
    "src/index.js",
    "src/lib/rStatsAframe.js",
    "src/lib/three.js",
    "src/shaders/flat.js",
    "src/shaders/index.js",
    "src/shaders/ios10hls.js",
    "src/shaders/msdf.js",
    "src/shaders/sdf.js",
    "src/shaders/standard.js",
    "src/systems/camera.js",
    "src/systems/geometry.js",
    "src/systems/gltf-model.js",
    "src/systems/index.js",
    "src/systems/light.js",
    "src/systems/material.js",
    "src/systems/renderer.js",
    "src/systems/shadow.js",
    "src/systems/tracked-controls-webvr.js",
    "src/systems/tracked-controls-webxr.js",
    "src/utils/bind.js",
    "src/utils/coordinates.js",
    "src/utils/debug.js",
    "src/utils/device.js",
    "src/utils/entity.js",
    "src/utils/forceCanvasResizeSafariMobile.js",
    "src/utils/index.js",
    "src/utils/is-ie11.js",
    "src/utils/isIOSOlderThan10.js",
    "src/utils/material.js",
    "src/utils/object-pool.js",
    "src/utils/split.js",
    "src/utils/src-loader.js",
    "src/utils/styleParser.js",
    "src/utils/tracked-controls.js",
    "vendor/rStats.extras.js",
    "vendor/rStats.js",
    "vendor/starts-with-polyfill.js",
    "vendor/wakelock/util.js",
    "vendor/wakelock/wakelock.js"
    ],
    "names": [
    "anArray",
    "arr",
    "BYTES_PER_ELEMENT",
    "str",
    "call",
    "buffer",
    "Array",
    "isArray",
    "Object",
    "prototype",
    "toString",
    "module",
    "exports",
    "num",
    "def",
    "getLens",
    "b64",
    "len",
    "length",
    "Error",
    "validLen",
    "indexOf",
    "byteLength",
    "lens",
    "placeHoldersLen",
    "_byteLength",
    "toByteArray",
    "tmp",
    "Arr",
    "curByte",
    "i",
    "revLookup",
    "charCodeAt",
    "tripletToBase64",
    "lookup",
    "encodeChunk",
    "uint8",
    "start",
    "end",
    "output",
    "push",
    "join",
    "fromByteArray",
    "extraBytes",
    "parts",
    "len2",
    "Uint8Array",
    "code",
    "createLink",
    "href",
    "attributes",
    "head",
    "document",
    "getElementsByTagName",
    "link",
    "createElement",
    "rel",
    "key",
    "hasOwnProperty",
    "value",
    "setAttribute",
    "appendChild",
    "createStyle",
    "cssText",
    "style",
    "type",
    "sheet",
    "innerHTML",
    "styleSheet",
    "createTextNode",
    "defaultSetTimout",
    "defaultClearTimeout",
    "runTimeout",
    "fun",
    "cachedSetTimeout",
    "setTimeout",
    "e",
    "this",
    "runClearTimeout",
    "marker",
    "cachedClearTimeout",
    "clearTimeout",
    "cleanUpNextTick",
    "draining",
    "currentQueue",
    "queue",
    "concat",
    "queueIndex",
    "drainQueue",
    "timeout",
    "run",
    "Item",
    "array",
    "noop",
    "process",
    "nextTick",
    "args",
    "arguments",
    "apply",
    "title",
    "browser",
    "env",
    "argv",
    "version",
    "versions",
    "on",
    "addListener",
    "once",
    "off",
    "removeListener",
    "removeAllListeners",
    "emit",
    "prependListener",
    "prependOnceListener",
    "listeners",
    "name",
    "binding",
    "cwd",
    "chdir",
    "dir",
    "umask",
    "Buffer",
    "require",
    "a",
    "b",
    "isBuffer",
    "equals",
    "typedArraySupport",
    "__proto__",
    "foo",
    "subarray",
    "kMaxLength",
    "TYPED_ARRAY_SUPPORT",
    "createBuffer",
    "that",
    "RangeError",
    "arg",
    "encodingOrOffset",
    "allocUnsafe",
    "from",
    "TypeError",
    "ArrayBuffer",
    "fromArrayBuffer",
    "fromString",
    "fromObject",
    "assertSize",
    "size",
    "alloc",
    "fill",
    "encoding",
    "undefined",
    "checked",
    "string",
    "isEncoding",
    "actual",
    "write",
    "slice",
    "fromArrayLike",
    "byteOffset",
    "obj",
    "copy",
    "isnan",
    "data",
    "SlowBuffer",
    "isView",
    "loweredCase",
    "utf8ToBytes",
    "base64ToBytes",
    "toLowerCase",
    "slowToString",
    "hexSlice",
    "utf8Slice",
    "asciiSlice",
    "latin1Slice",
    "base64Slice",
    "utf16leSlice",
    "swap",
    "n",
    "m",
    "bidirectionalIndexOf",
    "val",
    "isNaN",
    "arrayIndexOf",
    "lastIndexOf",
    "read",
    "buf",
    "indexSize",
    "readUInt16BE",
    "arrLength",
    "valLength",
    "String",
    "foundIndex",
    "found",
    "j",
    "hexWrite",
    "offset",
    "Number",
    "remaining",
    "strLen",
    "parsed",
    "parseInt",
    "substr",
    "utf8Write",
    "blitBuffer",
    "asciiWrite",
    "asciiToBytes",
    "latin1Write",
    "base64Write",
    "ucs2Write",
    "utf16leToBytes",
    "base64",
    "Math",
    "min",
    "res",
    "firstByte",
    "codePoint",
    "bytesPerSequence",
    "secondByte",
    "thirdByte",
    "fourthByte",
    "tempCodePoint",
    "decodeCodePointsArray",
    "codePoints",
    "MAX_ARGUMENTS_LENGTH",
    "fromCharCode",
    "ret",
    "out",
    "toHex",
    "bytes",
    "checkOffset",
    "ext",
    "checkInt",
    "max",
    "objectWriteUInt16",
    "littleEndian",
    "objectWriteUInt32",
    "checkIEEE754",
    "writeFloat",
    "noAssert",
    "ieee754",
    "writeDouble",
    "base64clean",
    "stringtrim",
    "replace",
    "INVALID_BASE64_RE",
    "trim",
    "units",
    "Infinity",
    "leadSurrogate",
    "byteArray",
    "c",
    "hi",
    "lo",
    "src",
    "dst",
    "INSPECT_MAX_BYTES",
    "global",
    "poolSize",
    "_augment",
    "Symbol",
    "species",
    "defineProperty",
    "configurable",
    "allocUnsafeSlow",
    "_isBuffer",
    "compare",
    "x",
    "y",
    "list",
    "pos",
    "swap16",
    "swap32",
    "swap64",
    "inspect",
    "match",
    "target",
    "thisStart",
    "thisEnd",
    "thisCopy",
    "targetCopy",
    "includes",
    "isFinite",
    "toJSON",
    "_arr",
    "newBuf",
    "sliceLen",
    "readUIntLE",
    "mul",
    "readUIntBE",
    "readUInt8",
    "readUInt16LE",
    "readUInt32LE",
    "readUInt32BE",
    "readIntLE",
    "pow",
    "readIntBE",
    "readInt8",
    "readInt16LE",
    "readInt16BE",
    "readInt32LE",
    "readInt32BE",
    "readFloatLE",
    "readFloatBE",
    "readDoubleLE",
    "readDoubleBE",
    "writeUIntLE",
    "writeUIntBE",
    "writeUInt8",
    "floor",
    "writeUInt16LE",
    "writeUInt16BE",
    "writeUInt32LE",
    "writeUInt32BE",
    "writeIntLE",
    "limit",
    "sub",
    "writeIntBE",
    "writeInt8",
    "writeInt16LE",
    "writeInt16BE",
    "writeInt32LE",
    "writeInt32BE",
    "writeFloatLE",
    "writeFloatBE",
    "writeDoubleLE",
    "writeDoubleBE",
    "targetStart",
    "set",
    "window",
    "ce",
    "CustomEvent",
    "cancelable",
    "preventDefault",
    "defaultPrevented",
    "event",
    "params",
    "evt",
    "origPrevent",
    "bubbles",
    "detail",
    "createEvent",
    "initCustomEvent",
    "get",
    "Event",
    "useColors",
    "documentElement",
    "console",
    "firebug",
    "exception",
    "table",
    "navigator",
    "userAgent",
    "RegExp",
    "$1",
    "formatArgs",
    "namespace",
    "color",
    "index",
    "lastC",
    "splice",
    "log",
    "Function",
    "save",
    "namespaces",
    "storage",
    "removeItem",
    "debug",
    "load",
    "r",
    "localstorage",
    "localStorage",
    "chrome",
    "local",
    "colors",
    "formatters",
    "v",
    "JSON",
    "stringify",
    "enable",
    "selectColor",
    "prevColor",
    "disabled",
    "enabled",
    "self",
    "coerce",
    "format",
    "formatter",
    "bind",
    "fn",
    "split",
    "skips",
    "names",
    "disable",
    "test",
    "stack",
    "message",
    "toObject",
    "assignKey",
    "to",
    "isObj",
    "assign",
    "getOwnPropertySymbols",
    "symbols",
    "propIsEnumerable",
    "propertyIsEnumerable",
    "s",
    "t",
    "st",
    "gt",
    "ot",
    "it",
    "w",
    "at",
    "ut",
    "F",
    "querySelectorAll",
    "E",
    "R",
    "nodeName",
    "toUpperCase",
    "ft",
    "lt",
    "currentTarget",
    "attrChange",
    "attrName",
    "Y",
    "attributeChangedCallback",
    "prevValue",
    "newValue",
    "f",
    "ct",
    "$",
    "ht",
    "G",
    "removeEventListener",
    "p",
    "u",
    "o",
    "vt",
    "pt",
    "U",
    "Z",
    "dt",
    "P",
    "nt",
    "observe",
    "X",
    "Q",
    "tt",
    "addEventListener",
    "d",
    "h",
    "createdCallback",
    "created",
    "I",
    "S",
    "contains",
    "mt",
    "rt",
    "et",
    "random",
    "l",
    "g",
    "T",
    "N",
    "C",
    "isPrototypeOf",
    "k",
    "L",
    "getOwnPropertyDescriptor",
    "A",
    "getOwnPropertyNames",
    "O",
    "getPrototypeOf",
    "M",
    "setPrototypeOf",
    "_",
    "D",
    "create",
    "yt",
    "H",
    "MutationObserver",
    "WebKitMutationObserver",
    "B",
    "HTMLElement",
    "Element",
    "Node",
    "nodeType",
    "q",
    "cloneNode",
    "getAttribute",
    "z",
    "removeAttribute",
    "W",
    "characterData",
    "attributeOldValue",
    "V",
    "J",
    "requestAnimationFrame",
    "webkitRequestAnimationFrame",
    "mozRequestAnimationFrame",
    "msRequestAnimationFrame",
    "K",
    "dispatchEvent",
    "hasAttribute",
    "propertyName",
    "className",
    "addedNodes",
    "removedNodes",
    "attributeName",
    "oldValue",
    "childList",
    "subtree",
    "shift",
    "innerHTMLHelper",
    "dtype",
    "Int8Array",
    "Int16Array",
    "Int32Array",
    "Uint16Array",
    "Uint32Array",
    "Float32Array",
    "Float64Array",
    "Uint8ClampedArray",
    "flattenVertexData",
    "dim",
    "dstLength",
    "NaN",
    "Ctor",
    "isCallable",
    "toStr",
    "forEachArray",
    "iterator",
    "receiver",
    "forEachString",
    "charAt",
    "forEachObject",
    "object",
    "forEach",
    "thisArg",
    "win",
    "isLE",
    "mLen",
    "nBytes",
    "eLen",
    "eMax",
    "eBias",
    "nBits",
    "abs",
    "LN2",
    "ctor",
    "superCtor",
    "super_",
    "constructor",
    "enumerable",
    "writable",
    "TempCtor",
    "isSlowBuffer",
    "fnToStr",
    "constructorRegex",
    "isES6ClassFn",
    "fnStr",
    "tryFunctionObject",
    "fnClass",
    "genClass",
    "hasToStringTag",
    "toStringTag",
    "strClass",
    "isFunction",
    "alert",
    "confirm",
    "prompt",
    "TextLayout",
    "opt",
    "glyphs",
    "_measure",
    "computeMetrics",
    "update",
    "addGetter",
    "wrapper",
    "getGlyphById",
    "font",
    "id",
    "chars",
    "glyphIdx",
    "findChar",
    "getXHeight",
    "X_HEIGHTS",
    "idx",
    "height",
    "getMGlyph",
    "M_WIDTHS",
    "getCapHeight",
    "CAP_HEIGHTS",
    "getKerning",
    "left",
    "right",
    "kernings",
    "kern",
    "first",
    "second",
    "amount",
    "getAlignType",
    "align",
    "ALIGN_CENTER",
    "ALIGN_RIGHT",
    "ALIGN_LEFT",
    "wordWrap",
    "xtend",
    "number",
    "TAB_ID",
    "SPACE_ID",
    "measure",
    "_opt",
    "tabSize",
    "text",
    "_setupSpaceGlyphs",
    "lines",
    "minWidth",
    "width",
    "maxLineWidth",
    "reduce",
    "prev",
    "line",
    "lineHeight",
    "common",
    "baseline",
    "base",
    "descender",
    "letterSpacing",
    "_width",
    "_height",
    "_descender",
    "_baseline",
    "_xHeight",
    "_capHeight",
    "_lineHeight",
    "_ascender",
    "lineIndex",
    "lastGlyph",
    "lineWidth",
    "glyph",
    "getGlyph",
    "tx",
    "position",
    "xadvance",
    "_linesTotal",
    "_fallbackSpaceGlyph",
    "_fallbackTabGlyph",
    "space",
    "tabWidth",
    "xoffset",
    "yoffset",
    "curPen",
    "curWidth",
    "count",
    "nextPen",
    "nextWidth",
    "isArrayBuffer",
    "getBinaryOpts",
    "xml2",
    "responseType",
    "XMLHttpRequest",
    "req",
    "overrideMimeType",
    "xhr",
    "parseASCII",
    "parseXML",
    "readBinary",
    "isBinaryFormat",
    "cb",
    "uri",
    "binary",
    "err",
    "body",
    "statusCode",
    "result",
    "headers",
    "parse",
    "equal",
    "HEADER",
    "substring",
    "shouldUseNative",
    "test1",
    "test2",
    "map",
    "test3",
    "letter",
    "keys",
    "source",
    "splitLine",
    "parseData",
    "parseIntList",
    "pages",
    "lineData",
    "file",
    "readBlock",
    "blockID",
    "blockSize",
    "info",
    "readInfo",
    "readCommon",
    "readPages",
    "readChars",
    "readKernings",
    "bitField",
    "smooth",
    "unicode",
    "italic",
    "bold",
    "fixedHeight",
    "charset",
    "stretchH",
    "aa",
    "padding",
    "spacing",
    "outline",
    "face",
    "readStringNT",
    "scaleW",
    "scaleH",
    "packed",
    "alphaChnl",
    "redChnl",
    "greenChnl",
    "blueChnl",
    "readNameNT",
    "char",
    "page",
    "chnl",
    "every",
    "byte",
    "getAttribs",
    "element",
    "getAttribList",
    "dict",
    "attrib",
    "mapName",
    "nodeValue",
    "attribs",
    "NAME_MAP",
    "parseAttributes",
    "parseFromString",
    "scaleh",
    "scalew",
    "stretchh",
    "lineheight",
    "alphachnl",
    "redchnl",
    "greenchnl",
    "bluechnl",
    "xmlRoot",
    "pageRoot",
    "childTag",
    "children",
    "child",
    "GLYPH_DESIGNER_ERROR",
    "row",
    "performance",
    "present",
    "dateNow",
    "Date",
    "now",
    "getTime",
    "navigationStart",
    "timing",
    "performanceNow",
    "noConflict",
    "conflict",
    "root",
    "Promise",
    "_state",
    "_value",
    "_deferreds",
    "doResolve",
    "resolve",
    "reject",
    "handle",
    "deferred",
    "me",
    "asap",
    "onFulfilled",
    "onRejected",
    "then",
    "finale",
    "Handler",
    "done",
    "reason",
    "ex",
    "setTimeoutFunc",
    "setImmediate",
    "all",
    "race",
    "values",
    "_setImmediateFn",
    "CW",
    "CCW",
    "clockwise",
    "numIndices",
    "indices",
    "minMax",
    "stringContains",
    "applyArguments",
    "func",
    "parseEasingParameters",
    "easingFunctionRegex",
    "exec",
    "parseFloat",
    "spring",
    "duration",
    "solver",
    "progress",
    "zeta",
    "exp",
    "w0",
    "cos",
    "wd",
    "sin",
    "getDuration",
    "cached",
    "cache",
    "springs",
    "elapsed",
    "rest",
    "mass",
    "is",
    "und",
    "stiffness",
    "damping",
    "velocity",
    "sqrt",
    "elastic",
    "amplitude",
    "period",
    "PI",
    "asin",
    "steps",
    "round",
    "parseEasings",
    "easing",
    "fnc",
    "ease",
    "penner",
    "bezier",
    "selectString",
    "filterArray",
    "callback",
    "auxArrayFilter",
    "flattenArray",
    "auxArrayFlatten",
    "node",
    "pop",
    "reverse",
    "toArray",
    "NodeList",
    "HTMLCollection",
    "arrayContains",
    "some",
    "cloneObject",
    "clone",
    "replaceObjectProps",
    "o1",
    "o2",
    "mergeObjects",
    "rgbToRgba",
    "rgbValue",
    "rgb",
    "rgbRegex",
    "hexToRgba",
    "hexValue",
    "hex",
    "hexToRgbaHexRegex",
    "hexToRgbaRgbRegex",
    "hslToRgba",
    "hslValue",
    "hue2rgb",
    "hsl",
    "hslToRgbaHsl1Regex",
    "hslToRgbaHsl2Regex",
    "colorToRgb",
    "getUnit",
    "unitRegex",
    "getTransformUnit",
    "propName",
    "getFunctionValue",
    "animatable",
    "total",
    "el",
    "prop",
    "convertPxToUnit",
    "unit",
    "CSS",
    "tempEl",
    "tagName",
    "parentEl",
    "parentNode",
    "factor",
    "offsetWidth",
    "removeChild",
    "convertedUnit",
    "getCSSValue",
    "uppercasePropName",
    "getComputedStyle",
    "getPropertyValue",
    "getAnimationType",
    "dom",
    "inp",
    "svg",
    "validTransforms",
    "getElementTransforms",
    "transform",
    "transforms",
    "Map",
    "transformRegex",
    "getTransformValue",
    "defaultVal",
    "getOriginalTargetValue",
    "getRelativeValue",
    "operator",
    "operatorRegex",
    "validateValue",
    "col",
    "originalUnit",
    "unitLess",
    "whitespaceRegex",
    "getDistance",
    "p1",
    "p2",
    "getCircleLength",
    "getRectLength",
    "getLineLength",
    "getPolylineLength",
    "previousPos",
    "points",
    "totalLength",
    "numberOfItems",
    "currentPos",
    "getItem",
    "getPolygonLength",
    "getTotalLength",
    "setDashoffset",
    "pathLength",
    "getParentSvgEl",
    "getParentSvg",
    "pathEl",
    "svgData",
    "parentSvgEl",
    "rect",
    "getBoundingClientRect",
    "viewBoxAttr",
    "viewBox",
    "getPath",
    "path",
    "percent",
    "property",
    "getPathProgress",
    "point",
    "getPointAtLength",
    "p0",
    "atan2",
    "decomposeValue",
    "pth",
    "original",
    "numbers",
    "valueRegex",
    "strings",
    "parseTargets",
    "targets",
    "item",
    "getAnimatables",
    "normalizePropertyTweens",
    "tweenSettings",
    "settings",
    "springRegex",
    "propArray",
    "delay",
    "endDelay",
    "flattenKeyframes",
    "keyframes",
    "propertyNames",
    "properties",
    "newKey",
    "getProperties",
    "tweens",
    "normalizeTweenValues",
    "tween",
    "normalizeTweens",
    "previousTween",
    "tweenValue",
    "toUnit",
    "originalValue",
    "previousValue",
    "fromUnit",
    "isPath",
    "isColor",
    "setTargetsValue",
    "animatables",
    "valueUnit",
    "animType",
    "setProgressValue",
    "createAnimation",
    "lastTween",
    "getAnimations",
    "getInstanceTimings",
    "animations",
    "animLength",
    "getTlOffset",
    "anim",
    "timelineOffset",
    "timings",
    "createNewInstance",
    "instanceSettings",
    "defaultInstanceSettings",
    "defaultTweenSettings",
    "instanceID",
    "handleVisibilityChange",
    "hidden",
    "activeInstances",
    "activeInstance",
    "pause",
    "pausedInstances",
    "i$1",
    "len$1",
    "play",
    "anime",
    "makePromise",
    "_resolve",
    "toggleInstanceDirection",
    "instance",
    "reversed",
    "adjustTime",
    "time",
    "resetTime",
    "startTime",
    "lastTime",
    "currentTime",
    "speed",
    "seekCild",
    "seek",
    "syncInstanceChildren",
    "reversePlayback",
    "childrenLength",
    "setAnimationsProgress",
    "insTime",
    "animationsLength",
    "tweenLength",
    "eased",
    "toNumbersLength",
    "toNumber",
    "fromNumber",
    "stringsLength",
    "n$1",
    "currentValue",
    "setCallback",
    "passThrough",
    "countIteration",
    "setInstanceProgress",
    "engineTime",
    "insDuration",
    "insDelay",
    "insEndDelay",
    "began",
    "changeBegan",
    "changeCompleted",
    "direction",
    "paused",
    "completed",
    "promise",
    "reset",
    "loop",
    "tick",
    "raf",
    "engine",
    "restart",
    "finished",
    "autoplay",
    "removeTargetsFromAnimations",
    "targetsArray",
    "removeTargets",
    "childAnimations",
    "stagger",
    "grid",
    "axis",
    "fromIndex",
    "fromFirst",
    "fromCenter",
    "fromLast",
    "isRange",
    "val1",
    "val2",
    "maxValue",
    "fromX",
    "fromY",
    "toX",
    "toY",
    "distanceX",
    "distanceY",
    "timeline",
    "tl",
    "add",
    "instanceParams",
    "ins",
    "tlIndex",
    "insParams",
    "tlDuration",
    "begin",
    "loopBegin",
    "changeBegin",
    "change",
    "changeComplete",
    "loopComplete",
    "complete",
    "hexRegex",
    "rgbPrefixRegex",
    "hslRegex",
    "SVGElement",
    "HTMLInputElement",
    "aA1",
    "aA2",
    "calcBezier",
    "aT",
    "getSlope",
    "binarySubdivide",
    "aX",
    "aA",
    "aB",
    "mX1",
    "mX2",
    "currentX",
    "currentT",
    "newtonRaphsonIterate",
    "aGuessT",
    "currentSlope",
    "mY1",
    "mY2",
    "getTForX",
    "intervalStart",
    "currentSample",
    "lastSample",
    "kSplineTableSize",
    "sampleValues",
    "kSampleStepSize",
    "dist",
    "guessForT",
    "initialSlope",
    "curves",
    "In",
    "Out",
    "InOut",
    "eases",
    "linear",
    "coords",
    "css",
    "attribute",
    "manual",
    "last",
    "step",
    "activeInstancesLength",
    "instanceIndex",
    "cancelAnimationFrame",
    "running",
    "remove",
    "convertPx",
    "factory",
    "define",
    "amd",
    "THREE",
    "EventDispatcher",
    "Vector2",
    "Matrix4",
    "elements",
    "error",
    "Quaternion",
    "_x",
    "_y",
    "_z",
    "_w",
    "Vector3",
    "Matrix3",
    "Texture",
    "image",
    "mapping",
    "wrapS",
    "wrapT",
    "magFilter",
    "minFilter",
    "anisotropy",
    "textureId",
    "uuid",
    "_Math",
    "generateUUID",
    "DEFAULT_IMAGE",
    "mipmaps",
    "DEFAULT_MAPPING",
    "ClampToEdgeWrapping",
    "LinearFilter",
    "LinearMipMapLinearFilter",
    "RGBAFormat",
    "UnsignedByteType",
    "repeat",
    "center",
    "rotation",
    "matrixAutoUpdate",
    "matrix",
    "generateMipmaps",
    "premultiplyAlpha",
    "flipY",
    "unpackAlignment",
    "LinearEncoding",
    "onUpdate",
    "Vector4",
    "WebGLRenderTarget",
    "options",
    "scissor",
    "scissorTest",
    "viewport",
    "texture",
    "depthBuffer",
    "stencilBuffer",
    "depthTexture",
    "WebGLMultisampleRenderTarget",
    "samples",
    "WebGLRenderTargetCube",
    "DataTexture",
    "NearestFilter",
    "Box3",
    "Sphere",
    "radius",
    "Plane",
    "normal",
    "constant",
    "Frustum",
    "p3",
    "p4",
    "p5",
    "planes",
    "cloneUniforms",
    "isMatrix3",
    "isMatrix4",
    "isVector2",
    "isVector3",
    "isVector4",
    "isTexture",
    "mergeUniforms",
    "uniforms",
    "merged",
    "Color",
    "setRGB",
    "WebGLAnimation",
    "onAnimationFrame",
    "frame",
    "isAnimating",
    "animationLoop",
    "context",
    "stop",
    "setAnimationLoop",
    "setContext",
    "WebGLAttributes",
    "gl",
    "bufferType",
    "usage",
    "dynamic",
    "bindBuffer",
    "bufferData",
    "onUploadCallback",
    "warn",
    "bytesPerElement",
    "updateBuffer",
    "updateRange",
    "bufferSubData",
    "isInterleavedBufferAttribute",
    "buffers",
    "deleteBuffer",
    "delete",
    "WeakMap",
    "Face3",
    "materialIndex",
    "vertexNormals",
    "vertexColors",
    "Euler",
    "order",
    "_order",
    "DefaultOrder",
    "Layers",
    "mask",
    "Object3D",
    "onRotationChange",
    "quaternion",
    "setFromEuler",
    "onQuaternionChange",
    "setFromQuaternion",
    "object3DId",
    "parent",
    "up",
    "DefaultUp",
    "scale",
    "onChange",
    "defineProperties",
    "modelViewMatrix",
    "normalMatrix",
    "matrixWorld",
    "DefaultMatrixAutoUpdate",
    "matrixWorldNeedsUpdate",
    "layers",
    "visible",
    "castShadow",
    "receiveShadow",
    "frustumCulled",
    "renderOrder",
    "userData",
    "Geometry",
    "geometryId",
    "vertices",
    "faces",
    "faceVertexUvs",
    "morphTargets",
    "morphNormals",
    "skinWeights",
    "skinIndices",
    "lineDistances",
    "boundingBox",
    "boundingSphere",
    "elementsNeedUpdate",
    "verticesNeedUpdate",
    "uvsNeedUpdate",
    "normalsNeedUpdate",
    "colorsNeedUpdate",
    "lineDistancesNeedUpdate",
    "groupsNeedUpdate",
    "BufferAttribute",
    "itemSize",
    "normalized",
    "Int8BufferAttribute",
    "Uint8BufferAttribute",
    "Uint8ClampedBufferAttribute",
    "Int16BufferAttribute",
    "Uint16BufferAttribute",
    "Int32BufferAttribute",
    "Uint32BufferAttribute",
    "Float32BufferAttribute",
    "Float64BufferAttribute",
    "DirectGeometry",
    "normals",
    "uvs",
    "uvs2",
    "groups",
    "arrayMax",
    "BufferGeometry",
    "bufferGeometryId",
    "morphAttributes",
    "drawRange",
    "BoxGeometry",
    "depth",
    "widthSegments",
    "heightSegments",
    "depthSegments",
    "parameters",
    "fromBufferGeometry",
    "BoxBufferGeometry",
    "mergeVertices",
    "buildPlane",
    "udir",
    "vdir",
    "gridX",
    "gridY",
    "ix",
    "iy",
    "segmentWidth",
    "segmentHeight",
    "widthHalf",
    "heightHalf",
    "depthHalf",
    "gridX1",
    "gridY1",
    "vertexCounter",
    "groupCount",
    "vector",
    "numberOfVertices",
    "scope",
    "addGroup",
    "groupStart",
    "setIndex",
    "addAttribute",
    "PlaneGeometry",
    "PlaneBufferGeometry",
    "width_half",
    "height_half",
    "segment_width",
    "segment_height",
    "Material",
    "materialId",
    "fog",
    "lights",
    "blending",
    "NormalBlending",
    "side",
    "FrontSide",
    "flatShading",
    "vertexTangents",
    "NoColors",
    "opacity",
    "transparent",
    "blendSrc",
    "SrcAlphaFactor",
    "blendDst",
    "OneMinusSrcAlphaFactor",
    "blendEquation",
    "AddEquation",
    "blendSrcAlpha",
    "blendDstAlpha",
    "blendEquationAlpha",
    "depthFunc",
    "LessEqualDepth",
    "depthTest",
    "depthWrite",
    "clippingPlanes",
    "clipIntersection",
    "clipShadows",
    "shadowSide",
    "colorWrite",
    "precision",
    "polygonOffset",
    "polygonOffsetFactor",
    "polygonOffsetUnits",
    "dithering",
    "alphaTest",
    "premultipliedAlpha",
    "needsUpdate",
    "ShaderMaterial",
    "defines",
    "vertexShader",
    "default_vertex",
    "fragmentShader",
    "default_fragment",
    "linewidth",
    "wireframe",
    "wireframeLinewidth",
    "clipping",
    "skinning",
    "extensions",
    "derivatives",
    "fragDepth",
    "drawBuffers",
    "shaderTextureLOD",
    "defaultAttributeValues",
    "uv",
    "uv2",
    "index0AttributeName",
    "uniformsNeedUpdate",
    "setValues",
    "Ray",
    "origin",
    "Triangle",
    "MeshBasicMaterial",
    "lightMap",
    "lightMapIntensity",
    "aoMap",
    "aoMapIntensity",
    "specularMap",
    "alphaMap",
    "envMap",
    "combine",
    "MultiplyOperation",
    "reflectivity",
    "refractionRatio",
    "wireframeLinecap",
    "wireframeLinejoin",
    "Mesh",
    "geometry",
    "material",
    "drawMode",
    "TrianglesDrawMode",
    "updateMorphTargets",
    "WebGLBackground",
    "renderer",
    "state",
    "objects",
    "render",
    "renderList",
    "scene",
    "camera",
    "forceClear",
    "background",
    "vr",
    "session",
    "getSession",
    "environmentBlendMode",
    "setClear",
    "clearColor",
    "clearAlpha",
    "currentBackground",
    "currentBackgroundVersion",
    "autoClear",
    "clear",
    "autoClearColor",
    "autoClearDepth",
    "autoClearStencil",
    "isCubeTexture",
    "isWebGLRenderTargetCube",
    "boxMesh",
    "ShaderLib",
    "cube",
    "BackSide",
    "onBeforeRender",
    "copyPosition",
    "tCube",
    "tFlip",
    "unshift",
    "planeMesh",
    "t2D",
    "updateMatrix",
    "uvTransform",
    "alpha",
    "getClearColor",
    "setClearColor",
    "getClearAlpha",
    "setClearAlpha",
    "WebGLBufferRenderer",
    "capabilities",
    "setMode",
    "mode",
    "drawArrays",
    "renderInstances",
    "extension",
    "isWebGL2",
    "maxInstancedCount",
    "WebGLCapabilities",
    "getMaxAnisotropy",
    "maxAnisotropy",
    "getParameter",
    "MAX_TEXTURE_MAX_ANISOTROPY_EXT",
    "getMaxPrecision",
    "getShaderPrecisionFormat",
    "WebGL2RenderingContext",
    "maxPrecision",
    "logarithmicDepthBuffer",
    "maxTextures",
    "maxVertexTextures",
    "maxTextureSize",
    "maxCubemapSize",
    "maxAttributes",
    "maxVertexUniforms",
    "maxVaryings",
    "maxFragmentUniforms",
    "vertexTextures",
    "floatFragmentTextures",
    "floatVertexTextures",
    "maxSamples",
    "WebGLClipping",
    "resetGlobalState",
    "uniform",
    "globalState",
    "numGlobalPlanes",
    "numPlanes",
    "numIntersection",
    "projectPlanes",
    "dstOffset",
    "skipTransform",
    "nPlanes",
    "dstArray",
    "flatSize",
    "viewMatrix",
    "matrixWorldInverse",
    "viewNormalMatrix",
    "getNormalMatrix",
    "i4",
    "plane",
    "applyMatrix4",
    "localClippingEnabled",
    "renderingShadows",
    "init",
    "enableLocalClipping",
    "beginShadows",
    "endShadows",
    "setState",
    "fromCache",
    "nGlobal",
    "lGlobal",
    "clippingState",
    "WebGLExtensions",
    "getExtension",
    "WebGLGeometries",
    "onGeometryDispose",
    "buffergeometry",
    "geometries",
    "wireframeAttributes",
    "memory",
    "isBufferGeometry",
    "isGeometry",
    "_bufferGeometry",
    "setFromObject",
    "geometryAttributes",
    "getWireframeAttribute",
    "geometryIndex",
    "WebGLIndexedBufferRenderer",
    "drawElements",
    "WebGLInfo",
    "instanceCount",
    "calls",
    "triangles",
    "textures",
    "programs",
    "autoReset",
    "absNumericalSort",
    "WebGLMorphtargets",
    "program",
    "objectInfluences",
    "morphTargetInfluences",
    "influences",
    "influencesList",
    "influence",
    "sort",
    "morphInfluences",
    "getUniforms",
    "setValue",
    "WebGLObjects",
    "updateList",
    "updateFromObject",
    "dispose",
    "CubeTexture",
    "images",
    "CubeReflectionMapping",
    "RGBFormat",
    "DataTexture2DArray",
    "wrapR",
    "DataTexture3D",
    "UniformContainer",
    "seq",
    "flatten",
    "nBlocks",
    "firstElem",
    "arrayCacheF32",
    "arraysEqual",
    "copyArray",
    "allocTexUnits",
    "arrayCacheI32",
    "allocTextureUnit",
    "setValue1f",
    "uniform1f",
    "addr",
    "setValue1i",
    "uniform1i",
    "setValue2fv",
    "uniform2f",
    "uniform2fv",
    "setValue3fv",
    "uniform3f",
    "uniform3fv",
    "setValue4fv",
    "uniform4f",
    "uniform4fv",
    "setValue2fm",
    "uniformMatrix2fv",
    "mat2array",
    "setValue3fm",
    "uniformMatrix3fv",
    "mat3array",
    "setValue4fm",
    "uniformMatrix4fv",
    "mat4array",
    "setValueT1",
    "setTexture2D",
    "emptyTexture",
    "setValueT2DArray1",
    "setTexture2DArray",
    "emptyTexture2dArray",
    "setValueT3D1",
    "setTexture3D",
    "emptyTexture3d",
    "setValueT6",
    "setTextureCube",
    "emptyCubeTexture",
    "setValue2iv",
    "uniform2iv",
    "setValue3iv",
    "uniform3iv",
    "setValue4iv",
    "uniform4iv",
    "getSingularSetter",
    "setValue1fv",
    "uniform1fv",
    "setValue1iv",
    "uniform1iv",
    "setValueV2a",
    "updateCache",
    "setValueV3a",
    "setValueV4a",
    "setValueM2a",
    "setValueM3a",
    "setValueM4a",
    "setValueT1a",
    "setValueT6a",
    "getPureArraySetter",
    "SingleUniform",
    "activeInfo",
    "PureArrayUniform",
    "StructuredUniform",
    "addUniform",
    "container",
    "uniformObject",
    "parseUniform",
    "RePathPart",
    "lastIndex",
    "matchEnd",
    "idIsIndex",
    "subscript",
    "next",
    "WebGLUniforms",
    "getProgramParameter",
    "getActiveUniform",
    "getUniformLocation",
    "addLineNumbers",
    "WebGLShader",
    "shader",
    "createShader",
    "shaderSource",
    "compileShader",
    "getShaderParameter",
    "getShaderInfoLog",
    "getEncodingComponents",
    "sRGBEncoding",
    "RGBEEncoding",
    "RGBM7Encoding",
    "RGBM16Encoding",
    "RGBDEncoding",
    "GammaEncoding",
    "getTexelDecodingFunction",
    "functionName",
    "components",
    "getTexelEncodingFunction",
    "getToneMappingFunction",
    "toneMapping",
    "toneMappingName",
    "LinearToneMapping",
    "ReinhardToneMapping",
    "Uncharted2ToneMapping",
    "CineonToneMapping",
    "ACESFilmicToneMapping",
    "generateExtensions",
    "rendererExtensions",
    "envMapCubeUV",
    "bumpMap",
    "normalMap",
    "objectSpaceNormalMap",
    "filter",
    "filterEmptyLine",
    "generateDefines",
    "chunks",
    "fetchAttributeLocations",
    "getActiveAttrib",
    "getAttribLocation",
    "replaceLightNums",
    "numDirLights",
    "numSpotLights",
    "numRectAreaLights",
    "numPointLights",
    "numHemiLights",
    "replaceClippingPlaneNums",
    "numClippingPlanes",
    "numClipIntersection",
    "parseIncludes",
    "include",
    "ShaderChunk",
    "pattern",
    "unrollLoops",
    "snippet",
    "unroll",
    "WebGLProgram",
    "shadowMapTypeDefine",
    "shadowMapType",
    "PCFShadowMap",
    "PCFSoftShadowMap",
    "envMapTypeDefine",
    "envMapModeDefine",
    "envMapBlendingDefine",
    "CubeRefractionMapping",
    "CubeUVReflectionMapping",
    "CubeUVRefractionMapping",
    "EquirectangularReflectionMapping",
    "EquirectangularRefractionMapping",
    "SphericalReflectionMapping",
    "MixOperation",
    "AddOperation",
    "prefixVertex",
    "prefixFragment",
    "gammaFactorDefine",
    "gammaFactor",
    "customExtensions",
    "customDefines",
    "createProgram",
    "isRawShaderMaterial",
    "supportsVertexTextures",
    "maxBones",
    "useFog",
    "fogExp",
    "emissiveMap",
    "displacementMap",
    "roughnessMap",
    "metalnessMap",
    "useVertexTexture",
    "doubleSided",
    "flipSided",
    "shadowMapEnabled",
    "sizeAttenuation",
    "matcap",
    "gradientMap",
    "physicallyCorrectLights",
    "NoToneMapping",
    "outputEncoding",
    "mapEncoding",
    "matcapEncoding",
    "envMapEncoding",
    "emissiveMapEncoding",
    "depthPacking",
    "isGLSL3ShaderMaterial",
    "versionRegex",
    "isShaderMaterial",
    "vertexGlsl",
    "fragmentGlsl",
    "glVertexShader",
    "glFragmentShader",
    "attachShader",
    "bindAttribLocation",
    "linkProgram",
    "programLog",
    "getProgramInfoLog",
    "vertexLog",
    "fragmentLog",
    "runnable",
    "haveDiagnostics",
    "getError",
    "diagnostics",
    "prefix",
    "deleteShader",
    "cachedUniforms",
    "cachedAttributes",
    "getAttributes",
    "destroy",
    "deleteProgram",
    "programIdCount",
    "usedTimes",
    "WebGLPrograms",
    "allocateBones",
    "skeleton",
    "bones",
    "nVertexUniforms",
    "nVertexMatrices",
    "getTextureEncodingFromMap",
    "gammaOverrideLinear",
    "isWebGLRenderTarget",
    "shaderIDs",
    "MeshDepthMaterial",
    "MeshDistanceMaterial",
    "MeshNormalMaterial",
    "MeshLambertMaterial",
    "MeshPhongMaterial",
    "MeshToonMaterial",
    "MeshStandardMaterial",
    "MeshPhysicalMaterial",
    "MeshMatcapMaterial",
    "LineBasicMaterial",
    "LineDashedMaterial",
    "PointsMaterial",
    "ShadowMaterial",
    "SpriteMaterial",
    "parameterNames",
    "getParameters",
    "shadows",
    "nClipPlanes",
    "nClipIntersection",
    "shaderID",
    "isSkinnedMesh",
    "currentRenderTarget",
    "getRenderTarget",
    "gammaOutput",
    "gammaInput",
    "envMapMode",
    "normalMapType",
    "ObjectSpaceNormalMap",
    "isFogExp2",
    "maxMorphTargets",
    "maxMorphNormals",
    "directional",
    "spot",
    "rectArea",
    "hemi",
    "shadowMap",
    "DoubleSide",
    "getProgramCode",
    "onBeforeCompile",
    "acquireProgram",
    "pl",
    "programInfo",
    "releaseProgram",
    "WebGLProperties",
    "painterSortStable",
    "groupOrder",
    "reversePainterSortStable",
    "WebGLRenderList",
    "renderItemsIndex",
    "opaque",
    "getNextRenderItem",
    "group",
    "renderItem",
    "renderItems",
    "WebGLRenderLists",
    "onSceneDispose",
    "lists",
    "cameras",
    "UniformsCache",
    "light",
    "shadow",
    "shadowBias",
    "shadowRadius",
    "shadowMapSize",
    "distance",
    "coneCos",
    "penumbraCos",
    "decay",
    "shadowCameraNear",
    "shadowCameraFar",
    "skyColor",
    "groundColor",
    "halfWidth",
    "halfHeight",
    "WebGLLights",
    "setup",
    "directionalLength",
    "pointLength",
    "spotLength",
    "rectAreaLength",
    "hemiLength",
    "intensity",
    "isAmbientLight",
    "isDirectionalLight",
    "multiplyScalar",
    "setFromMatrixPosition",
    "vector3",
    "transformDirection",
    "bias",
    "mapSize",
    "directionalShadowMap",
    "directionalShadowMatrix",
    "isSpotLight",
    "angle",
    "penumbra",
    "spotShadowMap",
    "spotShadowMatrix",
    "isRectAreaLight",
    "matrix42",
    "identity",
    "matrix4",
    "premultiply",
    "extractRotation",
    "isPointLight",
    "near",
    "far",
    "pointShadowMap",
    "pointShadowMatrix",
    "isHemisphereLight",
    "normalize",
    "ambient",
    "hash",
    "stateID",
    "shadowsLength",
    "WebGLRenderState",
    "lightsArray",
    "shadowsArray",
    "pushLight",
    "pushShadow",
    "shadowLight",
    "setupLights",
    "WebGLRenderStates",
    "renderStates",
    "renderState",
    "BasicDepthPacking",
    "displacementScale",
    "displacementBias",
    "referencePosition",
    "nearDistance",
    "farDistance",
    "WebGLShadowMap",
    "_renderer",
    "_objects",
    "getDepthMaterial",
    "lightPositionWorld",
    "materialVariants",
    "_depthMaterials",
    "customMaterial",
    "customDepthMaterial",
    "_distanceMaterials",
    "customDistanceMaterial",
    "useMorphing",
    "useSkinning",
    "variantIndex",
    "_MorphingFlag",
    "_SkinningFlag",
    "keyA",
    "keyB",
    "materialsForVariant",
    "_materialCache",
    "cachedMaterial",
    "isMeshDistanceMaterial",
    "renderObject",
    "shadowCamera",
    "isMesh",
    "isLine",
    "isPoints",
    "_frustum",
    "intersectsObject",
    "multiplyMatrices",
    "kl",
    "groupMaterial",
    "depthMaterial",
    "_lightPositionWorld",
    "renderBufferDirect",
    "_projScreenMatrix",
    "_shadowMapSize",
    "_maxShadowMapSize",
    "_lookTarget",
    "_NumberOfMaterialVariants",
    "0",
    "1",
    "2",
    "cubeDirections",
    "cubeUps",
    "cube2DViewPorts",
    "RGBADepthPacking",
    "distanceMaterial",
    "autoUpdate",
    "setBlending",
    "NoBlending",
    "setTest",
    "setScissorTest",
    "faceCount",
    "il",
    "vpWidth",
    "vpHeight",
    "pars",
    "updateProjectionMatrix",
    "isSpotLightShadow",
    "shadowMatrix",
    "makeTranslation",
    "lookAt",
    "updateMatrixWorld",
    "multiply",
    "projectionMatrix",
    "setRenderTarget",
    "vpDimensions",
    "setFromMatrix",
    "WebGLState",
    "utils",
    "ColorBuffer",
    "locked",
    "currentColorMask",
    "currentColorClear",
    "setMask",
    "colorMask",
    "setLocked",
    "lock",
    "DepthBuffer",
    "currentDepthMask",
    "currentDepthFunc",
    "currentDepthClear",
    "depthMask",
    "setFunc",
    "NeverDepth",
    "AlwaysDepth",
    "LessDepth",
    "EqualDepth",
    "GreaterEqualDepth",
    "GreaterDepth",
    "NotEqualDepth",
    "clearDepth",
    "StencilBuffer",
    "currentStencilMask",
    "currentStencilFunc",
    "currentStencilRef",
    "currentStencilFuncMask",
    "currentStencilFail",
    "currentStencilZFail",
    "currentStencilZPass",
    "currentStencilClear",
    "stencilTest",
    "stencilMask",
    "stencilFunc",
    "stencilRef",
    "setOp",
    "stencilFail",
    "stencilZFail",
    "stencilZPass",
    "stencilOp",
    "stencil",
    "clearStencil",
    "createTexture",
    "bindTexture",
    "texParameteri",
    "texImage2D",
    "initAttributes",
    "newAttributes",
    "enableAttribute",
    "enableAttributeAndDivisor",
    "meshPerAttribute",
    "enabledAttributes",
    "enableVertexAttribArray",
    "attributeDivisors",
    "disableUnusedAttributes",
    "disableVertexAttribArray",
    "enabledCapabilities",
    "getCompressedTextureFormats",
    "compressedTextureFormats",
    "formats",
    "useProgram",
    "currentProgram",
    "currentBlendingEnabled",
    "CustomBlending",
    "currentBlendEquation",
    "currentBlendEquationAlpha",
    "blendEquationSeparate",
    "convert",
    "currentBlendSrc",
    "currentBlendDst",
    "currentBlendSrcAlpha",
    "currentBlendDstAlpha",
    "blendFuncSeparate",
    "currentBlending",
    "currentPremultipledAlpha",
    "AdditiveBlending",
    "blendFunc",
    "SubtractiveBlending",
    "MultiplyBlending",
    "setMaterial",
    "frontFaceCW",
    "setFlipSided",
    "colorBuffer",
    "setPolygonOffset",
    "currentFlipSided",
    "frontFace",
    "setCullFace",
    "cullFace",
    "CullFaceNone",
    "currentCullFace",
    "CullFaceBack",
    "CullFaceFront",
    "setLineWidth",
    "currentLineWidth",
    "lineWidthAvailable",
    "currentPolygonOffsetFactor",
    "currentPolygonOffsetUnits",
    "activeTexture",
    "webglSlot",
    "currentTextureSlot",
    "webglType",
    "webglTexture",
    "boundTexture",
    "currentBoundTextures",
    "emptyTextures",
    "compressedTexImage2D",
    "texImage3D",
    "currentScissor",
    "currentViewport",
    "maxVertexAttributes",
    "glVersion",
    "WebGLTextures",
    "_gl",
    "createCanvas",
    "useOffscreenCanvas",
    "OffscreenCanvas",
    "createElementNS",
    "resizeImage",
    "needsPowerOfTwo",
    "needsNewCanvas",
    "maxSize",
    "HTMLImageElement",
    "HTMLCanvasElement",
    "ImageBitmap",
    "floorPowerOfTwo",
    "_canvas",
    "canvas",
    "getContext",
    "drawImage",
    "isPowerOfTwo",
    "textureNeedsPowerOfTwo",
    "textureNeedsGenerateMipmaps",
    "supportsMips",
    "generateMipmap",
    "__maxMipLevel",
    "LOG2E",
    "getInternalFormat",
    "glFormat",
    "glType",
    "internalFormat",
    "filterFallback",
    "NearestMipMapNearestFilter",
    "NearestMipMapLinearFilter",
    "onTextureDispose",
    "deallocateTexture",
    "isVideoTexture",
    "_videoTextures",
    "onRenderTargetDispose",
    "renderTarget",
    "deallocateRenderTarget",
    "textureProperties",
    "__webglInit",
    "deleteTexture",
    "__webglTexture",
    "renderTargetProperties",
    "deleteFramebuffer",
    "__webglFramebuffer",
    "__webglDepthbuffer",
    "deleteRenderbuffer",
    "slot",
    "updateVideoTexture",
    "__version",
    "uploadTexture",
    "initTexture",
    "pixelStorei",
    "isCompressed",
    "isCompressedTexture",
    "isDataTexture",
    "cubeImage",
    "glInternalFormat",
    "setTextureParameters",
    "mipmap",
    "jl",
    "setTextureCubeDynamic",
    "textureType",
    "FloatType",
    "HalfFloatType",
    "__currentAnisotropy",
    "texParameterf",
    "TEXTURE_MAX_ANISOTROPY_EXT",
    "isDataTexture2DArray",
    "isDataTexture3D",
    "isDepthTexture",
    "DepthFormat",
    "UnsignedShortType",
    "UnsignedIntType",
    "DepthStencilFormat",
    "UnsignedInt248Type",
    "setupFrameBufferTexture",
    "framebuffer",
    "attachment",
    "textureTarget",
    "bindFramebuffer",
    "framebufferTexture2D",
    "setupRenderBufferStorage",
    "renderbuffer",
    "isMultisample",
    "bindRenderbuffer",
    "getRenderTargetSamples",
    "renderbufferStorageMultisample",
    "renderbufferStorage",
    "framebufferRenderbuffer",
    "setupDepthTexture",
    "webglDepthTexture",
    "setupDepthRenderbuffer",
    "isCube",
    "createRenderbuffer",
    "setupRenderTarget",
    "isWebGLMultisampleRenderTarget",
    "createFramebuffer",
    "__webglMultisampledFramebuffer",
    "__webglColorRenderbuffer",
    "__webglDepthRenderbuffer",
    "updateRenderTargetMipmap",
    "updateMultisampleRenderTarget",
    "blitFramebuffer",
    "WebGLUtils",
    "RepeatWrapping",
    "MirroredRepeatWrapping",
    "LinearMipMapNearestFilter",
    "UnsignedShort4444Type",
    "UnsignedShort5551Type",
    "UnsignedShort565Type",
    "ByteType",
    "ShortType",
    "IntType",
    "HALF_FLOAT_OES",
    "AlphaFormat",
    "LuminanceFormat",
    "LuminanceAlphaFormat",
    "RedFormat",
    "SubtractEquation",
    "ReverseSubtractEquation",
    "ZeroFactor",
    "OneFactor",
    "SrcColorFactor",
    "OneMinusSrcColorFactor",
    "DstAlphaFactor",
    "OneMinusDstAlphaFactor",
    "DstColorFactor",
    "OneMinusDstColorFactor",
    "SrcAlphaSaturateFactor",
    "RGB_S3TC_DXT1_Format",
    "RGBA_S3TC_DXT1_Format",
    "RGBA_S3TC_DXT3_Format",
    "RGBA_S3TC_DXT5_Format",
    "COMPRESSED_RGB_S3TC_DXT1_EXT",
    "COMPRESSED_RGBA_S3TC_DXT1_EXT",
    "COMPRESSED_RGBA_S3TC_DXT3_EXT",
    "COMPRESSED_RGBA_S3TC_DXT5_EXT",
    "RGB_PVRTC_4BPPV1_Format",
    "RGB_PVRTC_2BPPV1_Format",
    "RGBA_PVRTC_4BPPV1_Format",
    "RGBA_PVRTC_2BPPV1_Format",
    "COMPRESSED_RGB_PVRTC_4BPPV1_IMG",
    "COMPRESSED_RGB_PVRTC_2BPPV1_IMG",
    "COMPRESSED_RGBA_PVRTC_4BPPV1_IMG",
    "COMPRESSED_RGBA_PVRTC_2BPPV1_IMG",
    "RGB_ETC1_Format",
    "COMPRESSED_RGB_ETC1_WEBGL",
    "RGBA_ASTC_4x4_Format",
    "RGBA_ASTC_5x4_Format",
    "RGBA_ASTC_5x5_Format",
    "RGBA_ASTC_6x5_Format",
    "RGBA_ASTC_6x6_Format",
    "RGBA_ASTC_8x5_Format",
    "RGBA_ASTC_8x6_Format",
    "RGBA_ASTC_8x8_Format",
    "RGBA_ASTC_10x5_Format",
    "RGBA_ASTC_10x6_Format",
    "RGBA_ASTC_10x8_Format",
    "RGBA_ASTC_10x10_Format",
    "RGBA_ASTC_12x10_Format",
    "RGBA_ASTC_12x12_Format",
    "MinEquation",
    "MaxEquation",
    "MIN_EXT",
    "MAX_EXT",
    "UNSIGNED_INT_24_8_WEBGL",
    "Group",
    "Camera",
    "projectionMatrixInverse",
    "PerspectiveCamera",
    "fov",
    "aspect",
    "zoom",
    "focus",
    "view",
    "filmGauge",
    "filmOffset",
    "ArrayCamera",
    "setProjectionFromUnion",
    "cameraL",
    "cameraR",
    "cameraLPos",
    "cameraRPos",
    "ipd",
    "distanceTo",
    "projL",
    "projR",
    "topFov",
    "bottomFov",
    "leftFov",
    "rightFov",
    "zOffset",
    "xOffset",
    "decompose",
    "translateX",
    "translateZ",
    "compose",
    "getInverse",
    "near2",
    "far2",
    "left2",
    "right2",
    "top2",
    "bottom2",
    "makePerspective",
    "WebVRManager",
    "isPresenting",
    "device",
    "onVRDisplayPresentChange",
    "updateDrawingBufferSize",
    "animation",
    "findGamepad",
    "gamepads",
    "getGamepads",
    "gamepad",
    "startsWith",
    "eyeParameters",
    "getEyeParameters",
    "renderWidth",
    "framebufferScaleFactor",
    "renderHeight",
    "setDrawingBufferSize",
    "currentPixelRatio",
    "getPixelRatio",
    "getSize",
    "currentSize",
    "updateControllers",
    "controllers",
    "controller",
    "pose",
    "hasPosition",
    "fromArray",
    "orientation",
    "standingMatrix",
    "buttonId",
    "triggers",
    "buttons",
    "pressed",
    "frameData",
    "poseTarget",
    "standingMatrixInverse",
    "frameOfReferenceType",
    "VRFrameData",
    "tempQuaternion",
    "tempPosition",
    "bounds",
    "cameraVR",
    "getController",
    "getDevice",
    "setDevice",
    "setFramebufferScaleFactor",
    "setFrameOfReferenceType",
    "setPoseTarget",
    "getCamera",
    "userHeight",
    "depthNear",
    "depthFar",
    "getFrameData",
    "stageParameters",
    "sittingToStandingTransform",
    "poseObject",
    "setFromRotationMatrix",
    "applyQuaternion",
    "leftViewMatrix",
    "rightViewMatrix",
    "leftProjectionMatrix",
    "rightProjectionMatrix",
    "getLayers",
    "layer",
    "leftBounds",
    "rightBounds",
    "getStandingMatrix",
    "submitFrame",
    "WebXRManager",
    "frameOfReference",
    "onSessionEvent",
    "inputSources",
    "inputSource",
    "onSessionEnd",
    "setFramebuffer",
    "updateCamera",
    "getDevicePose",
    "baseLayer",
    "views",
    "getViewport",
    "getViewMatrix",
    "inputPose",
    "getInputPose",
    "targetRay",
    "transformMatrix",
    "pointerMatrix",
    "onAnimationFrameCallback",
    "XRDevice",
    "setCompatibleXRDevice",
    "setSession",
    "XRWebGLLayer",
    "requestFrameOfReference",
    "getInputSources",
    "getCameraPose",
    "WebGLRenderer",
    "getTargetPixelRatio",
    "_currentRenderTarget",
    "_pixelRatio",
    "initGLContext",
    "_currentScissor",
    "_scissor",
    "_currentViewport",
    "_viewport",
    "morphtargets",
    "programCache",
    "_this",
    "renderLists",
    "_premultipliedAlpha",
    "bufferRenderer",
    "indexedBufferRenderer",
    "onContextLost",
    "_isContextLost",
    "onContextRestore",
    "onMaterialDispose",
    "deallocateMaterial",
    "releaseMaterialProgramReference",
    "renderObjectImmediate",
    "renderBufferImmediate",
    "setupVertexAttributes",
    "isInstancedBufferGeometry",
    "programAttributes",
    "materialDefaultAttributeValues",
    "programAttribute",
    "geometryAttribute",
    "stride",
    "isInstancedInterleavedBuffer",
    "vertexAttribPointer",
    "isInstancedBufferAttribute",
    "vertexAttrib2fv",
    "vertexAttrib3fv",
    "vertexAttrib4fv",
    "vertexAttrib1fv",
    "projectObject",
    "sortObjects",
    "isGroup",
    "isLight",
    "currentRenderState",
    "isSprite",
    "intersectsSprite",
    "_vector3",
    "currentRenderList",
    "isImmediateRenderObject",
    "renderObjects",
    "overrideMaterial",
    "isArrayCamera",
    "_currentArrayCamera",
    "camera2",
    "setProgram",
    "_currentGeometryProgram",
    "onAfterRender",
    "initMaterial",
    "materialProperties",
    "lightsHash",
    "lightsStateHash",
    "_clipping",
    "programChange",
    "numSupportedMorphTargets",
    "numSupportedMorphNormals",
    "ambientLightColor",
    "directionalLights",
    "spotLights",
    "rectAreaLights",
    "pointLights",
    "hemisphereLights",
    "progUniforms",
    "uniformsList",
    "seqWithValue",
    "_usedTextureUnits",
    "_clippingEnabled",
    "_localClippingEnabled",
    "_currentCamera",
    "useCache",
    "_currentMaterialId",
    "refreshProgram",
    "refreshMaterial",
    "refreshLights",
    "p_uniforms",
    "m_uniforms",
    "isMeshPhongMaterial",
    "isMeshStandardMaterial",
    "uCamPos",
    "cameraPosition",
    "isMeshLambertMaterial",
    "isMeshBasicMaterial",
    "setOptional",
    "boneTexture",
    "ceilPowerOfTwo",
    "boneMatrices",
    "boneTextureSize",
    "toneMappingExposure",
    "toneMappingWhitePoint",
    "markUniformsLightsNeedsUpdate",
    "refreshUniformsFog",
    "refreshUniformsCommon",
    "refreshUniformsLambert",
    "isMeshToonMaterial",
    "refreshUniformsToon",
    "refreshUniformsPhong",
    "isMeshPhysicalMaterial",
    "refreshUniformsPhysical",
    "refreshUniformsStandard",
    "isMeshMatcapMaterial",
    "refreshUniformsMatcap",
    "isMeshDepthMaterial",
    "refreshUniformsDepth",
    "refreshUniformsDistance",
    "isMeshNormalMaterial",
    "refreshUniformsNormal",
    "isLineBasicMaterial",
    "refreshUniformsLine",
    "isLineDashedMaterial",
    "refreshUniformsDash",
    "isPointsMaterial",
    "refreshUniformsPoints",
    "isSpriteMaterial",
    "refreshUniformsSprites",
    "isShadowMaterial",
    "ltc_1",
    "UniformsLib",
    "LTC_1",
    "ltc_2",
    "LTC_2",
    "upload",
    "diffuse",
    "emissive",
    "emissiveIntensity",
    "flipEnvMap",
    "maxMipLevel",
    "uvScaleMap",
    "dashSize",
    "totalSize",
    "gapSize",
    "fogColor",
    "isFog",
    "fogNear",
    "fogFar",
    "fogDensity",
    "density",
    "specular",
    "shininess",
    "bumpScale",
    "normalScale",
    "negate",
    "roughness",
    "metalness",
    "envMapIntensity",
    "clearCoat",
    "clearCoatRoughness",
    "textureUnit",
    "REVISION",
    "_context",
    "_alpha",
    "_depth",
    "_stencil",
    "_antialias",
    "antialias",
    "_preserveDrawingBuffer",
    "preserveDrawingBuffer",
    "_powerPreference",
    "powerPreference",
    "domElement",
    "_framebuffer",
    "_currentFramebuffer",
    "_currentScissorTest",
    "_scissorTest",
    "contextAttributes",
    "rangeMin",
    "rangeMax",
    "getContextAttributes",
    "forceContextLoss",
    "loseContext",
    "forceContextRestore",
    "restoreContext",
    "setPixelRatio",
    "setSize",
    "updateStyle",
    "setViewport",
    "getDrawingBufferSize",
    "pixelRatio",
    "getCurrentViewport",
    "getScissor",
    "setScissor",
    "getScissorTest",
    "boolean",
    "bits",
    "hasPositions",
    "hasNormals",
    "hasUvs",
    "hasColors",
    "positionArray",
    "normalArray",
    "uvArray",
    "colorArray",
    "determinant",
    "updateBuffers",
    "rangeFactor",
    "dataCount",
    "rangeStart",
    "rangeCount",
    "drawStart",
    "drawEnd",
    "drawCount",
    "TriangleStripDrawMode",
    "TriangleFanDrawMode",
    "isLineSegments",
    "isLineLoop",
    "compile",
    "traverse",
    "isCamera",
    "opaqueObjects",
    "transparentObjects",
    "warned",
    "setTexture",
    "activeCubeFace",
    "activeMipMapLevel",
    "readRenderTargetPixels",
    "restore",
    "textureFormat",
    "checkFramebufferStatus",
    "readPixels",
    "copyFramebufferToTexture",
    "level",
    "copyTexImage2D",
    "copyTextureToTexture",
    "srcTexture",
    "dstTexture",
    "texSubImage2D",
    "FogExp2",
    "Fog",
    "Scene",
    "InterleavedBuffer",
    "InterleavedBufferAttribute",
    "interleavedBuffer",
    "Sprite",
    "float32Array",
    "LOD",
    "levels",
    "SkinnedMesh",
    "bindMode",
    "bindMatrix",
    "bindMatrixInverse",
    "Skeleton",
    "boneInverses",
    "calculateInverses",
    "Bone",
    "linecap",
    "linejoin",
    "Line",
    "LineSegments",
    "LineLoop",
    "Points",
    "VideoTexture",
    "video",
    "CompressedTexture",
    "CanvasTexture",
    "DepthTexture",
    "WireframeGeometry",
    "ol",
    "edge1",
    "edge2",
    "vertex",
    "edge",
    "edges",
    "index1",
    "index2",
    "getX",
    "fromBufferAttribute",
    "ParametricGeometry",
    "slices",
    "stacks",
    "ParametricBufferGeometry",
    "pu",
    "pv",
    "sliceCount",
    "subVectors",
    "crossVectors",
    "PolyhedronGeometry",
    "PolyhedronBufferGeometry",
    "subdivideFace",
    "cols",
    "aj",
    "lerp",
    "bj",
    "rows",
    "pushVertex",
    "correctSeam",
    "uvBuffer",
    "x0",
    "x1",
    "x2",
    "vertexBuffer",
    "getVertexByIndex",
    "correctUVs",
    "centroid",
    "uvA",
    "uvB",
    "uvC",
    "divideScalar",
    "azi",
    "azimuth",
    "correctUV",
    "inclination",
    "computeVertexNormals",
    "normalizeNormals",
    "TetrahedronGeometry",
    "TetrahedronBufferGeometry",
    "OctahedronGeometry",
    "OctahedronBufferGeometry",
    "IcosahedronGeometry",
    "IcosahedronBufferGeometry",
    "DodecahedronGeometry",
    "DodecahedronBufferGeometry",
    "TubeGeometry",
    "tubularSegments",
    "radialSegments",
    "closed",
    "taper",
    "bufferGeometry",
    "TubeBufferGeometry",
    "tangents",
    "binormals",
    "generateSegment",
    "getPointAt",
    "frames",
    "generateIndices",
    "generateUVs",
    "computeFrenetFrames",
    "TorusKnotGeometry",
    "tube",
    "heightScale",
    "TorusKnotBufferGeometry",
    "calculatePositionOnCurve",
    "cu",
    "su",
    "quOverP",
    "cs",
    "P1",
    "P2",
    "addVectors",
    "cx",
    "cy",
    "TorusGeometry",
    "arc",
    "TorusBufferGeometry",
    "linkedList",
    "signedArea",
    "insertNode",
    "removeNode",
    "filterPoints",
    "again",
    "steiner",
    "area",
    "earcutLinked",
    "ear",
    "minX",
    "minY",
    "invSize",
    "pass",
    "indexCurve",
    "isEarHashed",
    "isEar",
    "cureLocalIntersections",
    "splitEarcut",
    "pointInTriangle",
    "minTX",
    "minTY",
    "maxTX",
    "maxTY",
    "minZ",
    "zOrder",
    "maxZ",
    "nextZ",
    "prevZ",
    "intersects",
    "locallyInside",
    "isValidDiagonal",
    "splitPolygon",
    "eliminateHoles",
    "holeIndices",
    "outerNode",
    "getLeftmost",
    "compareX",
    "eliminateHole",
    "hole",
    "findHoleBridge",
    "hx",
    "hy",
    "qx",
    "tan",
    "mx",
    "my",
    "tanMin",
    "sortLinked",
    "tail",
    "numMerges",
    "pSize",
    "qSize",
    "inSize",
    "leftmost",
    "ax",
    "ay",
    "bx",
    "by",
    "px",
    "py",
    "intersectsPolygon",
    "middleInside",
    "q1",
    "q2",
    "inside",
    "a2",
    "b2",
    "an",
    "bp",
    "sum",
    "removeDupEndPts",
    "addContour",
    "contour",
    "ExtrudeGeometry",
    "shapes",
    "ExtrudeBufferGeometry",
    "verticesArray",
    "shape",
    "scalePt2",
    "vec",
    "getBevelVec",
    "inPt",
    "inPrev",
    "inNext",
    "v_trans_x",
    "v_trans_y",
    "shrink_by",
    "v_prev_x",
    "v_prev_y",
    "v_next_x",
    "v_next_y",
    "v_prev_lensq",
    "collinear0",
    "EPSILON",
    "v_prev_len",
    "v_next_len",
    "ptPrevShift_x",
    "ptPrevShift_y",
    "ptNextShift_x",
    "ptNextShift_y",
    "sf",
    "v_trans_lensq",
    "direction_eq",
    "sign",
    "sidewalls",
    "layeroffset",
    "sl",
    "bevelSegments",
    "slen1",
    "vlen",
    "slen2",
    "f4",
    "placeholder",
    "f3",
    "addVertex",
    "nextIndex",
    "uvgen",
    "generateTopUV",
    "addUV",
    "generateSideWallUV",
    "vector2",
    "curveSegments",
    "bevelEnabled",
    "bevelThickness",
    "bevelSize",
    "extrudePath",
    "UVGenerator",
    "WorldUVGenerator",
    "extrudePts",
    "splineTube",
    "binormal",
    "position2",
    "extrudeByPath",
    "getSpacedPoints",
    "ahole",
    "hl",
    "shapePoints",
    "extractPoints",
    "holes",
    "ShapeUtils",
    "isClockWise",
    "triangulateShape",
    "bs",
    "vert",
    "flen",
    "contourMovements",
    "oneHoleMovements",
    "holesMovements",
    "verticesMovements",
    "TextGeometry",
    "TextBufferGeometry",
    "isFont",
    "generateShapes",
    "SphereGeometry",
    "phiStart",
    "phiLength",
    "thetaStart",
    "thetaLength",
    "SphereBufferGeometry",
    "thetaEnd",
    "verticesRow",
    "RingGeometry",
    "innerRadius",
    "outerRadius",
    "thetaSegments",
    "phiSegments",
    "RingBufferGeometry",
    "segment",
    "radiusStep",
    "thetaSegmentLevel",
    "LatheGeometry",
    "segments",
    "LatheBufferGeometry",
    "clamp",
    "inverseSegments",
    "phi",
    "n1",
    "n2",
    "ShapeGeometry",
    "ShapeBufferGeometry",
    "addShape",
    "shapeHole",
    "indexOffset",
    "shapeVertices",
    "shapeHoles",
    "toJSON$1",
    "EdgesGeometry",
    "thresholdAngle",
    "geometry2",
    "thresholdDot",
    "DEG2RAD",
    "computeFaceNormals",
    "sourceVertices",
    "face1",
    "face2",
    "dot",
    "CylinderGeometry",
    "radiusTop",
    "radiusBottom",
    "openEnded",
    "CylinderBufferGeometry",
    "generateCap",
    "top",
    "centerIndexStart",
    "centerIndexEnd",
    "theta",
    "cosTheta",
    "sinTheta",
    "indexArray",
    "slope",
    "indexRow",
    "ConeGeometry",
    "ConeBufferGeometry",
    "CircleGeometry",
    "CircleBufferGeometry",
    "RawShaderMaterial",
    "STANDARD",
    "TangentSpaceNormalMap",
    "PHYSICAL",
    "TOON",
    "MATCAP",
    "Interpolant",
    "parameterPositions",
    "sampleSize",
    "resultBuffer",
    "_cachedIndex",
    "valueSize",
    "CubicInterpolant",
    "_weightPrev",
    "_offsetPrev",
    "_weightNext",
    "_offsetNext",
    "LinearInterpolant",
    "DiscreteInterpolant",
    "KeyframeTrack",
    "times",
    "interpolation",
    "AnimationUtils",
    "convertArray",
    "TimeBufferType",
    "ValueBufferType",
    "setInterpolation",
    "DefaultInterpolation",
    "BooleanKeyframeTrack",
    "ColorKeyframeTrack",
    "NumberKeyframeTrack",
    "QuaternionLinearInterpolant",
    "QuaternionKeyframeTrack",
    "StringKeyframeTrack",
    "VectorKeyframeTrack",
    "AnimationClip",
    "tracks",
    "resetDuration",
    "getTrackTypeForValueTypeName",
    "typeName",
    "parseKeyframeTrack",
    "json",
    "trackType",
    "flattenJSON",
    "LoadingManager",
    "onLoad",
    "onProgress",
    "onError",
    "isLoading",
    "itemsLoaded",
    "itemsTotal",
    "urlModifier",
    "onStart",
    "itemStart",
    "url",
    "itemEnd",
    "itemError",
    "resolveURL",
    "setURLModifier",
    "FileLoader",
    "manager",
    "DefaultLoadingManager",
    "AnimationLoader",
    "CompressedTextureLoader",
    "_parser",
    "DataTextureLoader",
    "ImageLoader",
    "CubeTextureLoader",
    "TextureLoader",
    "Curve",
    "arcLengthDivisions",
    "EllipseCurve",
    "aY",
    "xRadius",
    "yRadius",
    "aStartAngle",
    "aEndAngle",
    "aClockwise",
    "aRotation",
    "ArcCurve",
    "aRadius",
    "CubicPoly",
    "t0",
    "t1",
    "c0",
    "c1",
    "c2",
    "c3",
    "initCatmullRom",
    "x3",
    "tension",
    "initNonuniformCatmullRom",
    "dt0",
    "dt1",
    "dt2",
    "t2",
    "calc",
    "CatmullRomCurve3",
    "curveType",
    "CatmullRom",
    "v0",
    "v1",
    "QuadraticBezierP0",
    "QuadraticBezierP1",
    "QuadraticBezierP2",
    "QuadraticBezier",
    "CubicBezierP0",
    "CubicBezierP1",
    "CubicBezierP2",
    "CubicBezierP3",
    "CubicBezier",
    "CubicBezierCurve",
    "v2",
    "v3",
    "CubicBezierCurve3",
    "LineCurve",
    "LineCurve3",
    "QuadraticBezierCurve",
    "QuadraticBezierCurve3",
    "SplineCurve",
    "CurvePath",
    "autoClose",
    "Path",
    "currentPoint",
    "setFromPoints",
    "Shape",
    "Light",
    "HemisphereLight",
    "LightShadow",
    "SpotLightShadow",
    "SpotLight",
    "power",
    "PointLight",
    "OrthographicCamera",
    "bottom",
    "DirectionalLightShadow",
    "DirectionalLight",
    "AmbientLight",
    "RectAreaLight",
    "MaterialLoader",
    "BufferGeometryLoader",
    "ObjectLoader",
    "resourcePath",
    "ImageBitmapLoader",
    "createImageBitmap",
    "fetch",
    "ShapePath",
    "subPaths",
    "currentPath",
    "Font",
    "createPaths",
    "resolution",
    "line_height",
    "yMax",
    "yMin",
    "underlineThickness",
    "paths",
    "offsetX",
    "offsetY",
    "createPath",
    "cpx",
    "cpy",
    "cpx1",
    "cpy1",
    "cpx2",
    "cpy2",
    "_cachedOutline",
    "action",
    "moveTo",
    "lineTo",
    "quadraticCurveTo",
    "bezierCurveTo",
    "ha",
    "FontLoader",
    "Loader",
    "AudioLoader",
    "StereoCamera",
    "eyeSep",
    "CubeCamera",
    "cubeResolution",
    "cameraPX",
    "cameraNX",
    "cameraPY",
    "cameraNY",
    "cameraPZ",
    "cameraNZ",
    "Clock",
    "autoStart",
    "oldTime",
    "elapsedTime",
    "AudioListener",
    "AudioContext",
    "gain",
    "createGain",
    "connect",
    "destination",
    "timeDelta",
    "Audio",
    "listener",
    "getInput",
    "detune",
    "playbackRate",
    "isPlaying",
    "hasPlaybackControl",
    "sourceType",
    "filters",
    "PositionalAudio",
    "panner",
    "createPanner",
    "AudioAnalyser",
    "audio",
    "fftSize",
    "analyser",
    "createAnalyser",
    "frequencyBinCount",
    "getOutput",
    "PropertyMixer",
    "mixFunction",
    "_slerp",
    "_select",
    "_lerp",
    "_mixBufferRegion",
    "cumulativeWeight",
    "useCount",
    "referenceCount",
    "Composite",
    "targetGroup",
    "optionalParsedPath",
    "parsedPath",
    "PropertyBinding",
    "parseTrackName",
    "_targetGroup",
    "_bindings",
    "subscribe_",
    "rootNode",
    "findNode",
    "AnimationObjectGroup",
    "nCachedObjects_",
    "_indicesByUUID",
    "_paths",
    "_parsedPaths",
    "_bindingsIndicesByPath",
    "stats",
    "inUse",
    "bindingsPerObject",
    "AnimationAction",
    "mixer",
    "clip",
    "localRoot",
    "_mixer",
    "_clip",
    "_localRoot",
    "nTracks",
    "interpolants",
    "interpolantSettings",
    "endingStart",
    "ZeroCurvatureEnding",
    "endingEnd",
    "interpolant",
    "createInterpolant",
    "_interpolantSettings",
    "_interpolants",
    "_propertyBindings",
    "_cacheIndex",
    "_byClipCacheIndex",
    "_timeScaleInterpolant",
    "_weightInterpolant",
    "LoopRepeat",
    "_loopCount",
    "_startTime",
    "timeScale",
    "_effectiveTimeScale",
    "weight",
    "_effectiveWeight",
    "repetitions",
    "clampWhenFinished",
    "zeroSlopeAtStart",
    "zeroSlopeAtEnd",
    "AnimationMixer",
    "_root",
    "_initMemoryManager",
    "_accuIndex",
    "Uniform",
    "InstancedBufferGeometry",
    "InstancedInterleavedBuffer",
    "InstancedBufferAttribute",
    "Raycaster",
    "ray",
    "threshold",
    "PointCloud",
    "ascSort",
    "intersectObject",
    "raycaster",
    "recursive",
    "raycast",
    "Spherical",
    "Cylindrical",
    "Box2",
    "Line3",
    "ImmediateRenderObject",
    "VertexNormalsHelper",
    "nNormals",
    "objGeometry",
    "positions",
    "SpotLightHelper",
    "cone",
    "getBoneList",
    "boneList",
    "isBone",
    "SkeletonHelper",
    "color1",
    "color2",
    "bone",
    "VertexColors",
    "PointLightHelper",
    "sphereSize",
    "RectAreaLightHelper",
    "computeBoundingSphere",
    "positions2",
    "HemisphereLightHelper",
    "rotateY",
    "GridHelper",
    "divisions",
    "halfSize",
    "PolarGridHelper",
    "radials",
    "circles",
    "PositionalAudioHelper",
    "range",
    "divisionsInnerAngle",
    "divisionsOuterAngle",
    "materialInnerAngle",
    "materialOuterAngle",
    "FaceNormalsHelper",
    "DirectionalLightHelper",
    "lightPlane",
    "targetLine",
    "CameraHelper",
    "addLine",
    "addPoint",
    "pointMap",
    "FaceColors",
    "colorFrustum",
    "colorCone",
    "colorUp",
    "colorTarget",
    "colorCross",
    "BoxHelper",
    "Box3Helper",
    "box",
    "PlaneHelper",
    "ArrowHelper",
    "headLength",
    "headWidth",
    "lineGeometry",
    "coneGeometry",
    "translate",
    "setDirection",
    "setLength",
    "AxesHelper",
    "Face4",
    "MeshFaceMaterial",
    "materials",
    "MultiMaterial",
    "isMultiMaterial",
    "Particle",
    "ParticleSystem",
    "PointCloudMaterial",
    "ParticleBasicMaterial",
    "ParticleSystemMaterial",
    "Vertex",
    "DynamicBufferAttribute",
    "setDynamic",
    "Int8Attribute",
    "Uint8Attribute",
    "Uint8ClampedAttribute",
    "Int16Attribute",
    "Uint16Attribute",
    "Int32Attribute",
    "Uint32Attribute",
    "Float32Attribute",
    "Float64Attribute",
    "ClosedSplineCurve3",
    "SplineCurve3",
    "Spline",
    "AxisHelper",
    "BoundingBoxHelper",
    "EdgesHelper",
    "WireframeHelper",
    "XHRLoader",
    "BinaryTextureLoader",
    "Projector",
    "projectVector",
    "project",
    "unprojectVector",
    "unproject",
    "pickingRay",
    "CanvasRenderer",
    "JSONLoader",
    "LensFlare",
    "isInteger",
    "nextKey",
    "_listeners",
    "hasEventListener",
    "listenerArray",
    "MOUSE",
    "LEFT",
    "MIDDLE",
    "RIGHT",
    "RGBEFormat",
    "RAD2DEG",
    "lut",
    "d0",
    "d1",
    "d2",
    "d3",
    "euclideanModulo",
    "mapLinear",
    "a1",
    "b1",
    "smoothstep",
    "smootherstep",
    "randInt",
    "low",
    "high",
    "randFloat",
    "randFloatSpread",
    "degToRad",
    "degrees",
    "radToDeg",
    "radians",
    "ceil",
    "setScalar",
    "scalar",
    "setX",
    "setY",
    "setComponent",
    "getComponent",
    "addScalar",
    "addScaledVector",
    "subScalar",
    "divide",
    "applyMatrix3",
    "clampScalar",
    "minVal",
    "maxVal",
    "clampLength",
    "roundToZero",
    "cross",
    "lengthSq",
    "manhattanLength",
    "distanceToSquared",
    "dx",
    "dy",
    "manhattanDistanceTo",
    "lerpVectors",
    "getY",
    "rotateAround",
    "n11",
    "n12",
    "n13",
    "n14",
    "n21",
    "n22",
    "n23",
    "n24",
    "n31",
    "n32",
    "n33",
    "n34",
    "n41",
    "n42",
    "n43",
    "n44",
    "te",
    "extractBasis",
    "xAxis",
    "yAxis",
    "zAxis",
    "setFromMatrixColumn",
    "makeBasis",
    "scaleX",
    "scaleY",
    "scaleZ",
    "makeRotationFromEuler",
    "euler",
    "isEuler",
    "ae",
    "af",
    "be",
    "bf",
    "cf",
    "de",
    "df",
    "ac",
    "ad",
    "bc",
    "bd",
    "makeRotationFromQuaternion",
    "zero",
    "one",
    "eye",
    "a11",
    "a12",
    "a13",
    "a14",
    "a21",
    "a22",
    "a23",
    "a24",
    "a31",
    "a32",
    "a33",
    "a34",
    "a41",
    "a42",
    "a43",
    "a44",
    "b11",
    "b12",
    "b13",
    "b14",
    "b21",
    "b22",
    "b23",
    "b24",
    "b31",
    "b32",
    "b33",
    "b34",
    "b41",
    "b42",
    "b43",
    "b44",
    "applyToBufferAttribute",
    "getZ",
    "setXYZ",
    "transpose",
    "setPosition",
    "throwOnDegenerate",
    "t11",
    "t12",
    "t13",
    "t14",
    "det",
    "msg",
    "detInv",
    "getMaxScaleOnAxis",
    "scaleXSq",
    "scaleYSq",
    "scaleZSq",
    "makeRotationX",
    "makeRotationY",
    "makeRotationZ",
    "makeRotationAxis",
    "ty",
    "makeScale",
    "makeShear",
    "y2",
    "z2",
    "xx",
    "xy",
    "xz",
    "yy",
    "yz",
    "zz",
    "wx",
    "wy",
    "wz",
    "sx",
    "sy",
    "sz",
    "invSX",
    "invSY",
    "invSZ",
    "makeOrthographic",
    "slerp",
    "qa",
    "qb",
    "qm",
    "slerpFlat",
    "src0",
    "srcOffset0",
    "src1",
    "srcOffset1",
    "y0",
    "z0",
    "y1",
    "z1",
    "w1",
    "sqrSin",
    "tDir",
    "onChangeCallback",
    "isQuaternion",
    "s1",
    "s2",
    "s3",
    "setFromAxisAngle",
    "halfAngle",
    "m11",
    "m12",
    "m13",
    "m21",
    "m22",
    "m23",
    "m31",
    "m32",
    "m33",
    "trace",
    "setFromUnitVectors",
    "vFrom",
    "vTo",
    "angleTo",
    "acos",
    "rotateTowards",
    "inverse",
    "conjugate",
    "multiplyQuaternions",
    "qax",
    "qay",
    "qaz",
    "qaw",
    "qbx",
    "qby",
    "qbz",
    "qbw",
    "cosHalfTheta",
    "sqrSinHalfTheta",
    "sinHalfTheta",
    "halfTheta",
    "ratioA",
    "ratioB",
    "setZ",
    "multiplyVectors",
    "applyEuler",
    "applyAxisAngle",
    "qy",
    "qz",
    "qw",
    "iz",
    "iw",
    "az",
    "bz",
    "projectOnVector",
    "projectOnPlane",
    "planeNormal",
    "reflect",
    "dz",
    "setFromSpherical",
    "setFromSphericalCoords",
    "sinPhiRadius",
    "setFromCylindrical",
    "setFromCylindricalCoords",
    "setFromMatrixScale",
    "setFromMatrix4",
    "transposeIntoArray",
    "setUvTransform",
    "rotate",
    "ImageUtils",
    "getDataURL",
    "ImageData",
    "putImageData",
    "toDataURL",
    "meta",
    "isRootObject",
    "metadata",
    "generator",
    "wrap",
    "transformUv",
    "setW",
    "setAxisAngleFromQuaternion",
    "setAxisAngleFromRotationMatrix",
    "getW",
    "isBox3",
    "setFromArray",
    "maxX",
    "maxY",
    "setFromBufferAttribute",
    "makeEmpty",
    "expandByPoint",
    "setFromCenterAndSize",
    "expandByObject",
    "isEmpty",
    "getCenter",
    "expandByVector",
    "expandByScalar",
    "containsPoint",
    "containsBox",
    "intersectsBox",
    "intersectsSphere",
    "closestPoint",
    "sphere",
    "clampPoint",
    "intersectsPlane",
    "intersectsTriangle",
    "satForAxes",
    "axes",
    "testAxis",
    "extents",
    "f0",
    "f1",
    "f2",
    "triangleNormal",
    "triangle",
    "distanceToPoint",
    "getBoundingSphere",
    "intersect",
    "union",
    "optionalCenter",
    "maxRadiusSq",
    "empty",
    "radiusSum",
    "deltaLengthSq",
    "getBoundingBox",
    "setComponents",
    "setFromNormalAndCoplanarPoint",
    "setFromCoplanarPoints",
    "inverseNormalLength",
    "distanceToSphere",
    "projectPoint",
    "intersectLine",
    "delta",
    "denominator",
    "intersectsLine",
    "startSign",
    "endSign",
    "coplanarPoint",
    "m1",
    "optionalNormalMatrix",
    "referencePoint",
    "frustum",
    "me0",
    "me1",
    "me2",
    "me3",
    "me4",
    "me5",
    "me6",
    "me7",
    "me8",
    "me9",
    "me10",
    "me11",
    "me12",
    "me13",
    "me14",
    "me15",
    "sprite",
    "negRadius",
    "alphamap_fragment",
    "alphamap_pars_fragment",
    "alphatest_fragment",
    "aomap_fragment",
    "aomap_pars_fragment",
    "begin_vertex",
    "beginnormal_vertex",
    "bsdfs",
    "bumpmap_pars_fragment",
    "clipping_planes_fragment",
    "clipping_planes_pars_fragment",
    "clipping_planes_pars_vertex",
    "clipping_planes_vertex",
    "color_fragment",
    "color_pars_fragment",
    "color_pars_vertex",
    "color_vertex",
    "cube_uv_reflection_fragment",
    "defaultnormal_vertex",
    "displacementmap_pars_vertex",
    "displacementmap_vertex",
    "emissivemap_fragment",
    "emissivemap_pars_fragment",
    "encodings_fragment",
    "encodings_pars_fragment",
    "envmap_fragment",
    "envmap_pars_fragment",
    "envmap_pars_vertex",
    "envmap_physical_pars_fragment",
    "envmap_vertex",
    "fog_vertex",
    "fog_pars_vertex",
    "fog_fragment",
    "fog_pars_fragment",
    "gradientmap_pars_fragment",
    "lightmap_fragment",
    "lightmap_pars_fragment",
    "lights_lambert_vertex",
    "lights_pars_begin",
    "lights_phong_fragment",
    "lights_phong_pars_fragment",
    "lights_physical_fragment",
    "lights_physical_pars_fragment",
    "lights_fragment_begin",
    "lights_fragment_maps",
    "lights_fragment_end",
    "logdepthbuf_fragment",
    "logdepthbuf_pars_fragment",
    "logdepthbuf_pars_vertex",
    "logdepthbuf_vertex",
    "map_fragment",
    "map_pars_fragment",
    "map_particle_fragment",
    "map_particle_pars_fragment",
    "metalnessmap_fragment",
    "metalnessmap_pars_fragment",
    "morphnormal_vertex",
    "morphtarget_pars_vertex",
    "morphtarget_vertex",
    "normal_fragment_begin",
    "normal_fragment_maps",
    "normalmap_pars_fragment",
    "packing",
    "premultiplied_alpha_fragment",
    "project_vertex",
    "dithering_fragment",
    "dithering_pars_fragment",
    "roughnessmap_fragment",
    "roughnessmap_pars_fragment",
    "shadowmap_pars_fragment",
    "shadowmap_pars_vertex",
    "shadowmap_vertex",
    "shadowmask_pars_fragment",
    "skinbase_vertex",
    "skinning_pars_vertex",
    "skinning_vertex",
    "skinnormal_vertex",
    "specularmap_fragment",
    "specularmap_pars_fragment",
    "tonemapping_fragment",
    "tonemapping_pars_fragment",
    "uv_pars_fragment",
    "uv_pars_vertex",
    "uv_vertex",
    "uv2_pars_fragment",
    "uv2_pars_vertex",
    "uv2_vertex",
    "worldpos_vertex",
    "background_frag",
    "background_vert",
    "cube_frag",
    "cube_vert",
    "depth_frag",
    "depth_vert",
    "distanceRGBA_frag",
    "distanceRGBA_vert",
    "equirect_frag",
    "equirect_vert",
    "linedashed_frag",
    "linedashed_vert",
    "meshbasic_frag",
    "meshbasic_vert",
    "meshlambert_frag",
    "meshlambert_vert",
    "meshmatcap_frag",
    "meshmatcap_vert",
    "meshphong_frag",
    "meshphong_vert",
    "meshphysical_frag",
    "meshphysical_vert",
    "normal_frag",
    "normal_vert",
    "points_frag",
    "points_vert",
    "shadow_frag",
    "shadow_vert",
    "sprite_frag",
    "sprite_vert",
    "UniformsUtils",
    "merge",
    "ColorKeywords",
    "aliceblue",
    "antiquewhite",
    "aqua",
    "aquamarine",
    "azure",
    "beige",
    "bisque",
    "black",
    "blanchedalmond",
    "blue",
    "blueviolet",
    "brown",
    "burlywood",
    "cadetblue",
    "chartreuse",
    "chocolate",
    "coral",
    "cornflowerblue",
    "cornsilk",
    "crimson",
    "cyan",
    "darkblue",
    "darkcyan",
    "darkgoldenrod",
    "darkgray",
    "darkgreen",
    "darkgrey",
    "darkkhaki",
    "darkmagenta",
    "darkolivegreen",
    "darkorange",
    "darkorchid",
    "darkred",
    "darksalmon",
    "darkseagreen",
    "darkslateblue",
    "darkslategray",
    "darkslategrey",
    "darkturquoise",
    "darkviolet",
    "deeppink",
    "deepskyblue",
    "dimgray",
    "dimgrey",
    "dodgerblue",
    "firebrick",
    "floralwhite",
    "forestgreen",
    "fuchsia",
    "gainsboro",
    "ghostwhite",
    "gold",
    "goldenrod",
    "gray",
    "green",
    "greenyellow",
    "grey",
    "honeydew",
    "hotpink",
    "indianred",
    "indigo",
    "ivory",
    "khaki",
    "lavender",
    "lavenderblush",
    "lawngreen",
    "lemonchiffon",
    "lightblue",
    "lightcoral",
    "lightcyan",
    "lightgoldenrodyellow",
    "lightgray",
    "lightgreen",
    "lightgrey",
    "lightpink",
    "lightsalmon",
    "lightseagreen",
    "lightskyblue",
    "lightslategray",
    "lightslategrey",
    "lightsteelblue",
    "lightyellow",
    "lime",
    "limegreen",
    "linen",
    "magenta",
    "maroon",
    "mediumaquamarine",
    "mediumblue",
    "mediumorchid",
    "mediumpurple",
    "mediumseagreen",
    "mediumslateblue",
    "mediumspringgreen",
    "mediumturquoise",
    "mediumvioletred",
    "midnightblue",
    "mintcream",
    "mistyrose",
    "moccasin",
    "navajowhite",
    "navy",
    "oldlace",
    "olive",
    "olivedrab",
    "orange",
    "orangered",
    "orchid",
    "palegoldenrod",
    "palegreen",
    "paleturquoise",
    "palevioletred",
    "papayawhip",
    "peachpuff",
    "peru",
    "pink",
    "plum",
    "powderblue",
    "purple",
    "rebeccapurple",
    "red",
    "rosybrown",
    "royalblue",
    "saddlebrown",
    "salmon",
    "sandybrown",
    "seagreen",
    "seashell",
    "sienna",
    "silver",
    "skyblue",
    "slateblue",
    "slategray",
    "slategrey",
    "snow",
    "springgreen",
    "steelblue",
    "teal",
    "thistle",
    "tomato",
    "turquoise",
    "violet",
    "wheat",
    "white",
    "whitesmoke",
    "yellow",
    "yellowgreen",
    "setHex",
    "setStyle",
    "setHSL",
    "handleAlpha",
    "copyGammaToLinear",
    "copyLinearToGamma",
    "safeInverse",
    "convertGammaToLinear",
    "convertLinearToGamma",
    "copySRGBToLinear",
    "SRGBToLinear",
    "copyLinearToSRGB",
    "LinearToSRGB",
    "convertSRGBToLinear",
    "convertLinearToSRGB",
    "getHex",
    "getHexString",
    "getHSL",
    "hue",
    "saturation",
    "lightness",
    "getStyle",
    "offsetHSL",
    "addColors",
    "lerpHSL",
    "hslA",
    "hslB",
    "specularmap",
    "envmap",
    "aomap",
    "lightmap",
    "emissivemap",
    "bumpmap",
    "normalmap",
    "displacementmap",
    "roughnessmap",
    "metalnessmap",
    "gradientmap",
    "basic",
    "lambert",
    "phong",
    "standard",
    "dashed",
    "equirect",
    "tEquirect",
    "distanceRGBA",
    "physical",
    "RotationOrders",
    "setFromVector3",
    "reorder",
    "newOrder",
    "toVector3",
    "optionalResult",
    "channel",
    "toggle",
    "isObject3D",
    "applyMatrix",
    "setRotationFromAxisAngle",
    "setRotationFromEuler",
    "setRotationFromMatrix",
    "setRotationFromQuaternion",
    "rotateOnAxis",
    "rotateOnWorldAxis",
    "rotateX",
    "rotateZ",
    "translateOnAxis",
    "translateY",
    "localToWorld",
    "worldToLocal",
    "updateWorldMatrix",
    "getObjectById",
    "getObjectByProperty",
    "getObjectByName",
    "getWorldPosition",
    "getWorldQuaternion",
    "getWorldScale",
    "getWorldDirection",
    "traverseVisible",
    "traverseAncestors",
    "force",
    "updateParents",
    "updateChildren",
    "serialize",
    "library",
    "extractFromCache",
    "uuids",
    "computeBoundingBox",
    "addFace",
    "ab",
    "fl",
    "vA",
    "vB",
    "vC",
    "areaWeighted",
    "vl",
    "computeFlatVertexNormals",
    "computeMorphNormals",
    "__originalFaceNormal",
    "__originalVertexNormals",
    "tmpGeo",
    "faceNormals",
    "faceNormal",
    "dstNormalsFace",
    "dstNormalsVertex",
    "materialIndexOffset",
    "vertexOffset",
    "vertices1",
    "vertices2",
    "faces1",
    "faces2",
    "uvs1",
    "colors1",
    "colors2",
    "vertexCopy",
    "faceCopy",
    "faceVertexNormals",
    "faceVertexColors",
    "uvCopy",
    "mergeMesh",
    "mesh",
    "verticesMap",
    "unique",
    "changes",
    "faceIndicesToRemove",
    "diff",
    "sortFacesByMaterialIndex",
    "materialIndexSort",
    "_id",
    "newUvs1",
    "newUvs2",
    "setBit",
    "getNormalIndex",
    "normalsHash",
    "getColorIndex",
    "colorsHash",
    "getUvIndex",
    "uvsHash",
    "hasFaceVertexUv",
    "hasFaceNormal",
    "hasFaceVertexNormal",
    "hasFaceColor",
    "hasFaceVertexColor",
    "faceType",
    "uvsCopy",
    "morphTarget",
    "morphNormal",
    "srcVertexNormal",
    "destVertexNormal",
    "isBufferAttribute",
    "setArray",
    "copyAt",
    "copyColorsArray",
    "copyVector2sArray",
    "vectors",
    "copyVector3sArray",
    "copyVector4sArray",
    "setXY",
    "setXYZW",
    "onUpload",
    "computeGroups",
    "fromGeometry",
    "morphTargetsPosition",
    "hasFaceVertexUv2",
    "morphTargetsLength",
    "morphTargetsNormal",
    "morphNormalsLength",
    "hasSkinIndices",
    "hasSkinWeights",
    "vertexUvs",
    "getIndex",
    "clearGroups",
    "setDrawRange",
    "tangent",
    "direct",
    "__directGeometry",
    "lineDistance",
    "fromDirectGeometry",
    "morphAttributesPosition",
    "morphAttribute",
    "boxMorphTargets",
    "pA",
    "pB",
    "pC",
    "attribute1",
    "attributeArray1",
    "attribute2",
    "attributeArray2",
    "attributeSize",
    "toNonIndexed",
    "convertBufferAttribute",
    "array2",
    "newAttribute",
    "morphArray",
    "attributeData",
    "hasMorphAttributes",
    "attributeArray",
    "isMaterial",
    "isRoot",
    "srcPlanes",
    "dstPlanes",
    "recast",
    "closestPointToPoint",
    "directionDistance",
    "distanceSqToPoint",
    "distanceSqToSegment",
    "segCenter",
    "segDir",
    "optionalPointOnRay",
    "optionalPointOnSegment",
    "s0",
    "sqrDist",
    "extDet",
    "segExtent",
    "a01",
    "b0",
    "invDet",
    "intersectSphere",
    "tca",
    "radius2",
    "thc",
    "distanceToPlane",
    "intersectPlane",
    "distToPoint",
    "intersectBox",
    "tmin",
    "tmax",
    "tymin",
    "tymax",
    "tzmin",
    "tzmax",
    "invdirx",
    "invdiry",
    "invdirz",
    "intersectTriangle",
    "backfaceCulling",
    "DdN",
    "DdQxE2",
    "DdE1xQ",
    "QdN",
    "getNormal",
    "targetLengthSq",
    "getBarycoord",
    "dot00",
    "dot01",
    "dot02",
    "dot11",
    "dot12",
    "denom",
    "invDenom",
    "getUV",
    "barycoord",
    "uv1",
    "uv3",
    "setFromPointsAndIndices",
    "i0",
    "i1",
    "i2",
    "getArea",
    "getMidpoint",
    "getPlane",
    "vab",
    "vac",
    "vbc",
    "vap",
    "vbp",
    "vcp",
    "d4",
    "vc",
    "d5",
    "d6",
    "vb",
    "va",
    "setDrawMode",
    "morphTargetDictionary",
    "ml",
    "checkIntersection",
    "intersectionPointWorld",
    "checkBufferGeometryIntersection",
    "morphPosition",
    "morphA",
    "morphB",
    "morphC",
    "tempA",
    "tempB",
    "tempC",
    "intersection",
    "intersectionPoint",
    "inverseMatrix",
    "faceIndex",
    "fvA",
    "fvB",
    "fvC",
    "faceMaterial",
    "uvs_f",
    "isPerspectiveCamera",
    "setFocalLength",
    "focalLength",
    "vExtentSlope",
    "getFilmHeight",
    "atan",
    "getFocalLength",
    "getEffectiveFOV",
    "getFilmWidth",
    "setViewOffset",
    "fullWidth",
    "fullHeight",
    "clearViewOffset",
    "skew",
    "isScene",
    "isInterleavedBuffer",
    "transformVertex",
    "vertexPosition",
    "mvPosition",
    "alignedPosition",
    "rotatedPosition",
    "viewWorldMatrix",
    "intersectPoint",
    "worldScale",
    "addLevel",
    "getObjectForDistance",
    "matrixPosition",
    "normalizeSkinWeights",
    "skinWeight",
    "offsetMatrix",
    "identityMatrix",
    "getBoneByName",
    "computeLineDistances",
    "positionAttribute",
    "linePrecision",
    "localPrecision",
    "localPrecisionSq",
    "vStart",
    "vEnd",
    "interSegment",
    "interRay",
    "distSq",
    "nbVertices",
    "testPoint",
    "rayPointDistanceSq",
    "localThresholdSq",
    "distanceToRay",
    "localThreshold",
    "readyState",
    "HAVE_CURRENT_DATA",
    "isCanvasTexture",
    "Earcut",
    "triangulate",
    "hasHoles",
    "outerLen",
    "pts",
    "holeIndex",
    "indexA",
    "indexB",
    "indexC",
    "a_x",
    "a_y",
    "b_x",
    "b_y",
    "c_x",
    "c_y",
    "indexD",
    "a_z",
    "b_z",
    "c_z",
    "d_x",
    "d_y",
    "d_z",
    "Geometries",
    "freeze",
    "Materials",
    "arraySlice",
    "isTypedArray",
    "forceClone",
    "DataView",
    "getKeyframeOrder",
    "compareTime",
    "sortedArray",
    "nValues",
    "srcOffset",
    "jsonKeys",
    "valuePropertyName",
    "evaluate",
    "pp",
    "validate_interval",
    "linear_scan",
    "forward_scan",
    "giveUpAt",
    "afterEnd_",
    "t1global",
    "beforeStart_",
    "mid",
    "intervalChanged_",
    "interpolate_",
    "DefaultSettings_",
    "getSettings_",
    "copySampleValue_",
    "iPrev",
    "iNext",
    "tPrev",
    "tNext",
    "halfDt",
    "o0",
    "oP",
    "oN",
    "wP",
    "wN",
    "ppp",
    "sP",
    "sN",
    "offset1",
    "offset0",
    "weight1",
    "weight0",
    "track",
    "getInterpolation",
    "ValueTypeName",
    "InterpolantFactoryMethodDiscrete",
    "getValueSize",
    "InterpolantFactoryMethodLinear",
    "InterpolantFactoryMethodSmooth",
    "factoryMethod",
    "timeOffset",
    "endTime",
    "nKeys",
    "validate",
    "valid",
    "prevTime",
    "currTime",
    "optimize",
    "smoothInterpolation",
    "writeIndex",
    "keep",
    "offsetP",
    "offsetN",
    "readOffset",
    "writeOffset",
    "TypedKeyframeTrack",
    "jsonTracks",
    "frameTime",
    "fps",
    "clipTracks",
    "CreateFromMorphTargetSequence",
    "morphTargetSequence",
    "noLoop",
    "numMorphTargets",
    "findByName",
    "objectOrClipArray",
    "clipArray",
    "CreateClipsFromMorphTargetSequences",
    "animationToMorphTargets",
    "animationMorphTargets",
    "clips",
    "parseAnimation",
    "addNonemptyTrack",
    "trackName",
    "animationKeys",
    "destTracks",
    "clipName",
    "hierarchyTracks",
    "hierarchy",
    "morphTargetNames",
    "morphTargetName",
    "animationKey",
    "boneName",
    "Cache",
    "files",
    "loading",
    "dataUriRegex",
    "dataUriRegexResult",
    "mimeType",
    "isBase64",
    "decodeURIComponent",
    "atob",
    "response",
    "Blob",
    "parser",
    "DOMParser",
    "request",
    "open",
    "callbacks",
    "status",
    "withCredentials",
    "header",
    "requestHeader",
    "setRequestHeader",
    "send",
    "setPath",
    "setResponseType",
    "setWithCredentials",
    "setMimeType",
    "loader",
    "loaded",
    "texDatas",
    "mipmapCount",
    "isCubemap",
    "texData",
    "crossOrigin",
    "onImageLoad",
    "onImageError",
    "setCrossOrigin",
    "urls",
    "isJPEG",
    "search",
    "getPoint",
    "optionalTarget",
    "getUtoTmapping",
    "getPoints",
    "getLength",
    "lengths",
    "getLengths",
    "cacheArcLengths",
    "current",
    "updateArcLengths",
    "targetArcLength",
    "arcLengths",
    "comparison",
    "lengthBefore",
    "getTangent",
    "pt1",
    "getTangentAt",
    "mat",
    "MAX_VALUE",
    "tz",
    "fromJSON",
    "isEllipseCurve",
    "twoPi",
    "deltaAngle",
    "samePoints",
    "isArcCurve",
    "pz",
    "isCatmullRomCurve3",
    "intPoint",
    "isCubicBezierCurve",
    "isCubicBezierCurve3",
    "isLineCurve",
    "isLineCurve3",
    "isQuadraticBezierCurve",
    "isQuadraticBezierCurve3",
    "isSplineCurve",
    "Curves",
    "curve",
    "closePath",
    "startPoint",
    "endPoint",
    "curveLengths",
    "getCurveLengths",
    "segmentLength",
    "cacheLengths",
    "sums",
    "aCPx",
    "aCPy",
    "aCP1x",
    "aCP1y",
    "aCP2x",
    "aCP2y",
    "splineThru",
    "npts",
    "absarc",
    "absellipse",
    "ellipse",
    "firstPoint",
    "lastPoint",
    "getPointsHoles",
    "holesPts",
    "isOrthographicCamera",
    "zoomW",
    "zoomH",
    "getTexture",
    "shading",
    "setTextures",
    "LoaderUtils",
    "decodeText",
    "TextDecoder",
    "decode",
    "escape",
    "extractUrlBase",
    "typedArray",
    "TYPED_ARRAYS",
    "bufferAttribute",
    "drawcalls",
    "offsets",
    "setResourcePath",
    "parseShape",
    "parseGeometries",
    "parseImages",
    "parseTextures",
    "parseMaterials",
    "parseObject",
    "parseAnimations",
    "bufferGeometryLoader",
    "details",
    "geometryShapes",
    "geometryLoader",
    "LegacyJSONLoader",
    "loadImage",
    "currentUrl",
    "parseConstant",
    "TEXTURE_MAPPING",
    "TEXTURE_WRAPPING",
    "TEXTURE_FILTER",
    "getGeometry",
    "getMaterial",
    "UVMapping",
    "setOptions",
    "blob",
    "imageBitmap",
    "catch",
    "toShapes",
    "isCCW",
    "noHoles",
    "toShapesNoHoles",
    "inSubpaths",
    "tmpPath",
    "tmpShape",
    "solid",
    "holesFirst",
    "tmpPoints",
    "betterShapeHoles",
    "newShapes",
    "newShapeHoles",
    "mainIdx",
    "ambiguous",
    "toChange",
    "sIdx",
    "sLen",
    "sho",
    "hIdx",
    "ho",
    "hole_unassigned",
    "s2Idx",
    "inPolygon",
    "polyLen",
    "edgeLowPt",
    "edgeHighPt",
    "edgeDx",
    "edgeDy",
    "perpEdge",
    "froms",
    "tos",
    "tmpHoles",
    "Handlers",
    "handlers",
    "regex",
    "onLoadStart",
    "onLoadProgress",
    "onLoadComplete",
    "initMaterials",
    "texturePath",
    "createMaterial",
    "BlendingMode",
    "textureLoader",
    "materialLoader",
    "loadTexture",
    "fullPath",
    "mapDiffuseRepeat",
    "mapDiffuseOffset",
    "mapDiffuseWrap",
    "mapDiffuseAnisotropy",
    "mapEmissiveRepeat",
    "mapEmissiveOffset",
    "mapEmissiveWrap",
    "mapEmissiveAnisotropy",
    "mapLightRepeat",
    "mapLightOffset",
    "mapLightWrap",
    "mapLightAnisotropy",
    "mapAORepeat",
    "mapAOOffset",
    "mapAOWrap",
    "mapAOAnisotropy",
    "mapBumpRepeat",
    "mapBumpOffset",
    "mapBumpWrap",
    "mapBumpAnisotropy",
    "mapNormalRepeat",
    "mapNormalOffset",
    "mapNormalWrap",
    "mapNormalAnisotropy",
    "mapSpecularRepeat",
    "mapSpecularOffset",
    "mapSpecularWrap",
    "mapSpecularAnisotropy",
    "mapMetalnessRepeat",
    "mapMetalnessOffset",
    "mapMetalnessWrap",
    "mapMetalnessAnisotropy",
    "mapRoughnessRepeat",
    "mapRoughnessOffset",
    "mapRoughnessWrap",
    "mapRoughnessAnisotropy",
    "mapAlphaRepeat",
    "mapAlphaOffset",
    "mapAlphaWrap",
    "mapAlphaAnisotropy",
    "webkitAudioContext",
    "bufferCopy",
    "decodeAudioData",
    "audioBuffer",
    "eyeRight",
    "eyeLeft",
    "xmin",
    "xmax",
    "eyeSepOnProjection",
    "ymax",
    "getElapsedTime",
    "getDelta",
    "newTime",
    "removeFilter",
    "disconnect",
    "getFilter",
    "setFilter",
    "getMasterVolume",
    "setMasterVolume",
    "setTargetAtTime",
    "clock",
    "positionX",
    "linearRampToValueAtTime",
    "positionY",
    "positionZ",
    "forwardX",
    "forwardY",
    "forwardZ",
    "upX",
    "upY",
    "upZ",
    "setOrientation",
    "setNodeSource",
    "audioNode",
    "setMediaElementSource",
    "mediaElement",
    "createMediaElementSource",
    "setBuffer",
    "createBufferSource",
    "onended",
    "onEnded",
    "setDetune",
    "setPlaybackRate",
    "getFilters",
    "setFilters",
    "getDetune",
    "getPlaybackRate",
    "getLoop",
    "setLoop",
    "getVolume",
    "setVolume",
    "getRefDistance",
    "refDistance",
    "setRefDistance",
    "getRolloffFactor",
    "rolloffFactor",
    "setRolloffFactor",
    "getDistanceModel",
    "distanceModel",
    "setDistanceModel",
    "getMaxDistance",
    "maxDistance",
    "setMaxDistance",
    "setDirectionalCone",
    "coneInnerAngle",
    "coneOuterAngle",
    "coneOuterGain",
    "orientationX",
    "orientationY",
    "orientationZ",
    "getFrequencyData",
    "getByteFrequencyData",
    "getAverageFrequency",
    "accumulate",
    "accuIndex",
    "currentWeight",
    "mix",
    "originalValueOffset",
    "saveOriginalState",
    "getValue",
    "restoreOriginalState",
    "RESERVED_CHARS_RE",
    "firstValidIndex",
    "bindings",
    "unbind",
    "isAnimationObjectGroup",
    "sanitizeNodeName",
    "reservedRe",
    "wordChar",
    "wordCharOrDot",
    "directoryRe",
    "nodeRe",
    "objectRe",
    "propertyRe",
    "trackRe",
    "supportedObjectNames",
    "matches",
    "results",
    "objectName",
    "objectIndex",
    "propertyIndex",
    "lastDot",
    "searchNodeSubtree",
    "childNode",
    "subTreeNode",
    "_getValue_unavailable",
    "_setValue_unavailable",
    "BindingType",
    "Direct",
    "EntireArray",
    "ArrayElement",
    "HasFromToArray",
    "Versioning",
    "None",
    "NeedsUpdate",
    "MatrixWorldNeedsUpdate",
    "GetterByBindingType",
    "resolvedProperty",
    "SetterByBindingTypeAndVersioning",
    "targetObject",
    "dest",
    "targetArray",
    "sourceArray",
    "nodeProperty",
    "versioning",
    "bindingType",
    "_getValue_unbound",
    "_setValue_unbound",
    "nObjects",
    "nCachedObjects",
    "indicesByUUID",
    "parsedPaths",
    "nBindings",
    "knownObject",
    "firstActiveIndex",
    "lastCachedObject",
    "bindingsForPath",
    "lastCached",
    "lastCachedIndex",
    "firstActiveObject",
    "firstActive",
    "uncache",
    "lastObject",
    "indicesByPath",
    "unsubscribe_",
    "lastBindingsIndex",
    "lastBindings",
    "_activateAction",
    "_deactivateAction",
    "stopFading",
    "stopWarping",
    "isRunning",
    "_isActiveAction",
    "isScheduled",
    "startAt",
    "setEffectiveWeight",
    "getEffectiveWeight",
    "fadeIn",
    "_scheduleFading",
    "fadeOut",
    "crossFadeFrom",
    "fadeOutAction",
    "warp",
    "fadeInDuration",
    "fadeOutDuration",
    "startEndRatio",
    "endStartRatio",
    "crossFadeTo",
    "fadeInAction",
    "weightInterpolant",
    "_takeBackControlInterpolant",
    "setEffectiveTimeScale",
    "getEffectiveTimeScale",
    "setDuration",
    "syncWith",
    "halt",
    "startTimeScale",
    "endTimeScale",
    "_lendControlInterpolant",
    "timeScaleInterpolant",
    "getMixer",
    "getClip",
    "getRoot",
    "_update",
    "deltaTime",
    "timeDirection",
    "_updateWeight",
    "timeRunning",
    "_updateTimeScale",
    "clipTime",
    "_updateTime",
    "propertyMixers",
    "interpolantValue",
    "loopCount",
    "pingPong",
    "_setEndings",
    "handle_stop",
    "loopDelta",
    "pending",
    "atStart",
    "atEnd",
    "weightNow",
    "weightThen",
    "_bindAction",
    "prototypeAction",
    "rootUuid",
    "bindingsByRoot",
    "_bindingsByRootAndName",
    "bindingsByName",
    "_addInactiveBinding",
    "clipUuid",
    "actionsForClip",
    "_actionsByClip",
    "knownActions",
    "_addInactiveAction",
    "_lendBinding",
    "_lendAction",
    "_takeBackBinding",
    "_takeBackAction",
    "_actions",
    "_nActiveActions",
    "_nActiveBindings",
    "_controlInterpolants",
    "_nActiveControlInterpolants",
    "actions",
    "controlInterpolants",
    "actionsByClip",
    "actionByRoot",
    "_removeInactiveAction",
    "lastInactiveAction",
    "cacheIndex",
    "knownActionsForClip",
    "lastKnownAction",
    "byClipCacheIndex",
    "_removeInactiveBindingsForAction",
    "_removeInactiveBinding",
    "prevIndex",
    "lastActiveIndex",
    "firstInactiveAction",
    "firstInactiveIndex",
    "lastActiveAction",
    "bindingByName",
    "propBinding",
    "lastInactiveBinding",
    "remove_empty_map",
    "firstInactiveBinding",
    "lastActiveBinding",
    "_controlInterpolantsResultBuffer",
    "__cacheIndex",
    "lastActiveInterpolant",
    "clipAction",
    "optionalRoot",
    "clipObject",
    "existingAction",
    "newAction",
    "stopAllAction",
    "nActions",
    "uncacheClip",
    "actionsToRemove",
    "uncacheRoot",
    "uncacheAction",
    "setFromCamera",
    "intersectObjects",
    "other",
    "makeSafe",
    "setFromCartesianCoords",
    "distanceSq",
    "closestPointToPointParameter",
    "startP",
    "startEnd",
    "clampToLine",
    "startEnd2",
    "startEnd_startP",
    "objPos",
    "objNorm",
    "coneLength",
    "coneWidth",
    "boneMatrix",
    "matrixWorldInv",
    "halfConeInnerAngle",
    "halfConeOuterAngle",
    "setPoint",
    "setColor",
    "construct",
    "createPointsGeometry",
    "createGeometry",
    "createSpacedPointsGeometry",
    "fromPoints",
    "initFromArray",
    "getControlPointsArray",
    "reparametrizeByArcLength",
    "setColors",
    "setTexturePath",
    "isIntersectionBox",
    "isIntersectionSphere",
    "random16",
    "nearestPowerOfTwo",
    "nextPowerOfTwo",
    "flattenToArrayOffset",
    "multiplyVector3",
    "multiplyVector3Array",
    "applyToBuffer",
    "applyToVector3Array",
    "extractPosition",
    "getPosition",
    "multiplyToArray",
    "multiplyVector4",
    "rotateAxis",
    "crossVector",
    "rotateByAxis",
    "makeFrustum",
    "isIntersectionLine",
    "isIntersectionPlane",
    "barycoordFromPoint",
    "midpoint",
    "extractAllPoints",
    "extrude",
    "makeGeometry",
    "fromAttribute",
    "distanceToManhattan",
    "lengthManhattan",
    "setEulerFromRotationMatrix",
    "setEulerFromQuaternion",
    "getPositionFromMatrix",
    "getScaleFromMatrix",
    "getColumnFromMatrix",
    "applyProjection",
    "computeTangents",
    "getChildByName",
    "renderDepth",
    "getWorldRotation",
    "eulerOrder",
    "useQuaternion",
    "initBones",
    "setLens",
    "onlyShadow",
    "shadowCameraFov",
    "shadowCameraLeft",
    "shadowCameraRight",
    "shadowCameraTop",
    "shadowCameraBottom",
    "shadowCameraVisible",
    "shadowDarkness",
    "shadowMapWidth",
    "shadowMapHeight",
    "copyIndicesArray",
    "addIndex",
    "addDrawCall",
    "clearDrawCalls",
    "computeOffsets",
    "getArrays",
    "addShapeList",
    "wrapAround",
    "overdraw",
    "wrapRGB",
    "metal",
    "clearTarget",
    "animate",
    "getCurrentRenderTarget",
    "getPrecision",
    "resetGLState",
    "supportsFloatTextures",
    "supportsHalfFloatTextures",
    "supportsStandardDerivatives",
    "supportsCompressedTextureS3TC",
    "supportsCompressedTexturePVRTC",
    "supportsBlendMinMax",
    "supportsInstancedArrays",
    "enableScissorTest",
    "addPrePlugin",
    "addPostPlugin",
    "updateShadowMap",
    "setFaceCulling",
    "shadowMapCullFace",
    "renderReverseSided",
    "renderSingleSided",
    "standing",
    "getData",
    "updateCubeMap",
    "GeometryUtils",
    "geometry1",
    "loadTextureCube",
    "loadCompressedTexture",
    "loadCompressedTextureCube",
    "SceneUtils",
    "createMultiMaterialObject",
    "detach",
    "attach",
    "CubeGeometry",
    "CullFaceFrontBack",
    "FrontFaceDirectionCW",
    "FrontFaceDirectionCCW",
    "BasicShadowMap",
    "FlatShading",
    "SmoothShading",
    "LoopOnce",
    "LoopPingPong",
    "InterpolateDiscrete",
    "InterpolateLinear",
    "InterpolateSmooth",
    "ZeroSlopeEnding",
    "WrapAroundEnding",
    "LogLuvEncoding",
    "LineStrip",
    "LinePieces",
    "DRACOLoader",
    "timeLoaded",
    "verbosity",
    "attributeOptions",
    "nativeAttributeMap",
    "decodeDracoFile",
    "setVerbosity",
    "setSkipDequantization",
    "skip",
    "skipDequantization",
    "getAttributeOptions",
    "rawBuffer",
    "attributeUniqueIdMap",
    "attributeTypeMap",
    "getDecoderModule",
    "decodeDracoFileInternal",
    "decoder",
    "dracoDecoder",
    "DecoderBuffer",
    "Init",
    "Decoder",
    "geometryType",
    "GetEncodedGeometryType",
    "TRIANGULAR_MESH",
    "POINT_CLOUD",
    "errorMsg",
    "convertDracoGeometryTo3JS",
    "addAttributeToGeometry",
    "dracoGeometry",
    "attributeType",
    "geometryBuffer",
    "ptr",
    "TypedBufferAttribute",
    "numComponents",
    "num_components",
    "numPoints",
    "num_points",
    "numValues",
    "DracoFloat32Array",
    "GetAttributeFloatForAllPoints",
    "DracoInt8Array",
    "GetAttributeInt8ForAllPoints",
    "DracoInt16Array",
    "GetAttributeInt16ForAllPoints",
    "DracoInt32Array",
    "GetAttributeInt32ForAllPoints",
    "DracoUInt8Array",
    "GetAttributeUInt8ForAllPoints",
    "DracoUInt16Array",
    "GetAttributeUInt16ForAllPoints",
    "DracoUInt32Array",
    "GetAttributeUInt32ForAllPoints",
    "GetValue",
    "SkipAttributeTransform",
    "POSITION",
    "decodingStatus",
    "start_time",
    "DecodeBufferToMesh",
    "DecodeBufferToPointCloud",
    "ok",
    "error_msg",
    "decode_end",
    "numFaces",
    "num_faces",
    "numAttributes",
    "num_attributes",
    "posAttId",
    "GetAttributeId",
    "posAttribute",
    "GetAttribute",
    "attributeId",
    "GetAttributeByUniqueId",
    "attId",
    "stripsArray",
    "GetTriangleStripsFromMesh",
    "ia",
    "GetFaceFromMesh",
    "posTransform",
    "AttributeQuantizationTransform",
    "InitFromAttribute",
    "isQuantized",
    "maxRange",
    "numQuantizationBits",
    "quantization_bits",
    "minValues",
    "min_value",
    "decode_time",
    "import_time",
    "isVersionSupported",
    "decoderPath",
    "decoderConfig",
    "decoderModulePromise",
    "setDecoderPath",
    "setDecoderConfig",
    "config",
    "wasmBinary",
    "releaseDecoderModule",
    "DracoDecoderModule",
    "WebAssembly",
    "_loadScript",
    "wasmBinaryFile",
    "_loadArrayBuffer",
    "onModuleLoaded",
    "prevScript",
    "getElementById",
    "script",
    "onload",
    "GLTFLoader",
    "dracoLoader",
    "GLTFRegistry",
    "removeAll",
    "GLTFTextureDDSExtension",
    "DDSLoader",
    "EXTENSIONS",
    "MSFT_TEXTURE_DDS",
    "ddsLoader",
    "GLTFLightsExtension",
    "KHR_LIGHTS_PUNCTUAL",
    "lightDefs",
    "GLTFMaterialsUnlitExtension",
    "KHR_MATERIALS_UNLIT",
    "GLTFBinaryExtension",
    "KHR_BINARY_GLTF",
    "content",
    "headerView",
    "BINARY_EXTENSION_HEADER_LENGTH",
    "magic",
    "getUint32",
    "BINARY_EXTENSION_HEADER_MAGIC",
    "chunkView",
    "chunkIndex",
    "chunkLength",
    "chunkType",
    "BINARY_EXTENSION_CHUNK_TYPES",
    "contentArray",
    "BIN",
    "GLTFDracoMeshCompressionExtension",
    "KHR_DRACO_MESH_COMPRESSION",
    "GLTFTextureTransformExtension",
    "KHR_TEXTURE_TRANSFORM",
    "GLTFMaterialsPbrSpecularGlossinessExtension",
    "KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS",
    "specularGlossinessParams",
    "getMaterialType",
    "extendParams",
    "pbrSpecularGlossiness",
    "specularMapParsFragmentChunk",
    "glossinessMapParsFragmentChunk",
    "specularMapFragmentChunk",
    "glossinessMapFragmentChunk",
    "lightPhysicalFragmentChunk",
    "glossiness",
    "glossinessMap",
    "diffuseFactor",
    "diffuseTexture",
    "assignTexture",
    "glossinessFactor",
    "specularFactor",
    "specularGlossinessTexture",
    "specGlossMapDef",
    "isGLTFSpecularGlossinessMaterial",
    "cloneMaterial",
    "refreshUniforms",
    "USE_GLOSSINESSMAP",
    "USE_ROUGHNESSMAP",
    "GLTFCubicSplineInterpolant",
    "createDefaultMaterial",
    "defaultMaterial",
    "addUnknownExtensionsToUserData",
    "knownExtensions",
    "objectDef",
    "gltfExtensions",
    "assignExtrasToUserData",
    "gltfDef",
    "extras",
    "addMorphTargets",
    "hasMorphPosition",
    "hasMorphNormal",
    "NORMAL",
    "pendingPositionAccessors",
    "pendingNormalAccessors",
    "pendingAccessor",
    "getDependency",
    "accessors",
    "morphPositions",
    "cloneBufferAttribute",
    "normalAttribute",
    "meshDef",
    "weights",
    "targetNames",
    "createPrimitiveKey",
    "primitiveDef",
    "dracoExtension",
    "bufferView",
    "createAttributesKey",
    "attributesKey",
    "GLTFParser",
    "primitiveCache",
    "fileLoader",
    "addPrimitiveAttributes",
    "gltfAttributeName",
    "threeAttributeName",
    "ATTRIBUTES",
    "accessorIndex",
    "accessor",
    "_onError",
    "gltf",
    "setDRACOLoader",
    "asset",
    "extensionsUsed",
    "extensionName",
    "extensionsRequired",
    "loadLight",
    "lightIndex",
    "lightNode",
    "lightDef",
    "innerConeAngle",
    "outerConeAngle",
    "materialParams",
    "metallicRoughness",
    "pbrMetallicRoughness",
    "baseColorFactor",
    "baseColorTexture",
    "decodePrimitive",
    "primitive",
    "bufferViewIndex",
    "gltfAttributeMap",
    "threeAttributeMap",
    "attributeNormalizedMap",
    "accessorDef",
    "componentType",
    "WEBGL_COMPONENT_TYPES",
    "extendTexture",
    "texCoord",
    "stride2",
    "stride3",
    "td",
    "m0",
    "WEBGL_CONSTANTS",
    "FLOAT",
    "FLOAT_MAT3",
    "FLOAT_MAT4",
    "FLOAT_VEC2",
    "FLOAT_VEC3",
    "FLOAT_VEC4",
    "LINEAR",
    "REPEAT",
    "SAMPLER_2D",
    "POINTS",
    "LINES",
    "LINE_LOOP",
    "LINE_STRIP",
    "TRIANGLES",
    "TRIANGLE_STRIP",
    "TRIANGLE_FAN",
    "UNSIGNED_BYTE",
    "UNSIGNED_SHORT",
    "5120",
    "5121",
    "5122",
    "5123",
    "5125",
    "5126",
    "WEBGL_FILTERS",
    "9728",
    "9729",
    "9984",
    "9985",
    "9986",
    "9987",
    "WEBGL_WRAPPINGS",
    "33071",
    "33648",
    "10497",
    "WEBGL_TYPE_SIZES",
    "SCALAR",
    "VEC2",
    "VEC3",
    "VEC4",
    "MAT2",
    "MAT3",
    "MAT4",
    "TANGENT",
    "TEXCOORD_0",
    "TEXCOORD_1",
    "COLOR_0",
    "WEIGHTS_0",
    "JOINTS_0",
    "PATH_PROPERTIES",
    "translation",
    "INTERPOLATION",
    "CUBICSPLINE",
    "STEP",
    "ALPHA_MODES",
    "OPAQUE",
    "MASK",
    "BLEND",
    "MIME_TYPE_FORMATS",
    "image/png",
    "image/jpeg",
    "markDefs",
    "getDependencies",
    "dependencies",
    "scenes",
    "nodeDefs",
    "nodes",
    "skinDefs",
    "skins",
    "meshDefs",
    "meshes",
    "meshReferences",
    "meshUses",
    "skinIndex",
    "skinLength",
    "joints",
    "nodeIndex",
    "nodeLength",
    "nodeDef",
    "skin",
    "cacheKey",
    "dependency",
    "loadScene",
    "loadNode",
    "loadMesh",
    "loadAccessor",
    "loadBufferView",
    "loadBuffer",
    "loadMaterial",
    "loadSkin",
    "loadAnimation",
    "loadCamera",
    "defs",
    "bufferIndex",
    "bufferDef",
    "bufferViewDef",
    "bufferViews",
    "sparse",
    "pendingBufferViews",
    "TypedArray",
    "elementBytes",
    "itemBytes",
    "byteStride",
    "ibCacheKey",
    "ib",
    "itemSizeIndices",
    "TypedArrayIndices",
    "byteOffsetIndices",
    "byteOffsetValues",
    "sparseIndices",
    "sparseValues",
    "textureIndex",
    "URL",
    "webkitURL",
    "textureDef",
    "textureExtensions",
    "sourceURI",
    "isObjectURL",
    "createObjectURL",
    "revokeObjectURL",
    "samplers",
    "sampler",
    "mapDef",
    "assignFinalMaterial",
    "useVertexTangents",
    "useVertexColors",
    "useFlatShading",
    "useMorphTargets",
    "useMorphNormals",
    "pointsMaterial",
    "lineMaterial",
    "materialType",
    "materialDef",
    "materialExtensions",
    "sgExtension",
    "kmuExtension",
    "metallicFactor",
    "roughnessFactor",
    "metallicRoughnessTexture",
    "alphaMode",
    "alphaCutoff",
    "normalTexture",
    "occlusionTexture",
    "strength",
    "emissiveFactor",
    "emissiveTexture",
    "loadGeometries",
    "primitives",
    "geometryPromise",
    "meshIndex",
    "originalMaterials",
    "cameraIndex",
    "cameraDef",
    "yfov",
    "aspectRatio",
    "znear",
    "zfar",
    "xmag",
    "ymag",
    "skinDef",
    "skinEntry",
    "inverseBindMatrices",
    "animationIndex",
    "animationDef",
    "pendingNodes",
    "pendingInputAccessors",
    "pendingOutputAccessors",
    "pendingSamplers",
    "pendingTargets",
    "channels",
    "input",
    "inputAccessors",
    "outputAccessors",
    "inputAccessor",
    "outputAccessor",
    "targetName",
    "isInterpolantFactoryMethodGLTFCubicSpline",
    "instanceNum",
    "buildNodeHierachy",
    "nodeId",
    "parentObject",
    "pendingJoints",
    "jointNodes",
    "jointNode",
    "sceneIndex",
    "sceneDef",
    "nodeIds",
    "MTLLoader",
    "setMaterialOptions",
    "materialOptions",
    "delimiter_pattern",
    "materialsInfo",
    "ss",
    "materialCreator",
    "MaterialCreator",
    "setManager",
    "setMaterials",
    "baseUrl",
    "materialsArray",
    "nameLookup",
    "converted",
    "mn",
    "covmat",
    "lprop",
    "normalizeRGB",
    "ignoreZeroRGBs",
    "preload",
    "materialName",
    "getAsArray",
    "createMaterial_",
    "setMapForType",
    "mapType",
    "texParams",
    "getTextureParams",
    "invertTrProperty",
    "matParams",
    "items",
    "OBJLoader",
    "ParserState",
    "materialLibraries",
    "startObject",
    "fromDeclaration",
    "previousMaterial",
    "currentMaterial",
    "_finalize",
    "startMaterial",
    "libraries",
    "previous",
    "inherited",
    "mtllib",
    "groupEnd",
    "cloned",
    "lastMultiMaterial",
    "mi",
    "declared",
    "finalize",
    "parseVertexIndex",
    "parseNormalIndex",
    "parseUVIndex",
    "addVertexPoint",
    "addVertexLine",
    "addNormal",
    "addColor",
    "addUVLine",
    "ua",
    "ub",
    "uc",
    "na",
    "nb",
    "nc",
    "vLen",
    "ic",
    "uvLen",
    "nLen",
    "addPointGeometry",
    "vi",
    "addLineGeometry",
    "uvi",
    "object_pattern",
    "material_library_pattern",
    "material_use_pattern",
    "lineFirstChar",
    "trimLeft",
    "vertexData",
    "faceVertices",
    "vertexParts",
    "lineParts",
    "lineVertices",
    "lineUVs",
    "li",
    "llen",
    "pointData",
    "hasVertexColors",
    "createdMaterials",
    "miLen",
    "sourceMaterial",
    "materialPoints",
    "materialLine",
    "timeEnd",
    "Base",
    "createLayout",
    "inherits",
    "createIndices",
    "layout",
    "texWidth",
    "texHeight",
    "bitmap",
    "visibleGlyphs",
    "attr",
    "multipage",
    "computeSphere",
    "bbox",
    "computeBox",
    "bw",
    "bh",
    "u0",
    "u1",
    "isR69",
    "newAttrib",
    "updateAttribute",
    "rebuildAttribute",
    "needsNewBuffer",
    "attribLength",
    "Timeout",
    "clearFn",
    "_clearFn",
    "immediateIds",
    "nextImmediateId",
    "setInterval",
    "clearInterval",
    "close",
    "unref",
    "ref",
    "enroll",
    "msecs",
    "_idleTimeoutId",
    "_idleTimeout",
    "unenroll",
    "_unrefActive",
    "active",
    "_onTimeout",
    "clearImmediate",
    "WebVRPolyfill",
    "extend",
    "DefaultConfig",
    "polyfillDisplays",
    "hasNative",
    "native",
    "getVRDisplays",
    "VRDisplay",
    "PROVIDE_MOBILE_VRDISPLAY",
    "isMobile",
    "displays",
    "fireVRDisplayConnect_",
    "commonjsGlobal",
    "cardboardVrDisplay",
    "WGLUPreserveGLState",
    "boundValues",
    "TEXTURE_BINDING_2D",
    "TEXTURE_BINDING_CUBE_MAP",
    "TEXTURE0",
    "TEXTURE31",
    "ACTIVE_TEXTURE",
    "boundValue",
    "ARRAY_BUFFER_BINDING",
    "ARRAY_BUFFER",
    "COLOR_CLEAR_VALUE",
    "COLOR_WRITEMASK",
    "CURRENT_PROGRAM",
    "ELEMENT_ARRAY_BUFFER_BINDING",
    "ELEMENT_ARRAY_BUFFER",
    "FRAMEBUFFER_BINDING",
    "FRAMEBUFFER",
    "RENDERBUFFER_BINDING",
    "RENDERBUFFER",
    "TEXTURE_2D",
    "TEXTURE_CUBE_MAP",
    "VIEWPORT",
    "CULL_FACE",
    "DEPTH_TEST",
    "SCISSOR_TEST",
    "STENCIL_TEST",
    "CardboardDistorter",
    "cardboardUI",
    "bufferScale",
    "dirtySubmitFrameBindings",
    "ctxAttribs",
    "meshWidth",
    "meshHeight",
    "bufferWidth",
    "drawingBufferWidth",
    "bufferHeight",
    "drawingBufferHeight",
    "realBindFramebuffer",
    "realEnable",
    "realDisable",
    "realColorMask",
    "realClearColor",
    "realViewport",
    "isIOS",
    "realCanvasWidth",
    "realCanvasHeight",
    "isPatched",
    "lastBoundFramebuffer",
    "blend",
    "distortionVS",
    "distortionFS",
    "getProgramUniforms",
    "viewportOffsetScale",
    "setTextureBounds",
    "indexBuffer",
    "indexCount",
    "depthStencilBuffer",
    "patch",
    "onResize",
    "CardboardUI",
    "uiVS",
    "uiFS",
    "gearOffset",
    "gearVertexCount",
    "arrowOffset",
    "arrowVertexCount",
    "projMat",
    "Distortion",
    "coefficients",
    "Device",
    "getScreenWidth",
    "getScreenHeight",
    "widthMeters",
    "heightMeters",
    "bevelMeters",
    "DeviceInfo",
    "deviceParams",
    "additionalViewers",
    "viewer",
    "Viewers",
    "CardboardV2",
    "updateDeviceParams",
    "distortion",
    "distortionCoefficients",
    "CardboardViewer",
    "label",
    "interLensDistance",
    "baselineLensDistance",
    "screenLensDistance",
    "inverseCoefficients",
    "Dpdb",
    "onDeviceParamsUpdated",
    "dpdb",
    "DPDB_CACHE",
    "recalculateDeviceParams_",
    "DeviceParams",
    "xdpi",
    "ydpi",
    "bevelMm",
    "SensorSample",
    "sample",
    "timestampS",
    "ComplementaryFilter",
    "kFilter",
    "isDebug",
    "currentAccelMeasurement",
    "currentGyroMeasurement",
    "previousGyroMeasurement",
    "filterQ",
    "previousFilterQ",
    "accelQ",
    "isOrientationInitialized",
    "estimatedGravity",
    "measuredGravity",
    "gyroIntegralQ",
    "PosePredictor",
    "predictionTimeS",
    "previousQ",
    "previousTimestampS",
    "deltaQ",
    "outQ",
    "FusionPoseSensor",
    "predictionTime",
    "yawOnly",
    "accelerometer",
    "gyroscope",
    "posePredictor",
    "isFirefoxAndroid",
    "chromeVersion",
    "getChromeVersion",
    "isDeviceMotionInRadians",
    "isWithoutDeviceMotion",
    "isChromeWithoutDeviceMotion",
    "filterToWorldQ",
    "inverseWorldToScreenQ",
    "worldToScreenQ",
    "originalPoseAdjustQ",
    "setScreenTransform_",
    "isLandscapeMode",
    "resetQ",
    "orientationOut_",
    "RotateInstructions",
    "loadIcon_",
    "overlay",
    "backgroundColor",
    "fontFamily",
    "zIndex",
    "img",
    "icon",
    "marginLeft",
    "marginTop",
    "textAlign",
    "fontSize",
    "margin",
    "snackbar",
    "boxSizing",
    "snackbarText",
    "float",
    "snackbarButton",
    "fontWeight",
    "textTransform",
    "borderLeft",
    "paddingLeft",
    "textDecoration",
    "hide",
    "ViewerSelector",
    "defaultViewer",
    "selectedKey",
    "VIEWER_KEY",
    "DEFAULT_VIEWER",
    "dialog",
    "createDialog_",
    "onChangeCallbacks_",
    "VRDisplayCapabilities",
    "hasExternalDisplay",
    "canPresent",
    "maxLayers",
    "hasOrientation",
    "deprecateWarning",
    "USE_WAKELOCK",
    "wakelock",
    "isPolyfilled",
    "displayId",
    "nextDisplayId",
    "displayName",
    "waitingForPresent_",
    "layer_",
    "originalParent_",
    "fullscreenElement_",
    "fullscreenWrapper_",
    "fullscreenElementCachedStyle_",
    "fullscreenEventTarget_",
    "fullscreenChangeHandler_",
    "fullscreenErrorHandler_",
    "wakelock_",
    "NoSleep$1",
    "CardboardVRDisplay",
    "config$$1",
    "defaults",
    "MOBILE_WAKE_LOCK",
    "bufferScale_",
    "BUFFER_SCALE",
    "poseSensor_",
    "PoseSensor",
    "distorter_",
    "cardboardUI_",
    "dpdb_",
    "DPDB_URL",
    "onDeviceParamsUpdated_",
    "deviceInfo_",
    "getDeviceParams",
    "ADDITIONAL_VIEWERS",
    "viewerSelector_",
    "onViewerChanged_",
    "setViewer",
    "getCurrentViewer",
    "ROTATE_INSTRUCTIONS_DISABLED",
    "rotateInstructions_",
    "onResize_",
    "classCallCheck",
    "Constructor",
    "createClass",
    "props",
    "descriptor",
    "protoProps",
    "staticProps",
    "slicedToArray",
    "sliceIterator",
    "_n",
    "_d",
    "_e",
    "_s",
    "_i",
    "dataUri",
    "encodeURIComponent",
    "platform",
    "isWebViewAndroid",
    "isSafari",
    "_match$1$split",
    "_match$1$split2",
    "branch",
    "build",
    "isR7",
    "rtn",
    "isTimestampDeltaValid",
    "timestampDeltaS",
    "screen",
    "devicePixelRatio",
    "requestFullscreen",
    "webkitRequestFullscreen",
    "mozRequestFullScreen",
    "msRequestFullscreen",
    "exitFullscreen",
    "webkitExitFullscreen",
    "mozCancelFullScreen",
    "msExitFullscreen",
    "getFullscreenElement",
    "fullscreenElement",
    "webkitFullscreenElement",
    "mozFullScreenElement",
    "msFullscreenElement",
    "vertexSource",
    "fragmentSource",
    "attribLocationMap",
    "VERTEX_SHADER",
    "FRAGMENT_SHADER",
    "attribName",
    "uniformCount",
    "ACTIVE_UNIFORMS",
    "uniformName",
    "orthoMatrix",
    "lr",
    "bt",
    "nf",
    "check",
    "vendor",
    "opera",
    "safariCssSizeWorkaround",
    "frameDataFromPose",
    "mat4_perspectiveFromFieldOfView",
    "upTan",
    "upDegrees",
    "piOver180",
    "rad45",
    "downTan",
    "downDegrees",
    "leftTan",
    "leftDegrees",
    "rightTan",
    "rightDegrees",
    "xScale",
    "yScale",
    "mat4_fromRotationTranslation",
    "mat4_translate",
    "a00",
    "a02",
    "a03",
    "a10",
    "a20",
    "mat4_invert",
    "a30",
    "b00",
    "b01",
    "b02",
    "b03",
    "b04",
    "b05",
    "b06",
    "b07",
    "b08",
    "b09",
    "b10",
    "updateEyeMatrices",
    "projection",
    "vrDisplay",
    "defaultOrientation",
    "defaultPosition",
    "timestamp",
    "_getFieldOfView",
    "_getEyeOffset",
    "isInsideCrossOriginIFrame",
    "isFramed",
    "refOrigin",
    "getOriginFromUrl",
    "referrer",
    "thisOrigin",
    "location",
    "domainIdx",
    "protoSepIdx",
    "domainEndIdx",
    "getQuaternionAngle",
    "quat",
    "warnOnce",
    "observedWarnings",
    "deprecated",
    "suggested",
    "glPreserveState",
    "unpatch",
    "glState",
    "COLOR_BUFFER_BIT",
    "RGBA",
    "RGB",
    "TEXTURE_MAG_FILTER",
    "TEXTURE_MIN_FILTER",
    "TEXTURE_WRAP_S",
    "CLAMP_TO_EDGE",
    "TEXTURE_WRAP_T",
    "COLOR_ATTACHMENT0",
    "DEPTH_STENCIL",
    "DEPTH_STENCIL_ATTACHMENT",
    "DEPTH_COMPONENT16",
    "DEPTH_ATTACHMENT",
    "STENCIL_INDEX8",
    "STENCIL_ATTACHMENT",
    "FRAMEBUFFER_COMPLETE",
    "pname",
    "renderNoState",
    "updateDeviceInfo",
    "deviceInfo",
    "computeMeshVertices_",
    "STATIC_DRAW",
    "computeMeshIndices_",
    "lensFrustum",
    "getLeftEyeVisibleTanAngles",
    "noLensFrustum",
    "getLeftEyeNoLensTanAngles",
    "getLeftEyeVisibleScreenRect",
    "vidx",
    "distortInverse",
    "halfwidth",
    "halfheight",
    "iidx",
    "getOwnPropertyDescriptor_",
    "proto",
    "kInnerRadius",
    "listen",
    "optionsCallback",
    "backCallback",
    "midline",
    "clientWidth",
    "clientX",
    "kButtonWidthDp",
    "clientY",
    "clientHeight",
    "addGearSegment",
    "buttonScale",
    "addArrowVertex",
    "buttonBorder",
    "physicalPixels",
    "scalingRatio",
    "dps",
    "buttonSize",
    "segmentTheta",
    "angledLineWidth",
    "projectionMat",
    "r0",
    "r1",
    "dr0",
    "distort",
    "dr1",
    "r2",
    "invScalar",
    "setFromEulerXYZ",
    "setFromEulerYXZ",
    "DEFAULT_ANDROID",
    "DEFAULT_IOS",
    "CardboardV1",
    "determineDevice_",
    "metersPerPixelX",
    "metersPerPixelY",
    "getDistortedFieldOfViewLeftEye",
    "eyeToScreenDistance",
    "outerDist",
    "innerDist",
    "bottomDist",
    "topDist",
    "outerAngle",
    "innerAngle",
    "bottomAngle",
    "topAngle",
    "fovLeft",
    "fovTop",
    "fovRight",
    "fovBottom",
    "verticalLensOffset",
    "centerX",
    "centerY",
    "centerZ",
    "screenLeft",
    "screenTop",
    "screenRight",
    "screenBottom",
    "undistortedFrustum",
    "eyeX",
    "eyeY",
    "getFieldOfViewLeftEye",
    "opt_isUndistorted",
    "getUndistortedFieldOfViewLeftEye",
    "getFieldOfViewRightEye",
    "getUndistortedParams_",
    "getUndistortedViewportLeftEye",
    "screenWidth",
    "screenHeight",
    "xPxPerTanAngle",
    "yPxPerTanAngle",
    "eyePosX",
    "eyePosY",
    "halfLensDistance",
    "maxFov",
    "viewerMax",
    "devices",
    "rules",
    "mdmh",
    "dpi",
    "last_updated",
    "newDeviceParams",
    "calcDeviceParams_",
    "db",
    "matched",
    "rule",
    "ruleMatches_",
    "resX",
    "resY",
    "sensorSample",
    "addAccelMeasurement",
    "addGyroMeasurement",
    "deltaT",
    "run_",
    "accelToQuaternion_",
    "gyroDeltaQ",
    "gyroToQuaternionDelta_",
    "invFilterQ",
    "toFixed",
    "targetQ",
    "getOrientation",
    "accel",
    "normAccel",
    "gyro",
    "getPrediction",
    "currentQ",
    "angularSpeed",
    "predictAngle",
    "_deviceOrientationQ",
    "deviceOrientationFixQ",
    "deviceOrientationFilterToWorldQ",
    "filterOrientation",
    "resetPose",
    "onDeviceOrientation_",
    "beta",
    "gamma",
    "onDeviceMotion_",
    "deviceMotion",
    "updateDeviceMotion_",
    "accGravity",
    "accelerationIncludingGravity",
    "rotRate",
    "rotationRate",
    "timeStamp",
    "deltaS",
    "onOrientationChange_",
    "screenOrientation",
    "onMessage_",
    "deviceMotionEvent",
    "onDeviceMotionCallback_",
    "onOrientationChangeCallback_",
    "onMessageCallback_",
    "onDeviceOrientationCallback_",
    "X_AXIS",
    "Z_AXIS",
    "SENSOR_TO_VR",
    "sensor",
    "fusionSensor",
    "_out",
    "api",
    "errors",
    "_sensorQ",
    "_outQ",
    "_onSensorRead",
    "_onSensorError",
    "RelativeOrientationSensor",
    "frequency",
    "referenceFrame",
    "useDeviceMotion",
    "K_FILTER",
    "PREDICTION_TIME_S",
    "YAW_ONLY",
    "DEBUG",
    "show",
    "parentElement",
    "display",
    "querySelector",
    "showTemporarily",
    "ms",
    "timer",
    "disableShowTemporarily",
    "getSelectedKey_",
    "fireOnChange_",
    "onSave_",
    "setItem",
    "classList",
    "overflow",
    "boxShadow",
    "createH1_",
    "createChoice_",
    "createButton_",
    "h1",
    "marginBottom",
    "div",
    "onclick",
    "button",
    "border",
    "NoSleep",
    "commonjsGlobal$$1",
    "modules",
    "__webpack_require__",
    "moduleId",
    "installedModules",
    "getter",
    "__esModule",
    "_classCallCheck",
    "_createClass",
    "mediaFile",
    "oldIOS",
    "MSStream",
    "noSleepTimer",
    "noSleepVideo",
    "defaultLeftBounds",
    "defaultRightBounds",
    "caf",
    "_getPose",
    "getPose",
    "_resetPose",
    "getImmediatePose",
    "wrapForFullscreen",
    "cssProperties",
    "insertBefore",
    "firstChild",
    "removeFullscreenWrapper",
    "requestPresent",
    "wasPresenting",
    "incomingLayer",
    "updatePresent_",
    "predistorted",
    "onFullscreenChange",
    "actualFullscreenElement",
    "beginPresent_",
    "unlock",
    "disableWakeLock",
    "endPresent_",
    "removeFullscreenListeners_",
    "fireVRDisplayPresentChange_",
    "onFullscreenError",
    "addFullscreenListeners_",
    "enableWakeLock",
    "exitPresent",
    "changeHandler",
    "errorHandler",
    "fullscreenEnabled",
    "webkitFullscreenEnabled",
    "mozFullScreenEnabled",
    "msFullscreenEnabled",
    "whichEye",
    "CARDBOARD_UI_DISABLED",
    "DIRTY_SUBMIT_FRAME_BINDINGS",
    "Eye",
    "linearVelocity",
    "linearAcceleration",
    "angularVelocity",
    "angularAcceleration",
    "fieldOfView",
    "eyeParams",
    "newParams",
    "updateBounds_",
    "stopPropagation",
    "orientationHandler",
    "vrdisplaypresentchangeHandler",
    "fireVRDisplayDeviceParamsChange_",
    "lastWidth",
    "lastHeight",
    "vrdisplay",
    "getPolyfillDisplays",
    "_polyfillDisplaysPopulated",
    "NativeVRFrameData",
    "nativeFrameData",
    "nativeGetFrameData",
    "nativeDisplays",
    "webvrPolyfill",
    "default",
    "require$$0",
    "idxOf",
    "chr",
    "isWhitespace",
    "whitespace",
    "pre",
    "lineStart",
    "isNewline",
    "newline",
    "lineEnd",
    "measured",
    "greedy",
    "testWidth",
    "newLine",
    "newlineChar",
    "nextStart",
    "monospace",
    "initParams",
    "createXHR",
    "_createXHR",
    "readystatechange",
    "loadFunc",
    "getBody",
    "responseText",
    "getXml",
    "isJson",
    "errorFunc",
    "timeoutTimer",
    "failureResponse",
    "aborted",
    "useXDR",
    "method",
    "rawRequest",
    "getAllResponseHeaders",
    "parseHeaders",
    "called",
    "cors",
    "XDomainRequest",
    "sync",
    "onreadystatechange",
    "onerror",
    "onprogress",
    "onabort",
    "ontimeout",
    "username",
    "password",
    "abort",
    "beforeSend",
    "responseXML",
    "firefoxBugTakenEffect",
    "ActiveXObject",
    "xmlDoc",
    "async",
    "loadXML",
    "getPropertyType",
    "component",
    "componentName",
    "schema",
    "toRadians",
    "addEventListeners",
    "eventNames",
    "handler",
    "removeEventListeners",
    "getRawProperty",
    "splitDot",
    "setRawProperty",
    "targetValue",
    "TYPE_COLOR",
    "splitCache",
    "isRawProperty",
    "STRING_COMPONENTS",
    "STRING_OBJECT3D",
    "registerComponent",
    "colorHelperFrom",
    "colorHelperTo",
    "getComponentProperty",
    "entity",
    "setComponentProperty",
    "PROP_POSITION",
    "PROP_ROTATION",
    "PROP_SCALE",
    "Component",
    "dur",
    "elasticity",
    "startEvents",
    "pauseEvents",
    "resumeEvents",
    "multiple",
    "eventDetail",
    "animationIsPlaying",
    "onStartEvent",
    "beginAnimation",
    "pauseAnimation",
    "resumeAnimation",
    "fromColor",
    "toColor",
    "updateConfigForDefault",
    "updateConfigForRawColor",
    "oldData",
    "createAndStartAnimation",
    "pausedWasPlaying",
    "updateConfig",
    "stopRelatedAnimations",
    "waitComponentInitRawProperty",
    "setColorConfig",
    "lastValue",
    "isBoolean",
    "isNumber",
    "aframeProperty",
    "updateConfigForVector",
    "coordinates",
    "object3D",
    "propType",
    "wait",
    "spectator",
    "setObject3D",
    "innerWidth",
    "innerHeight",
    "updateActiveCamera",
    "updateSpectatorCamera",
    "system",
    "activeCameraEl",
    "setActiveCamera",
    "disableActiveCamera",
    "spectatorCameraEl",
    "setSpectatorCamera",
    "disableSpectatorCamera",
    "removeObject3D",
    "EVENTS",
    "CLICK",
    "FUSING",
    "MOUSEENTER",
    "MOUSEDOWN",
    "MOUSELEAVE",
    "MOUSEUP",
    "STATES",
    "HOVERING",
    "HOVERED",
    "CANVAS_EVENTS",
    "DOWN",
    "UP",
    "CANVAS_HOVER_CLASS",
    "downEvents",
    "fuse",
    "fuseTimeout",
    "mouseCursorStylesEnabled",
    "upEvents",
    "rayOrigin",
    "oneOf",
    "cursorDownEl",
    "intersectedEl",
    "canvasBounds",
    "updateCanvasBounds",
    "debounce",
    "sceneEl",
    "intersectedEventDetail",
    "cursorEl",
    "onCursorDown",
    "onCursorUp",
    "onIntersection",
    "onIntersectionCleared",
    "onMouseMove",
    "updateMouseEventListeners",
    "removeState",
    "addCanvasListeners",
    "downEvent",
    "upEvent",
    "mouse",
    "rayCasterConfig",
    "touches",
    "checkIntersections",
    "twoWayEmit",
    "currentIntersection",
    "els",
    "intersections",
    "getIntersection",
    "clearCurrentIntersection",
    "setIntersection",
    "clearedEls",
    "addState",
    "ignoreRemaining",
    "evtName",
    "trackedControlsUtils",
    "checkControllerPresentAndSetup",
    "emitIfAxesChanged",
    "onButtonEvent",
    "DAYDREAM_CONTROLLER_MODEL_BASE_URL",
    "DAYDREAM_CONTROLLER_MODEL_OBJ_URL",
    "DAYDREAM_CONTROLLER_MODEL_OBJ_MTL",
    "GAMEPAD_ID_PREFIX",
    "hand",
    "buttonColor",
    "buttonTouchedColor",
    "buttonHighlightColor",
    "model",
    "orientationOffset",
    "armModel",
    "trackpad",
    "bindMethods",
    "onModelLoaded",
    "onControllersUpdate",
    "checkIfControllerPresent",
    "removeControllersUpdateListener",
    "onAxisMoved",
    "onButtonChanged",
    "onButtonDown",
    "onButtonUp",
    "onButtonTouchStart",
    "onButtonTouchEnd",
    "controllerPresent",
    "lastControllerCheck",
    "controllerEventsActive",
    "addControllersUpdateListener",
    "injectTrackedControls",
    "idPrefix",
    "mtl",
    "buttonMeshes",
    "controllerObject3D",
    "menu",
    "updateModel",
    "buttonName",
    "updateButtonModel",
    "GEARVR_CONTROLLER_MODEL_BASE_URL",
    "GEARVR_CONTROLLER_MODEL_OBJ_URL",
    "GEARVR_CONTROLLER_MODEL_OBJ_MTL",
    "trigger",
    "geometryNames",
    "dummyGeometry",
    "schemaChange",
    "skipCache",
    "previousData",
    "unuseGeometry",
    "getOrCreateGeometry",
    "getObject3D",
    "updateSchema",
    "currentGeometryType",
    "newGeometryType",
    "extendSchema",
    "getDRACOLoader",
    "gltfModel",
    "getGestureEventName",
    "gesture",
    "eventName",
    "isViveController",
    "trackedControls",
    "controllerId",
    "MODEL_URLS",
    "ANIMATIONS",
    "pointThumb",
    "fist",
    "hold",
    "thumbUp",
    "thumb",
    "pressedButtons",
    "touchedButtons",
    "onGripDown",
    "handleButton",
    "onGripUp",
    "onTrackpadDown",
    "onTrackpadUp",
    "onTrackpadTouchStart",
    "onTrackpadTouchEnd",
    "onTriggerDown",
    "onTriggerUp",
    "onTriggerTouchStart",
    "onTriggerTouchEnd",
    "onGripTouchStart",
    "onGripTouchEnd",
    "onThumbstickDown",
    "onThumbstickUp",
    "onAorXTouchStart",
    "onAorXTouchEnd",
    "onBorYTouchStart",
    "onBorYTouchEnd",
    "onSurfaceTouchStart",
    "onSurfaceTouchEnd",
    "onControllerConnected",
    "onControllerDisconnected",
    "previousHand",
    "controlConfiguration",
    "lastGesture",
    "isPressed",
    "isTouched",
    "determineGesture",
    "animateGesture",
    "emitGestureEvents",
    "isGripActive",
    "isSurfaceActive",
    "isTrackpadActive",
    "isTriggerActive",
    "isABXYActive",
    "playAnimation",
    "fromAction",
    "toAction",
    "defaultModelColor",
    "createRay",
    "controllerConfig",
    "raycasterConfig",
    "showLine",
    "modelReady",
    "cursor",
    "hideRay",
    "modelEnabled",
    "hasWebXR",
    "controlsConfiguration",
    "initDefaultModel",
    "daydream-controls",
    "gearvr-controls",
    "oculus-go-controls",
    "oculus-touch-controls",
    "vive-controls",
    "vive-focus-controls",
    "windows-motion-controls",
    "modelEl",
    "if",
    "defaultTarget",
    "rendererSystem",
    "systems",
    "registerLight",
    "diffData",
    "shadowsLoaded",
    "applyColorCorrection",
    "hasLoaded",
    "onSetTarget",
    "updateShadow",
    "setLight",
    "newLight",
    "getLight",
    "cameraHelper",
    "targetEl",
    "isEqualVec3",
    "geoNeedsUpdate",
    "registerShader",
    "borderColor",
    "highlighted",
    "highlightedColor",
    "peekMode",
    "titleColor",
    "visualAspectEnabled",
    "navigate",
    "previousQuaternion",
    "quaternionClone",
    "hiddenEls",
    "strokeColor",
    "initVisualAspect",
    "updateEventListener",
    "updatePeekMode",
    "sphereEl",
    "hideAll",
    "showAll",
    "semiSphereEl",
    "textEl",
    "visualAspectInitialized",
    "pano",
    "segmentsWidth",
    "segmentsHeight",
    "borderEnabled",
    "cameraWorldPosition",
    "elWorldPosition",
    "cameraPortalOrientation",
    "calculateCameraPortalOrientation",
    "peekCameraPortalOrientation",
    "cameraEl",
    "mat4",
    "portalNormal",
    "portalPosition",
    "PolyfillControls",
    "PI_2",
    "hmdEnabled",
    "pointerLockEnabled",
    "reverseMouseDrag",
    "reverseTouchDrag",
    "touchEnabled",
    "previousHMDPosition",
    "hmdQuaternion",
    "hmdEuler",
    "savedRotation",
    "savedPosition",
    "polyfillObject",
    "polyfillControls",
    "deltaRotation",
    "savedPose",
    "pointerLocked",
    "setupMouseControls",
    "onEnterVR",
    "updateGrabCursor",
    "pitchObject",
    "yawObject",
    "exitPointerLock",
    "updateOrientation",
    "onMouseDown",
    "onMouseUp",
    "onTouchStart",
    "onTouchMove",
    "onTouchEnd",
    "onExitVR",
    "onPointerLockChange",
    "onPointerLockError",
    "mouseDown",
    "canvasEl",
    "poseMatrix",
    "poseModelMatrix",
    "checkHeadsetConnected",
    "movementX",
    "movementY",
    "previousMouseEvent",
    "mozMovementX",
    "mozMovementY",
    "screenX",
    "screenY",
    "showGrabbingCursor",
    "requestPointerLock",
    "mozRequestPointerLock",
    "hideGrabbingCursor",
    "touchStart",
    "pageX",
    "pageY",
    "touchStarted",
    "deltaY",
    "saveCameraPose",
    "restoreCameraPose",
    "pointerLockElement",
    "mozPointerLockElement",
    "enableGrabCursor",
    "disableGrabCursor",
    "hasSavedPose",
    "parseSide",
    "parseVertexColors",
    "coloring",
    "parseBlending",
    "disposeMaterial",
    "unregisterMaterial",
    "shaders",
    "shaderNames",
    "npot",
    "updateShader",
    "updateMaterial",
    "currentShader",
    "newShader",
    "updateBehavior",
    "tickTime",
    "tickProperties",
    "addBehavior",
    "removeBehavior",
    "shaderName",
    "shaderInstance",
    "Shader",
    "oldDataHasKeys",
    "registerMaterial",
    "waitForMesh",
    "objLoader",
    "mtlLoader",
    "applyMaterial",
    "resetMesh",
    "loadObj",
    "objUrl",
    "mtlUrl",
    "BASE_PATH",
    "objModel",
    "OCULUS_GO_CONTROLLER_MODEL_URL",
    "TOUCH_CONTROLLER_MODEL_BASE_URL",
    "TOUCH_CONTROLLER_MODEL_URL",
    "DEFAULT_MODEL_PIVOT_OFFSET",
    "RAY_ORIGIN",
    "buttonTouchColor",
    "thumbstick",
    "previousButtonValues",
    "loadModel",
    "analogValue",
    "originalXRotationTrigger",
    "grip",
    "originalXPositionGrip",
    "xbutton",
    "abutton",
    "ybutton",
    "bbutton",
    "OBSERVER_SELECTOR_RE",
    "OBSERVER_CONFIG",
    "INTERSECT",
    "INTERSECTION",
    "INTERSECT_CLEAR",
    "INTERSECTION_CLEAR",
    "autoRefresh",
    "interval",
    "useWorldCoordinates",
    "clearedIntersectedEls",
    "unitLineEndVec3",
    "intersectedEls",
    "newIntersectedEls",
    "newIntersections",
    "prevCheckTime",
    "prevIntersectedEls",
    "rawIntersections",
    "updateOriginDirection",
    "setDirty",
    "updateLine",
    "observer",
    "dirty",
    "lineEndVec3",
    "otherLineEndVec3",
    "intersectedDetail",
    "intersectedClearedDetail",
    "intersectionClearedDetail",
    "intersectionDetail",
    "drawLine",
    "clearAllIntersections",
    "refreshObjects",
    "flattenObject3DMaps",
    "lineLength",
    "originVec3",
    "endVec3",
    "isEntity",
    "object3DMap",
    "zeroScale",
    "register",
    "enterVREl",
    "removeFullScreenStyles",
    "addFullScreenStyles",
    "getFog",
    "updateMaterials",
    "getFuzzyPatchVersion",
    "AFRAME_INJECTED",
    "pkg",
    "INSPECTOR_DEV_URL",
    "INSPECTOR_RELEASE_URL",
    "INSPECTOR_URL",
    "INSPECTOR_VERSION",
    "LOADING_MESSAGE",
    "LOADING_ERROR_MESSAGE",
    "firstPlay",
    "onKeydown",
    "onMessage",
    "initOverlay",
    "urlParam",
    "getUrlParameter",
    "openInspector",
    "loadingMessageEl",
    "keyCode",
    "ctrlKey",
    "altKey",
    "showLoader",
    "hideLoader",
    "focusEl",
    "AFRAME",
    "INSPECTOR",
    "inspectorInjected",
    "shouldCaptureKeyEvent",
    "enterVR",
    "exitVR",
    "onKeyup",
    "enterVREnabled",
    "mixin",
    "initPool",
    "availableEls",
    "usedEls",
    "createEntity",
    "wrapPlay",
    "playMethod",
    "requestEntity",
    "returnEntity",
    "cubeMapSize",
    "MAX_CUBE_MAP_TEXTURE_SIZE",
    "quad",
    "ctx",
    "onKeyDown",
    "resize",
    "shortcutPressed",
    "shiftKey",
    "capture",
    "setCapture",
    "cubeCamera",
    "isVREnabled",
    "renderCapture",
    "saveCapture",
    "getCanvas",
    "imageData",
    "pixels",
    "flipPixelsVertically",
    "flippedPixels",
    "toBlob",
    "fileName",
    "linkEl",
    "click",
    "createStats",
    "threeStats",
    "ThreeStats",
    "aframeStats",
    "AFrameStats",
    "plugins",
    "RStats",
    "caption",
    "below",
    "HIDDEN_CLASS",
    "statsEl",
    "hideBound",
    "showBound",
    "createEnterVRButton",
    "onClick",
    "vrButton",
    "ENTER_VR_CLASS",
    "constants",
    "ENTER_VR_BTN_CLASS",
    "createOrientationModal",
    "modal",
    "ORIENTATION_MODAL_CLASS",
    "exit",
    "enterVRButton",
    "insideLoader",
    "orientationModalEl",
    "updateEnterVRInterface",
    "toggleOrientationModalIfNeeded",
    "onEnterVRButtonClick",
    "onModalClick",
    "uiElement",
    "toggleEnterVRButtonIfNeeded",
    "isLandscape",
    "cast",
    "receive",
    "onMeshChanged",
    "setShadowMapEnabled",
    "updateDescendants",
    "positional",
    "volume",
    "audioLoader",
    "pool",
    "mustPlay",
    "playSoundBound",
    "playSound",
    "sound",
    "srcChanged",
    "setupSound",
    "isPaused",
    "evtDetail",
    "stopSound",
    "oldEvt",
    "audioListener",
    "pauseSound",
    "processSound",
    "loadFont",
    "yOffset",
    "loadBMFont",
    "ch",
    "shaderObject",
    "computeWidth",
    "wrapPixels",
    "wrapCount",
    "widthFactor",
    "computeFontWidthFactor",
    "digitsum",
    "digits",
    "PromiseCache",
    "promiseGenerator",
    "createTextGeometry",
    "coreShader",
    "DEFAULT_WIDTH",
    "MAX_ANISOTROPY",
    "FONT_BASE_URL",
    "FONTS",
    "aileronsemibold",
    "dejavu",
    "exo2bold",
    "exo2semibold",
    "kelsonsans",
    "monoid",
    "mozillavr",
    "roboto",
    "sourcecodepro",
    "MSDF_FONTS",
    "DEFAULT_FONT",
    "fontWidthFactors",
    "protocolRe",
    "anchor",
    "fontImage",
    "whiteSpace",
    "shaderData",
    "createOrUpdateMaterial",
    "currentFont",
    "updateFont",
    "updateGeometry",
    "updateLayout",
    "hasChangedShader",
    "NewShader",
    "fontSrc",
    "lookupFont",
    "fontImgSrc",
    "getFontImageSrc",
    "fontObj",
    "imageSrc",
    "geometryComponent",
    "textRenderWidth",
    "textScale",
    "ascender",
    "geometryUpdateBase",
    "geometryUpdateData",
    "newLineRegex",
    "tabRegex",
    "controllerUtils",
    "DEFAULT_CAMERA_HEIGHT",
    "DEFAULT_HANDEDNESS",
    "EYES_TO_ELBOW",
    "FOREARM",
    "EMPTY_DAYDREAM_TOUCHES",
    "AXISMOVE",
    "BUTTONCHANGED",
    "BUTTONDOWN",
    "BUTTONUP",
    "TOUCHSTART",
    "TOUCHEND",
    "autoHide",
    "headElement",
    "buttonStates",
    "changedAxes",
    "targetControllerNumber",
    "axisMoveEventDetail",
    "changed",
    "deltaControllerPosition",
    "controllerQuaternion",
    "controllerEuler",
    "updateGamepad",
    "buttonEventDetails",
    "updatePose",
    "updateButtons",
    "defaultUserHeight",
    "getHeadElement",
    "findMatchingControllerWebVR",
    "applyArmModel",
    "controllerPosition",
    "headEl",
    "headObject3D",
    "buttonState",
    "touched",
    "handleAxes",
    "handlePress",
    "handleTouch",
    "handleValue",
    "controllerAxes",
    "previousAxis",
    "previousButtonState",
    "addSessionEventListeners",
    "updateController",
    "emitButtonUpEvent",
    "emitButtonDownEvent",
    "removeSessionEventListeners",
    "xrSession",
    "handedness",
    "findMatchingControllerWebXR",
    "VIVE_CONTROLLER_MODEL_OBJ_URL",
    "VIVE_CONTROLLER_MODEL_OBJ_MTL",
    "controllerIndex",
    "setButtonColor",
    "VIVE_FOCUS_CONTROLLER_MODEL_URL",
    "triggerPressed",
    "trackpadPressed",
    "pressedName",
    "isEmptyObject",
    "KEYCODE_TO_CODE",
    "keyboardevent",
    "CLAMP_VELOCITY",
    "MAX_DELTA",
    "KEYS",
    "acceleration",
    "adAxis",
    "adEnabled",
    "adInverted",
    "fly",
    "wsAxis",
    "wsEnabled",
    "wsInverted",
    "onBlur",
    "onFocus",
    "onKeyUp",
    "onVisibilityChange",
    "attachVisibilityEventListeners",
    "updateVelocity",
    "getMovementVector",
    "removeKeyEventListeners",
    "removeVisibilityEventListeners",
    "attachKeyEventListeners",
    "adSign",
    "wsSign",
    "scaledEasing",
    "KeyA",
    "ArrowLeft",
    "KeyD",
    "ArrowRight",
    "KeyW",
    "ArrowUp",
    "KeyS",
    "ArrowDown",
    "directionVector",
    "rotationEuler",
    "xRotation",
    "MODEL_BASE_URL",
    "MODEL_FILENAMES",
    "GAMEPAD_ID_PATTERN",
    "pair",
    "hideDisconnected",
    "axisMeshNames",
    "buttonMeshNames",
    "pointingPoseMeshName",
    "onModelError",
    "setModelVisibility",
    "loadedMeshInfo",
    "axisMeshes",
    "createdFromMesh",
    "updateControllerModel",
    "sourceUrl",
    "createControllerModelUrl",
    "forceDefault",
    "filename",
    "trackedControlsComponent",
    "defaultUrl",
    "getImmediateChildByName",
    "object3d",
    "meshName",
    "meshInfo",
    "controllerModel",
    "unpressed",
    "calculateRayOriginFromMesh",
    "lerpAxisTransform",
    "axisValue",
    "axisMeshInfo",
    "lerpValue",
    "lerpButtonTransform",
    "buttonValue",
    "buttonMeshInfo",
    "numAxes",
    "modelVisible",
    "38",
    "37",
    "40",
    "39",
    "87",
    "65",
    "83",
    "68",
    "mediaElementLoaded",
    "checkProgress",
    "secondsBuffered",
    "buffered",
    "fixUpMediaElement",
    "mediaEl",
    "newMediaEl",
    "extractDomain",
    "host",
    "domain",
    "inferResponseType",
    "dotLastIndex",
    "ANode",
    "registerElement",
    "isAssets",
    "attachedCallback",
    "mediaEls",
    "imgEl",
    "imgEls",
    "srcObject",
    "detachedCallback",
    "isAssetItem",
    "loadedBytes",
    "totalBytes",
    "srcs",
    "checkComponentDefined",
    "attrValue",
    "isComponentMixedIn",
    "mixinEls",
    "inMixin",
    "mergeComponentData",
    "extraData",
    "styleParser",
    "isComponent",
    "MULTIPLE_COMPONENT_DELIMITER",
    "COMPONENTS",
    "getRotation",
    "entityEl",
    "rotationObj",
    "AEntity",
    "OBJECT3D_COMPONENTS",
    "ONCE",
    "initializingComponents",
    "componentsToUpdate",
    "states",
    "oldVal",
    "newVal",
    "justInitialized",
    "setEntityAttribute",
    "assetsEl",
    "addToParent",
    "removeComponent",
    "removeFromParent",
    "oldObj",
    "getOrCreateObject3D",
    "attachedToParent",
    "updateComponents",
    "getChildEntities",
    "childEntities",
    "initComponent",
    "isDependency",
    "componentId",
    "componentInfo",
    "initComponentDependencies",
    "initialized",
    "tryRemoveLater",
    "extraComponents",
    "componentCache",
    "getExtraComponents",
    "updateComponent",
    "getDOMAttribute",
    "clobber",
    "updateProperties",
    "resetProperty",
    "mixinUpdate",
    "entities",
    "computedMixinStr",
    "componentsUpdated",
    "newMixins",
    "oldMixins",
    "mixinEl",
    "mixinIds",
    "updateMixins",
    "handleMixinUpdate",
    "oldMixinIds",
    "singlePropUpdate",
    "arg1",
    "arg2",
    "newAttrValue",
    "delimiterIndex",
    "isDebugMode",
    "flushToDOM",
    "stateIndex",
    "inspector",
    "isMixin",
    "cacheAttribute",
    "updateEntities",
    "closestScene",
    "cacheAttributes",
    "parseAttrValueForCache",
    "isNode",
    "mixins",
    "closest",
    "selector",
    "mozMatchesSelector",
    "msMatchesSelector",
    "oMatchesSelector",
    "webkitMatchesSelector",
    "childFilter",
    "childrenLoaded",
    "getChildren",
    "newMixinIdArray",
    "oldMixinIdArray",
    "newMixinIds",
    "unregisterMixin",
    "registerMixin",
    "compositedMixinIds",
    "mixinId",
    "addTagName",
    "knownTags",
    "wrapANodeMethods",
    "newObj",
    "wrapMethods",
    "copyProperties",
    "wrapAEntityMethods",
    "ANodeMethods",
    "AEntityMethods",
    "targetObj",
    "methodList",
    "derivedObj",
    "baseObj",
    "methodName",
    "wrapMethod",
    "derivedMethod",
    "baseMethod",
    "desc",
    "isANode",
    "isAEntity",
    "propVal",
    "eventsBind",
    "events",
    "copyData",
    "sourceData",
    "parsedProperty",
    "isObjectOrArray",
    "extendProperties",
    "isObjectBased",
    "hasBehavior",
    "tock",
    "wrapPause",
    "pauseMethod",
    "eventsDetach",
    "shouldPlay",
    "eventsAttach",
    "isObject",
    "parseProperties",
    "parseProperty",
    "processSchema",
    "isSingleProp",
    "isSingleProperty",
    "stringifyProperties",
    "stringifyProperty",
    "aframeScript",
    "currentScript",
    "upperCaseRegExp",
    "objectPools",
    "isSinglePropertyObject",
    "objectPool",
    "nextData",
    "use",
    "removeUnusedKeys",
    "previousOldData",
    "parsingAttrValue",
    "throttledEmitComponentChanged",
    "throttle",
    "prevData",
    "silent",
    "updateCachedAttrValue",
    "tempObject",
    "recycle",
    "clearObject",
    "parsedValue",
    "isDefault",
    "callUpdateHandler",
    "initialOldData",
    "buildData",
    "mayNeedSchemaUpdate",
    "schemaChangeKeys",
    "hasComponentChanged",
    "deepEqual",
    "isPositionRotationScale",
    "schemaAddon",
    "extendedSchema",
    "newData",
    "componentDefined",
    "defaultValue",
    "mixinData",
    "registrationOrderWarnings",
    "definition",
    "NewComponent",
    "schemaIsSingleProp",
    "compareDocumentPosition",
    "DOCUMENT_POSITION_FOLLOWING",
    "createPool",
    "registerGeometry",
    "NewGeometry",
    "registerPropertyType",
    "propertyTypes",
    "defaultParse",
    "defaultStringify",
    "arrayParse",
    "arrayStringify",
    "assetParse",
    "parsedUrl",
    "urlRegex",
    "boolParse",
    "intParse",
    "numberParse",
    "selectorParse",
    "nonCharRegex",
    "selectorAllParse",
    "selectorStringify",
    "selectorAllStringify",
    "srcParse",
    "vecParse",
    "isValidDefaultValue",
    "isValidDefaultCoordinate",
    "possibleCoordinates",
    "dimensions",
    "getCanvasSize",
    "embedded",
    "isVR",
    "offsetHeight",
    "getMaxSize",
    "navigationUI",
    "setupCanvas",
    "onFullScreenChange",
    "activeElement",
    "blur",
    "dataset",
    "aframeCanvas",
    "initMetaTags",
    "inject",
    "initWakelock",
    "loadingScreen",
    "re",
    "initPostMessageAPI",
    "isWebXRAvailable",
    "AScene",
    "systemNames",
    "behaviors",
    "originalHTML",
    "setupRenderer",
    "onVRPresentChangeBound",
    "onVRPresentChange",
    "enterVRBound",
    "exitVRBound",
    "exitVRTrueBound",
    "pointerRestrictedBound",
    "pointerRestricted",
    "pointerUnrestrictedBound",
    "pointerUnrestricted",
    "attachedCallbackPostCamera",
    "initSystems",
    "initSystem",
    "behavior",
    "behaviorArr",
    "behaviorType",
    "getPointerLockElement",
    "enterVRSuccess",
    "enterVRFailure",
    "vrManager",
    "getVRDisplay",
    "hasNativeWebVRImplementation",
    "presentationAttributes",
    "highRefreshRate",
    "foveationLevel",
    "requestSession",
    "immersive",
    "exclusive",
    "exitVRSuccess",
    "forceCanvasResizeSafariMobile",
    "exitVRFailure",
    "getComputedAttribute",
    "componentPropValue",
    "isVRPresenting",
    "vrDevice",
    "maxCanvasSize",
    "rendererAttr",
    "rendererAttrString",
    "rendererConfig",
    "maxCanvasWidth",
    "maxCanvasHeight",
    "renderStarted",
    "mark",
    "getSceneCanvasSize",
    "setupTitle",
    "titleEl",
    "LOADER_TITLE_CLASS",
    "ATTR_NAME",
    "loaderScene",
    "sphereGeometry",
    "sphereMaterial",
    "sphereMesh1",
    "sphereMesh2",
    "sphereMesh3",
    "loaderAttribute",
    "dotsColor",
    "loaderEnabled",
    "Meta",
    "attrs",
    "exists",
    "Link",
    "createTag",
    "tagObj",
    "MOBILE_HEAD_TAGS",
    "MOBILE_IOS_HEAD_TAGS",
    "createAndInjectTag",
    "tag",
    "headScriptEl",
    "headTags",
    "postMessageAPIHandler",
    "isIframed",
    "Wakelock",
    "release",
    "processPropertyDefinition",
    "propDefinition",
    "isCustomType",
    "PropertyTypes",
    "propNames",
    "propData",
    "getPartialData",
    "propValue",
    "stringifiedData",
    "propertyToThreeMapping",
    "int",
    "vec2",
    "vec3",
    "vec4",
    "initVariables",
    "raw",
    "varType",
    "variables",
    "updateVariables",
    "materialKey",
    "parseValue",
    "setMapOnTextureLoad",
    "updateMapMaterialFromData",
    "System",
    "rawData",
    "registerSystem",
    "NewSystem",
    "findAllScenes",
    "originalPosition",
    "originalRotation",
    "originalParent",
    "originalGroup",
    "outerGroup",
    "addMapping",
    "htmlAttrName",
    "materialMappings",
    "defaultComponents",
    "mappings",
    "addComponentMapping",
    "definePrimitive",
    "registerPrimitive",
    "extendDeep",
    "defaultAttributes",
    "defaultComponentsFromPrimitive",
    "deprecatedMappings",
    "resolveMappingCollisions",
    "isUndefined",
    "isPureObject",
    "mixinComponents",
    "getComponentPropertyPath",
    "look-controls",
    "wasd-controls",
    "look-controls-enabled",
    "pointer-lock-enabled",
    "wasd-controls-enabled",
    "reverse-mouse-drag",
    "getMeshMixin",
    "radiusOuter",
    "radiusInner",
    "segmentsTheta",
    "fuse-timeout",
    "segmentsRadial",
    "open-ended",
    "theta-length",
    "theta-start",
    "ground-color",
    "meshMixin",
    "obj-model",
    "meshPrimitives",
    "segments-height",
    "segments-width",
    "unCamelCase",
    "geometryName",
    "geometryHyphened",
    "segmentsDepth",
    "segmentsPhi",
    "radiusTubular",
    "segmentsTubular",
    "rotateVector",
    "uvMinVector",
    "uvMaxVector",
    "uvScaleVector",
    "vertexA",
    "vertexB",
    "vertexC",
    "getVRDevices",
    "hasNativeWebXRImplementation",
    "xr",
    "isIOSOlderThan10",
    "polyfillConfig",
    "webvrpolyfill",
    "isIE11",
    "protocol",
    "isBrowserEnvironment",
    "AComponent",
    "ANIME",
    "coreComponents",
    "_rS",
    "getEntityCount",
    "getEntriesByName",
    "_scene",
    "_start",
    "_end",
    "_attach",
    "fractions",
    "getMaterialData",
    "materialData",
    "textureSrc",
    "updateMap",
    "ambientOcclusionMap",
    "ambientOcclusionMapIntensity",
    "CubeLoader",
    "texturePromises",
    "ambientOcclusionTextureOffset",
    "ambientOcclusionTextureRepeat",
    "displacementTextureOffset",
    "displacementTextureRepeat",
    "metalnessTextureOffset",
    "metalnessTextureRepeat",
    "normalTextureOffset",
    "normalTextureRepeat",
    "roughnessTextureOffset",
    "roughnessTextureRepeat",
    "sphericalEnvMap",
    "updateDistortionMap",
    "updateEnvMap",
    "isLoadingEnvMap",
    "handleTextureEvents",
    "srcLoader",
    "validateCubemapSrc",
    "removeDefaultCamera",
    "defaultCamera",
    "DEFAULT_CAMERA_ATTR",
    "unwrapRender",
    "wrapRender",
    "initialCameraFound",
    "numUserCameras",
    "numUserCamerasChecked",
    "setupInitialCamera",
    "cameraEls",
    "createDefaultCamera",
    "checkUserCamera",
    "cameraData",
    "defaultCameraEl",
    "newActiveCameraEl",
    "newCameraEl",
    "newCamera",
    "previousCamera",
    "defaultCameraWrapper",
    "originalRender",
    "spectatorCamera",
    "GeometryClass",
    "geometryInstance",
    "toBufferGeometry",
    "decrementCacheCount",
    "cacheCount",
    "incrementCacheCount",
    "doBuffer",
    "clearCache",
    "cachedGeometry",
    "dracoDecoderPath",
    "DEFAULT_LIGHT_ATTR",
    "defaultLightsEnabled",
    "defaultLights",
    "userDefinedLights",
    "setupDefaultLights",
    "removeDefaultLights",
    "ambientLight",
    "directionalLight",
    "calculateVideoCacheHash",
    "videoEl",
    "videoAttributes",
    "loadImageTexture",
    "doLoadImageTexture",
    "resolveTexture",
    "setTextureProperties",
    "statusText",
    "createVideoEl",
    "fixVideoAttributes",
    "controls",
    "isHLS",
    "textureCounts",
    "textureCache",
    "onMaterialTextureLoaded",
    "clearTextureCache",
    "loadImageCb",
    "loadVideoCb",
    "loadVideo",
    "loadCanvas",
    "childElementCount",
    "validateSrc",
    "handleImageTextureLoaded",
    "handleVideoTextureLoaded",
    "videoTextureResult",
    "hashVideo",
    "needsCorrectionBGRA",
    "needsCorrectionFlipY",
    "colorManagement",
    "colorOrTexture",
    "SHADOW_MAP_TYPE_MAP",
    "pcf",
    "pcfsoft",
    "isChrome",
    "updateControllerList",
    "throttledUpdateControllerList",
    "prevCount",
    "oldControllersLength",
    "prependedArgs",
    "defaultVec",
    "coordinate",
    "parseIfString",
    "OBJECT",
    "COORDINATE_KEYS",
    "isCoordinates",
    "isCoordinate",
    "getDebugNamespaceType",
    "getDebugNamespaceColor",
    "debugLib",
    "ls",
    "logs",
    "isTablet",
    "mockUserAgent",
    "isMobileVR",
    "requestDevice",
    "supportsSession",
    "_isMobile",
    "isNodeEnvironment",
    "delimiter",
    "propertyPathCache",
    "splitName",
    "deepAssign",
    "objectAssign",
    "isGearVR",
    "isOculusGo",
    "functionToThrottle",
    "minimumInterval",
    "optionalContext",
    "sinceLastTime",
    "throttleTick",
    "immediate",
    "later",
    "callNow",
    "arrayPool",
    "keysA",
    "keysB",
    "valA",
    "valB",
    "aVal",
    "bVal",
    "bKey",
    "isComparingObjects",
    "metaKey",
    "splitString",
    "getElData",
    "copyAttribute",
    "matchingElements",
    "allElements",
    "getInternetExplorerVersion",
    "appName",
    "HLS_MIMETYPES",
    "COLOR_MAPS",
    "Set",
    "dataName",
    "checkSetMap",
    "materialSrcs",
    "setMap",
    "has",
    "longType",
    "shortType",
    "defaultObjectFactory",
    "EMPTY_SLOT",
    "objectFactory",
    "objToUse",
    "nextFreeSlot",
    "objPool",
    "grow",
    "currentLength",
    "isImageCb",
    "isVideoCb",
    "checkIsImage",
    "isImage",
    "validatedUrls",
    "aCubemap",
    "cubemapSrcRegex",
    "parseUrl",
    "validateAndGetQuerySelector",
    "parsedSrc",
    "onResult",
    "contentType",
    "getResponseHeader",
    "checkIsImageFallback",
    "tester",
    "Image",
    "toCamelCase",
    "DASH_REGEX",
    "upperCase",
    "transformKeysToCamelCase",
    "camelKey",
    "styleParse",
    "getKeyValueChunks",
    "styleStringify",
    "keyCount",
    "parsedData",
    "hasUnclosedUrl",
    "nextSplit",
    "chunk",
    "isControllerPresentWebVR",
    "queryObject",
    "trackedControlsSystem",
    "filterControllerIndex",
    "isControllerPresentWebXR",
    "filterIdExact",
    "filterIdPrefix",
    "filterHand",
    "matchingControllerOccurence",
    "targetControllerMatch",
    "NUM_HANDS",
    "controllerHandedness",
    "AXIS_LABELS",
    "isPresent",
    "isControllerPresent",
    "axesMapping",
    "buttonType",
    "glStats",
    "_h",
    "_totalDrawArraysCalls",
    "_totalDrawElementsCalls",
    "_totalBindTexures",
    "_totalUseProgramCalls",
    "_totalFaces",
    "_totalVertices",
    "_totalPoints",
    "WebGLRenderingContext",
    "allcalls",
    "over",
    "drawelements",
    "drawarrays",
    "renderer.info.memory.geometries",
    "renderer.info.memory.textures",
    "renderer.info.programs",
    "renderer.info.render.calls",
    "renderer.info.render.triangles",
    "renderer.info.render.points",
    "BrowserStats",
    "_size",
    "log1024",
    "_usedJSHeapSize",
    "usedJSHeapSize",
    "_totalJSHeapSize",
    "totalJSHeapSize",
    "_values",
    "average",
    "avgMs",
    "_groups",
    "_fractions",
    "nowOffset",
    "rStats",
    "iterateKeys",
    "importCSS",
    "Graph",
    "_dom",
    "_defArg",
    "_draw",
    "alarm",
    "_current",
    "_max",
    "_ctx",
    "_alarmCanvas",
    "_elHeight",
    "_dotCanvas",
    "_def",
    "_dotCtx",
    "fillStyle",
    "fillRect",
    "globalAlpha",
    "_alarmCtx",
    "_elWidth",
    "draw",
    "StackGraph",
    "_num",
    "th",
    "_colours",
    "PerfCounter",
    "_average",
    "_accumValue",
    "_accumSamples",
    "_accumStart",
    "_averageValue",
    "_time",
    "_settings",
    "userTimingAPI",
    "_started",
    "_tick",
    "_spanValueText",
    "_graph",
    "_frame",
    "_total",
    "interpolate",
    "_set",
    "_spanId",
    "_spanValue",
    "textContent",
    "_div",
    "_perf",
    "idArg",
    "_perfCounters",
    "graph",
    "colours",
    "_cssRStats",
    "CSSPath",
    "_base",
    "legend",
    "searchString",
    "Util",
    "isIFrame",
    "appendQueryParameter",
    "getQueryParameter",
    "AndroidWakeLock",
    "iOSWakeLock",
    "getWakeLock"
    ],
    "mappings": "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",
    "file": "bundle.js",
    "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "module.exports={"name":"aframe","version":"0.9.2","description":"A web framework for building virtual reality experiences.","homepage":"https://aframe.io/","main":"dist/aframe-master.js","scripts":{"browserify":"browserify src/index.js -s 'AFRAME' -p browserify-derequire","build":"shx mkdir -p build/ && npm run browserify -- --debug -t [envify --INSPECTOR_VERSION dev] -o build/aframe.js","codecov":"codecov","dev":"npm run build && cross-env INSPECTOR_VERSION=dev node ./scripts/budo -t envify","dist":"node scripts/updateVersionLog.js && npm run dist:min && npm run dist:max","dist:max":"npm run browserify -s -- --debug | exorcist dist/aframe-master.js.map > dist/aframe-master.js","dist:min":"npm run browserify -s -- --debug -p [minifyify --map aframe-master.min.js.map --output dist/aframe-master.min.js.map] -o dist/aframe-master.min.js","docs":"markserv --dir docs --port 9001","preghpages":"node ./scripts/preghpages.js","ghpages":"ghpages -p gh-pages/","lint":"semistandard -v | snazzy","lint:fix":"semistandard --fix","precommit":"npm run lint","prepush":"node scripts/testOnlyCheck.js","prerelease":"node scripts/release.js 0.9.1 0.9.2","start":"npm run dev","start:https":"cross-env SSL=true npm run dev","test":"karma start ./tests/karma.conf.js","test:docs":"node scripts/docsLint.js","test:firefox":"npm test -- --browsers Firefox","test:chrome":"npm test -- --browsers Chrome","test:nobrowser":"NO_BROWSER=true npm test","test:node":"mocha --ui tdd tests/node"},"repository":"aframevr/aframe","license":"MIT","files":["dist/*","docs/**/*","src/**/*","vendor/**/*"],"dependencies":{"browserify-css":"^0.8.4","custom-event-polyfill":"^1.0.6","debug":"ngokevin/debug#noTimestamp","deep-assign":"^2.0.0","document-register-element":"dmarcos/document-register-element#8ccc532b7f3744be954574caf3072a5fd260ca90","envify":"^3.4.1","load-bmfont":"^1.2.3","object-assign":"^4.0.1","present":"0.0.6","promise-polyfill":"^3.1.0","style-attr":"^1.0.2","super-animejs":"^3.0.0","super-three":"^0.102.2","three-bmfont-text":"^2.1.0","webvr-polyfill":"^0.10.10"},"devDependencies":{"browserify":"^13.1.0","browserify-derequire":"^0.9.4","browserify-istanbul":"^2.0.0","budo":"^9.2.0","chai":"^3.5.0","chai-shallow-deep-equal":"^1.4.0","chalk":"^1.1.3","codecov":"^1.0.1","cross-env":"^5.0.1","exorcist":"^0.4.0","ghpages":"0.0.8","git-rev":"^0.2.1","glob":"^7.1.1","husky":"^0.11.7","istanbul":"^0.4.5","jsdom":"^9.11.0","karma":"1.4.1","karma-browserify":"^5.1.0","karma-chai-shallow-deep-equal":"0.0.4","karma-chrome-launcher":"^2.0.0","karma-coverage":"^1.1.1","karma-env-preprocessor":"^0.1.1","karma-firefox-launcher":"^1.0.0","karma-mocha":"^1.1.1","karma-mocha-reporter":"^2.1.0","karma-sinon-chai":"1.2.4","lolex":"^1.5.1","markserv":"github:sukima/markserv#feature/fix-broken-websoketio-link","minifyify":"^7.3.3","mocha":"^3.0.2","mozilla-download":"^1.1.1","replace-in-file":"^2.5.3","semistandard":"^9.0.0","shelljs":"^0.7.7","shx":"^0.2.2","sinon":"^1.17.5","sinon-chai":"2.8.0","snazzy":"^5.0.0","too-wordy":"ngokevin/too-wordy","uglifyjs":"^2.4.10","write-good":"^0.9.1"},"link":true,"browserify":{"transform":["browserify-css","envify"]},"semistandard":{"ignore":["build/**","dist/**","examples/**/shaders/*.js","**/vendor/**"]},"keywords":["3d","aframe","cardboard","components","oculus","three","three.js","rift","vive","vr","web-components","webvr"],"browserify-css":{"minify":true},"engines":{"node":">= 4.6.0","npm":"^2.15.9"}}",
    "var css = "html.a-fullscreen{bottom:0;left:0;position:fixed;right:0;top:0}html.a-fullscreen body{height:100%;margin:0;overflow:hidden;padding:0;width:100%}html.a-fullscreen .a-canvas{width:100%!important;height:100%!important;top:0!important;left:0!important;right:0!important;bottom:0!important;position:fixed!important}html:not(.a-fullscreen) .a-enter-vr{right:5px;bottom:5px}:-webkit-full-screen{background-color:transparent}.a-hidden{display:none!important}.a-canvas{height:100%;left:0;position:absolute;top:0;width:100%}.a-canvas.a-grab-cursor:hover{cursor:grab;cursor:-moz-grab;cursor:-webkit-grab}canvas.a-canvas.a-mouse-cursor-hover:hover{cursor:pointer}.a-inspector-loader{background-color:#ed3160;position:fixed;left:3px;top:3px;padding:6px 10px;color:#fff;text-decoration:none;font-size:12px;font-family:Roboto,sans-serif;text-align:center;z-index:99999;width:204px}@keyframes dots-1{from{opacity:0}25%{opacity:1}}@keyframes dots-2{from{opacity:0}50%{opacity:1}}@keyframes dots-3{from{opacity:0}75%{opacity:1}}@-webkit-keyframes dots-1{from{opacity:0}25%{opacity:1}}@-webkit-keyframes dots-2{from{opacity:0}50%{opacity:1}}@-webkit-keyframes dots-3{from{opacity:0}75%{opacity:1}}.a-inspector-loader .dots span{animation:dots-1 2s infinite steps(1);-webkit-animation:dots-1 2s infinite steps(1)}.a-inspector-loader .dots span:first-child+span{animation-name:dots-2;-webkit-animation-name:dots-2}.a-inspector-loader .dots span:first-child+span+span{animation-name:dots-3;-webkit-animation-name:dots-3}a-scene{display:block;position:relative;height:100%;width:100%}a-assets,a-scene audio,a-scene img,a-scene video{display:none}.a-enter-vr-modal,.a-orientation-modal{font-family:Consolas,Andale Mono,Courier New,monospace}.a-enter-vr-modal a{border-bottom:1px solid #fff;padding:2px 0;text-decoration:none;transition:.1s color ease-in}.a-enter-vr-modal a:hover{background-color:#fff;color:#111;padding:2px 4px;position:relative;left:-4px}.a-enter-vr{font-family:sans-serif,monospace;font-size:13px;width:100%;font-weight:200;line-height:16px;position:absolute;right:20px;bottom:20px}.a-enter-vr-button,.a-enter-vr-modal,.a-enter-vr-modal a{color:#fff}.a-enter-vr-button{background:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20245.82%20141.73%22%3E%3Cdefs%3E%3Cstyle%3E.a%7Bfill%3A%23fff%3Bfill-rule%3Aevenodd%3B%7D%3C%2Fstyle%3E%3C%2Fdefs%3E%3Ctitle%3Emask%3C%2Ftitle%3E%3Cpath%20class%3D%22a%22%20d%3D%22M175.56%2C111.37c-22.52%2C0-40.77-18.84-40.77-42.07S153%2C27.24%2C175.56%2C27.24s40.77%2C18.84%2C40.77%2C42.07S198.08%2C111.37%2C175.56%2C111.37ZM26.84%2C69.31c0-23.23%2C18.25-42.07%2C40.77-42.07s40.77%2C18.84%2C40.77%2C42.07-18.26%2C42.07-40.77%2C42.07S26.84%2C92.54%2C26.84%2C69.31ZM27.27%2C0C11.54%2C0%2C0%2C12.34%2C0%2C28.58V110.9c0%2C16.24%2C11.54%2C30.83%2C27.27%2C30.83H99.57c2.17%2C0%2C4.19-1.83%2C5.4-3.7L116.47%2C118a8%2C8%2C0%2C0%2C1%2C12.52-.18l11.51%2C20.34c1.2%2C1.86%2C3.22%2C3.61%2C5.39%2C3.61h72.29c15.74%2C0%2C27.63-14.6%2C27.63-30.83V28.58C245.82%2C12.34%2C233.93%2C0%2C218.19%2C0H27.27Z%22%2F%3E%3C%2Fsvg%3E) 50% 50%/70% 70% no-repeat rgba(0,0,0,.35);border:0;bottom:0;cursor:pointer;min-width:50px;min-height:30px;padding-right:5%;padding-top:4%;position:absolute;right:0;transition:background-color .05s ease;-webkit-transition:background-color .05s ease;z-index:9999}.a-enter-vr-button:active,.a-enter-vr-button:hover{background-color:#666}[data-a-enter-vr-no-webvr] .a-enter-vr-button{border-color:#666;opacity:.65}[data-a-enter-vr-no-webvr] .a-enter-vr-button:active,[data-a-enter-vr-no-webvr] .a-enter-vr-button:hover{background-color:rgba(0,0,0,.35);cursor:not-allowed}.a-enter-vr-modal{background-color:#666;border-radius:0;display:none;min-height:32px;margin-right:70px;padding:9px;width:280px;right:2%;position:absolute}.a-enter-vr-modal:after{border-bottom:10px solid transparent;border-left:10px solid #666;border-top:10px solid transparent;display:inline-block;content:'';position:absolute;right:-5px;top:5px;width:0;height:0}.a-enter-vr-modal a,.a-enter-vr-modal p{display:inline}.a-enter-vr-modal p{margin:0}.a-enter-vr-modal p:after{content:' '}[data-a-enter-vr-no-headset].a-enter-vr:hover .a-enter-vr-modal,[data-a-enter-vr-no-webvr].a-enter-vr:hover .a-enter-vr-modal{display:block}.a-orientation-modal{background:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20xmlns%3Axlink%3D%22http%3A//www.w3.org/1999/xlink%22%20version%3D%221.1%22%20x%3D%220px%22%20y%3D%220px%22%20viewBox%3D%220%200%2090%2090%22%20enable-background%3D%22new%200%200%2090%2090%22%20xml%3Aspace%3D%22preserve%22%3E%3Cpolygon%20points%3D%220%2C0%200%2C0%200%2C0%20%22%3E%3C/polygon%3E%3Cg%3E%3Cpath%20d%3D%22M71.545%2C48.145h-31.98V20.743c0-2.627-2.138-4.765-4.765-4.765H18.456c-2.628%2C0-4.767%2C2.138-4.767%2C4.765v42.789%20%20%20c0%2C2.628%2C2.138%2C4.766%2C4.767%2C4.766h5.535v0.959c0%2C2.628%2C2.138%2C4.765%2C4.766%2C4.765h42.788c2.628%2C0%2C4.766-2.137%2C4.766-4.765V52.914%20%20%20C76.311%2C50.284%2C74.173%2C48.145%2C71.545%2C48.145z%20M18.455%2C16.935h16.344c2.1%2C0%2C3.808%2C1.708%2C3.808%2C3.808v27.401H37.25V22.636%20%20%20c0-0.264-0.215-0.478-0.479-0.478H16.482c-0.264%2C0-0.479%2C0.214-0.479%2C0.478v36.585c0%2C0.264%2C0.215%2C0.478%2C0.479%2C0.478h7.507v7.644%20%20%20h-5.534c-2.101%2C0-3.81-1.709-3.81-3.81V20.743C14.645%2C18.643%2C16.354%2C16.935%2C18.455%2C16.935z%20M16.96%2C23.116h19.331v25.031h-7.535%20%20%20c-2.628%2C0-4.766%2C2.139-4.766%2C4.768v5.828h-7.03V23.116z%20M71.545%2C73.064H28.757c-2.101%2C0-3.81-1.708-3.81-3.808V52.914%20%20%20c0-2.102%2C1.709-3.812%2C3.81-3.812h42.788c2.1%2C0%2C3.809%2C1.71%2C3.809%2C3.812v16.343C75.354%2C71.356%2C73.645%2C73.064%2C71.545%2C73.064z%22%3E%3C/path%3E%3Cpath%20d%3D%22M28.919%2C58.424c-1.466%2C0-2.659%2C1.193-2.659%2C2.66c0%2C1.466%2C1.193%2C2.658%2C2.659%2C2.658c1.468%2C0%2C2.662-1.192%2C2.662-2.658%20%20%20C31.581%2C59.617%2C30.387%2C58.424%2C28.919%2C58.424z%20M28.919%2C62.786c-0.939%2C0-1.703-0.764-1.703-1.702c0-0.939%2C0.764-1.704%2C1.703-1.704%20%20%20c0.94%2C0%2C1.705%2C0.765%2C1.705%2C1.704C30.623%2C62.022%2C29.858%2C62.786%2C28.919%2C62.786z%22%3E%3C/path%3E%3Cpath%20d%3D%22M69.654%2C50.461H33.069c-0.264%2C0-0.479%2C0.215-0.479%2C0.479v20.288c0%2C0.264%2C0.215%2C0.478%2C0.479%2C0.478h36.585%20%20%20c0.263%2C0%2C0.477-0.214%2C0.477-0.478V50.939C70.131%2C50.676%2C69.917%2C50.461%2C69.654%2C50.461z%20M69.174%2C51.417V70.75H33.548V51.417H69.174z%22%3E%3C/path%3E%3Cpath%20d%3D%22M45.201%2C30.296c6.651%2C0%2C12.233%2C5.351%2C12.551%2C11.977l-3.033-2.638c-0.193-0.165-0.507-0.142-0.675%2C0.048%20%20%20c-0.174%2C0.198-0.153%2C0.501%2C0.045%2C0.676l3.883%2C3.375c0.09%2C0.075%2C0.198%2C0.115%2C0.312%2C0.115c0.141%2C0%2C0.273-0.061%2C0.362-0.166%20%20%20l3.371-3.877c0.173-0.2%2C0.151-0.502-0.047-0.675c-0.194-0.166-0.508-0.144-0.676%2C0.048l-2.592%2C2.979%20%20%20c-0.18-3.417-1.629-6.605-4.099-9.001c-2.538-2.461-5.877-3.817-9.404-3.817c-0.264%2C0-0.479%2C0.215-0.479%2C0.479%20%20%20C44.72%2C30.083%2C44.936%2C30.296%2C45.201%2C30.296z%22%3E%3C/path%3E%3C/g%3E%3C/svg%3E) center/50% 50% no-repeat rgba(244,244,244,1);bottom:0;font-size:14px;font-weight:600;left:0;line-height:20px;right:0;position:fixed;top:0;z-index:9999999}.a-orientation-modal:after{color:#666;content:\"Insert phone into Cardboard holder.\";display:block;position:absolute;text-align:center;top:70%;transform:translateY(-70%);width:100%}.a-orientation-modal button{background:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20xmlns%3Axlink%3D%22http%3A//www.w3.org/1999/xlink%22%20version%3D%221.1%22%20x%3D%220px%22%20y%3D%220px%22%20viewBox%3D%220%200%20100%20100%22%20enable-background%3D%22new%200%200%20100%20100%22%20xml%3Aspace%3D%22preserve%22%3E%3Cpath%20fill%3D%22%23000000%22%20d%3D%22M55.209%2C50l17.803-17.803c1.416-1.416%2C1.416-3.713%2C0-5.129c-1.416-1.417-3.713-1.417-5.129%2C0L50.08%2C44.872%20%20L32.278%2C27.069c-1.416-1.417-3.714-1.417-5.129%2C0c-1.417%2C1.416-1.417%2C3.713%2C0%2C5.129L44.951%2C50L27.149%2C67.803%20%20c-1.417%2C1.416-1.417%2C3.713%2C0%2C5.129c0.708%2C0.708%2C1.636%2C1.062%2C2.564%2C1.062c0.928%2C0%2C1.856-0.354%2C2.564-1.062L50.08%2C55.13l17.803%2C17.802%20%20c0.708%2C0.708%2C1.637%2C1.062%2C2.564%2C1.062s1.856-0.354%2C2.564-1.062c1.416-1.416%2C1.416-3.713%2C0-5.129L55.209%2C50z%22%3E%3C/path%3E%3C/svg%3E) no-repeat;border:none;height:50px;text-indent:-9999px;width:50px}.a-loader-title{background-color:rgba(0,0,0,.6);font-family:sans-serif,monospace;text-align:center;font-size:20px;height:50px;font-weight:300;line-height:50px;position:absolute;right:0;left:0;top:0;color:#fff}"; (require("browserify-css").createStyle(css, { "href": "src/style/aframe.css"})); module.exports = css;",
    "var css = ".rs-base{background-color:#333;color:#fafafa;border-radius:0;font:10px monospace;left:5px;line-height:1em;opacity:.85;overflow:hidden;padding:10px;position:fixed;top:5px;width:300px;z-index:10000}.rs-base div.hidden{display:none}.rs-base h1{color:#fff;cursor:pointer;font-size:1.4em;font-weight:300;margin:0 0 5px;padding:0}.rs-group{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-flex-direction:column-reverse;flex-direction:column-reverse;margin-bottom:5px}.rs-group:last-child{margin-bottom:0}.rs-counter-base{align-items:center;display:-webkit-box;display:-webkit-flex;display:flex;height:10px;-webkit-justify-content:space-between;justify-content:space-between;margin:2px 0}.rs-counter-base.alarm{color:#b70000;text-shadow:0 0 0 #b70000,0 0 1px #fff,0 0 1px #fff,0 0 2px #fff,0 0 2px #fff,0 0 3px #fff,0 0 3px #fff,0 0 4px #fff,0 0 4px #fff}.rs-counter-id{font-weight:300;-webkit-box-ordinal-group:0;-webkit-order:0;order:0;width:54px}.rs-counter-value{font-weight:300;-webkit-box-ordinal-group:1;-webkit-order:1;order:1;text-align:right;width:35px}.rs-canvas{-webkit-box-ordinal-group:2;-webkit-order:2;order:2}@media (min-width:480px){.rs-base{left:20px;top:20px}}"; (require("browserify-css").createStyle(css, { "href": "src/style/rStats.css"})); module.exports = css;",
    "var str = Object.prototype.toString module.exports = anArray function anArray(arr) { return ( arr.BYTES_PER_ELEMENT && str.call(arr.buffer) === '[object ArrayBuffer]' || Array.isArray(arr) ) } ",
    "module.exports = function numtype(num, def) { return typeof num === 'number' ? num : (typeof def === 'number' ? def : 0) }",
    "'use strict' exports.byteLength = byteLength exports.toByteArray = toByteArray exports.fromByteArray = fromByteArray var lookup = [] var revLookup = [] var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' for (var i = 0, len = code.length; i < len; ++i) { lookup[i] = code[i] revLookup[code.charCodeAt(i)] = i } // Support decoding URL-safe base64 strings, as Node.js does. // See: https://en.wikipedia.org/wiki/Base64#URL_applications revLookup['-'.charCodeAt(0)] = 62 revLookup['_'.charCodeAt(0)] = 63 function getLens (b64) { var len = b64.length if (len % 4 > 0) { throw new Error('Invalid string. Length must be a multiple of 4') } // Trim off extra bytes after placeholder bytes are found // See: https://github.com/beatgammit/base64-js/issues/42 var validLen = b64.indexOf('=') if (validLen === -1) validLen = len var placeHoldersLen = validLen === len ? 0 : 4 - (validLen % 4) return [validLen, placeHoldersLen] } // base64 is 4/3 + up to two characters of the original data function byteLength (b64) { var lens = getLens(b64) var validLen = lens[0] var placeHoldersLen = lens[1] return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen } function _byteLength (b64, validLen, placeHoldersLen) { return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen } function toByteArray (b64) { var tmp var lens = getLens(b64) var validLen = lens[0] var placeHoldersLen = lens[1] var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen)) var curByte = 0 // if there are placeholders, only get up to the last complete 4 chars var len = placeHoldersLen > 0 ? validLen - 4 : validLen for (var i = 0; i < len; i += 4) { tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)] arr[curByte++] = (tmp >> 16) & 0xFF arr[curByte++] = (tmp >> 8) & 0xFF arr[curByte++] = tmp & 0xFF } if (placeHoldersLen === 2) { tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4) arr[curByte++] = tmp & 0xFF } if (placeHoldersLen === 1) { tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2) arr[curByte++] = (tmp >> 8) & 0xFF arr[curByte++] = tmp & 0xFF } return arr } function tripletToBase64 (num) { return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F] } function encodeChunk (uint8, start, end) { var tmp var output = [] for (var i = start; i < end; i += 3) { tmp = ((uint8[i] << 16) & 0xFF0000) + ((uint8[i + 1] << 8) & 0xFF00) + (uint8[i + 2] & 0xFF) output.push(tripletToBase64(tmp)) } return output.join('') } function fromByteArray (uint8) { var tmp var len = uint8.length var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes var parts = [] var maxChunkLength = 16383 // must be multiple of 3 // go through the array every three bytes, we'll deal with trailing stuff later for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) { parts.push(encodeChunk( uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength) )) } // pad the end with zeros, but make sure to not forget the extra bytes if (extraBytes === 1) { tmp = uint8[len - 1] parts.push( lookup[tmp >> 2] + lookup[(tmp << 4) & 0x3F] + '==' ) } else if (extraBytes === 2) { tmp = (uint8[len - 2] << 8) + uint8[len - 1] parts.push( lookup[tmp >> 10] + lookup[(tmp >> 4) & 0x3F] + lookup[(tmp << 2) & 0x3F] + '=' ) } return parts.join('') } ",
    "'use strict'; // For more information about browser field, check out the browser field at https://github.com/substack/browserify-handbook#browser-field. module.exports = { // Create a <link> tag with optional data attributes createLink: function(href, attributes) { var head = document.head || document.getElementsByTagName('head')[0]; var link = document.createElement('link'); link.href = href; link.rel = 'stylesheet'; for (var key in attributes) { if ( ! attributes.hasOwnProperty(key)) { continue; } var value = attributes[key]; link.setAttribute('data-' + key, value); } head.appendChild(link); }, // Create a <style> tag with optional data attributes createStyle: function(cssText, attributes) { var head = document.head || document.getElementsByTagName('head')[0], style = document.createElement('style'); style.type = 'text/css'; for (var key in attributes) { if ( ! attributes.hasOwnProperty(key)) { continue; } var value = attributes[key]; style.setAttribute('data-' + key, value); } if (style.sheet) { // for jsdom and IE9+ style.innerHTML = cssText; style.sheet.cssText = cssText; head.appendChild(style); } else if (style.styleSheet) { // for IE8 and below head.appendChild(style); style.styleSheet.cssText = cssText; } else { // for Chrome, Firefox, and Safari style.appendChild(document.createTextNode(cssText)); head.appendChild(style); } } }; ",
    "// shim for using process in browser var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it // don't break things. But we need to wrap it in a try catch in case it is // wrapped in strict mode code which doesn't define any globals. It's inside a // function because try/catches deoptimize in certain engines. var cachedSetTimeout; var cachedClearTimeout; function defaultSetTimout() { throw new Error('setTimeout has not been defined'); } function defaultClearTimeout () { throw new Error('clearTimeout has not been defined'); } (function () { try { if (typeof setTimeout === 'function') { cachedSetTimeout = setTimeout; } else { cachedSetTimeout = defaultSetTimout; } } catch (e) { cachedSetTimeout = defaultSetTimout; } try { if (typeof clearTimeout === 'function') { cachedClearTimeout = clearTimeout; } else { cachedClearTimeout = defaultClearTimeout; } } catch (e) { cachedClearTimeout = defaultClearTimeout; } } ()) function runTimeout(fun) { if (cachedSetTimeout === setTimeout) { //normal enviroments in sane situations return setTimeout(fun, 0); } // if setTimeout wasn't available but was latter defined if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) { cachedSetTimeout = setTimeout; return setTimeout(fun, 0); } try { // when when somebody has screwed with setTimeout but no I.E. maddness return cachedSetTimeout(fun, 0); } catch(e){ try { // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally return cachedSetTimeout.call(null, fun, 0); } catch(e){ // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error return cachedSetTimeout.call(this, fun, 0); } } } function runClearTimeout(marker) { if (cachedClearTimeout === clearTimeout) { //normal enviroments in sane situations return clearTimeout(marker); } // if clearTimeout wasn't available but was latter defined if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) { cachedClearTimeout = clearTimeout; return clearTimeout(marker); } try { // when when somebody has screwed with setTimeout but no I.E. maddness return cachedClearTimeout(marker); } catch (e){ try { // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally return cachedClearTimeout.call(null, marker); } catch (e){ // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error. // Some versions of I.E. have different rules for clearTimeout vs setTimeout return cachedClearTimeout.call(this, marker); } } } var queue = []; var draining = false; var currentQueue; var queueIndex = -1; function cleanUpNextTick() { if (!draining || !currentQueue) { return; } draining = false; if (currentQueue.length) { queue = currentQueue.concat(queue); } else { queueIndex = -1; } if (queue.length) { drainQueue(); } } function drainQueue() { if (draining) { return; } var timeout = runTimeout(cleanUpNextTick); draining = true; var len = queue.length; while(len) { currentQueue = queue; queue = []; while (++queueIndex < len) { if (currentQueue) { currentQueue[queueIndex].run(); } } queueIndex = -1; len = queue.length; } currentQueue = null; draining = false; runClearTimeout(timeout); } process.nextTick = function (fun) { var args = new Array(arguments.length - 1); if (arguments.length > 1) { for (var i = 1; i < arguments.length; i++) { args[i - 1] = arguments[i]; } } queue.push(new Item(fun, args)); if (queue.length === 1 && !draining) { runTimeout(drainQueue); } }; // v8 likes predictible objects function Item(fun, array) { this.fun = fun; this.array = array; } Item.prototype.run = function () { this.fun.apply(null, this.array); }; process.title = 'browser'; process.browser = true; process.env = {}; process.argv = []; process.version = ''; // empty string to avoid regexp issues process.versions = {}; function noop() {} process.on = noop; process.addListener = noop; process.once = noop; process.off = noop; process.removeListener = noop; process.removeAllListeners = noop; process.emit = noop; process.prependListener = noop; process.prependOnceListener = noop; process.listeners = function (name) { return [] } process.binding = function (name) { throw new Error('process.binding is not supported'); }; process.cwd = function () { return '/' }; process.chdir = function (dir) { throw new Error('process.chdir is not supported'); }; process.umask = function() { return 0; }; ",
    "var Buffer = require('buffer').Buffer; // for use with browserify module.exports = function (a, b) { if (!Buffer.isBuffer(a)) return undefined; if (!Buffer.isBuffer(b)) return undefined; if (typeof a.equals === 'function') return a.equals(b); if (a.length !== b.length) return false; for (var i = 0; i < a.length; i++) { if (a[i] !== b[i]) return false; } return true; }; ",
    "/*! * The buffer module from node.js, for the browser. * * @author Feross Aboukhadijeh <feross@feross.org> <http://feross.org> * @license MIT */ /* eslint-disable no-proto */ 'use strict' var base64 = require('base64-js') var ieee754 = require('ieee754') var isArray = require('isarray') exports.Buffer = Buffer exports.SlowBuffer = SlowBuffer exports.INSPECT_MAX_BYTES = 50 /** * If `Buffer.TYPED_ARRAY_SUPPORT`: * === true Use Uint8Array implementation (fastest) * === false Use Object implementation (most compatible, even IE6) * * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+, * Opera 11.6+, iOS 4.2+. * * Due to various browser bugs, sometimes the Object implementation will be used even * when the browser supports typed arrays. * * Note: * * - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances, * See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438. * * - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function. * * - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of * incorrect length in some situations. * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they * get the Object implementation, which is slower but behaves correctly. */ Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport() /* * Export kMaxLength after typed array support is determined. */ exports.kMaxLength = kMaxLength() function typedArraySupport () { try { var arr = new Uint8Array(1) arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }} return arr.foo() === 42 && // typed array instances can be augmented typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray` arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray` } catch (e) { return false } } function kMaxLength () { return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff } function createBuffer (that, length) { if (kMaxLength() < length) { throw new RangeError('Invalid typed array length') } if (Buffer.TYPED_ARRAY_SUPPORT) { // Return an augmented `Uint8Array` instance, for best performance that = new Uint8Array(length) that.__proto__ = Buffer.prototype } else { // Fallback: Return an object instance of the Buffer class if (that === null) { that = new Buffer(length) } that.length = length } return that } /** * The Buffer constructor returns instances of `Uint8Array` that have their * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of * `Uint8Array`, so the returned instances will have all the node `Buffer` methods * and the `Uint8Array` methods. Square bracket notation works as expected -- it * returns a single octet. * * The `Uint8Array` prototype remains unmodified. */ function Buffer (arg, encodingOrOffset, length) { if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) { return new Buffer(arg, encodingOrOffset, length) } // Common case. if (typeof arg === 'number') { if (typeof encodingOrOffset === 'string') { throw new Error( 'If encoding is specified then the first argument must be a string' ) } return allocUnsafe(this, arg) } return from(this, arg, encodingOrOffset, length) } Buffer.poolSize = 8192 // not used by this implementation // TODO: Legacy, not needed anymore. Remove in next major version. Buffer._augment = function (arr) { arr.__proto__ = Buffer.prototype return arr } function from (that, value, encodingOrOffset, length) { if (typeof value === 'number') { throw new TypeError('"value" argument must not be a number') } if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) { return fromArrayBuffer(that, value, encodingOrOffset, length) } if (typeof value === 'string') { return fromString(that, value, encodingOrOffset) } return fromObject(that, value) } /** * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError * if value is a number. * Buffer.from(str[, encoding]) * Buffer.from(array) * Buffer.from(buffer) * Buffer.from(arrayBuffer[, byteOffset[, length]]) **/ Buffer.from = function (value, encodingOrOffset, length) { return from(null, value, encodingOrOffset, length) } if (Buffer.TYPED_ARRAY_SUPPORT) { Buffer.prototype.__proto__ = Uint8Array.prototype Buffer.__proto__ = Uint8Array if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) { // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97 Object.defineProperty(Buffer, Symbol.species, { value: null, configurable: true }) } } function assertSize (size) { if (typeof size !== 'number') { throw new TypeError('"size" argument must be a number') } else if (size < 0) { throw new RangeError('"size" argument must not be negative') } } function alloc (that, size, fill, encoding) { assertSize(size) if (size <= 0) { return createBuffer(that, size) } if (fill !== undefined) { // Only pay attention to encoding if it's a string. This // prevents accidentally sending in a number that would // be interpretted as a start offset. return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill) } return createBuffer(that, size) } /** * Creates a new filled Buffer instance. * alloc(size[, fill[, encoding]]) **/ Buffer.alloc = function (size, fill, encoding) { return alloc(null, size, fill, encoding) } function allocUnsafe (that, size) { assertSize(size) that = createBuffer(that, size < 0 ? 0 : checked(size) | 0) if (!Buffer.TYPED_ARRAY_SUPPORT) { for (var i = 0; i < size; ++i) { that[i] = 0 } } return that } /** * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance. * */ Buffer.allocUnsafe = function (size) { return allocUnsafe(null, size) } /** * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance. */ Buffer.allocUnsafeSlow = function (size) { return allocUnsafe(null, size) } function fromString (that, string, encoding) { if (typeof encoding !== 'string' || encoding === '') { encoding = 'utf8' } if (!Buffer.isEncoding(encoding)) { throw new TypeError('"encoding" must be a valid string encoding') } var length = byteLength(string, encoding) | 0 that = createBuffer(that, length) var actual = that.write(string, encoding) if (actual !== length) { // Writing a hex string, for example, that contains invalid characters will // cause everything after the first invalid character to be ignored. (e.g. // 'abxxcd' will be treated as 'ab') that = that.slice(0, actual) } return that } function fromArrayLike (that, array) { var length = array.length < 0 ? 0 : checked(array.length) | 0 that = createBuffer(that, length) for (var i = 0; i < length; i += 1) { that[i] = array[i] & 255 } return that } function fromArrayBuffer (that, array, byteOffset, length) { array.byteLength // this throws if `array` is not a valid ArrayBuffer if (byteOffset < 0 || array.byteLength < byteOffset) { throw new RangeError('\'offset\' is out of bounds') } if (array.byteLength < byteOffset + (length || 0)) { throw new RangeError('\'length\' is out of bounds') } if (byteOffset === undefined && length === undefined) { array = new Uint8Array(array) } else if (length === undefined) { array = new Uint8Array(array, byteOffset) } else { array = new Uint8Array(array, byteOffset, length) } if (Buffer.TYPED_ARRAY_SUPPORT) { // Return an augmented `Uint8Array` instance, for best performance that = array that.__proto__ = Buffer.prototype } else { // Fallback: Return an object instance of the Buffer class that = fromArrayLike(that, array) } return that } function fromObject (that, obj) { if (Buffer.isBuffer(obj)) { var len = checked(obj.length) | 0 that = createBuffer(that, len) if (that.length === 0) { return that } obj.copy(that, 0, 0, len) return that } if (obj) { if ((typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer) || 'length' in obj) { if (typeof obj.length !== 'number' || isnan(obj.length)) { return createBuffer(that, 0) } return fromArrayLike(that, obj) } if (obj.type === 'Buffer' && isArray(obj.data)) { return fromArrayLike(that, obj.data) } } throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.') } function checked (length) { // Note: cannot use `length < kMaxLength()` here because that fails when // length is NaN (which is otherwise coerced to zero.) if (length >= kMaxLength()) { throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes') } return length | 0 } function SlowBuffer (length) { if (+length != length) { // eslint-disable-line eqeqeq length = 0 } return Buffer.alloc(+length) } Buffer.isBuffer = function isBuffer (b) { return !!(b != null && b._isBuffer) } Buffer.compare = function compare (a, b) { if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) { throw new TypeError('Arguments must be Buffers') } if (a === b) return 0 var x = a.length var y = b.length for (var i = 0, len = Math.min(x, y); i < len; ++i) { if (a[i] !== b[i]) { x = a[i] y = b[i] break } } if (x < y) return -1 if (y < x) return 1 return 0 } Buffer.isEncoding = function isEncoding (encoding) { switch (String(encoding).toLowerCase()) { case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'latin1': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': return true default: return false } } Buffer.concat = function concat (list, length) { if (!isArray(list)) { throw new TypeError('"list" argument must be an Array of Buffers') } if (list.length === 0) { return Buffer.alloc(0) } var i if (length === undefined) { length = 0 for (i = 0; i < list.length; ++i) { length += list[i].length } } var buffer = Buffer.allocUnsafe(length) var pos = 0 for (i = 0; i < list.length; ++i) { var buf = list[i] if (!Buffer.isBuffer(buf)) { throw new TypeError('"list" argument must be an Array of Buffers') } buf.copy(buffer, pos) pos += buf.length } return buffer } function byteLength (string, encoding) { if (Buffer.isBuffer(string)) { return string.length } if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) { return string.byteLength } if (typeof string !== 'string') { string = '' + string } var len = string.length if (len === 0) return 0 // Use a for loop to avoid recursion var loweredCase = false for (;;) { switch (encoding) { case 'ascii': case 'latin1': case 'binary': return len case 'utf8': case 'utf-8': case undefined: return utf8ToBytes(string).length case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': return len * 2 case 'hex': return len >>> 1 case 'base64': return base64ToBytes(string).length default: if (loweredCase) return utf8ToBytes(string).length // assume utf8 encoding = ('' + encoding).toLowerCase() loweredCase = true } } } Buffer.byteLength = byteLength function slowToString (encoding, start, end) { var loweredCase = false // No need to verify that "this.length <= MAX_UINT32" since it's a read-only // property of a typed array. // This behaves neither like String nor Uint8Array in that we set start/end // to their upper/lower bounds if the value passed is out of range. // undefined is handled specially as per ECMA-262 6th Edition, // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization. if (start === undefined || start < 0) { start = 0 } // Return early if start > this.length. Done here to prevent potential uint32 // coercion fail below. if (start > this.length) { return '' } if (end === undefined || end > this.length) { end = this.length } if (end <= 0) { return '' } // Force coersion to uint32. This will also coerce falsey/NaN values to 0. end >>>= 0 start >>>= 0 if (end <= start) { return '' } if (!encoding) encoding = 'utf8' while (true) { switch (encoding) { case 'hex': return hexSlice(this, start, end) case 'utf8': case 'utf-8': return utf8Slice(this, start, end) case 'ascii': return asciiSlice(this, start, end) case 'latin1': case 'binary': return latin1Slice(this, start, end) case 'base64': return base64Slice(this, start, end) case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': return utf16leSlice(this, start, end) default: if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding) encoding = (encoding + '').toLowerCase() loweredCase = true } } } // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect // Buffer instances. Buffer.prototype._isBuffer = true function swap (b, n, m) { var i = b[n] b[n] = b[m] b[m] = i } Buffer.prototype.swap16 = function swap16 () { var len = this.length if (len % 2 !== 0) { throw new RangeError('Buffer size must be a multiple of 16-bits') } for (var i = 0; i < len; i += 2) { swap(this, i, i + 1) } return this } Buffer.prototype.swap32 = function swap32 () { var len = this.length if (len % 4 !== 0) { throw new RangeError('Buffer size must be a multiple of 32-bits') } for (var i = 0; i < len; i += 4) { swap(this, i, i + 3) swap(this, i + 1, i + 2) } return this } Buffer.prototype.swap64 = function swap64 () { var len = this.length if (len % 8 !== 0) { throw new RangeError('Buffer size must be a multiple of 64-bits') } for (var i = 0; i < len; i += 8) { swap(this, i, i + 7) swap(this, i + 1, i + 6) swap(this, i + 2, i + 5) swap(this, i + 3, i + 4) } return this } Buffer.prototype.toString = function toString () { var length = this.length | 0 if (length === 0) return '' if (arguments.length === 0) return utf8Slice(this, 0, length) return slowToString.apply(this, arguments) } Buffer.prototype.equals = function equals (b) { if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer') if (this === b) return true return Buffer.compare(this, b) === 0 } Buffer.prototype.inspect = function inspect () { var str = '' var max = exports.INSPECT_MAX_BYTES if (this.length > 0) { str = this.toString('hex', 0, max).match(/.{2}/g).join(' ') if (this.length > max) str += ' ... ' } return '<Buffer ' + str + '>' } Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) { if (!Buffer.isBuffer(target)) { throw new TypeError('Argument must be a Buffer') } if (start === undefined) { start = 0 } if (end === undefined) { end = target ? target.length : 0 } if (thisStart === undefined) { thisStart = 0 } if (thisEnd === undefined) { thisEnd = this.length } if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) { throw new RangeError('out of range index') } if (thisStart >= thisEnd && start >= end) { return 0 } if (thisStart >= thisEnd) { return -1 } if (start >= end) { return 1 } start >>>= 0 end >>>= 0 thisStart >>>= 0 thisEnd >>>= 0 if (this === target) return 0 var x = thisEnd - thisStart var y = end - start var len = Math.min(x, y) var thisCopy = this.slice(thisStart, thisEnd) var targetCopy = target.slice(start, end) for (var i = 0; i < len; ++i) { if (thisCopy[i] !== targetCopy[i]) { x = thisCopy[i] y = targetCopy[i] break } } if (x < y) return -1 if (y < x) return 1 return 0 } // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`, // OR the last index of `val` in `buffer` at offset <= `byteOffset`. // // Arguments: // - buffer - a Buffer to search // - val - a string, Buffer, or number // - byteOffset - an index into `buffer`; will be clamped to an int32 // - encoding - an optional encoding, relevant is val is a string // - dir - true for indexOf, false for lastIndexOf function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) { // Empty buffer means no match if (buffer.length === 0) return -1 // Normalize byteOffset if (typeof byteOffset === 'string') { encoding = byteOffset byteOffset = 0 } else if (byteOffset > 0x7fffffff) { byteOffset = 0x7fffffff } else if (byteOffset < -0x80000000) { byteOffset = -0x80000000 } byteOffset = +byteOffset // Coerce to Number. if (isNaN(byteOffset)) { // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer byteOffset = dir ? 0 : (buffer.length - 1) } // Normalize byteOffset: negative offsets start from the end of the buffer if (byteOffset < 0) byteOffset = buffer.length + byteOffset if (byteOffset >= buffer.length) { if (dir) return -1 else byteOffset = buffer.length - 1 } else if (byteOffset < 0) { if (dir) byteOffset = 0 else return -1 } // Normalize val if (typeof val === 'string') { val = Buffer.from(val, encoding) } // Finally, search either indexOf (if dir is true) or lastIndexOf if (Buffer.isBuffer(val)) { // Special case: looking for empty string/buffer always fails if (val.length === 0) { return -1 } return arrayIndexOf(buffer, val, byteOffset, encoding, dir) } else if (typeof val === 'number') { val = val & 0xFF // Search for a byte value [0-255] if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') { if (dir) { return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset) } else { return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset) } } return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir) } throw new TypeError('val must be string, number or Buffer') } function arrayIndexOf (arr, val, byteOffset, encoding, dir) { var indexSize = 1 var arrLength = arr.length var valLength = val.length if (encoding !== undefined) { encoding = String(encoding).toLowerCase() if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') { if (arr.length < 2 || val.length < 2) { return -1 } indexSize = 2 arrLength /= 2 valLength /= 2 byteOffset /= 2 } } function read (buf, i) { if (indexSize === 1) { return buf[i] } else { return buf.readUInt16BE(i * indexSize) } } var i if (dir) { var foundIndex = -1 for (i = byteOffset; i < arrLength; i++) { if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) { if (foundIndex === -1) foundIndex = i if (i - foundIndex + 1 === valLength) return foundIndex * indexSize } else { if (foundIndex !== -1) i -= i - foundIndex foundIndex = -1 } } } else { if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength for (i = byteOffset; i >= 0; i--) { var found = true for (var j = 0; j < valLength; j++) { if (read(arr, i + j) !== read(val, j)) { found = false break } } if (found) return i } } return -1 } Buffer.prototype.includes = function includes (val, byteOffset, encoding) { return this.indexOf(val, byteOffset, encoding) !== -1 } Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) { return bidirectionalIndexOf(this, val, byteOffset, encoding, true) } Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) { return bidirectionalIndexOf(this, val, byteOffset, encoding, false) } function hexWrite (buf, string, offset, length) { offset = Number(offset) || 0 var remaining = buf.length - offset if (!length) { length = remaining } else { length = Number(length) if (length > remaining) { length = remaining } } // must be an even number of digits var strLen = string.length if (strLen % 2 !== 0) throw new TypeError('Invalid hex string') if (length > strLen / 2) { length = strLen / 2 } for (var i = 0; i < length; ++i) { var parsed = parseInt(string.substr(i * 2, 2), 16) if (isNaN(parsed)) return i buf[offset + i] = parsed } return i } function utf8Write (buf, string, offset, length) { return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length) } function asciiWrite (buf, string, offset, length) { return blitBuffer(asciiToBytes(string), buf, offset, length) } function latin1Write (buf, string, offset, length) { return asciiWrite(buf, string, offset, length) } function base64Write (buf, string, offset, length) { return blitBuffer(base64ToBytes(string), buf, offset, length) } function ucs2Write (buf, string, offset, length) { return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length) } Buffer.prototype.write = function write (string, offset, length, encoding) { // Buffer#write(string) if (offset === undefined) { encoding = 'utf8' length = this.length offset = 0 // Buffer#write(string, encoding) } else if (length === undefined && typeof offset === 'string') { encoding = offset length = this.length offset = 0 // Buffer#write(string, offset[, length][, encoding]) } else if (isFinite(offset)) { offset = offset | 0 if (isFinite(length)) { length = length | 0 if (encoding === undefined) encoding = 'utf8' } else { encoding = length length = undefined } // legacy write(string, encoding, offset, length) - remove in v0.13 } else { throw new Error( 'Buffer.write(string, encoding, offset[, length]) is no longer supported' ) } var remaining = this.length - offset if (length === undefined || length > remaining) length = remaining if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) { throw new RangeError('Attempt to write outside buffer bounds') } if (!encoding) encoding = 'utf8' var loweredCase = false for (;;) { switch (encoding) { case 'hex': return hexWrite(this, string, offset, length) case 'utf8': case 'utf-8': return utf8Write(this, string, offset, length) case 'ascii': return asciiWrite(this, string, offset, length) case 'latin1': case 'binary': return latin1Write(this, string, offset, length) case 'base64': // Warning: maxLength not taken into account in base64Write return base64Write(this, string, offset, length) case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': return ucs2Write(this, string, offset, length) default: if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding) encoding = ('' + encoding).toLowerCase() loweredCase = true } } } Buffer.prototype.toJSON = function toJSON () { return { type: 'Buffer', data: Array.prototype.slice.call(this._arr || this, 0) } } function base64Slice (buf, start, end) { if (start === 0 && end === buf.length) { return base64.fromByteArray(buf) } else { return base64.fromByteArray(buf.slice(start, end)) } } function utf8Slice (buf, start, end) { end = Math.min(buf.length, end) var res = [] var i = start while (i < end) { var firstByte = buf[i] var codePoint = null var bytesPerSequence = (firstByte > 0xEF) ? 4 : (firstByte > 0xDF) ? 3 : (firstByte > 0xBF) ? 2 : 1 if (i + bytesPerSequence <= end) { var secondByte, thirdByte, fourthByte, tempCodePoint switch (bytesPerSequence) { case 1: if (firstByte < 0x80) { codePoint = firstByte } break case 2: secondByte = buf[i + 1] if ((secondByte & 0xC0) === 0x80) { tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F) if (tempCodePoint > 0x7F) { codePoint = tempCodePoint } } break case 3: secondByte = buf[i + 1] thirdByte = buf[i + 2] if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) { tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F) if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) { codePoint = tempCodePoint } } break case 4: secondByte = buf[i + 1] thirdByte = buf[i + 2] fourthByte = buf[i + 3] if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) { tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F) if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) { codePoint = tempCodePoint } } } } if (codePoint === null) { // we did not generate a valid codePoint so insert a // replacement char (U+FFFD) and advance only 1 byte codePoint = 0xFFFD bytesPerSequence = 1 } else if (codePoint > 0xFFFF) { // encode to utf16 (surrogate pair dance) codePoint -= 0x10000 res.push(codePoint >>> 10 & 0x3FF | 0xD800) codePoint = 0xDC00 | codePoint & 0x3FF } res.push(codePoint) i += bytesPerSequence } return decodeCodePointsArray(res) } // Based on http://stackoverflow.com/a/22747272/680742, the browser with // the lowest limit is Chrome, with 0x10000 args. // We go 1 magnitude less, for safety var MAX_ARGUMENTS_LENGTH = 0x1000 function decodeCodePointsArray (codePoints) { var len = codePoints.length if (len <= MAX_ARGUMENTS_LENGTH) { return String.fromCharCode.apply(String, codePoints) // avoid extra slice() } // Decode in chunks to avoid "call stack size exceeded". var res = '' var i = 0 while (i < len) { res += String.fromCharCode.apply( String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH) ) } return res } function asciiSlice (buf, start, end) { var ret = '' end = Math.min(buf.length, end) for (var i = start; i < end; ++i) { ret += String.fromCharCode(buf[i] & 0x7F) } return ret } function latin1Slice (buf, start, end) { var ret = '' end = Math.min(buf.length, end) for (var i = start; i < end; ++i) { ret += String.fromCharCode(buf[i]) } return ret } function hexSlice (buf, start, end) { var len = buf.length if (!start || start < 0) start = 0 if (!end || end < 0 || end > len) end = len var out = '' for (var i = start; i < end; ++i) { out += toHex(buf[i]) } return out } function utf16leSlice (buf, start, end) { var bytes = buf.slice(start, end) var res = '' for (var i = 0; i < bytes.length; i += 2) { res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256) } return res } Buffer.prototype.slice = function slice (start, end) { var len = this.length start = ~~start end = end === undefined ? len : ~~end if (start < 0) { start += len if (start < 0) start = 0 } else if (start > len) { start = len } if (end < 0) { end += len if (end < 0) end = 0 } else if (end > len) { end = len } if (end < start) end = start var newBuf if (Buffer.TYPED_ARRAY_SUPPORT) { newBuf = this.subarray(start, end) newBuf.__proto__ = Buffer.prototype } else { var sliceLen = end - start newBuf = new Buffer(sliceLen, undefined) for (var i = 0; i < sliceLen; ++i) { newBuf[i] = this[i + start] } } return newBuf } /* * Need to make sure that buffer isn't trying to write out of bounds. */ function checkOffset (offset, ext, length) { if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint') if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length') } Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) { offset = offset | 0 byteLength = byteLength | 0 if (!noAssert) checkOffset(offset, byteLength, this.length) var val = this[offset] var mul = 1 var i = 0 while (++i < byteLength && (mul *= 0x100)) { val += this[offset + i] * mul } return val } Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) { offset = offset | 0 byteLength = byteLength | 0 if (!noAssert) { checkOffset(offset, byteLength, this.length) } var val = this[offset + --byteLength] var mul = 1 while (byteLength > 0 && (mul *= 0x100)) { val += this[offset + --byteLength] * mul } return val } Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) { if (!noAssert) checkOffset(offset, 1, this.length) return this[offset] } Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) { if (!noAssert) checkOffset(offset, 2, this.length) return this[offset] | (this[offset + 1] << 8) } Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) { if (!noAssert) checkOffset(offset, 2, this.length) return (this[offset] << 8) | this[offset + 1] } Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) { if (!noAssert) checkOffset(offset, 4, this.length) return ((this[offset]) | (this[offset + 1] << 8) | (this[offset + 2] << 16)) + (this[offset + 3] * 0x1000000) } Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) { if (!noAssert) checkOffset(offset, 4, this.length) return (this[offset] * 0x1000000) + ((this[offset + 1] << 16) | (this[offset + 2] << 8) | this[offset + 3]) } Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) { offset = offset | 0 byteLength = byteLength | 0 if (!noAssert) checkOffset(offset, byteLength, this.length) var val = this[offset] var mul = 1 var i = 0 while (++i < byteLength && (mul *= 0x100)) { val += this[offset + i] * mul } mul *= 0x80 if (val >= mul) val -= Math.pow(2, 8 * byteLength) return val } Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) { offset = offset | 0 byteLength = byteLength | 0 if (!noAssert) checkOffset(offset, byteLength, this.length) var i = byteLength var mul = 1 var val = this[offset + --i] while (i > 0 && (mul *= 0x100)) { val += this[offset + --i] * mul } mul *= 0x80 if (val >= mul) val -= Math.pow(2, 8 * byteLength) return val } Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) { if (!noAssert) checkOffset(offset, 1, this.length) if (!(this[offset] & 0x80)) return (this[offset]) return ((0xff - this[offset] + 1) * -1) } Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) { if (!noAssert) checkOffset(offset, 2, this.length) var val = this[offset] | (this[offset + 1] << 8) return (val & 0x8000) ? val | 0xFFFF0000 : val } Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) { if (!noAssert) checkOffset(offset, 2, this.length) var val = this[offset + 1] | (this[offset] << 8) return (val & 0x8000) ? val | 0xFFFF0000 : val } Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) { if (!noAssert) checkOffset(offset, 4, this.length) return (this[offset]) | (this[offset + 1] << 8) | (this[offset + 2] << 16) | (this[offset + 3] << 24) } Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) { if (!noAssert) checkOffset(offset, 4, this.length) return (this[offset] << 24) | (this[offset + 1] << 16) | (this[offset + 2] << 8) | (this[offset + 3]) } Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) { if (!noAssert) checkOffset(offset, 4, this.length) return ieee754.read(this, offset, true, 23, 4) } Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) { if (!noAssert) checkOffset(offset, 4, this.length) return ieee754.read(this, offset, false, 23, 4) } Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) { if (!noAssert) checkOffset(offset, 8, this.length) return ieee754.read(this, offset, true, 52, 8) } Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) { if (!noAssert) checkOffset(offset, 8, this.length) return ieee754.read(this, offset, false, 52, 8) } function checkInt (buf, value, offset, ext, max, min) { if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance') if (value > max || value < min) throw new RangeError('"value" argument is out of bounds') if (offset + ext > buf.length) throw new RangeError('Index out of range') } Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) { value = +value offset = offset | 0 byteLength = byteLength | 0 if (!noAssert) { var maxBytes = Math.pow(2, 8 * byteLength) - 1 checkInt(this, value, offset, byteLength, maxBytes, 0) } var mul = 1 var i = 0 this[offset] = value & 0xFF while (++i < byteLength && (mul *= 0x100)) { this[offset + i] = (value / mul) & 0xFF } return offset + byteLength } Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) { value = +value offset = offset | 0 byteLength = byteLength | 0 if (!noAssert) { var maxBytes = Math.pow(2, 8 * byteLength) - 1 checkInt(this, value, offset, byteLength, maxBytes, 0) } var i = byteLength - 1 var mul = 1 this[offset + i] = value & 0xFF while (--i >= 0 && (mul *= 0x100)) { this[offset + i] = (value / mul) & 0xFF } return offset + byteLength } Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) { value = +value offset = offset | 0 if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0) if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value) this[offset] = (value & 0xff) return offset + 1 } function objectWriteUInt16 (buf, value, offset, littleEndian) { if (value < 0) value = 0xffff + value + 1 for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) { buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>> (littleEndian ? i : 1 - i) * 8 } } Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) { value = +value offset = offset | 0 if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0) if (Buffer.TYPED_ARRAY_SUPPORT) { this[offset] = (value & 0xff) this[offset + 1] = (value >>> 8) } else { objectWriteUInt16(this, value, offset, true) } return offset + 2 } Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) { value = +value offset = offset | 0 if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0) if (Buffer.TYPED_ARRAY_SUPPORT) { this[offset] = (value >>> 8) this[offset + 1] = (value & 0xff) } else { objectWriteUInt16(this, value, offset, false) } return offset + 2 } function objectWriteUInt32 (buf, value, offset, littleEndian) { if (value < 0) value = 0xffffffff + value + 1 for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) { buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff } } Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) { value = +value offset = offset | 0 if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0) if (Buffer.TYPED_ARRAY_SUPPORT) { this[offset + 3] = (value >>> 24) this[offset + 2] = (value >>> 16) this[offset + 1] = (value >>> 8) this[offset] = (value & 0xff) } else { objectWriteUInt32(this, value, offset, true) } return offset + 4 } Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) { value = +value offset = offset | 0 if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0) if (Buffer.TYPED_ARRAY_SUPPORT) { this[offset] = (value >>> 24) this[offset + 1] = (value >>> 16) this[offset + 2] = (value >>> 8) this[offset + 3] = (value & 0xff) } else { objectWriteUInt32(this, value, offset, false) } return offset + 4 } Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) { value = +value offset = offset | 0 if (!noAssert) { var limit = Math.pow(2, 8 * byteLength - 1) checkInt(this, value, offset, byteLength, limit - 1, -limit) } var i = 0 var mul = 1 var sub = 0 this[offset] = value & 0xFF while (++i < byteLength && (mul *= 0x100)) { if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) { sub = 1 } this[offset + i] = ((value / mul) >> 0) - sub & 0xFF } return offset + byteLength } Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) { value = +value offset = offset | 0 if (!noAssert) { var limit = Math.pow(2, 8 * byteLength - 1) checkInt(this, value, offset, byteLength, limit - 1, -limit) } var i = byteLength - 1 var mul = 1 var sub = 0 this[offset + i] = value & 0xFF while (--i >= 0 && (mul *= 0x100)) { if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) { sub = 1 } this[offset + i] = ((value / mul) >> 0) - sub & 0xFF } return offset + byteLength } Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) { value = +value offset = offset | 0 if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80) if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value) if (value < 0) value = 0xff + value + 1 this[offset] = (value & 0xff) return offset + 1 } Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) { value = +value offset = offset | 0 if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000) if (Buffer.TYPED_ARRAY_SUPPORT) { this[offset] = (value & 0xff) this[offset + 1] = (value >>> 8) } else { objectWriteUInt16(this, value, offset, true) } return offset + 2 } Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) { value = +value offset = offset | 0 if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000) if (Buffer.TYPED_ARRAY_SUPPORT) { this[offset] = (value >>> 8) this[offset + 1] = (value & 0xff) } else { objectWriteUInt16(this, value, offset, false) } return offset + 2 } Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) { value = +value offset = offset | 0 if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000) if (Buffer.TYPED_ARRAY_SUPPORT) { this[offset] = (value & 0xff) this[offset + 1] = (value >>> 8) this[offset + 2] = (value >>> 16) this[offset + 3] = (value >>> 24) } else { objectWriteUInt32(this, value, offset, true) } return offset + 4 } Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) { value = +value offset = offset | 0 if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000) if (value < 0) value = 0xffffffff + value + 1 if (Buffer.TYPED_ARRAY_SUPPORT) { this[offset] = (value >>> 24) this[offset + 1] = (value >>> 16) this[offset + 2] = (value >>> 8) this[offset + 3] = (value & 0xff) } else { objectWriteUInt32(this, value, offset, false) } return offset + 4 } function checkIEEE754 (buf, value, offset, ext, max, min) { if (offset + ext > buf.length) throw new RangeError('Index out of range') if (offset < 0) throw new RangeError('Index out of range') } function writeFloat (buf, value, offset, littleEndian, noAssert) { if (!noAssert) { checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38) } ieee754.write(buf, value, offset, littleEndian, 23, 4) return offset + 4 } Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) { return writeFloat(this, value, offset, true, noAssert) } Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) { return writeFloat(this, value, offset, false, noAssert) } function writeDouble (buf, value, offset, littleEndian, noAssert) { if (!noAssert) { checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308) } ieee754.write(buf, value, offset, littleEndian, 52, 8) return offset + 8 } Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) { return writeDouble(this, value, offset, true, noAssert) } Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) { return writeDouble(this, value, offset, false, noAssert) } // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length) Buffer.prototype.copy = function copy (target, targetStart, start, end) { if (!start) start = 0 if (!end && end !== 0) end = this.length if (targetStart >= target.length) targetStart = target.length if (!targetStart) targetStart = 0 if (end > 0 && end < start) end = start // Copy 0 bytes; we're done if (end === start) return 0 if (target.length === 0 || this.length === 0) return 0 // Fatal error conditions if (targetStart < 0) { throw new RangeError('targetStart out of bounds') } if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds') if (end < 0) throw new RangeError('sourceEnd out of bounds') // Are we oob? if (end > this.length) end = this.length if (target.length - targetStart < end - start) { end = target.length - targetStart + start } var len = end - start var i if (this === target && start < targetStart && targetStart < end) { // descending copy from end for (i = len - 1; i >= 0; --i) { target[i + targetStart] = this[i + start] } } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) { // ascending copy from start for (i = 0; i < len; ++i) { target[i + targetStart] = this[i + start] } } else { Uint8Array.prototype.set.call( target, this.subarray(start, start + len), targetStart ) } return len } // Usage: // buffer.fill(number[, offset[, end]]) // buffer.fill(buffer[, offset[, end]]) // buffer.fill(string[, offset[, end]][, encoding]) Buffer.prototype.fill = function fill (val, start, end, encoding) { // Handle string cases: if (typeof val === 'string') { if (typeof start === 'string') { encoding = start start = 0 end = this.length } else if (typeof end === 'string') { encoding = end end = this.length } if (val.length === 1) { var code = val.charCodeAt(0) if (code < 256) { val = code } } if (encoding !== undefined && typeof encoding !== 'string') { throw new TypeError('encoding must be a string') } if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) { throw new TypeError('Unknown encoding: ' + encoding) } } else if (typeof val === 'number') { val = val & 255 } // Invalid ranges are not set to a default, so can range check early. if (start < 0 || this.length < start || this.length < end) { throw new RangeError('Out of range index') } if (end <= start) { return this } start = start >>> 0 end = end === undefined ? this.length : end >>> 0 if (!val) val = 0 var i if (typeof val === 'number') { for (i = start; i < end; ++i) { this[i] = val } } else { var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString()) var len = bytes.length for (i = 0; i < end - start; ++i) { this[i + start] = bytes[i % len] } } return this } // HELPER FUNCTIONS // ================ var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g function base64clean (str) { // Node strips out invalid characters like \n and \t from the string, base64-js does not str = stringtrim(str).replace(INVALID_BASE64_RE, '') // Node converts strings with length < 2 to '' if (str.length < 2) return '' // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not while (str.length % 4 !== 0) { str = str + '=' } return str } function stringtrim (str) { if (str.trim) return str.trim() return str.replace(/^\s+|\s+$/g, '') } function toHex (n) { if (n < 16) return '0' + n.toString(16) return n.toString(16) } function utf8ToBytes (string, units) { units = units || Infinity var codePoint var length = string.length var leadSurrogate = null var bytes = [] for (var i = 0; i < length; ++i) { codePoint = string.charCodeAt(i) // is surrogate component if (codePoint > 0xD7FF && codePoint < 0xE000) { // last char was a lead if (!leadSurrogate) { // no lead yet if (codePoint > 0xDBFF) { // unexpected trail if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD) continue } else if (i + 1 === length) { // unpaired lead if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD) continue } // valid lead leadSurrogate = codePoint continue } // 2 leads in a row if (codePoint < 0xDC00) { if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD) leadSurrogate = codePoint continue } // valid surrogate pair codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000 } else if (leadSurrogate) { // valid bmp char, but last char was a lead if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD) } leadSurrogate = null // encode utf8 if (codePoint < 0x80) { if ((units -= 1) < 0) break bytes.push(codePoint) } else if (codePoint < 0x800) { if ((units -= 2) < 0) break bytes.push( codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80 ) } else if (codePoint < 0x10000) { if ((units -= 3) < 0) break bytes.push( codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80 ) } else if (codePoint < 0x110000) { if ((units -= 4) < 0) break bytes.push( codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80 ) } else { throw new Error('Invalid code point') } } return bytes } function asciiToBytes (str) { var byteArray = [] for (var i = 0; i < str.length; ++i) { // Node's code seems to be doing this and not & 0x7F.. byteArray.push(str.charCodeAt(i) & 0xFF) } return byteArray } function utf16leToBytes (str, units) { var c, hi, lo var byteArray = [] for (var i = 0; i < str.length; ++i) { if ((units -= 2) < 0) break c = str.charCodeAt(i) hi = c >> 8 lo = c % 256 byteArray.push(lo) byteArray.push(hi) } return byteArray } function base64ToBytes (str) { return base64.toByteArray(base64clean(str)) } function blitBuffer (src, dst, offset, length) { for (var i = 0; i < length; ++i) { if ((i + offset >= dst.length) || (i >= src.length)) break dst[i + offset] = src[i] } return i } function isnan (val) { return val !== val // eslint-disable-line no-self-compare } ",
    "var toString = {}.toString; module.exports = Array.isArray || function (arr) { return toString.call(arr) == '[object Array]'; }; ",
    "// Polyfill for creating CustomEvents on IE9/10/11 // code pulled from: // https://github.com/d4tocchini/customevent-polyfill // https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill (function() { if (typeof window === 'undefined') { return; } try { var ce = new window.CustomEvent('test', { cancelable: true }); ce.preventDefault(); if (ce.defaultPrevented !== true) { // IE has problems with .preventDefault() on custom events // http://stackoverflow.com/questions/23349191 throw new Error('Could not prevent default'); } } catch (e) { var CustomEvent = function(event, params) { var evt, origPrevent; params = params || { bubbles: false, cancelable: false, detail: undefined }; evt = document.createEvent('CustomEvent'); evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail ); origPrevent = evt.preventDefault; evt.preventDefault = function() { origPrevent.call(this); try { Object.defineProperty(this, 'defaultPrevented', { get: function() { return true; } }); } catch (e) { this.defaultPrevented = true; } }; return evt; }; CustomEvent.prototype = window.Event.prototype; window.CustomEvent = CustomEvent; // expose definition to window } })(); ",
    " /** * This is the web browser implementation of `debug()`. * * Expose `debug()` as the module. */ exports = module.exports = require('./debug'); exports.log = log; exports.formatArgs = formatArgs; exports.save = save; exports.load = load; exports.useColors = useColors; exports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage(); /** * Colors. */ exports.colors = [ 'lightseagreen', 'forestgreen', 'goldenrod', 'dodgerblue', 'darkorchid', 'crimson' ]; /** * Currently only WebKit-based Web Inspectors, Firefox >= v31, * and the Firebug extension (any Firefox version) are known * to support "%c" CSS customizations. * * TODO: add a `localStorage` variable to explicitly enable/disable colors */ function useColors() { // is webkit? http://stackoverflow.com/a/16459606/376773 return ('WebkitAppearance' in document.documentElement.style) || // is firebug? http://stackoverflow.com/a/398120/376773 (window.console && (console.firebug || (console.exception && console.table))) || // is firefox >= v31? // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages (navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31); } /** * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default. */ exports.formatters.j = function(v) { return JSON.stringify(v); }; /** * Colorize log arguments if enabled. * * @api public */ function formatArgs() { var args = arguments; var useColors = this.useColors; args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' '); if (!useColors) return args; var c = 'color: ' + this.color; args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1)); // the final "%c" is somewhat tricky, because there could be other // arguments passed either before or after the %c, so we need to // figure out the correct index to insert the CSS into var index = 0; var lastC = 0; args[0].replace(/%[a-z%]/g, function(match) { if ('%%' === match) return; index++; if ('%c' === match) { // we only are interested in the *last* %c // (the user may have provided their own) lastC = index; } }); args.splice(lastC, 0, c); return args; } /** * Invokes `console.log()` when available. * No-op when `console.log` is not a "function". * * @api public */ function log() { // this hackery is required for IE8/9, where // the `console.log` function doesn't have 'apply' return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments); } /** * Save `namespaces`. * * @param {String} namespaces * @api private */ function save(namespaces) { try { if (null == namespaces) { exports.storage.removeItem('debug'); } else { exports.storage.debug = namespaces; } } catch(e) {} } /** * Load `namespaces`. * * @return {String} returns the previously persisted debug modes * @api private */ function load() { var r; try { r = exports.storage.debug; } catch(e) {} return r; } /** * Enable namespaces listed in `localStorage.debug` initially. */ exports.enable(load()); /** * Localstorage attempts to return the localstorage. * * This is necessary because safari throws * when a user disables cookies/localstorage * and you attempt to access it. * * @return {LocalStorage} * @api private */ function localstorage(){ try { return window.localStorage; } catch (e) {} } ",
    " /** * This is the common logic for both the Node.js and web browser * implementations of `debug()`. * * Expose `debug()` as the module. */ exports = module.exports = debug; exports.coerce = coerce; exports.disable = disable; exports.enable = enable; exports.enabled = enabled; /** * The currently active debug mode names, and names to skip. */ exports.names = []; exports.skips = []; /** * Map of special "%n" handling functions, for the debug "format" argument. * * Valid key names are a single, lowercased letter, i.e. "n". */ exports.formatters = {}; /** * Previously assigned color. */ var prevColor = 0; /** * Select a color. * * @return {Number} * @api private */ function selectColor() { return exports.colors[prevColor++ % exports.colors.length]; } /** * Create a debugger with the given `namespace`. * * @param {String} namespace * @return {Function} * @api public */ function debug(namespace) { // define the `disabled` version function disabled() { } disabled.enabled = false; // define the `enabled` version function enabled() { var self = enabled; // add the `color` if not set if (null == self.useColors) self.useColors = exports.useColors(); if (null == self.color && self.useColors) self.color = selectColor(); var args = Array.prototype.slice.call(arguments); args[0] = exports.coerce(args[0]); if ('string' !== typeof args[0]) { // anything else let's inspect with %o args = ['%o'].concat(args); } // apply any `formatters` transformations var index = 0; args[0] = args[0].replace(/%([a-z%])/g, function(match, format) { // if we encounter an escaped % then don't increase the array index if (match === '%%') return match; index++; var formatter = exports.formatters[format]; if ('function' === typeof formatter) { var val = args[index]; match = formatter.call(self, val); // now we need to remove `args[index]` since it's inlined in the `format` args.splice(index, 1); index--; } return match; }); if ('function' === typeof exports.formatArgs) { args = exports.formatArgs.apply(self, args); } var logFn = enabled.log || exports.log || console.log.bind(console); logFn.apply(self, args); } enabled.enabled = true; var fn = exports.enabled(namespace) ? enabled : disabled; fn.namespace = namespace; return fn; } /** * Enables a debug mode by namespaces. This can include modes * separated by a colon and wildcards. * * @param {String} namespaces * @api public */ function enable(namespaces) { exports.save(namespaces); var split = (namespaces || '').split(/[\s,]+/); var len = split.length; for (var i = 0; i < len; i++) { if (!split[i]) continue; // ignore empty strings namespaces = split[i].replace(/\*/g, '.*?'); if (namespaces[0] === '-') { exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$')); } else { exports.names.push(new RegExp('^' + namespaces + '$')); } } } /** * Disable debug output. * * @api public */ function disable() { exports.enable(''); } /** * Returns true if the given mode name is enabled, false otherwise. * * @param {String} name * @return {Boolean} * @api public */ function enabled(name) { var i, len; for (i = 0, len = exports.skips.length; i < len; i++) { if (exports.skips[i].test(name)) { return false; } } for (i = 0, len = exports.names.length; i < len; i++) { if (exports.names[i].test(name)) { return true; } } return false; } /** * Coerce `val`. * * @param {Mixed} val * @return {Mixed} * @api private */ function coerce(val) { if (val instanceof Error) return val.stack || val.message; return val; } ",
    "'use strict'; var isObj = require('is-obj'); var hasOwnProperty = Object.prototype.hasOwnProperty; var propIsEnumerable = Object.prototype.propertyIsEnumerable; function toObject(val) { if (val === null || val === undefined) { throw new TypeError('Sources cannot be null or undefined'); } return Object(val); } function assignKey(to, from, key) { var val = from[key]; if (val === undefined || val === null) { return; } if (hasOwnProperty.call(to, key)) { if (to[key] === undefined || to[key] === null) { throw new TypeError('Cannot convert undefined or null to object (' + key + ')'); } } if (!hasOwnProperty.call(to, key) || !isObj(val)) { to[key] = val; } else { to[key] = assign(Object(to[key]), from[key]); } } function assign(to, from) { if (to === from) { return to; } from = Object(from); for (var key in from) { if (hasOwnProperty.call(from, key)) { assignKey(to, from, key); } } if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(from); for (var i = 0; i < symbols.length; i++) { if (propIsEnumerable.call(from, symbols[i])) { assignKey(to, from, symbols[i]); } } } return to; } module.exports = function deepAssign(target) { target = toObject(target); for (var s = 1; s < arguments.length; s++) { assign(target, arguments[s]); } return target; }; ",
    "/*! (C) WebReflection Mit Style License */ (function(t,n,r,i){"use strict";function st(e,t){for(var n=0,r=e.length;n<r;n++)gt(e[n],t)}function ot(e){for(var t=0,n=e.length,r;t<n;t++)r=e[t],it(r,w[at(r)])}function ut(e){return function(t){F(t)&&(gt(t,e),st(t.querySelectorAll(E),e))}}function at(e){var t=R.call(e,"is"),n=e.nodeName.toUpperCase(),r=x.call(b,t?m+t.toUpperCase():v+n);return t&&-1<r&&!ft(n,t)?-1:r}function ft(e,t){return-1<E.indexOf(e+'[is="'+t+'"]')}function lt(e){var t=e.currentTarget,n=e.attrChange,r=e.attrName,i=e.target;Y&&(!i||i===t)&&t.attributeChangedCallback&&r!=="style"&&e.prevValue!==e.newValue&&t.attributeChangedCallback(r,n===e[f]?null:e.prevValue,n===e[c]?null:e.newValue)}function ct(e){var t=ut(e);return function(e){$.push(t,e.target)}}function ht(e){G&&(G=!1,e.currentTarget.removeEventListener(p,ht)),st((e.target||n).querySelectorAll(E),e.detail===u?u:o),j&&vt()}function pt(e,t){var n=this;U.call(n,e,t),Z.call(n,{target:n})}function dt(e,t){P(e,t),nt?nt.observe(e,X):(Q&&(e.setAttribute=pt,e[s]=tt(e),e.addEventListener(d,Z)),e.addEventListener(h,lt)),e.createdCallback&&Y&&(e.created=!0,e.createdCallback(),e.created=!1)}function vt(){for(var e,t=0,n=I.length;t<n;t++)e=I[t],S.contains(e)||(n--,I.splice(t--,1),gt(e,u))}function mt(e){throw new Error("A "+e+" type is already registered")}function gt(e,t){var n,r=at(e);-1<r&&(rt(e,w[r]),r=0,t===o&&!e[o]?(e[u]=!1,e[o]=!0,r=1,j&&x.call(I,e)<0&&I.push(e)):t===u&&!e[u]&&(e[o]=!1,e[u]=!0,r=1),r&&(n=e[t+"Callback"])&&n.call(e))}if(i in n)return;var s="__"+i+(Math.random()*1e5>>0),o="attached",u="detached",a="extends",f="ADDITION",l="MODIFICATION",c="REMOVAL",h="DOMAttrModified",p="DOMContentLoaded",d="DOMSubtreeModified",v="<",m="=",g=/^[A-Z][A-Z0-9]*(?:-[A-Z0-9]+)+$/,y=["ANNOTATION-XML","COLOR-PROFILE","FONT-FACE","FONT-FACE-SRC","FONT-FACE-URI","FONT-FACE-FORMAT","FONT-FACE-NAME","MISSING-GLYPH"],b=[],w=[],E="",S=n.documentElement,x=b.indexOf||function(e){for(var t=this.length;t--&&this[t]!==e;);return t},T=r.prototype,N=T.hasOwnProperty,C=T.isPrototypeOf,k=r.defineProperty,L=r.getOwnPropertyDescriptor,A=r.getOwnPropertyNames,O=r.getPrototypeOf,M=r.setPrototypeOf,_=!!r.__proto__,D=r.create||function yt(e){return e?(yt.prototype=e,new yt):this},P=M||(_?function(e,t){return e.__proto__=t,e}:A&&L?function(){function e(e,t){for(var n,r=A(t),i=0,s=r.length;i<s;i++)n=r[i],N.call(e,n)||k(e,n,L(t,n))}return function(t,n){do e(t,n);while((n=O(n))&&!C.call(n,t));return t}}():function(e,t){for(var n in t)e[n]=t[n];return e}),H=t.MutationObserver||t.WebKitMutationObserver,B=(t.HTMLElement||t.Element||t.Node).prototype,j=!C.call(B,S),F=j?function(e){return e.nodeType===1}:function(e){return C.call(B,e)},I=j&&[],q=B.cloneNode,R=B.getAttribute,U=B.setAttribute,z=B.removeAttribute,W=n.createElement,X=H&&{attributes:!0,characterData:!0,attributeOldValue:!0},V=H||function(e){Q=!1,S.removeEventListener(h,V)},$,J=t.requestAnimationFrame||t.webkitRequestAnimationFrame||t.mozRequestAnimationFrame||t.msRequestAnimationFrame||function(e){setTimeout(e,10)},K=!1,Q=!0,G=!0,Y=!0,Z,et,tt,nt,rt,it;M||_?(rt=function(e,t){C.call(t,e)||dt(e,t)},it=dt):(rt=function(e,t){e[s]||(e[s]=r(!0),dt(e,t))},it=rt),j?(Q=!1,function(){var t=L(B,"addEventListener"),n=t.value,r=function(e){var t=new CustomEvent(h,{bubbles:!0});t.attrName=e,t.prevValue=R.call(this,e),t.newValue=null,t[c]=t.attrChange=2,z.call(this,e),this.dispatchEvent(t)},i=function(t,n){var r=this.hasAttribute(t),i=r&&R.call(this,t);e=new CustomEvent(h,{bubbles:!0}),U.call(this,t,n),e.attrName=t,e.prevValue=r?i:null,e.newValue=n,r?e[l]=e.attrChange=1:e[f]=e.attrChange=0,this.dispatchEvent(e)},o=function(e){var t=e.currentTarget,n=t[s],r=e.propertyName,i;n.hasOwnProperty(r)&&(n=n[r],i=new CustomEvent(h,{bubbles:!0}),i.attrName=n.name,i.prevValue=n.value||null,i.newValue=n.value=t[r]||null,i.prevValue==null?i[f]=i.attrChange=0:i[l]=i.attrChange=1,t.dispatchEvent(i))};t.value=function(e,t,u){e===h&&this.attributeChangedCallback&&this.setAttribute!==i&&(this[s]={className:{name:"class",value:this.className}},this.setAttribute=i,this.removeAttribute=r,n.call(this,"propertychange",o)),n.call(this,e,t,u)},k(B,"addEventListener",t)}()):H||(S.addEventListener(h,V),S.setAttribute(s,1),S.removeAttribute(s),Q&&(Z=function(e){var t=this,n,r,i;if(t===e.target){n=t[s],t[s]=r=tt(t);for(i in r){if(!(i in n))return et(0,t,i,n[i],r[i],f);if(r[i]!==n[i])return et(1,t,i,n[i],r[i],l)}for(i in n)if(!(i in r))return et(2,t,i,n[i],r[i],c)}},et=function(e,t,n,r,i,s){var o={attrChange:e,currentTarget:t,attrName:n,prevValue:r,newValue:i};o[s]=e,lt(o)},tt=function(e){for(var t,n,r={},i=e.attributes,s=0,o=i.length;s<o;s++)t=i[s],n=t.name,n!=="setAttribute"&&(r[n]=t.value);return r})),n[i]=function(t,r){c=t.toUpperCase(),K||(K=!0,H?(nt=function(e,t){function n(e,t){for(var n=0,r=e.length;n<r;t(e[n++]));}return new H(function(r){for(var i,s,o,u=0,a=r.length;u<a;u++)i=r[u],i.type==="childList"?(n(i.addedNodes,e),n(i.removedNodes,t)):(s=i.target,Y&&s.attributeChangedCallback&&i.attributeName!=="style"&&(o=R.call(s,i.attributeName),o!==i.oldValue&&s.attributeChangedCallback(i.attributeName,i.oldValue,o)))})}(ut(o),ut(u)),nt.observe(n,{childList:!0,subtree:!0})):($=[],J(function d(){while($.length)$.shift().call(null,$.shift());J(d)}),n.addEventListener("DOMNodeInserted",ct(o)),n.addEventListener("DOMNodeRemoved",ct(u))),n.addEventListener(p,ht),n.addEventListener("readystatechange",ht),n.createElement=function(e,t){var r=W.apply(n,arguments),i=""+e,s=x.call(b,(t?m:v)+(t||i).toUpperCase()),o=-1<s;return t&&(r.setAttribute("is",t=t.toLowerCase()),o&&(o=ft(i.toUpperCase(),t))),Y=!n.createElement.innerHTMLHelper,o&&it(r,w[s]),r},B.cloneNode=function(e){var t=q.call(this,!!e),n=at(t);return-1<n&&it(t,w[n]),e&&ot(t.querySelectorAll(E)),t}),-2<x.call(b,m+c)+x.call(b,v+c)&&mt(t);if(!g.test(c)||-1<x.call(y,c))throw new Error("The type "+t+" is invalid");var i=function(){return f?n.createElement(l,c):n.createElement(l)},s=r||T,f=N.call(s,a),l=f?r[a].toUpperCase():c,c,h;return f&&-1<x.call(b,v+l)&&mt(l),h=b.push((f?m:v)+c)-1,E=E.concat(E.length?",":"",f?l+'[is="'+t.toLowerCase()+'"]':l),i.prototype=w[h]=N.call(s,"prototype")?s.prototype:D(B),st(n.querySelectorAll(E),o),i}})(window,document,Object,"registerElement");",
    "module.exports = function(dtype) { switch (dtype) { case 'int8': return Int8Array case 'int16': return Int16Array case 'int32': return Int32Array case 'uint8': return Uint8Array case 'uint16': return Uint16Array case 'uint32': return Uint32Array case 'float32': return Float32Array case 'float64': return Float64Array case 'array': return Array case 'uint8_clamped': return Uint8ClampedArray } } ",
    "/*eslint new-cap:0*/ var dtype = require('dtype') module.exports = flattenVertexData function flattenVertexData (data, output, offset) { if (!data) throw new TypeError('must specify data as first parameter') offset = +(offset || 0) | 0 if (Array.isArray(data) && (data[0] && typeof data[0][0] === 'number')) { var dim = data[0].length var length = data.length * dim var i, j, k, l // no output specified, create a new typed array if (!output || typeof output === 'string') { output = new (dtype(output || 'float32'))(length + offset) } var dstLength = output.length - offset if (length !== dstLength) { throw new Error('source length ' + length + ' (' + dim + 'x' + data.length + ')' + ' does not match destination length ' + dstLength) } for (i = 0, k = offset; i < data.length; i++) { for (j = 0; j < dim; j++) { output[k++] = data[i][j] === null ? NaN : data[i][j] } } } else { if (!output || typeof output === 'string') { // no output, create a new one var Ctor = dtype(output || 'float32') // handle arrays separately due to possible nulls if (Array.isArray(data) || output === 'array') { output = new Ctor(data.length + offset) for (i = 0, k = offset, l = output.length; k < l; k++, i++) { output[k] = data[i] === null ? NaN : data[i] } } else { if (offset === 0) { output = new Ctor(data) } else { output = new Ctor(data.length + offset) output.set(data, offset) } } } else { // store output in existing array output.set(data, offset) } } return output } ",
    "'use strict'; var isCallable = require('is-callable'); var toStr = Object.prototype.toString; var hasOwnProperty = Object.prototype.hasOwnProperty; var forEachArray = function forEachArray(array, iterator, receiver) { for (var i = 0, len = array.length; i < len; i++) { if (hasOwnProperty.call(array, i)) { if (receiver == null) { iterator(array[i], i, array); } else { iterator.call(receiver, array[i], i, array); } } } }; var forEachString = function forEachString(string, iterator, receiver) { for (var i = 0, len = string.length; i < len; i++) { // no such thing as a sparse string. if (receiver == null) { iterator(string.charAt(i), i, string); } else { iterator.call(receiver, string.charAt(i), i, string); } } }; var forEachObject = function forEachObject(object, iterator, receiver) { for (var k in object) { if (hasOwnProperty.call(object, k)) { if (receiver == null) { iterator(object[k], k, object); } else { iterator.call(receiver, object[k], k, object); } } } }; var forEach = function forEach(list, iterator, thisArg) { if (!isCallable(iterator)) { throw new TypeError('iterator must be a function'); } var receiver; if (arguments.length >= 3) { receiver = thisArg; } if (toStr.call(list) === '[object Array]') { forEachArray(list, iterator, receiver); } else if (typeof list === 'string') { forEachString(list, iterator, receiver); } else { forEachObject(list, iterator, receiver); } }; module.exports = forEach; ",
    "var win; if (typeof window !== "undefined") { win = window; } else if (typeof global !== "undefined") { win = global; } else if (typeof self !== "undefined"){ win = self; } else { win = {}; } module.exports = win; ",
    "exports.read = function (buffer, offset, isLE, mLen, nBytes) { var e, m var eLen = (nBytes * 8) - mLen - 1 var eMax = (1 << eLen) - 1 var eBias = eMax >> 1 var nBits = -7 var i = isLE ? (nBytes - 1) : 0 var d = isLE ? -1 : 1 var s = buffer[offset + i] i += d e = s & ((1 << (-nBits)) - 1) s >>= (-nBits) nBits += eLen for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {} m = e & ((1 << (-nBits)) - 1) e >>= (-nBits) nBits += mLen for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {} if (e === 0) { e = 1 - eBias } else if (e === eMax) { return m ? NaN : ((s ? -1 : 1) * Infinity) } else { m = m + Math.pow(2, mLen) e = e - eBias } return (s ? -1 : 1) * m * Math.pow(2, e - mLen) } exports.write = function (buffer, value, offset, isLE, mLen, nBytes) { var e, m, c var eLen = (nBytes * 8) - mLen - 1 var eMax = (1 << eLen) - 1 var eBias = eMax >> 1 var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0) var i = isLE ? 0 : (nBytes - 1) var d = isLE ? 1 : -1 var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0 value = Math.abs(value) if (isNaN(value) || value === Infinity) { m = isNaN(value) ? 1 : 0 e = eMax } else { e = Math.floor(Math.log(value) / Math.LN2) if (value * (c = Math.pow(2, -e)) < 1) { e-- c *= 2 } if (e + eBias >= 1) { value += rt / c } else { value += rt * Math.pow(2, 1 - eBias) } if (value * c >= 2) { e++ c /= 2 } if (e + eBias >= eMax) { m = 0 e = eMax } else if (e + eBias >= 1) { m = ((value * c) - 1) * Math.pow(2, mLen) e = e + eBias } else { m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen) e = 0 } } for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {} e = (e << mLen) | m eLen += mLen for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {} buffer[offset + i - d] |= s * 128 } ",
    "if (typeof Object.create === 'function') { // implementation from standard node.js 'util' module module.exports = function inherits(ctor, superCtor) { ctor.super_ = superCtor ctor.prototype = Object.create(superCtor.prototype, { constructor: { value: ctor, enumerable: false, writable: true, configurable: true } }); }; } else { // old school shim for old browsers module.exports = function inherits(ctor, superCtor) { ctor.super_ = superCtor var TempCtor = function () {} TempCtor.prototype = superCtor.prototype ctor.prototype = new TempCtor() ctor.prototype.constructor = ctor } } ",
    "/*! * Determine if an object is a Buffer * * @author Feross Aboukhadijeh <https://feross.org> * @license MIT */ // The _isBuffer check is for Safari 5-7 support, because it's missing // Object.prototype.constructor. Remove this eventually module.exports = function (obj) { return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer) } function isBuffer (obj) { return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj) } // For Node v0.10 support. Remove this eventually. function isSlowBuffer (obj) { return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0)) } ",
    "'use strict'; var fnToStr = Function.prototype.toString; var constructorRegex = /^\s*class\b/; var isES6ClassFn = function isES6ClassFunction(value) { try { var fnStr = fnToStr.call(value); return constructorRegex.test(fnStr); } catch (e) { return false; // not a function } }; var tryFunctionObject = function tryFunctionToStr(value) { try { if (isES6ClassFn(value)) { return false; } fnToStr.call(value); return true; } catch (e) { return false; } }; var toStr = Object.prototype.toString; var fnClass = '[object Function]'; var genClass = '[object GeneratorFunction]'; var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol'; module.exports = function isCallable(value) { if (!value) { return false; } if (typeof value !== 'function' && typeof value !== 'object') { return false; } if (typeof value === 'function' && !value.prototype) { return true; } if (hasToStringTag) { return tryFunctionObject(value); } if (isES6ClassFn(value)) { return false; } var strClass = toStr.call(value); return strClass === fnClass || strClass === genClass; }; ",
    "module.exports = isFunction var toString = Object.prototype.toString function isFunction (fn) { var string = toString.call(fn) return string === '[object Function]' || (typeof fn === 'function' && string !== '[object RegExp]') || (typeof window !== 'undefined' && // IE8 and below (fn === window.setTimeout || fn === window.alert || fn === window.confirm || fn === window.prompt)) }; ",
    "'use strict'; module.exports = function (x) { var type = typeof x; return x !== null && (type === 'object' || type === 'function'); }; ",
    "var wordWrap = require('word-wrapper') var xtend = require('xtend') var number = require('as-number') var X_HEIGHTS = ['x', 'e', 'a', 'o', 'n', 's', 'r', 'c', 'u', 'm', 'v', 'w', 'z'] var M_WIDTHS = ['m', 'w'] var CAP_HEIGHTS = ['H', 'I', 'N', 'E', 'F', 'K', 'L', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'] var TAB_ID = '\t'.charCodeAt(0) var SPACE_ID = ' '.charCodeAt(0) var ALIGN_LEFT = 0, ALIGN_CENTER = 1, ALIGN_RIGHT = 2 module.exports = function createLayout(opt) { return new TextLayout(opt) } function TextLayout(opt) { this.glyphs = [] this._measure = this.computeMetrics.bind(this) this.update(opt) } TextLayout.prototype.update = function(opt) { opt = xtend({ measure: this._measure }, opt) this._opt = opt this._opt.tabSize = number(this._opt.tabSize, 4) if (!opt.font) throw new Error('must provide a valid bitmap font') var glyphs = this.glyphs var text = opt.text||'' var font = opt.font this._setupSpaceGlyphs(font) var lines = wordWrap.lines(text, opt) var minWidth = opt.width || 0 //clear glyphs glyphs.length = 0 //get max line width var maxLineWidth = lines.reduce(function(prev, line) { return Math.max(prev, line.width, minWidth) }, 0) //the pen position var x = 0 var y = 0 var lineHeight = number(opt.lineHeight, font.common.lineHeight) var baseline = font.common.base var descender = lineHeight-baseline var letterSpacing = opt.letterSpacing || 0 var height = lineHeight * lines.length - descender var align = getAlignType(this._opt.align) //draw text along baseline y -= height //the metrics for this text layout this._width = maxLineWidth this._height = height this._descender = lineHeight - baseline this._baseline = baseline this._xHeight = getXHeight(font) this._capHeight = getCapHeight(font) this._lineHeight = lineHeight this._ascender = lineHeight - descender - this._xHeight //layout each glyph var self = this lines.forEach(function(line, lineIndex) { var start = line.start var end = line.end var lineWidth = line.width var lastGlyph //for each glyph in that line... for (var i=start; i<end; i++) { var id = text.charCodeAt(i) var glyph = self.getGlyph(font, id) if (glyph) { if (lastGlyph) x += getKerning(font, lastGlyph.id, glyph.id) var tx = x if (align === ALIGN_CENTER) tx += (maxLineWidth-lineWidth)/2 else if (align === ALIGN_RIGHT) tx += (maxLineWidth-lineWidth) glyphs.push({ position: [tx, y], data: glyph, index: i, line: lineIndex }) //move pen forward x += glyph.xadvance + letterSpacing lastGlyph = glyph } } //next line down y += lineHeight x = 0 }) this._linesTotal = lines.length; } TextLayout.prototype._setupSpaceGlyphs = function(font) { //These are fallbacks, when the font doesn't include //' ' or '\t' glyphs this._fallbackSpaceGlyph = null this._fallbackTabGlyph = null if (!font.chars || font.chars.length === 0) return //try to get space glyph //then fall back to the 'm' or 'w' glyphs //then fall back to the first glyph available var space = getGlyphById(font, SPACE_ID) || getMGlyph(font) || font.chars[0] //and create a fallback for tab var tabWidth = this._opt.tabSize * space.xadvance this._fallbackSpaceGlyph = space this._fallbackTabGlyph = xtend(space, { x: 0, y: 0, xadvance: tabWidth, id: TAB_ID, xoffset: 0, yoffset: 0, width: 0, height: 0 }) } TextLayout.prototype.getGlyph = function(font, id) { var glyph = getGlyphById(font, id) if (glyph) return glyph else if (id === TAB_ID) return this._fallbackTabGlyph else if (id === SPACE_ID) return this._fallbackSpaceGlyph return null } TextLayout.prototype.computeMetrics = function(text, start, end, width) { var letterSpacing = this._opt.letterSpacing || 0 var font = this._opt.font var curPen = 0 var curWidth = 0 var count = 0 var glyph var lastGlyph if (!font.chars || font.chars.length === 0) { return { start: start, end: start, width: 0 } } end = Math.min(text.length, end) for (var i=start; i < end; i++) { var id = text.charCodeAt(i) var glyph = this.getGlyph(font, id) if (glyph) { //move pen forward var xoff = glyph.xoffset var kern = lastGlyph ? getKerning(font, lastGlyph.id, glyph.id) : 0 curPen += kern var nextPen = curPen + glyph.xadvance + letterSpacing var nextWidth = curPen + glyph.width //we've hit our limit; we can't move onto the next glyph if (nextWidth >= width || nextPen >= width) break //otherwise continue along our line curPen = nextPen curWidth = nextWidth lastGlyph = glyph } count++ } //make sure rightmost edge lines up with rendered glyphs if (lastGlyph) curWidth += lastGlyph.xoffset return { start: start, end: start + count, width: curWidth } } //getters for the private vars ;['width', 'height', 'descender', 'ascender', 'xHeight', 'baseline', 'capHeight', 'lineHeight' ].forEach(addGetter) function addGetter(name) { Object.defineProperty(TextLayout.prototype, name, { get: wrapper(name), configurable: true }) } //create lookups for private vars function wrapper(name) { return (new Function([ 'return function '+name+'() {', ' return this._'+name, '}' ].join('\n')))() } function getGlyphById(font, id) { if (!font.chars || font.chars.length === 0) return null var glyphIdx = findChar(font.chars, id) if (glyphIdx >= 0) return font.chars[glyphIdx] return null } function getXHeight(font) { for (var i=0; i<X_HEIGHTS.length; i++) { var id = X_HEIGHTS[i].charCodeAt(0) var idx = findChar(font.chars, id) if (idx >= 0) return font.chars[idx].height } return 0 } function getMGlyph(font) { for (var i=0; i<M_WIDTHS.length; i++) { var id = M_WIDTHS[i].charCodeAt(0) var idx = findChar(font.chars, id) if (idx >= 0) return font.chars[idx] } return 0 } function getCapHeight(font) { for (var i=0; i<CAP_HEIGHTS.length; i++) { var id = CAP_HEIGHTS[i].charCodeAt(0) var idx = findChar(font.chars, id) if (idx >= 0) return font.chars[idx].height } return 0 } function getKerning(font, left, right) { if (!font.kernings || font.kernings.length === 0) return 0 var table = font.kernings for (var i=0; i<table.length; i++) { var kern = table[i] if (kern.first === left && kern.second === right) return kern.amount } return 0 } function getAlignType(align) { if (align === 'center') return ALIGN_CENTER else if (align === 'right') return ALIGN_RIGHT return ALIGN_LEFT } function findChar (array, value, start) { start = start || 0 for (var i = start; i < array.length; i++) { if (array[i].id === value) { return i } } return -1 }",
    "var xhr = require('xhr') var noop = function(){} var parseASCII = require('parse-bmfont-ascii') var parseXML = require('parse-bmfont-xml') var readBinary = require('parse-bmfont-binary') var isBinaryFormat = require('./lib/is-binary') var xtend = require('xtend') var xml2 = (function hasXML2() { return self.XMLHttpRequest && "withCredentials" in new XMLHttpRequest })() module.exports = function(opt, cb) { cb = typeof cb === 'function' ? cb : noop if (typeof opt === 'string') opt = { uri: opt } else if (!opt) opt = {} var expectBinary = opt.binary if (expectBinary) opt = getBinaryOpts(opt) xhr(opt, function(err, res, body) { if (err) return cb(err) if (!/^2/.test(res.statusCode)) return cb(new Error('http status code: '+res.statusCode)) if (!body) return cb(new Error('no body result')) var binary = false //if the response type is an array buffer, //we need to convert it into a regular Buffer object if (isArrayBuffer(body)) { var array = new Uint8Array(body) body = new Buffer(array, 'binary') } //now check the string/Buffer response //and see if it has a binary BMF header if (isBinaryFormat(body)) { binary = true //if we have a string, turn it into a Buffer if (typeof body === 'string') body = new Buffer(body, 'binary') } //we are not parsing a binary format, just ASCII/XML/etc if (!binary) { //might still be a buffer if responseType is 'arraybuffer' if (Buffer.isBuffer(body)) body = body.toString(opt.encoding) body = body.trim() } var result try { var type = res.headers['content-type'] if (binary) result = readBinary(body) else if (/json/.test(type) || body.charAt(0) === '{') result = JSON.parse(body) else if (/xml/.test(type) || body.charAt(0) === '<') result = parseXML(body) else result = parseASCII(body) } catch (e) { cb(new Error('error parsing font '+e.message)) cb = noop } cb(null, result) }) } function isArrayBuffer(arr) { var str = Object.prototype.toString return str.call(arr) === '[object ArrayBuffer]' } function getBinaryOpts(opt) { //IE10+ and other modern browsers support array buffers if (xml2) return xtend(opt, { responseType: 'arraybuffer' }) if (typeof self.XMLHttpRequest === 'undefined') throw new Error('your browser does not support XHR loading') //IE9 and XML1 browsers could still use an override var req = new self.XMLHttpRequest() req.overrideMimeType('text/plain; charset=x-user-defined') return xtend({ xhr: req }, opt) } ",
    "var equal = require('buffer-equal') var HEADER = new Buffer([66, 77, 70, 3]) module.exports = function(buf) { if (typeof buf === 'string') return buf.substring(0, 3) === 'BMF' return buf.length > 4 && equal(buf.slice(0, 4), HEADER) }",
    "/* object-assign (c) Sindre Sorhus @license MIT */ 'use strict'; /* eslint-disable no-unused-vars */ var getOwnPropertySymbols = Object.getOwnPropertySymbols; var hasOwnProperty = Object.prototype.hasOwnProperty; var propIsEnumerable = Object.prototype.propertyIsEnumerable; function toObject(val) { if (val === null || val === undefined) { throw new TypeError('Object.assign cannot be called with null or undefined'); } return Object(val); } function shouldUseNative() { try { if (!Object.assign) { return false; } // Detect buggy property enumeration order in older V8 versions. // https://bugs.chromium.org/p/v8/issues/detail?id=4118 var test1 = new String('abc'); // eslint-disable-line no-new-wrappers test1[5] = 'de'; if (Object.getOwnPropertyNames(test1)[0] === '5') { return false; } // https://bugs.chromium.org/p/v8/issues/detail?id=3056 var test2 = {}; for (var i = 0; i < 10; i++) { test2['_' + String.fromCharCode(i)] = i; } var order2 = Object.getOwnPropertyNames(test2).map(function (n) { return test2[n]; }); if (order2.join('') !== '0123456789') { return false; } // https://bugs.chromium.org/p/v8/issues/detail?id=3056 var test3 = {}; 'abcdefghijklmnopqrst'.split('').forEach(function (letter) { test3[letter] = letter; }); if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') { return false; } return true; } catch (err) { // We don't expect any of the above to throw, but better to be safe. return false; } } module.exports = shouldUseNative() ? Object.assign : function (target, source) { var from; var to = toObject(target); var symbols; for (var s = 1; s < arguments.length; s++) { from = Object(arguments[s]); for (var key in from) { if (hasOwnProperty.call(from, key)) { to[key] = from[key]; } } if (getOwnPropertySymbols) { symbols = getOwnPropertySymbols(from); for (var i = 0; i < symbols.length; i++) { if (propIsEnumerable.call(from, symbols[i])) { to[symbols[i]] = from[symbols[i]]; } } } } return to; }; ",
    "module.exports = function parseBMFontAscii(data) { if (!data) throw new Error('no data provided') data = data.toString().trim() var output = { pages: [], chars: [], kernings: [] } var lines = data.split(/\r\n?|\n/g) if (lines.length === 0) throw new Error('no data in BMFont file') for (var i = 0; i < lines.length; i++) { var lineData = splitLine(lines[i], i) if (!lineData) //skip empty lines continue if (lineData.key === 'page') { if (typeof lineData.data.id !== 'number') throw new Error('malformed file at line ' + i + ' -- needs page id=N') if (typeof lineData.data.file !== 'string') throw new Error('malformed file at line ' + i + ' -- needs page file="path"') output.pages[lineData.data.id] = lineData.data.file } else if (lineData.key === 'chars' || lineData.key === 'kernings') { //... do nothing for these two ... } else if (lineData.key === 'char') { output.chars.push(lineData.data) } else if (lineData.key === 'kerning') { output.kernings.push(lineData.data) } else { output[lineData.key] = lineData.data } } return output } function splitLine(line, idx) { line = line.replace(/\t+/g, ' ').trim() if (!line) return null var space = line.indexOf(' ') if (space === -1) throw new Error("no named row at line " + idx) var key = line.substring(0, space) line = line.substring(space + 1) //clear "letter" field as it is non-standard and //requires additional complexity to parse " / = symbols line = line.replace(/letter=[\'\"]\S+[\'\"]/gi, '') line = line.split("=") line = line.map(function(str) { return str.trim().match((/(".*?"|[^"\s]+)+(?=\s*|\s*$)/g)) }) var data = [] for (var i = 0; i < line.length; i++) { var dt = line[i] if (i === 0) { data.push({ key: dt[0], data: "" }) } else if (i === line.length - 1) { data[data.length - 1].data = parseData(dt[0]) } else { data[data.length - 1].data = parseData(dt[0]) data.push({ key: dt[1], data: "" }) } } var out = { key: key, data: {} } data.forEach(function(v) { out.data[v.key] = v.data; }) return out } function parseData(data) { if (!data || data.length === 0) return "" if (data.indexOf('"') === 0 || data.indexOf("'") === 0) return data.substring(1, data.length - 1) if (data.indexOf(',') !== -1) return parseIntList(data) return parseInt(data, 10) } function parseIntList(data) { return data.split(',').map(function(val) { return parseInt(val, 10) }) }",
    "var HEADER = [66, 77, 70] module.exports = function readBMFontBinary(buf) { if (buf.length < 6) throw new Error('invalid buffer length for BMFont') var header = HEADER.every(function(byte, i) { return buf.readUInt8(i) === byte }) if (!header) throw new Error('BMFont missing BMF byte header') var i = 3 var vers = buf.readUInt8(i++) if (vers > 3) throw new Error('Only supports BMFont Binary v3 (BMFont App v1.10)') var target = { kernings: [], chars: [] } for (var b=0; b<5; b++) i += readBlock(target, buf, i) return target } function readBlock(target, buf, i) { if (i > buf.length-1) return 0 var blockID = buf.readUInt8(i++) var blockSize = buf.readInt32LE(i) i += 4 switch(blockID) { case 1: target.info = readInfo(buf, i) break case 2: target.common = readCommon(buf, i) break case 3: target.pages = readPages(buf, i, blockSize) break case 4: target.chars = readChars(buf, i, blockSize) break case 5: target.kernings = readKernings(buf, i, blockSize) break } return 5 + blockSize } function readInfo(buf, i) { var info = {} info.size = buf.readInt16LE(i) var bitField = buf.readUInt8(i+2) info.smooth = (bitField >> 7) & 1 info.unicode = (bitField >> 6) & 1 info.italic = (bitField >> 5) & 1 info.bold = (bitField >> 4) & 1 //fixedHeight is only mentioned in binary spec if ((bitField >> 3) & 1) info.fixedHeight = 1 info.charset = buf.readUInt8(i+3) || '' info.stretchH = buf.readUInt16LE(i+4) info.aa = buf.readUInt8(i+6) info.padding = [ buf.readInt8(i+7), buf.readInt8(i+8), buf.readInt8(i+9), buf.readInt8(i+10) ] info.spacing = [ buf.readInt8(i+11), buf.readInt8(i+12) ] info.outline = buf.readUInt8(i+13) info.face = readStringNT(buf, i+14) return info } function readCommon(buf, i) { var common = {} common.lineHeight = buf.readUInt16LE(i) common.base = buf.readUInt16LE(i+2) common.scaleW = buf.readUInt16LE(i+4) common.scaleH = buf.readUInt16LE(i+6) common.pages = buf.readUInt16LE(i+8) var bitField = buf.readUInt8(i+10) common.packed = 0 common.alphaChnl = buf.readUInt8(i+11) common.redChnl = buf.readUInt8(i+12) common.greenChnl = buf.readUInt8(i+13) common.blueChnl = buf.readUInt8(i+14) return common } function readPages(buf, i, size) { var pages = [] var text = readNameNT(buf, i) var len = text.length+1 var count = size / len for (var c=0; c<count; c++) { pages[c] = buf.slice(i, i+text.length).toString('utf8') i += len } return pages } function readChars(buf, i, blockSize) { var chars = [] var count = blockSize / 20 for (var c=0; c<count; c++) { var char = {} var off = c*20 char.id = buf.readUInt32LE(i + 0 + off) char.x = buf.readUInt16LE(i + 4 + off) char.y = buf.readUInt16LE(i + 6 + off) char.width = buf.readUInt16LE(i + 8 + off) char.height = buf.readUInt16LE(i + 10 + off) char.xoffset = buf.readInt16LE(i + 12 + off) char.yoffset = buf.readInt16LE(i + 14 + off) char.xadvance = buf.readInt16LE(i + 16 + off) char.page = buf.readUInt8(i + 18 + off) char.chnl = buf.readUInt8(i + 19 + off) chars[c] = char } return chars } function readKernings(buf, i, blockSize) { var kernings = [] var count = blockSize / 10 for (var c=0; c<count; c++) { var kern = {} var off = c*10 kern.first = buf.readUInt32LE(i + 0 + off) kern.second = buf.readUInt32LE(i + 4 + off) kern.amount = buf.readInt16LE(i + 8 + off) kernings[c] = kern } return kernings } function readNameNT(buf, offset) { var pos=offset for (; pos<buf.length; pos++) { if (buf[pos] === 0x00) break } return buf.slice(offset, pos) } function readStringNT(buf, offset) { return readNameNT(buf, offset).toString('utf8') }",
    "var parseAttributes = require('./parse-attribs') var parseFromString = require('xml-parse-from-string') //In some cases element.attribute.nodeName can return //all lowercase values.. so we need to map them to the correct //case var NAME_MAP = { scaleh: 'scaleH', scalew: 'scaleW', stretchh: 'stretchH', lineheight: 'lineHeight', alphachnl: 'alphaChnl', redchnl: 'redChnl', greenchnl: 'greenChnl', bluechnl: 'blueChnl' } module.exports = function parse(data) { data = data.toString() var xmlRoot = parseFromString(data) var output = { pages: [], chars: [], kernings: [] } //get config settings ;['info', 'common'].forEach(function(key) { var element = xmlRoot.getElementsByTagName(key)[0] if (element) output[key] = parseAttributes(getAttribs(element)) }) //get page info var pageRoot = xmlRoot.getElementsByTagName('pages')[0] if (!pageRoot) throw new Error('malformed file -- no <pages> element') var pages = pageRoot.getElementsByTagName('page') for (var i=0; i<pages.length; i++) { var p = pages[i] var id = parseInt(p.getAttribute('id'), 10) var file = p.getAttribute('file') if (isNaN(id)) throw new Error('malformed file -- page "id" attribute is NaN') if (!file) throw new Error('malformed file -- needs page "file" attribute') output.pages[parseInt(id, 10)] = file } //get kernings / chars ;['chars', 'kernings'].forEach(function(key) { var element = xmlRoot.getElementsByTagName(key)[0] if (!element) return var childTag = key.substring(0, key.length-1) var children = element.getElementsByTagName(childTag) for (var i=0; i<children.length; i++) { var child = children[i] output[key].push(parseAttributes(getAttribs(child))) } }) return output } function getAttribs(element) { var attribs = getAttribList(element) return attribs.reduce(function(dict, attrib) { var key = mapName(attrib.nodeName) dict[key] = attrib.nodeValue return dict }, {}) } function getAttribList(element) { //IE8+ and modern browsers var attribs = [] for (var i=0; i<element.attributes.length; i++) attribs.push(element.attributes[i]) return attribs } function mapName(nodeName) { return NAME_MAP[nodeName.toLowerCase()] || nodeName }",
    "//Some versions of GlyphDesigner have a typo //that causes some bugs with parsing. //Need to confirm with recent version of the software //to see whether this is still an issue or not. var GLYPH_DESIGNER_ERROR = 'chasrset' module.exports = function parseAttributes(obj) { if (GLYPH_DESIGNER_ERROR in obj) { obj['charset'] = obj[GLYPH_DESIGNER_ERROR] delete obj[GLYPH_DESIGNER_ERROR] } for (var k in obj) { if (k === 'face' || k === 'charset') continue else if (k === 'padding' || k === 'spacing') obj[k] = parseIntList(obj[k]) else obj[k] = parseInt(obj[k], 10) } return obj } function parseIntList(data) { return data.split(',').map(function(val) { return parseInt(val, 10) }) }",
    "var trim = require('trim') , forEach = require('for-each') , isArray = function(arg) { return Object.prototype.toString.call(arg) === '[object Array]'; } module.exports = function (headers) { if (!headers) return {} var result = {} forEach( trim(headers).split('\n') , function (row) { var index = row.indexOf(':') , key = trim(row.slice(0, index)).toLowerCase() , value = trim(row.slice(index + 1)) if (typeof(result[key]) === 'undefined') { result[key] = value } else if (isArray(result[key])) { result[key].push(value) } else { result[key] = [ result[key], value ] } } ) return result }",
    "var performance = global.performance || {}; var present = (function () { var names = ['now', 'webkitNow', 'msNow', 'mozNow', 'oNow']; while (names.length) { var name = names.shift(); if (name in performance) { return performance[name].bind(performance); } } var dateNow = Date.now || function () { return new Date().getTime(); }; var navigationStart = (performance.timing || {}).navigationStart || dateNow(); return function () { return dateNow() - navigationStart; }; }()); present.performanceNow = performance.now; present.noConflict = function () { performance.now = present.performanceNow; }; present.conflict = function () { performance.now = present; }; present.conflict(); module.exports = present; ",
    "(function(root) { // Store setTimeout reference so promise-polyfill will be unaffected by // other code modifying setTimeout (like sinon.useFakeTimers()) var setTimeoutFunc = setTimeout; // Use polyfill for setImmediate for performance gains var asap = (typeof setImmediate === 'function' && setImmediate) || function(fn) { setTimeoutFunc(fn, 1); }; // Polyfill for Function.prototype.bind function bind(fn, thisArg) { return function() { fn.apply(thisArg, arguments); } } var isArray = Array.isArray || function(value) { return Object.prototype.toString.call(value) === "[object Array]" }; function Promise(fn) { if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new'); if (typeof fn !== 'function') throw new TypeError('not a function'); this._state = null; this._value = null; this._deferreds = [] doResolve(fn, bind(resolve, this), bind(reject, this)) } function handle(deferred) { var me = this; if (this._state === null) { this._deferreds.push(deferred); return } asap(function() { var cb = me._state ? deferred.onFulfilled : deferred.onRejected if (cb === null) { (me._state ? deferred.resolve : deferred.reject)(me._value); return; } var ret; try { ret = cb(me._value); } catch (e) { deferred.reject(e); return; } deferred.resolve(ret); }) } function resolve(newValue) { try { //Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure if (newValue === this) throw new TypeError('A promise cannot be resolved with itself.'); if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) { var then = newValue.then; if (typeof then === 'function') { doResolve(bind(then, newValue), bind(resolve, this), bind(reject, this)); return; } } this._state = true; this._value = newValue; finale.call(this); } catch (e) { reject.call(this, e); } } function reject(newValue) { this._state = false; this._value = newValue; finale.call(this); } function finale() { for (var i = 0, len = this._deferreds.length; i < len; i++) { handle.call(this, this._deferreds[i]); } this._deferreds = null; } function Handler(onFulfilled, onRejected, resolve, reject){ this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null; this.onRejected = typeof onRejected === 'function' ? onRejected : null; this.resolve = resolve; this.reject = reject; } /** * Take a potentially misbehaving resolver function and make sure * onFulfilled and onRejected are only called once. * * Makes no guarantees about asynchrony. */ function doResolve(fn, onFulfilled, onRejected) { var done = false; try { fn(function (value) { if (done) return; done = true; onFulfilled(value); }, function (reason) { if (done) return; done = true; onRejected(reason); }) } catch (ex) { if (done) return; done = true; onRejected(ex); } } Promise.prototype['catch'] = function (onRejected) { return this.then(null, onRejected); }; Promise.prototype.then = function(onFulfilled, onRejected) { var me = this; return new Promise(function(resolve, reject) { handle.call(me, new Handler(onFulfilled, onRejected, resolve, reject)); }) }; Promise.all = function () { var args = Array.prototype.slice.call(arguments.length === 1 && isArray(arguments[0]) ? arguments[0] : arguments); return new Promise(function (resolve, reject) { if (args.length === 0) return resolve([]); var remaining = args.length; function res(i, val) { try { if (val && (typeof val === 'object' || typeof val === 'function')) { var then = val.then; if (typeof then === 'function') { then.call(val, function (val) { res(i, val) }, reject); return; } } args[i] = val; if (--remaining === 0) { resolve(args); } } catch (ex) { reject(ex); } } for (var i = 0; i < args.length; i++) { res(i, args[i]); } }); }; Promise.resolve = function (value) { if (value && typeof value === 'object' && value.constructor === Promise) { return value; } return new Promise(function (resolve) { resolve(value); }); }; Promise.reject = function (value) { return new Promise(function (resolve, reject) { reject(value); }); }; Promise.race = function (values) { return new Promise(function (resolve, reject) { for(var i = 0, len = values.length; i < len; i++) { values[i].then(resolve, reject); } }); }; /** * Set the immediate function to execute callbacks * @param fn {function} Function to execute * @private */ Promise._setImmediateFn = function _setImmediateFn(fn) { asap = fn; }; if (typeof module !== 'undefined' && module.exports) { module.exports = Promise; } else if (!root.Promise) { root.Promise = Promise; } })(this); ",
    "var dtype = require('dtype') var anArray = require('an-array') var isBuffer = require('is-buffer') var CW = [0, 2, 3] var CCW = [2, 1, 3] module.exports = function createQuadElements(array, opt) { //if user didn't specify an output array if (!array || !(anArray(array) || isBuffer(array))) { opt = array || {} array = null } if (typeof opt === 'number') //backwards-compatible opt = { count: opt } else opt = opt || {} var type = typeof opt.type === 'string' ? opt.type : 'uint16' var count = typeof opt.count === 'number' ? opt.count : 1 var start = (opt.start || 0) var dir = opt.clockwise !== false ? CW : CCW, a = dir[0], b = dir[1], c = dir[2] var numIndices = count * 6 var indices = array || new (dtype(type))(numIndices) for (var i = 0, j = 0; i < numIndices; i += 6, j += 4) { var x = i + start indices[x + 0] = j + 0 indices[x + 1] = j + 1 indices[x + 2] = j + 2 indices[x + 3] = j + a indices[x + 4] = j + b indices[x + 5] = j + c } return indices }",
    "/* * anime.js v3.0.0 * (c) 2019 Julian Garnier * Released under the MIT license * animejs.com */ 'use strict'; // Defaults var defaultInstanceSettings = { update: null, begin: null, loopBegin: null, changeBegin: null, change: null, changeComplete: null, loopComplete: null, complete: null, loop: 1, direction: 'normal', autoplay: true, timelineOffset: 0 }; var defaultTweenSettings = { duration: 1000, delay: 0, endDelay: 0, easing: 'easeOutElastic(1, .5)', round: 0 }; var validTransforms = ['translateX', 'translateY', 'translateZ', 'rotate', 'rotateX', 'rotateY', 'rotateZ', 'scale', 'scaleX', 'scaleY', 'scaleZ', 'skew', 'skewX', 'skewY', 'perspective']; // Caching var cache = { CSS: {}, springs: {} }; // Utils function minMax(val, min, max) { return Math.min(Math.max(val, min), max); } function stringContains(str, text) { return str.indexOf(text) > -1; } function applyArguments(func, args) { return func.apply(null, args); } var hexRegex = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i; var rgbPrefixRegex = /^rgb/; var hslRegex = /^hsl/; var is = { arr: function (a) { return Array.isArray(a); }, obj: function (a) { return stringContains(Object.prototype.toString.call(a), 'Object'); }, pth: function (a) { return is.obj(a) && a.hasOwnProperty('totalLength'); }, svg: function (a) { return a instanceof SVGElement; }, inp: function (a) { return a instanceof HTMLInputElement; }, dom: function (a) { return a.nodeType || is.svg(a); }, str: function (a) { return typeof a === 'string'; }, fnc: function (a) { return typeof a === 'function'; }, und: function (a) { return typeof a === 'undefined'; }, hex: function (a) { return hexRegex.test(a); }, rgb: function (a) { return rgbPrefixRegex.test(a); }, hsl: function (a) { return hslRegex.test(a); }, col: function (a) { return (is.hex(a) || is.rgb(a) || is.hsl(a)); }, key: function (a) { return !defaultInstanceSettings.hasOwnProperty(a) && !defaultTweenSettings.hasOwnProperty(a) && a !== 'targets' && a !== 'keyframes'; } }; // Easings var easingFunctionRegex = /\(([^)]+)\)/; function parseEasingParameters(string) { var match = easingFunctionRegex.exec(string); return match ? match[1].split(',').map(function (p) { return parseFloat(p); }) : []; } // Spring solver inspired by Webkit Copyright © 2016 Apple Inc. All rights reserved. https://webkit.org/demos/spring/spring.js function spring(string, duration) { var params = parseEasingParameters(string); var mass = minMax(is.und(params[0]) ? 1 : params[0], .1, 100); var stiffness = minMax(is.und(params[1]) ? 100 : params[1], .1, 100); var damping = minMax(is.und(params[2]) ? 10 : params[2], .1, 100); var velocity = minMax(is.und(params[3]) ? 0 : params[3], .1, 100); var w0 = Math.sqrt(stiffness / mass); var zeta = damping / (2 * Math.sqrt(stiffness * mass)); var wd = zeta < 1 ? w0 * Math.sqrt(1 - zeta * zeta) : 0; var a = 1; var b = zeta < 1 ? (zeta * w0 + -velocity) / wd : -velocity + w0; function solver(t) { var progress = duration ? (duration * t) / 1000 : t; if (zeta < 1) { progress = Math.exp(-progress * zeta * w0) * (a * Math.cos(wd * progress) + b * Math.sin(wd * progress)); } else { progress = (a + b * progress) * Math.exp(-progress * w0); } if (t === 0 || t === 1) { return t; } return 1 - progress; } function getDuration() { var cached = cache.springs[string]; if (cached) { return cached; } var frame = 1/6; var elapsed = 0; var rest = 0; while(true) { elapsed += frame; if (solver(elapsed) === 1) { rest++; if (rest >= 16) { break; } } else { rest = 0; } } var duration = elapsed * frame * 1000; cache.springs[string] = duration; return duration; } return duration ? solver : getDuration; } // Elastic easing adapted from jQueryUI http://api.jqueryui.com/easings/ function elastic(amplitude, period) { if ( amplitude === void 0 ) amplitude = 1; if ( period === void 0 ) period = .5; var a = minMax(amplitude, 1, 10); var p = minMax(period, .1, 2); return function (t) { return (t === 0 || t === 1) ? t : -a * Math.pow(2, 10 * (t - 1)) * Math.sin((((t - 1) - (p / (Math.PI * 2) * Math.asin(1 / a))) * (Math.PI * 2)) / p); } } // Basic steps easing implementation https://developer.mozilla.org/fr/docs/Web/CSS/transition-timing-function function steps(steps) { if ( steps === void 0 ) steps = 10; return function (t) { return Math.round(t * steps) * (1 / steps); }; } // BezierEasing https://github.com/gre/bezier-easing var bezier = (function () { var kSplineTableSize = 11; var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0); function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1 } function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1 } function C(aA1) { return 3.0 * aA1 } function calcBezier(aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT } function getSlope(aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1) } function binarySubdivide(aX, aA, aB, mX1, mX2) { var currentX, currentT, i = 0; do { currentT = aA + (aB - aA) / 2.0; currentX = calcBezier(currentT, mX1, mX2) - aX; if (currentX > 0.0) { aB = currentT; } else { aA = currentT; } } while (Math.abs(currentX) > 0.0000001 && ++i < 10); return currentT; } function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) { for (var i = 0; i < 4; ++i) { var currentSlope = getSlope(aGuessT, mX1, mX2); if (currentSlope === 0.0) { return aGuessT; } var currentX = calcBezier(aGuessT, mX1, mX2) - aX; aGuessT -= currentX / currentSlope; } return aGuessT; } function bezier(mX1, mY1, mX2, mY2) { if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) { return; } var sampleValues = new Float32Array(kSplineTableSize); if (mX1 !== mY1 || mX2 !== mY2) { for (var i = 0; i < kSplineTableSize; ++i) { sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2); } } function getTForX(aX) { var intervalStart = 0; var currentSample = 1; var lastSample = kSplineTableSize - 1; for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) { intervalStart += kSampleStepSize; } --currentSample; var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]); var guessForT = intervalStart + dist * kSampleStepSize; var initialSlope = getSlope(guessForT, mX1, mX2); if (initialSlope >= 0.001) { return newtonRaphsonIterate(aX, guessForT, mX1, mX2); } else if (initialSlope === 0.0) { return guessForT; } else { return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2); } } return function (x) { if (mX1 === mY1 && mX2 === mY2) { return x; } if (x === 0 || x === 1) { return x; } return calcBezier(getTForX(x), mY1, mY2); } } return bezier; })(); var penner = (function () { var names = ['Quad', 'Cubic', 'Quart', 'Quint', 'Sine', 'Expo', 'Circ', 'Back', 'Elastic']; // Approximated Penner equations http://matthewlein.com/ceaser/ var curves = { In: [ [0.550, 0.085, 0.680, 0.530], /* inQuad */ [0.550, 0.055, 0.675, 0.190], /* inCubic */ [0.895, 0.030, 0.685, 0.220], /* inQuart */ [0.755, 0.050, 0.855, 0.060], /* inQuint */ [0.470, 0.000, 0.745, 0.715], /* inSine */ [0.950, 0.050, 0.795, 0.035], /* inExpo */ [0.600, 0.040, 0.980, 0.335], /* inCirc */ [0.600,-0.280, 0.735, 0.045], /* inBack */ elastic /* inElastic */ ], Out: [ [0.250, 0.460, 0.450, 0.940], /* outQuad */ [0.215, 0.610, 0.355, 1.000], /* outCubic */ [0.165, 0.840, 0.440, 1.000], /* outQuart */ [0.230, 1.000, 0.320, 1.000], /* outQuint */ [0.390, 0.575, 0.565, 1.000], /* outSine */ [0.190, 1.000, 0.220, 1.000], /* outExpo */ [0.075, 0.820, 0.165, 1.000], /* outCirc */ [0.175, 0.885, 0.320, 1.275], /* outBack */ function (a, p) { return function (t) { return 1 - elastic(a, p)(1 - t); }; } /* outElastic */ ], InOut: [ [0.455, 0.030, 0.515, 0.955], /* inOutQuad */ [0.645, 0.045, 0.355, 1.000], /* inOutCubic */ [0.770, 0.000, 0.175, 1.000], /* inOutQuart */ [0.860, 0.000, 0.070, 1.000], /* inOutQuint */ [0.445, 0.050, 0.550, 0.950], /* inOutSine */ [1.000, 0.000, 0.000, 1.000], /* inOutExpo */ [0.785, 0.135, 0.150, 0.860], /* inOutCirc */ [0.680,-0.550, 0.265, 1.550], /* inOutBack */ function (a, p) { return function (t) { return t < .5 ? elastic(a, p)(t * 2) / 2 : 1 - elastic(a, p)(t * -2 + 2) / 2; }; } /* inOutElastic */ ] }; var eases = { linear: [0.250, 0.250, 0.750, 0.750] }; for (var coords in curves) { for (var i = 0, len = curves[coords].length; i < len; i++) { eases['ease'+coords+names[i]] = curves[coords][i]; } } return eases; })(); function parseEasings(easing, duration) { if (is.fnc(easing)) { return easing; } var name = easing.split('(')[0]; var ease = penner[name]; var args = parseEasingParameters(easing); switch (name) { case 'spring' : return spring(easing, duration); case 'cubicBezier' : return applyArguments(bezier, args); case 'steps' : return applyArguments(steps, args); default : return is.fnc(ease) ? applyArguments(ease, args) : applyArguments(bezier, ease); } } // Strings function selectString(str) { try { var nodes = document.querySelectorAll(str); return nodes; } catch(e) { return; } } // Arrays var auxArrayFilter = []; function filterArray(arr, callback) { var result = auxArrayFilter; var len = arr.length; var thisArg = arguments.length >= 2 ? arguments[1] : void 0; for (var i = 0; i < len; i++) { if (i in arr) { var val = arr[i]; if (callback.call(thisArg, val, i, arr)) { result.push(val); } } } // arr turns into the auxArray and we return the previously aux array. auxArrayFilter = arr; auxArrayFilter.length = 0; return result; } var auxArrayFlatten = []; function flattenArray(arr) { if (!arr.length) { return arr; } var result = auxArrayFlatten; var node = arr.pop(); do { if (node.constructor === Array) { for (var i = 0; i < node.length; i++) { arr.push(node[i]); } } else { result.push(node); } } while (arr.length && (node = arr.pop()) !== undefined); result.reverse(); // Reverse result to restore the original order. // arr turns into the auxArray and we return the previously aux array. auxArrayFlatten = arr; auxArrayFilter.length = 0; return result; } function toArray(o) { if (is.arr(o)) { return o; } if (is.str(o)) { o = selectString(o) || o; } if (o instanceof NodeList || o instanceof HTMLCollection) { return [].slice.call(o); } return [o]; } function arrayContains(arr, val) { return arr.some(function (a) { return a === val; }); } // Objects function cloneObject(o) { var clone = {}; for (var p in o) { clone[p] = o[p]; } return clone; } function replaceObjectProps(o1, o2) { var o = cloneObject(o1); for (var p in o1) { o[p] = o2.hasOwnProperty(p) ? o2[p] : o1[p]; } return o; } function mergeObjects(o1, o2) { var o = cloneObject(o1); for (var p in o2) { o[p] = is.und(o1[p]) ? o2[p] : o1[p]; } return o; } // Colors var rgbRegex = /rgb\((\d+,\s*[\d]+,\s*[\d]+)\)/g; function rgbToRgba(rgbValue) { var rgb = rgbRegex.exec(rgbValue); return rgb ? ("rgba(" + (rgb[1]) + ",1)") : rgbValue; } var hexToRgbaHexRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i; var hexToRgbaRgbRegex = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i; function hexToRgba(hexValue) { var hex = hexValue.replace(hexToRgbaHexRegex, function (m, r, g, b) { return r + r + g + g + b + b; } ); var rgb = hexToRgbaRgbRegex.exec(hex); var r = parseInt(rgb[1], 16); var g = parseInt(rgb[2], 16); var b = parseInt(rgb[3], 16); return ("rgba(" + r + "," + g + "," + b + ",1)"); } var hslToRgbaHsl1Regex = /hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)/g; var hslToRgbaHsl2Regex = /hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%,\s*([\d.]+)\)/g; function hslToRgba(hslValue) { var hsl = hslToRgbaHsl1Regex.exec(hslValue) || hslToRgbaHsl2Regex.exec(hslValue); var h = parseInt(hsl[1], 10) / 360; var s = parseInt(hsl[2], 10) / 100; var l = parseInt(hsl[3], 10) / 100; var a = hsl[4] || 1; function hue2rgb(p, q, t) { if (t < 0) { t += 1; } if (t > 1) { t -= 1; } if (t < 1/6) { return p + (q - p) * 6 * t; } if (t < 1/2) { return q; } if (t < 2/3) { return p + (q - p) * (2/3 - t) * 6; } return p; } var r, g, b; if (s == 0) { r = g = b = l; } else { var q = l < 0.5 ? l * (1 + s) : l + s - l * s; var p = 2 * l - q; r = hue2rgb(p, q, h + 1/3); g = hue2rgb(p, q, h); b = hue2rgb(p, q, h - 1/3); } return ("rgba(" + (r * 255) + "," + (g * 255) + "," + (b * 255) + "," + a + ")"); } function colorToRgb(val) { if (is.rgb(val)) { return rgbToRgba(val); } if (is.hex(val)) { return hexToRgba(val); } if (is.hsl(val)) { return hslToRgba(val); } } // Units var unitRegex = /([\+\-]?[0-9#\.]+)(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/; function getUnit(val) { var split = unitRegex.exec(val); if (split) { return split[2]; } } function getTransformUnit(propName) { if (stringContains(propName, 'translate') || propName === 'perspective') { return 'px'; } if (stringContains(propName, 'rotate') || stringContains(propName, 'skew')) { return 'deg'; } } // Values function getFunctionValue(val, animatable) { if (!is.fnc(val)) { return val; } return val(animatable.target, animatable.id, animatable.total); } function getAttribute(el, prop) { return el.getAttribute(prop); } function convertPxToUnit(el, value, unit) { var valueUnit = getUnit(value); if (arrayContains([unit, 'deg', 'rad', 'turn'], valueUnit)) { return value; } var cached = cache.CSS[value + unit]; if (!is.und(cached)) { return cached; } var baseline = 100; var tempEl = document.createElement(el.tagName); var parentEl = (el.parentNode && (el.parentNode !== document)) ? el.parentNode : document.body; parentEl.appendChild(tempEl); tempEl.style.position = 'absolute'; tempEl.style.width = baseline + unit; var factor = baseline / tempEl.offsetWidth; parentEl.removeChild(tempEl); var convertedUnit = factor * parseFloat(value); cache.CSS[value + unit] = convertedUnit; return convertedUnit; } function getCSSValue(el, prop, unit) { if (prop in el.style) { var uppercasePropName = prop.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase(); var value = el.style[prop] || getComputedStyle(el).getPropertyValue(uppercasePropName) || '0'; return unit ? convertPxToUnit(el, value, unit) : value; } } function getAnimationType(el, prop) { if (is.dom(el) && !is.inp(el) && (getAttribute(el, prop) || (is.svg(el) && el[prop]))) { return 'attribute'; } if (is.dom(el) && arrayContains(validTransforms, prop)) { return 'transform'; } if (is.dom(el) && (prop !== 'transform' && getCSSValue(el, prop))) { return 'css'; } if (el[prop] != null) { return 'object'; } } var transformRegex = /(\w+)\(([^)]*)\)/g; function getElementTransforms(el) { if (!is.dom(el)) { return; } var str = el.style.transform || ''; var transforms = new Map(); var m; while (m = transformRegex.exec(str)) { transforms.set(m[1], m[2]); } return transforms; } function getTransformValue(el, propName, animatable, unit) { var defaultVal = stringContains(propName, 'scale') ? 1 : 0 + getTransformUnit(propName); var value = getElementTransforms(el).get(propName) || defaultVal; if (animatable) { animatable.transforms.list.set(propName, value); animatable.transforms['last'] = propName; } return unit ? convertPxToUnit(el, value, unit) : value; } function getOriginalTargetValue(target, propName, unit, animatable) { switch (getAnimationType(target, propName)) { case 'transform': return getTransformValue(target, propName, animatable, unit); case 'css': return getCSSValue(target, propName, unit); case 'attribute': return getAttribute(target, propName); default: return target[propName] || 0; } } var operatorRegex = /^(\*=|\+=|-=)/; function getRelativeValue(to, from) { var operator = operatorRegex.exec(to); if (!operator) { return to; } var u = getUnit(to) || 0; var x = parseFloat(from); var y = parseFloat(to.replace(operator[0], '')); switch (operator[0][0]) { case '+': return x + y + u; case '-': return x - y + u; case '*': return x * y + u; } } var whitespaceRegex = /\s/g; function validateValue(val, unit) { if (is.col(val)) { return colorToRgb(val); } var originalUnit = getUnit(val); var unitLess = originalUnit ? val.substr(0, val.length - originalUnit.length) : val; return unit && !whitespaceRegex.test(val) ? unitLess + unit : unitLess; } // getTotalLength() equivalent for circle, rect, polyline, polygon and line shapes // adapted from https://gist.github.com/SebLambla/3e0550c496c236709744 function getDistance(p1, p2) { return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2)); } function getCircleLength(el) { return Math.PI * 2 * getAttribute(el, 'r'); } function getRectLength(el) { return (getAttribute(el, 'width') * 2) + (getAttribute(el, 'height') * 2); } function getLineLength(el) { return getDistance( {x: getAttribute(el, 'x1'), y: getAttribute(el, 'y1')}, {x: getAttribute(el, 'x2'), y: getAttribute(el, 'y2')} ); } function getPolylineLength(el) { var points = el.points; var totalLength = 0; var previousPos; for (var i = 0 ; i < points.numberOfItems; i++) { var currentPos = points.getItem(i); if (i > 0) { totalLength += getDistance(previousPos, currentPos); } previousPos = currentPos; } return totalLength; } function getPolygonLength(el) { var points = el.points; return getPolylineLength(el) + getDistance(points.getItem(points.numberOfItems - 1), points.getItem(0)); } // Path animation function getTotalLength(el) { if (el.getTotalLength) { return el.getTotalLength(); } switch(el.tagName.toLowerCase()) { case 'circle': return getCircleLength(el); case 'rect': return getRectLength(el); case 'line': return getLineLength(el); case 'polyline': return getPolylineLength(el); case 'polygon': return getPolygonLength(el); } } function setDashoffset(el) { var pathLength = getTotalLength(el); el.setAttribute('stroke-dasharray', pathLength); return pathLength; } // Motion path function getParentSvgEl(el) { var parentEl = el.parentNode; while (is.svg(parentEl)) { parentEl = parentEl.parentNode; if (!is.svg(parentEl.parentNode)) { break; } } return parentEl; } function getParentSvg(pathEl, svgData) { var svg = svgData || {}; var parentSvgEl = svg.el || getParentSvgEl(pathEl); var rect = parentSvgEl.getBoundingClientRect(); var viewBoxAttr = getAttribute(parentSvgEl, 'viewBox'); var width = rect.width; var height = rect.height; var viewBox = svg.viewBox || (viewBoxAttr ? viewBoxAttr.split(' ') : [0, 0, width, height]); return { el: parentSvgEl, viewBox: viewBox, x: viewBox[0] / 1, y: viewBox[1] / 1, w: width / viewBox[2], h: height / viewBox[3] } } function getPath(path, percent) { var pathEl = is.str(path) ? selectString(path)[0] : path; var p = percent || 100; return function(property) { return { property: property, el: pathEl, svg: getParentSvg(pathEl), totalLength: getTotalLength(pathEl) * (p / 100) } } } function getPathProgress(path, progress) { function point(offset) { if ( offset === void 0 ) offset = 0; var l = progress + offset >= 1 ? progress + offset : 0; return path.el.getPointAtLength(l); } var svg = getParentSvg(path.el, path.svg); var p = point(); var p0 = point(-1); var p1 = point(+1); switch (path.property) { case 'x': return (p.x - svg.x) * svg.w; case 'y': return (p.y - svg.y) * svg.h; case 'angle': return Math.atan2(p1.y - p0.y, p1.x - p0.x) * 180 / Math.PI; } } // Decompose value var valueRegex = /-?\d*\.?\d+/g; function decomposeValue(val, unit) { var value = validateValue((is.pth(val) ? val.totalLength : val), unit) + ''; return { original: value, numbers: value.match(valueRegex) ? value.match(valueRegex).map(Number) : [0], strings: (is.str(val) || unit) ? value.split(valueRegex) : [] } } // Animatables function parseTargets(targets) { var targetsArray = targets ? (flattenArray(is.arr(targets) ? targets.map(toArray) : toArray(targets))) : []; return filterArray(targetsArray, function (item, pos, self) { return self.indexOf(item) === pos; }); } function getAnimatables(targets) { var parsed = parseTargets(targets); return parsed.map(function (t, i) { return {target: t, id: i, total: parsed.length, transforms: { list: getElementTransforms(t) } }; }); } // Properties var springRegex = /^spring/; function normalizePropertyTweens(prop, tweenSettings) { var settings = cloneObject(tweenSettings); // Override duration if easing is a spring if (springRegex.test(settings.easing)) { settings.duration = spring(settings.easing); } if (is.arr(prop)) { var l = prop.length; var isFromTo = (l === 2 && !is.obj(prop[0])); if (!isFromTo) { // Duration divided by the number of tweens if (!is.fnc(tweenSettings.duration)) { settings.duration = tweenSettings.duration / l; } } else { // Transform [from, to] values shorthand to a valid tween value prop = {value: prop}; } } var propArray = is.arr(prop) ? prop : [prop]; return propArray.map(function (v, i) { var obj = (is.obj(v) && !is.pth(v)) ? v : {value: v}; // Default delay value should only be applied to the first tween if (is.und(obj.delay)) { obj.delay = !i ? tweenSettings.delay : 0; } // Default endDelay value should only be applied to the last tween if (is.und(obj.endDelay)) { obj.endDelay = i === propArray.length - 1 ? tweenSettings.endDelay : 0; } return obj; }).map(function (k) { return mergeObjects(k, settings); }); } function flattenKeyframes(keyframes) { var propertyNames = filterArray(flattenArray(keyframes.map(function (key) { return Object.keys(key); })), function (p) { return is.key(p); }) .reduce(function (a,b) { if (a.indexOf(b) < 0) { a.push(b); } return a; }, []); var properties = {}; var loop = function ( i ) { var propName = propertyNames[i]; properties[propName] = keyframes.map(function (key) { var newKey = {}; for (var p in key) { if (is.key(p)) { if (p == propName) { newKey.value = key[p]; } } else { newKey[p] = key[p]; } } return newKey; }); }; for (var i = 0; i < propertyNames.length; i++) loop( i ); return properties; } function getProperties(tweenSettings, params) { var properties = []; var keyframes = params.keyframes; if (keyframes) { params = mergeObjects(flattenKeyframes(keyframes), params); } for (var p in params) { if (is.key(p)) { properties.push({ name: p, tweens: normalizePropertyTweens(params[p], tweenSettings) }); } } return properties; } // Tweens function normalizeTweenValues(tween, animatable) { var t = {}; for (var p in tween) { var value = getFunctionValue(tween[p], animatable); if (is.arr(value)) { value = value.map(function (v) { return getFunctionValue(v, animatable); }); if (value.length === 1) { value = value[0]; } } t[p] = value; } t.duration = parseFloat(t.duration); t.delay = parseFloat(t.delay); return t; } function normalizeTweens(prop, animatable) { var previousTween; return prop.tweens.map(function (t) { var tween = normalizeTweenValues(t, animatable); var tweenValue = tween.value; var to = is.arr(tweenValue) ? tweenValue[1] : tweenValue; var toUnit = getUnit(to); var originalValue = getOriginalTargetValue(animatable.target, prop.name, toUnit, animatable); var previousValue = previousTween ? previousTween.to.original : originalValue; var from = is.arr(tweenValue) ? tweenValue[0] : previousValue; var fromUnit = getUnit(from) || getUnit(originalValue); var unit = toUnit || fromUnit; if (is.und(to)) { to = previousValue; } tween.from = decomposeValue(from, unit); tween.to = decomposeValue(getRelativeValue(to, from), unit); tween.start = previousTween ? previousTween.end : 0; tween.end = tween.start + tween.delay + tween.duration + tween.endDelay; tween.easing = parseEasings(tween.easing, tween.duration); tween.isPath = is.pth(tweenValue); tween.isColor = is.col(tween.from.original); if (tween.isColor) { tween.round = 1; } previousTween = tween; return tween; }); } // Tween progress var setProgressValue = { css: function (t, p, v) { return t.style[p] = v; }, attribute: function (t, p, v) { return t.setAttribute(p, v); }, object: function (t, p, v) { return t[p] = v; }, transform: function (t, p, v, transforms, manual) { transforms.list.set(p, v); if (p === transforms.last || manual) { var str = ''; transforms.list.forEach(function (value, prop) { str += prop + "(" + value + ") "; }); t.style.transform = str; } } }; // Set Value helper function setTargetsValue(targets, properties) { var animatables = getAnimatables(targets); for (var i = 0, len = animatables.length; i < len; i++) { var animatable = animatables[i]; for (var property in properties) { var value = getFunctionValue(properties[property], animatable); var target = animatable.target; var valueUnit = getUnit(value); var originalValue = getOriginalTargetValue(target, property, valueUnit, animatable); var unit = valueUnit || getUnit(originalValue); var to = getRelativeValue(validateValue(value, unit), originalValue); var animType = getAnimationType(target, property); setProgressValue[animType](target, property, to, animatable.transforms, true); } } } // Animations function createAnimation(animatable, prop) { var animType = getAnimationType(animatable.target, prop.name); if (animType) { var tweens = normalizeTweens(prop, animatable); var lastTween = tweens[tweens.length - 1]; return { type: animType, property: prop.name, animatable: animatable, tweens: tweens, duration: lastTween.end, delay: tweens[0].delay, endDelay: lastTween.endDelay } } } function getAnimations(animatables, properties) { return filterArray(flattenArray(animatables.map(function (animatable) { return properties.map(function (prop) { return createAnimation(animatable, prop); }); })), function (a) { return !is.und(a); }); } // Create Instance function getInstanceTimings(animations, tweenSettings) { var animLength = animations.length; var getTlOffset = function (anim) { return anim.timelineOffset ? anim.timelineOffset : 0; }; var timings = {}; timings.duration = animLength ? Math.max.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.duration; })) : tweenSettings.duration; timings.delay = animLength ? Math.min.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.delay; })) : tweenSettings.delay; timings.endDelay = animLength ? timings.duration - Math.max.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.duration - anim.endDelay; })) : tweenSettings.endDelay; return timings; } var instanceID = 0; function createNewInstance(params) { var instanceSettings = replaceObjectProps(defaultInstanceSettings, params); var tweenSettings = replaceObjectProps(defaultTweenSettings, params); var properties = getProperties(tweenSettings, params); var animatables = getAnimatables(params.targets); var animations = getAnimations(animatables, properties); var timings = getInstanceTimings(animations, tweenSettings); var id = instanceID; instanceID++; return mergeObjects(instanceSettings, { id: id, children: [], animatables: animatables, animations: animations, duration: timings.duration, delay: timings.delay, endDelay: timings.endDelay }); } // Core var activeInstances = []; var pausedInstances = []; var raf; var engine = (function () { function play() { raf = requestAnimationFrame(step); } function step(t) { var activeInstancesLength = activeInstances.length; if (activeInstancesLength) { var i = 0; while (i < activeInstancesLength) { var activeInstance = activeInstances[i]; if (!activeInstance.paused) { activeInstance.tick(t); } else { var instanceIndex = activeInstances.indexOf(activeInstance); if (instanceIndex > -1) { activeInstances.splice(instanceIndex, 1); activeInstancesLength = activeInstances.length; } } i++; } play(); } else { raf = cancelAnimationFrame(raf); } } return play; })(); function handleVisibilityChange() { if (document.hidden) { for (var i = 0, len = activeInstances.length; i < len; i++) { activeInstance[i].pause(); } pausedInstances = activeInstances.slice(0); activeInstances = []; } else { for (var i$1 = 0, len$1 = pausedInstances.length; i$1 < len$1; i$1++) { pausedInstances[i$1].play(); } } } document.addEventListener('visibilitychange', handleVisibilityChange); // Public Instance function anime(params) { if ( params === void 0 ) params = {}; var startTime = 0, lastTime = 0, now = 0; var children, childrenLength = 0; var resolve = null; function makePromise() { return window.Promise && new Promise(function (_resolve) { return resolve = _resolve; }); } var promise = makePromise(); var instance = createNewInstance(params); function toggleInstanceDirection() { instance.reversed = !instance.reversed; for (var i = 0, len = children.length; i < len; i++) { children[i].reversed = instance.reversed; } } function adjustTime(time) { return instance.reversed ? instance.duration - time : time; } function resetTime() { startTime = 0; lastTime = adjustTime(instance.currentTime) * (1 / anime.speed); } function seekCild(time, child) { if (child) { child.seek(time - child.timelineOffset); } } function syncInstanceChildren(time) { if (!instance.reversePlayback) { for (var i = 0; i < childrenLength; i++) { seekCild(time, children[i]); } } else { for (var i$1 = childrenLength; i$1--;) { seekCild(time, children[i$1]); } } } function setAnimationsProgress(insTime) { var i = 0; var animations = instance.animations; var animationsLength = animations.length; while (i < animationsLength) { var anim = animations[i]; var animatable = anim.animatable; var tweens = anim.tweens; var tweenLength = tweens.length - 1; var tween = tweens[tweenLength]; // Only check for keyframes if there is more than one tween if (tweenLength) { tween = filterArray(tweens, function (t) { return (insTime < t.end); })[0] || tween; } var elapsed = minMax(insTime - tween.start - tween.delay, 0, tween.duration) / tween.duration; var eased = isNaN(elapsed) ? 1 : tween.easing(elapsed); var strings = tween.to.strings; var round = tween.round; var numbers = []; var toNumbersLength = tween.to.numbers.length; var progress = (void 0); for (var n = 0; n < toNumbersLength; n++) { var value = (void 0); var toNumber = tween.to.numbers[n]; var fromNumber = tween.from.numbers[n] || 0; if (!tween.isPath) { value = fromNumber + (eased * (toNumber - fromNumber)); } else { value = getPathProgress(tween.value, eased * toNumber); } if (round) { if (!(tween.isColor && n > 2)) { value = Math.round(value * round) / round; } } numbers.push(value); } // Manual Array.reduce for better performances var stringsLength = strings.length; if (!stringsLength) { progress = numbers[0]; } else { progress = strings[0]; for (var s = 0; s < stringsLength; s++) { var a = strings[s]; var b = strings[s + 1]; var n$1 = numbers[s]; if (!isNaN(n$1)) { if (!b) { progress += n$1 + ' '; } else { progress += n$1 + b; } } } } setProgressValue[anim.type](animatable.target, anim.property, progress, animatable.transforms); anim.currentValue = progress; i++; } } function setCallback(cb) { if (instance[cb] && !instance.passThrough) { instance[cb](instance); } } function countIteration() { if (instance.remaining && instance.remaining !== true) { instance.remaining--; } } function setInstanceProgress(engineTime) { var insDuration = instance.duration; var insDelay = instance.delay; var insEndDelay = insDuration - instance.endDelay; var insTime = adjustTime(engineTime); instance.progress = minMax((insTime / insDuration) * 100, 0, 100); instance.reversePlayback = insTime < instance.currentTime; if (children) { syncInstanceChildren(insTime); } if (!instance.began && instance.currentTime > 0) { instance.began = true; setCallback('begin'); setCallback('loopBegin'); } if (insTime <= insDelay && instance.currentTime !== 0) { setAnimationsProgress(0); } if ((insTime >= insEndDelay && instance.currentTime !== insDuration) || !insDuration) { setAnimationsProgress(insDuration); } if (insTime > insDelay && insTime < insEndDelay) { if (!instance.changeBegan) { instance.changeBegan = true; instance.changeCompleted = false; setCallback('changeBegin'); } setCallback('change'); setAnimationsProgress(insTime); } else { if (instance.changeBegan) { instance.changeCompleted = true; instance.changeBegan = false; setCallback('changeComplete'); } } instance.currentTime = minMax(insTime, 0, insDuration); if (instance.began) { setCallback('update'); } if (engineTime >= insDuration) { lastTime = 0; countIteration(); if (instance.remaining) { startTime = now; setCallback('loopComplete'); setCallback('loopBegin'); if (instance.direction === 'alternate') { toggleInstanceDirection(); } } else { instance.paused = true; if (!instance.completed) { instance.completed = true; setCallback('loopComplete'); setCallback('complete'); if ('Promise' in window) { resolve(); promise = makePromise(); } } } } } instance.reset = function() { var direction = instance.direction; instance.passThrough = false; instance.currentTime = 0; instance.progress = 0; instance.paused = true; instance.began = false; instance.changeBegan = false; instance.completed = false; instance.changeCompleted = false; instance.reversePlayback = false; instance.reversed = direction === 'reverse'; instance.remaining = instance.loop; children = instance.children; childrenLength = children.length; for (var i = childrenLength; i--;) { instance.children[i].reset(); } if (instance.reversed && instance.loop !== true || (direction === 'alternate' && instance.loop === 1)) { instance.remaining++; } setAnimationsProgress(0); }; // Set Value helper instance.set = function(targets, properties) { setTargetsValue(targets, properties); return instance; }; instance.tick = function(t) { now = t; if (!startTime) { startTime = now; } setInstanceProgress((now + (lastTime - startTime)) * anime.speed); }; instance.seek = function(time) { setInstanceProgress(adjustTime(time)); }; instance.pause = function() { instance.paused = true; resetTime(); }; instance.play = function() { if (!instance.paused) { return; } instance.paused = false; activeInstances.push(instance); resetTime(); if (!raf) { engine(); } }; instance.reverse = function() { toggleInstanceDirection(); resetTime(); }; instance.restart = function() { instance.reset(); instance.play(); }; instance.finished = promise; instance.reset(); if (instance.autoplay) { instance.play(); } return instance; } // Remove targets from animation function removeTargetsFromAnimations(targetsArray, animations) { for (var a = animations.length; a--;) { if (arrayContains(targetsArray, animations[a].animatable.target)) { animations.splice(a, 1); } } } function removeTargets(targets) { var targetsArray = parseTargets(targets); for (var i = activeInstances.length; i--;) { var instance = activeInstances[i]; var animations = instance.animations; var children = instance.children; removeTargetsFromAnimations(targetsArray, animations); for (var c = children.length; c--;) { var child = children[c]; var childAnimations = child.animations; removeTargetsFromAnimations(targetsArray, childAnimations); if (!childAnimations.length && !child.children.length) { children.splice(c, 1); } } if (!animations.length && !children.length) { instance.pause(); } } } // Stagger helpers function stagger(val, params) { if ( params === void 0 ) params = {}; var direction = params.direction || 'normal'; var easing = params.easing ? parseEasings(params.easing) : null; var grid = params.grid; var axis = params.axis; var fromIndex = params.from || 0; var fromFirst = fromIndex === 'first'; var fromCenter = fromIndex === 'center'; var fromLast = fromIndex === 'last'; var isRange = is.arr(val); var val1 = isRange ? parseFloat(val[0]) : parseFloat(val); var val2 = isRange ? parseFloat(val[1]) : 0; var unit = getUnit(isRange ? val[1] : val) || 0; var start = params.start || 0 + (isRange ? val1 : 0); var values = []; var maxValue = 0; return function (el, i, t) { if (fromFirst) { fromIndex = 0; } if (fromCenter) { fromIndex = (t - 1) / 2; } if (fromLast) { fromIndex = t - 1; } if (!values.length) { for (var index = 0; index < t; index++) { if (!grid) { values.push(Math.abs(fromIndex - index)); } else { var fromX = !fromCenter ? fromIndex%grid[0] : (grid[0]-1)/2; var fromY = !fromCenter ? Math.floor(fromIndex/grid[0]) : (grid[1]-1)/2; var toX = index%grid[0]; var toY = Math.floor(index/grid[0]); var distanceX = fromX - toX; var distanceY = fromY - toY; var value = Math.sqrt(distanceX * distanceX + distanceY * distanceY); if (axis === 'x') { value = -distanceX; } if (axis === 'y') { value = -distanceY; } values.push(value); } maxValue = Math.max.apply(Math, values); } if (easing) { values = values.map(function (val) { return easing(val / maxValue) * maxValue; }); } if (direction === 'reverse') { values = values.map(function (val) { return axis ? (val < 0) ? val * -1 : -val : Math.abs(maxValue - val); }); } } var spacing = isRange ? (val2 - val1) / maxValue : val1; return start + (spacing * (Math.round(values[i] * 100) / 100)) + unit; } } // Timeline function timeline(params) { if ( params === void 0 ) params = {}; var tl = anime(params); tl.duration = 0; tl.add = function(instanceParams, timelineOffset) { var tlIndex = activeInstances.indexOf(tl); var children = tl.children; if (tlIndex > -1) { activeInstances.splice(tlIndex, 1); } function passThrough(ins) { ins.passThrough = true; } for (var i = 0; i < children.length; i++) { passThrough(children[i]); } var insParams = mergeObjects(instanceParams, replaceObjectProps(defaultTweenSettings, params)); insParams.targets = insParams.targets || params.targets; var tlDuration = tl.duration; insParams.autoplay = false; insParams.direction = tl.direction; insParams.timelineOffset = is.und(timelineOffset) ? tlDuration : getRelativeValue(timelineOffset, tlDuration); passThrough(tl); tl.seek(insParams.timelineOffset); var ins = anime(insParams); passThrough(ins); children.push(ins); var timings = getInstanceTimings(children, params); tl.delay = timings.delay; tl.endDelay = timings.endDelay; tl.duration = timings.duration; tl.seek(0); tl.reset(); if (tl.autoplay) { tl.play(); } return tl; }; return tl; } anime.version = '3.0.0'; anime.speed = 1; anime.running = activeInstances; anime.remove = removeTargets; anime.get = getOriginalTargetValue; anime.set = setTargetsValue; anime.convertPx = convertPxToUnit; anime.path = getPath; anime.setDashoffset = setDashoffset; anime.stagger = stagger; anime.timeline = timeline; anime.easing = parseEasings; anime.penner = penner; anime.random = function (min, max) { return Math.floor(Math.random() * (max - min + 1)) + min; }; module.exports = anime; ",
    "(function (global, factory) { typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = global || self, factory(global.THREE = {})); }(this, function (exports) { 'use strict'; // Polyfills if ( Number.EPSILON === undefined ) { Number.EPSILON = Math.pow( 2, - 52 ); } if ( Number.isInteger === undefined ) { // Missing in IE // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger Number.isInteger = function ( value ) { return typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value; }; } // if ( Math.sign === undefined ) { // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign Math.sign = function ( x ) { return ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x; }; } if ( 'name' in Function.prototype === false ) { // Missing in IE // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name Object.defineProperty( Function.prototype, 'name', { get: function () { return this.toString().match( /^\s*function\s*([^\(\s]*)/ )[ 1 ]; } } ); } if ( Object.assign === undefined ) { // Missing in IE // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign ( function () { Object.assign = function ( target ) { if ( target === undefined || target === null ) { throw new TypeError( 'Cannot convert undefined or null to object' ); } var output = Object( target ); for ( var index = 1; index < arguments.length; index ++ ) { var source = arguments[ index ]; if ( source !== undefined && source !== null ) { for ( var nextKey in source ) { if ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) { output[ nextKey ] = source[ nextKey ]; } } } } return output; }; } )(); } /** * https://github.com/mrdoob/eventdispatcher.js/ */ function EventDispatcher() {} Object.assign( EventDispatcher.prototype, { addEventListener: function ( type, listener ) { if ( this._listeners === undefined ) this._listeners = {}; var listeners = this._listeners; if ( listeners[ type ] === undefined ) { listeners[ type ] = []; } if ( listeners[ type ].indexOf( listener ) === - 1 ) { listeners[ type ].push( listener ); } }, hasEventListener: function ( type, listener ) { if ( this._listeners === undefined ) return false; var listeners = this._listeners; return listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1; }, removeEventListener: function ( type, listener ) { if ( this._listeners === undefined ) return; var listeners = this._listeners; var listenerArray = listeners[ type ]; if ( listenerArray !== undefined ) { var index = listenerArray.indexOf( listener ); if ( index !== - 1 ) { listenerArray.splice( index, 1 ); } } }, dispatchEvent: function ( event ) { if ( this._listeners === undefined ) return; var listeners = this._listeners; var listenerArray = listeners[ event.type ]; if ( listenerArray !== undefined ) { event.target = this; var array = listenerArray.slice( 0 ); for ( var i = 0, l = array.length; i < l; i ++ ) { array[ i ].call( this, event ); } } } } ); var REVISION = '103dev'; var MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 }; var CullFaceNone = 0; var CullFaceBack = 1; var CullFaceFront = 2; var CullFaceFrontBack = 3; var FrontFaceDirectionCW = 0; var FrontFaceDirectionCCW = 1; var BasicShadowMap = 0; var PCFShadowMap = 1; var PCFSoftShadowMap = 2; var FrontSide = 0; var BackSide = 1; var DoubleSide = 2; var FlatShading = 1; var SmoothShading = 2; var NoColors = 0; var FaceColors = 1; var VertexColors = 2; var NoBlending = 0; var NormalBlending = 1; var AdditiveBlending = 2; var SubtractiveBlending = 3; var MultiplyBlending = 4; var CustomBlending = 5; var AddEquation = 100; var SubtractEquation = 101; var ReverseSubtractEquation = 102; var MinEquation = 103; var MaxEquation = 104; var ZeroFactor = 200; var OneFactor = 201; var SrcColorFactor = 202; var OneMinusSrcColorFactor = 203; var SrcAlphaFactor = 204; var OneMinusSrcAlphaFactor = 205; var DstAlphaFactor = 206; var OneMinusDstAlphaFactor = 207; var DstColorFactor = 208; var OneMinusDstColorFactor = 209; var SrcAlphaSaturateFactor = 210; var NeverDepth = 0; var AlwaysDepth = 1; var LessDepth = 2; var LessEqualDepth = 3; var EqualDepth = 4; var GreaterEqualDepth = 5; var GreaterDepth = 6; var NotEqualDepth = 7; var MultiplyOperation = 0; var MixOperation = 1; var AddOperation = 2; var NoToneMapping = 0; var LinearToneMapping = 1; var ReinhardToneMapping = 2; var Uncharted2ToneMapping = 3; var CineonToneMapping = 4; var ACESFilmicToneMapping = 5; var UVMapping = 300; var CubeReflectionMapping = 301; var CubeRefractionMapping = 302; var EquirectangularReflectionMapping = 303; var EquirectangularRefractionMapping = 304; var SphericalReflectionMapping = 305; var CubeUVReflectionMapping = 306; var CubeUVRefractionMapping = 307; var RepeatWrapping = 1000; var ClampToEdgeWrapping = 1001; var MirroredRepeatWrapping = 1002; var NearestFilter = 1003; var NearestMipMapNearestFilter = 1004; var NearestMipMapLinearFilter = 1005; var LinearFilter = 1006; var LinearMipMapNearestFilter = 1007; var LinearMipMapLinearFilter = 1008; var UnsignedByteType = 1009; var ByteType = 1010; var ShortType = 1011; var UnsignedShortType = 1012; var IntType = 1013; var UnsignedIntType = 1014; var FloatType = 1015; var HalfFloatType = 1016; var UnsignedShort4444Type = 1017; var UnsignedShort5551Type = 1018; var UnsignedShort565Type = 1019; var UnsignedInt248Type = 1020; var AlphaFormat = 1021; var RGBFormat = 1022; var RGBAFormat = 1023; var LuminanceFormat = 1024; var LuminanceAlphaFormat = 1025; var RGBEFormat = RGBAFormat; var DepthFormat = 1026; var DepthStencilFormat = 1027; var RedFormat = 1028; var RGB_S3TC_DXT1_Format = 33776; var RGBA_S3TC_DXT1_Format = 33777; var RGBA_S3TC_DXT3_Format = 33778; var RGBA_S3TC_DXT5_Format = 33779; var RGB_PVRTC_4BPPV1_Format = 35840; var RGB_PVRTC_2BPPV1_Format = 35841; var RGBA_PVRTC_4BPPV1_Format = 35842; var RGBA_PVRTC_2BPPV1_Format = 35843; var RGB_ETC1_Format = 36196; var RGBA_ASTC_4x4_Format = 37808; var RGBA_ASTC_5x4_Format = 37809; var RGBA_ASTC_5x5_Format = 37810; var RGBA_ASTC_6x5_Format = 37811; var RGBA_ASTC_6x6_Format = 37812; var RGBA_ASTC_8x5_Format = 37813; var RGBA_ASTC_8x6_Format = 37814; var RGBA_ASTC_8x8_Format = 37815; var RGBA_ASTC_10x5_Format = 37816; var RGBA_ASTC_10x6_Format = 37817; var RGBA_ASTC_10x8_Format = 37818; var RGBA_ASTC_10x10_Format = 37819; var RGBA_ASTC_12x10_Format = 37820; var RGBA_ASTC_12x12_Format = 37821; var LoopOnce = 2200; var LoopRepeat = 2201; var LoopPingPong = 2202; var InterpolateDiscrete = 2300; var InterpolateLinear = 2301; var InterpolateSmooth = 2302; var ZeroCurvatureEnding = 2400; var ZeroSlopeEnding = 2401; var WrapAroundEnding = 2402; var TrianglesDrawMode = 0; var TriangleStripDrawMode = 1; var TriangleFanDrawMode = 2; var LinearEncoding = 3000; var sRGBEncoding = 3001; var GammaEncoding = 3007; var RGBEEncoding = 3002; var LogLuvEncoding = 3003; var RGBM7Encoding = 3004; var RGBM16Encoding = 3005; var RGBDEncoding = 3006; var BasicDepthPacking = 3200; var RGBADepthPacking = 3201; var TangentSpaceNormalMap = 0; var ObjectSpaceNormalMap = 1; /** * @author alteredq / http://alteredqualia.com/ * @author mrdoob / http://mrdoob.com/ */ var _Math = { DEG2RAD: Math.PI / 180, RAD2DEG: 180 / Math.PI, generateUUID: ( function () { // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136 var lut = []; for ( var i = 0; i < 256; i ++ ) { lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 ); } return function generateUUID() { var d0 = Math.random() * 0xffffffff | 0; var d1 = Math.random() * 0xffffffff | 0; var d2 = Math.random() * 0xffffffff | 0; var d3 = Math.random() * 0xffffffff | 0; var uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' + lut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' + lut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] + lut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ]; // .toUpperCase() here flattens concatenated strings to save heap memory space. return uuid.toUpperCase(); }; } )(), clamp: function ( value, min, max ) { return Math.max( min, Math.min( max, value ) ); }, // compute euclidian modulo of m % n // https://en.wikipedia.org/wiki/Modulo_operation euclideanModulo: function ( n, m ) { return ( ( n % m ) + m ) % m; }, // Linear mapping from range <a1, a2> to range <b1, b2> mapLinear: function ( x, a1, a2, b1, b2 ) { return b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 ); }, // https://en.wikipedia.org/wiki/Linear_interpolation lerp: function ( x, y, t ) { return ( 1 - t ) * x + t * y; }, // http://en.wikipedia.org/wiki/Smoothstep smoothstep: function ( x, min, max ) { if ( x <= min ) return 0; if ( x >= max ) return 1; x = ( x - min ) / ( max - min ); return x * x * ( 3 - 2 * x ); }, smootherstep: function ( x, min, max ) { if ( x <= min ) return 0; if ( x >= max ) return 1; x = ( x - min ) / ( max - min ); return x * x * x * ( x * ( x * 6 - 15 ) + 10 ); }, // Random integer from <low, high> interval randInt: function ( low, high ) { return low + Math.floor( Math.random() * ( high - low + 1 ) ); }, // Random float from <low, high> interval randFloat: function ( low, high ) { return low + Math.random() * ( high - low ); }, // Random float from <-range/2, range/2> interval randFloatSpread: function ( range ) { return range * ( 0.5 - Math.random() ); }, degToRad: function ( degrees ) { return degrees * _Math.DEG2RAD; }, radToDeg: function ( radians ) { return radians * _Math.RAD2DEG; }, isPowerOfTwo: function ( value ) { return ( value & ( value - 1 ) ) === 0 && value !== 0; }, ceilPowerOfTwo: function ( value ) { return Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) ); }, floorPowerOfTwo: function ( value ) { return Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) ); } }; /** * @author mrdoob / http://mrdoob.com/ * @author philogb / http://blog.thejit.org/ * @author egraether / http://egraether.com/ * @author zz85 / http://www.lab4games.net/zz85/blog */ function Vector2( x, y ) { this.x = x || 0; this.y = y || 0; } Object.defineProperties( Vector2.prototype, { "width": { get: function () { return this.x; }, set: function ( value ) { this.x = value; } }, "height": { get: function () { return this.y; }, set: function ( value ) { this.y = value; } } } ); Object.assign( Vector2.prototype, { isVector2: true, set: function ( x, y ) { this.x = x; this.y = y; return this; }, setScalar: function ( scalar ) { this.x = scalar; this.y = scalar; return this; }, setX: function ( x ) { this.x = x; return this; }, setY: function ( y ) { this.y = y; return this; }, setComponent: function ( index, value ) { switch ( index ) { case 0: this.x = value; break; case 1: this.y = value; break; default: throw new Error( 'index is out of range: ' + index ); } return this; }, getComponent: function ( index ) { switch ( index ) { case 0: return this.x; case 1: return this.y; default: throw new Error( 'index is out of range: ' + index ); } }, clone: function () { return new this.constructor( this.x, this.y ); }, copy: function ( v ) { this.x = v.x; this.y = v.y; return this; }, add: function ( v, w ) { if ( w !== undefined ) { console.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' ); return this.addVectors( v, w ); } this.x += v.x; this.y += v.y; return this; }, addScalar: function ( s ) { this.x += s; this.y += s; return this; }, addVectors: function ( a, b ) { this.x = a.x + b.x; this.y = a.y + b.y; return this; }, addScaledVector: function ( v, s ) { this.x += v.x * s; this.y += v.y * s; return this; }, sub: function ( v, w ) { if ( w !== undefined ) { console.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' ); return this.subVectors( v, w ); } this.x -= v.x; this.y -= v.y; return this; }, subScalar: function ( s ) { this.x -= s; this.y -= s; return this; }, subVectors: function ( a, b ) { this.x = a.x - b.x; this.y = a.y - b.y; return this; }, multiply: function ( v ) { this.x *= v.x; this.y *= v.y; return this; }, multiplyScalar: function ( scalar ) { this.x *= scalar; this.y *= scalar; return this; }, divide: function ( v ) { this.x /= v.x; this.y /= v.y; return this; }, divideScalar: function ( scalar ) { return this.multiplyScalar( 1 / scalar ); }, applyMatrix3: function ( m ) { var x = this.x, y = this.y; var e = m.elements; this.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ]; this.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ]; return this; }, min: function ( v ) { this.x = Math.min( this.x, v.x ); this.y = Math.min( this.y, v.y ); return this; }, max: function ( v ) { this.x = Math.max( this.x, v.x ); this.y = Math.max( this.y, v.y ); return this; }, clamp: function ( min, max ) { // assumes min < max, componentwise this.x = Math.max( min.x, Math.min( max.x, this.x ) ); this.y = Math.max( min.y, Math.min( max.y, this.y ) ); return this; }, clampScalar: function () { var min = new Vector2(); var max = new Vector2(); return function clampScalar( minVal, maxVal ) { min.set( minVal, minVal ); max.set( maxVal, maxVal ); return this.clamp( min, max ); }; }(), clampLength: function ( min, max ) { var length = this.length(); return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) ); }, floor: function () { this.x = Math.floor( this.x ); this.y = Math.floor( this.y ); return this; }, ceil: function () { this.x = Math.ceil( this.x ); this.y = Math.ceil( this.y ); return this; }, round: function () { this.x = Math.round( this.x ); this.y = Math.round( this.y ); return this; }, roundToZero: function () { this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x ); this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y ); return this; }, negate: function () { this.x = - this.x; this.y = - this.y; return this; }, dot: function ( v ) { return this.x * v.x + this.y * v.y; }, cross: function ( v ) { return this.x * v.y - this.y * v.x; }, lengthSq: function () { return this.x * this.x + this.y * this.y; }, length: function () { return Math.sqrt( this.x * this.x + this.y * this.y ); }, manhattanLength: function () { return Math.abs( this.x ) + Math.abs( this.y ); }, normalize: function () { return this.divideScalar( this.length() || 1 ); }, angle: function () { // computes the angle in radians with respect to the positive x-axis var angle = Math.atan2( this.y, this.x ); if ( angle < 0 ) angle += 2 * Math.PI; return angle; }, distanceTo: function ( v ) { return Math.sqrt( this.distanceToSquared( v ) ); }, distanceToSquared: function ( v ) { var dx = this.x - v.x, dy = this.y - v.y; return dx * dx + dy * dy; }, manhattanDistanceTo: function ( v ) { return Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ); }, setLength: function ( length ) { return this.normalize().multiplyScalar( length ); }, lerp: function ( v, alpha ) { this.x += ( v.x - this.x ) * alpha; this.y += ( v.y - this.y ) * alpha; return this; }, lerpVectors: function ( v1, v2, alpha ) { return this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 ); }, equals: function ( v ) { return ( ( v.x === this.x ) && ( v.y === this.y ) ); }, fromArray: function ( array, offset ) { if ( offset === undefined ) offset = 0; this.x = array[ offset ]; this.y = array[ offset + 1 ]; return this; }, toArray: function ( array, offset ) { if ( array === undefined ) array = []; if ( offset === undefined ) offset = 0; array[ offset ] = this.x; array[ offset + 1 ] = this.y; return array; }, fromBufferAttribute: function ( attribute, index, offset ) { if ( offset !== undefined ) { console.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' ); } this.x = attribute.getX( index ); this.y = attribute.getY( index ); return this; }, rotateAround: function ( center, angle ) { var c = Math.cos( angle ), s = Math.sin( angle ); var x = this.x - center.x; var y = this.y - center.y; this.x = x * c - y * s + center.x; this.y = x * s + y * c + center.y; return this; } } ); /** * @author mrdoob / http://mrdoob.com/ * @author supereggbert / http://www.paulbrunt.co.uk/ * @author philogb / http://blog.thejit.org/ * @author jordi_ros / http://plattsoft.com * @author D1plo1d / http://github.com/D1plo1d * @author alteredq / http://alteredqualia.com/ * @author mikael emtinger / http://gomo.se/ * @author timknip / http://www.floorplanner.com/ * @author bhouston / http://clara.io * @author WestLangley / http://github.com/WestLangley */ function Matrix4() { this.elements = [ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ]; if ( arguments.length > 0 ) { console.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' ); } } Object.assign( Matrix4.prototype, { isMatrix4: true, set: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) { var te = this.elements; te[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14; te[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24; te[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34; te[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44; return this; }, identity: function () { this.set( 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ); return this; }, clone: function () { return new Matrix4().fromArray( this.elements ); }, copy: function ( m ) { var te = this.elements; var me = m.elements; te[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ]; te[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ]; return this; }, copyPosition: function ( m ) { var te = this.elements, me = m.elements; te[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; return this; }, extractBasis: function ( xAxis, yAxis, zAxis ) { xAxis.setFromMatrixColumn( this, 0 ); yAxis.setFromMatrixColumn( this, 1 ); zAxis.setFromMatrixColumn( this, 2 ); return this; }, makeBasis: function ( xAxis, yAxis, zAxis ) { this.set( xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1 ); return this; }, extractRotation: function () { var v1 = new Vector3(); return function extractRotation( m ) { // this method does not support reflection matrices var te = this.elements; var me = m.elements; var scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length(); var scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length(); var scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length(); te[ 0 ] = me[ 0 ] * scaleX; te[ 1 ] = me[ 1 ] * scaleX; te[ 2 ] = me[ 2 ] * scaleX; te[ 3 ] = 0; te[ 4 ] = me[ 4 ] * scaleY; te[ 5 ] = me[ 5 ] * scaleY; te[ 6 ] = me[ 6 ] * scaleY; te[ 7 ] = 0; te[ 8 ] = me[ 8 ] * scaleZ; te[ 9 ] = me[ 9 ] * scaleZ; te[ 10 ] = me[ 10 ] * scaleZ; te[ 11 ] = 0; te[ 12 ] = 0; te[ 13 ] = 0; te[ 14 ] = 0; te[ 15 ] = 1; return this; }; }(), makeRotationFromEuler: function ( euler ) { if ( ! ( euler && euler.isEuler ) ) { console.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' ); } var te = this.elements; var x = euler.x, y = euler.y, z = euler.z; var a = Math.cos( x ), b = Math.sin( x ); var c = Math.cos( y ), d = Math.sin( y ); var e = Math.cos( z ), f = Math.sin( z ); if ( euler.order === 'XYZ' ) { var ae = a * e, af = a * f, be = b * e, bf = b * f; te[ 0 ] = c * e; te[ 4 ] = - c * f; te[ 8 ] = d; te[ 1 ] = af + be * d; te[ 5 ] = ae - bf * d; te[ 9 ] = - b * c; te[ 2 ] = bf - ae * d; te[ 6 ] = be + af * d; te[ 10 ] = a * c; } else if ( euler.order === 'YXZ' ) { var ce = c * e, cf = c * f, de = d * e, df = d * f; te[ 0 ] = ce + df * b; te[ 4 ] = de * b - cf; te[ 8 ] = a * d; te[ 1 ] = a * f; te[ 5 ] = a * e; te[ 9 ] = - b; te[ 2 ] = cf * b - de; te[ 6 ] = df + ce * b; te[ 10 ] = a * c; } else if ( euler.order === 'ZXY' ) { var ce = c * e, cf = c * f, de = d * e, df = d * f; te[ 0 ] = ce - df * b; te[ 4 ] = - a * f; te[ 8 ] = de + cf * b; te[ 1 ] = cf + de * b; te[ 5 ] = a * e; te[ 9 ] = df - ce * b; te[ 2 ] = - a * d; te[ 6 ] = b; te[ 10 ] = a * c; } else if ( euler.order === 'ZYX' ) { var ae = a * e, af = a * f, be = b * e, bf = b * f; te[ 0 ] = c * e; te[ 4 ] = be * d - af; te[ 8 ] = ae * d + bf; te[ 1 ] = c * f; te[ 5 ] = bf * d + ae; te[ 9 ] = af * d - be; te[ 2 ] = - d; te[ 6 ] = b * c; te[ 10 ] = a * c; } else if ( euler.order === 'YZX' ) { var ac = a * c, ad = a * d, bc = b * c, bd = b * d; te[ 0 ] = c * e; te[ 4 ] = bd - ac * f; te[ 8 ] = bc * f + ad; te[ 1 ] = f; te[ 5 ] = a * e; te[ 9 ] = - b * e; te[ 2 ] = - d * e; te[ 6 ] = ad * f + bc; te[ 10 ] = ac - bd * f; } else if ( euler.order === 'XZY' ) { var ac = a * c, ad = a * d, bc = b * c, bd = b * d; te[ 0 ] = c * e; te[ 4 ] = - f; te[ 8 ] = d * e; te[ 1 ] = ac * f + bd; te[ 5 ] = a * e; te[ 9 ] = ad * f - bc; te[ 2 ] = bc * f - ad; te[ 6 ] = b * e; te[ 10 ] = bd * f + ac; } // bottom row te[ 3 ] = 0; te[ 7 ] = 0; te[ 11 ] = 0; // last column te[ 12 ] = 0; te[ 13 ] = 0; te[ 14 ] = 0; te[ 15 ] = 1; return this; }, makeRotationFromQuaternion: function () { var zero = new Vector3( 0, 0, 0 ); var one = new Vector3( 1, 1, 1 ); return function makeRotationFromQuaternion( q ) { return this.compose( zero, q, one ); }; }(), lookAt: function () { var x = new Vector3(); var y = new Vector3(); var z = new Vector3(); return function lookAt( eye, target, up ) { var te = this.elements; z.subVectors( eye, target ); if ( z.lengthSq() === 0 ) { // eye and target are in the same position z.z = 1; } z.normalize(); x.crossVectors( up, z ); if ( x.lengthSq() === 0 ) { // up and z are parallel if ( Math.abs( up.z ) === 1 ) { z.x += 0.0001; } else { z.z += 0.0001; } z.normalize(); x.crossVectors( up, z ); } x.normalize(); y.crossVectors( z, x ); te[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x; te[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y; te[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z; return this; }; }(), multiply: function ( m, n ) { if ( n !== undefined ) { console.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' ); return this.multiplyMatrices( m, n ); } return this.multiplyMatrices( this, m ); }, premultiply: function ( m ) { return this.multiplyMatrices( m, this ); }, multiplyMatrices: function ( a, b ) { var ae = a.elements; var be = b.elements; var te = this.elements; var a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ]; var a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ]; var a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ]; var a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ]; var b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ]; var b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ]; var b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ]; var b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ]; te[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41; te[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42; te[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43; te[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44; te[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41; te[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42; te[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43; te[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44; te[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41; te[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42; te[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43; te[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44; te[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41; te[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42; te[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43; te[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44; return this; }, multiplyScalar: function ( s ) { var te = this.elements; te[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s; te[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s; te[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s; te[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s; return this; }, applyToBufferAttribute: function () { var v1 = new Vector3(); return function applyToBufferAttribute( attribute ) { for ( var i = 0, l = attribute.count; i < l; i ++ ) { v1.x = attribute.getX( i ); v1.y = attribute.getY( i ); v1.z = attribute.getZ( i ); v1.applyMatrix4( this ); attribute.setXYZ( i, v1.x, v1.y, v1.z ); } return attribute; }; }(), determinant: function () { var te = this.elements; var n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ]; var n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ]; var n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ]; var n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ]; //TODO: make this more efficient //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm ) return ( n41 * ( + n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34 ) + n42 * ( + n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31 ) + n43 * ( + n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31 ) + n44 * ( - n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31 ) ); }, transpose: function () { var te = this.elements; var tmp; tmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp; tmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp; tmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp; tmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp; tmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp; tmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp; return this; }, setPosition: function ( v ) { var te = this.elements; te[ 12 ] = v.x; te[ 13 ] = v.y; te[ 14 ] = v.z; return this; }, getInverse: function ( m, throwOnDegenerate ) { // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm var te = this.elements, me = m.elements, n11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ], n12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ], n13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ], n14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ], t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44, t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44, t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44, t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34; var det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14; if ( det === 0 ) { var msg = "THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0"; if ( throwOnDegenerate === true ) { throw new Error( msg ); } else { console.warn( msg ); } return this.identity(); } var detInv = 1 / det; te[ 0 ] = t11 * detInv; te[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv; te[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv; te[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv; te[ 4 ] = t12 * detInv; te[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv; te[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv; te[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv; te[ 8 ] = t13 * detInv; te[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv; te[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv; te[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv; te[ 12 ] = t14 * detInv; te[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv; te[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv; te[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv; return this; }, scale: function ( v ) { var te = this.elements; var x = v.x, y = v.y, z = v.z; te[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z; te[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z; te[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z; te[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z; return this; }, getMaxScaleOnAxis: function () { var te = this.elements; var scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ]; var scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ]; var scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ]; return Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) ); }, makeTranslation: function ( x, y, z ) { this.set( 1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1 ); return this; }, makeRotationX: function ( theta ) { var c = Math.cos( theta ), s = Math.sin( theta ); this.set( 1, 0, 0, 0, 0, c, - s, 0, 0, s, c, 0, 0, 0, 0, 1 ); return this; }, makeRotationY: function ( theta ) { var c = Math.cos( theta ), s = Math.sin( theta ); this.set( c, 0, s, 0, 0, 1, 0, 0, - s, 0, c, 0, 0, 0, 0, 1 ); return this; }, makeRotationZ: function ( theta ) { var c = Math.cos( theta ), s = Math.sin( theta ); this.set( c, - s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ); return this; }, makeRotationAxis: function ( axis, angle ) { // Based on http://www.gamedev.net/reference/articles/article1199.asp var c = Math.cos( angle ); var s = Math.sin( angle ); var t = 1 - c; var x = axis.x, y = axis.y, z = axis.z; var tx = t * x, ty = t * y; this.set( tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1 ); return this; }, makeScale: function ( x, y, z ) { this.set( x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1 ); return this; }, makeShear: function ( x, y, z ) { this.set( 1, y, z, 0, x, 1, z, 0, x, y, 1, 0, 0, 0, 0, 1 ); return this; }, compose: function ( position, quaternion, scale ) { var te = this.elements; var x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w; var x2 = x + x, y2 = y + y, z2 = z + z; var xx = x * x2, xy = x * y2, xz = x * z2; var yy = y * y2, yz = y * z2, zz = z * z2; var wx = w * x2, wy = w * y2, wz = w * z2; var sx = scale.x, sy = scale.y, sz = scale.z; te[ 0 ] = ( 1 - ( yy + zz ) ) * sx; te[ 1 ] = ( xy + wz ) * sx; te[ 2 ] = ( xz - wy ) * sx; te[ 3 ] = 0; te[ 4 ] = ( xy - wz ) * sy; te[ 5 ] = ( 1 - ( xx + zz ) ) * sy; te[ 6 ] = ( yz + wx ) * sy; te[ 7 ] = 0; te[ 8 ] = ( xz + wy ) * sz; te[ 9 ] = ( yz - wx ) * sz; te[ 10 ] = ( 1 - ( xx + yy ) ) * sz; te[ 11 ] = 0; te[ 12 ] = position.x; te[ 13 ] = position.y; te[ 14 ] = position.z; te[ 15 ] = 1; return this; }, decompose: function () { var vector = new Vector3(); var matrix = new Matrix4(); return function decompose( position, quaternion, scale ) { var te = this.elements; var sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length(); var sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length(); var sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length(); // if determine is negative, we need to invert one scale var det = this.determinant(); if ( det < 0 ) sx = - sx; position.x = te[ 12 ]; position.y = te[ 13 ]; position.z = te[ 14 ]; // scale the rotation part matrix.copy( this ); var invSX = 1 / sx; var invSY = 1 / sy; var invSZ = 1 / sz; matrix.elements[ 0 ] *= invSX; matrix.elements[ 1 ] *= invSX; matrix.elements[ 2 ] *= invSX; matrix.elements[ 4 ] *= invSY; matrix.elements[ 5 ] *= invSY; matrix.elements[ 6 ] *= invSY; matrix.elements[ 8 ] *= invSZ; matrix.elements[ 9 ] *= invSZ; matrix.elements[ 10 ] *= invSZ; quaternion.setFromRotationMatrix( matrix ); scale.x = sx; scale.y = sy; scale.z = sz; return this; }; }(), makePerspective: function ( left, right, top, bottom, near, far ) { if ( far === undefined ) { console.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' ); } var te = this.elements; var x = 2 * near / ( right - left ); var y = 2 * near / ( top - bottom ); var a = ( right + left ) / ( right - left ); var b = ( top + bottom ) / ( top - bottom ); var c = - ( far + near ) / ( far - near ); var d = - 2 * far * near / ( far - near ); te[ 0 ] = x; te[ 4 ] = 0; te[ 8 ] = a; te[ 12 ] = 0; te[ 1 ] = 0; te[ 5 ] = y; te[ 9 ] = b; te[ 13 ] = 0; te[ 2 ] = 0; te[ 6 ] = 0; te[ 10 ] = c; te[ 14 ] = d; te[ 3 ] = 0; te[ 7 ] = 0; te[ 11 ] = - 1; te[ 15 ] = 0; return this; }, makeOrthographic: function ( left, right, top, bottom, near, far ) { var te = this.elements; var w = 1.0 / ( right - left ); var h = 1.0 / ( top - bottom ); var p = 1.0 / ( far - near ); var x = ( right + left ) * w; var y = ( top + bottom ) * h; var z = ( far + near ) * p; te[ 0 ] = 2 * w; te[ 4 ] = 0; te[ 8 ] = 0; te[ 12 ] = - x; te[ 1 ] = 0; te[ 5 ] = 2 * h; te[ 9 ] = 0; te[ 13 ] = - y; te[ 2 ] = 0; te[ 6 ] = 0; te[ 10 ] = - 2 * p; te[ 14 ] = - z; te[ 3 ] = 0; te[ 7 ] = 0; te[ 11 ] = 0; te[ 15 ] = 1; return this; }, equals: function ( matrix ) { var te = this.elements; var me = matrix.elements; for ( var i = 0; i < 16; i ++ ) { if ( te[ i ] !== me[ i ] ) return false; } return true; }, fromArray: function ( array, offset ) { if ( offset === undefined ) offset = 0; for ( var i = 0; i < 16; i ++ ) { this.elements[ i ] = array[ i + offset ]; } return this; }, toArray: function ( array, offset ) { if ( array === undefined ) array = []; if ( offset === undefined ) offset = 0; var te = this.elements; array[ offset ] = te[ 0 ]; array[ offset + 1 ] = te[ 1 ]; array[ offset + 2 ] = te[ 2 ]; array[ offset + 3 ] = te[ 3 ]; array[ offset + 4 ] = te[ 4 ]; array[ offset + 5 ] = te[ 5 ]; array[ offset + 6 ] = te[ 6 ]; array[ offset + 7 ] = te[ 7 ]; array[ offset + 8 ] = te[ 8 ]; array[ offset + 9 ] = te[ 9 ]; array[ offset + 10 ] = te[ 10 ]; array[ offset + 11 ] = te[ 11 ]; array[ offset + 12 ] = te[ 12 ]; array[ offset + 13 ] = te[ 13 ]; array[ offset + 14 ] = te[ 14 ]; array[ offset + 15 ] = te[ 15 ]; return array; } } ); /** * @author mikael emtinger / http://gomo.se/ * @author alteredq / http://alteredqualia.com/ * @author WestLangley / http://github.com/WestLangley * @author bhouston / http://clara.io */ function Quaternion( x, y, z, w ) { this._x = x || 0; this._y = y || 0; this._z = z || 0; this._w = ( w !== undefined ) ? w : 1; } Object.assign( Quaternion, { slerp: function ( qa, qb, qm, t ) { return qm.copy( qa ).slerp( qb, t ); }, slerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) { // fuzz-free, array-based Quaternion SLERP operation var x0 = src0[ srcOffset0 + 0 ], y0 = src0[ srcOffset0 + 1 ], z0 = src0[ srcOffset0 + 2 ], w0 = src0[ srcOffset0 + 3 ], x1 = src1[ srcOffset1 + 0 ], y1 = src1[ srcOffset1 + 1 ], z1 = src1[ srcOffset1 + 2 ], w1 = src1[ srcOffset1 + 3 ]; if ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) { var s = 1 - t, cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1, dir = ( cos >= 0 ? 1 : - 1 ), sqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems: if ( sqrSin > Number.EPSILON ) { var sin = Math.sqrt( sqrSin ), len = Math.atan2( sin, cos * dir ); s = Math.sin( s * len ) / sin; t = Math.sin( t * len ) / sin; } var tDir = t * dir; x0 = x0 * s + x1 * tDir; y0 = y0 * s + y1 * tDir; z0 = z0 * s + z1 * tDir; w0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp: if ( s === 1 - t ) { var f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 ); x0 *= f; y0 *= f; z0 *= f; w0 *= f; } } dst[ dstOffset ] = x0; dst[ dstOffset + 1 ] = y0; dst[ dstOffset + 2 ] = z0; dst[ dstOffset + 3 ] = w0; } } ); Object.defineProperties( Quaternion.prototype, { x: { get: function () { return this._x; }, set: function ( value ) { this._x = value; this.onChangeCallback(); } }, y: { get: function () { return this._y; }, set: function ( value ) { this._y = value; this.onChangeCallback(); } }, z: { get: function () { return this._z; }, set: function ( value ) { this._z = value; this.onChangeCallback(); } }, w: { get: function () { return this._w; }, set: function ( value ) { this._w = value; this.onChangeCallback(); } } } ); Object.assign( Quaternion.prototype, { isQuaternion: true, set: function ( x, y, z, w ) { this._x = x; this._y = y; this._z = z; this._w = w; this.onChangeCallback(); return this; }, clone: function () { return new this.constructor( this._x, this._y, this._z, this._w ); }, copy: function ( quaternion ) { this._x = quaternion.x; this._y = quaternion.y; this._z = quaternion.z; this._w = quaternion.w; this.onChangeCallback(); return this; }, setFromEuler: function ( euler, update ) { if ( ! ( euler && euler.isEuler ) ) { throw new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' ); } var x = euler._x, y = euler._y, z = euler._z, order = euler.order; // http://www.mathworks.com/matlabcentral/fileexchange/ // 20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/ // content/SpinCalc.m var cos = Math.cos; var sin = Math.sin; var c1 = cos( x / 2 ); var c2 = cos( y / 2 ); var c3 = cos( z / 2 ); var s1 = sin( x / 2 ); var s2 = sin( y / 2 ); var s3 = sin( z / 2 ); if ( order === 'XYZ' ) { this._x = s1 * c2 * c3 + c1 * s2 * s3; this._y = c1 * s2 * c3 - s1 * c2 * s3; this._z = c1 * c2 * s3 + s1 * s2 * c3; this._w = c1 * c2 * c3 - s1 * s2 * s3; } else if ( order === 'YXZ' ) { this._x = s1 * c2 * c3 + c1 * s2 * s3; this._y = c1 * s2 * c3 - s1 * c2 * s3; this._z = c1 * c2 * s3 - s1 * s2 * c3; this._w = c1 * c2 * c3 + s1 * s2 * s3; } else if ( order === 'ZXY' ) { this._x = s1 * c2 * c3 - c1 * s2 * s3; this._y = c1 * s2 * c3 + s1 * c2 * s3; this._z = c1 * c2 * s3 + s1 * s2 * c3; this._w = c1 * c2 * c3 - s1 * s2 * s3; } else if ( order === 'ZYX' ) { this._x = s1 * c2 * c3 - c1 * s2 * s3; this._y = c1 * s2 * c3 + s1 * c2 * s3; this._z = c1 * c2 * s3 - s1 * s2 * c3; this._w = c1 * c2 * c3 + s1 * s2 * s3; } else if ( order === 'YZX' ) { this._x = s1 * c2 * c3 + c1 * s2 * s3; this._y = c1 * s2 * c3 + s1 * c2 * s3; this._z = c1 * c2 * s3 - s1 * s2 * c3; this._w = c1 * c2 * c3 - s1 * s2 * s3; } else if ( order === 'XZY' ) { this._x = s1 * c2 * c3 - c1 * s2 * s3; this._y = c1 * s2 * c3 - s1 * c2 * s3; this._z = c1 * c2 * s3 + s1 * s2 * c3; this._w = c1 * c2 * c3 + s1 * s2 * s3; } if ( update !== false ) this.onChangeCallback(); return this; }, setFromAxisAngle: function ( axis, angle ) { // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm // assumes axis is normalized var halfAngle = angle / 2, s = Math.sin( halfAngle ); this._x = axis.x * s; this._y = axis.y * s; this._z = axis.z * s; this._w = Math.cos( halfAngle ); this.onChangeCallback(); return this; }, setFromRotationMatrix: function ( m ) { // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled) var te = m.elements, m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ], m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ], m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ], trace = m11 + m22 + m33, s; if ( trace > 0 ) { s = 0.5 / Math.sqrt( trace + 1.0 ); this._w = 0.25 / s; this._x = ( m32 - m23 ) * s; this._y = ( m13 - m31 ) * s; this._z = ( m21 - m12 ) * s; } else if ( m11 > m22 && m11 > m33 ) { s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 ); this._w = ( m32 - m23 ) / s; this._x = 0.25 * s; this._y = ( m12 + m21 ) / s; this._z = ( m13 + m31 ) / s; } else if ( m22 > m33 ) { s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 ); this._w = ( m13 - m31 ) / s; this._x = ( m12 + m21 ) / s; this._y = 0.25 * s; this._z = ( m23 + m32 ) / s; } else { s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 ); this._w = ( m21 - m12 ) / s; this._x = ( m13 + m31 ) / s; this._y = ( m23 + m32 ) / s; this._z = 0.25 * s; } this.onChangeCallback(); return this; }, setFromUnitVectors: function () { // assumes direction vectors vFrom and vTo are normalized var v1 = new Vector3(); var r; var EPS = 0.000001; return function setFromUnitVectors( vFrom, vTo ) { if ( v1 === undefined ) v1 = new Vector3(); r = vFrom.dot( vTo ) + 1; if ( r < EPS ) { r = 0; if ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) { v1.set( - vFrom.y, vFrom.x, 0 ); } else { v1.set( 0, - vFrom.z, vFrom.y ); } } else { v1.crossVectors( vFrom, vTo ); } this._x = v1.x; this._y = v1.y; this._z = v1.z; this._w = r; return this.normalize(); }; }(), angleTo: function ( q ) { return 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) ); }, rotateTowards: function ( q, step ) { var angle = this.angleTo( q ); if ( angle === 0 ) return this; var t = Math.min( 1, step / angle ); this.slerp( q, t ); return this; }, inverse: function () { // quaternion is assumed to have unit length return this.conjugate(); }, conjugate: function () { this._x *= - 1; this._y *= - 1; this._z *= - 1; this.onChangeCallback(); return this; }, dot: function ( v ) { return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w; }, lengthSq: function () { return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w; }, length: function () { return Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w ); }, normalize: function () { var l = this.length(); if ( l === 0 ) { this._x = 0; this._y = 0; this._z = 0; this._w = 1; } else { l = 1 / l; this._x = this._x * l; this._y = this._y * l; this._z = this._z * l; this._w = this._w * l; } this.onChangeCallback(); return this; }, multiply: function ( q, p ) { if ( p !== undefined ) { console.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' ); return this.multiplyQuaternions( q, p ); } return this.multiplyQuaternions( this, q ); }, premultiply: function ( q ) { return this.multiplyQuaternions( q, this ); }, multiplyQuaternions: function ( a, b ) { // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm var qax = a._x, qay = a._y, qaz = a._z, qaw = a._w; var qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w; this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby; this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz; this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx; this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz; this.onChangeCallback(); return this; }, slerp: function ( qb, t ) { if ( t === 0 ) return this; if ( t === 1 ) return this.copy( qb ); var x = this._x, y = this._y, z = this._z, w = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/ var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z; if ( cosHalfTheta < 0 ) { this._w = - qb._w; this._x = - qb._x; this._y = - qb._y; this._z = - qb._z; cosHalfTheta = - cosHalfTheta; } else { this.copy( qb ); } if ( cosHalfTheta >= 1.0 ) { this._w = w; this._x = x; this._y = y; this._z = z; return this; } var sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta; if ( sqrSinHalfTheta <= Number.EPSILON ) { var s = 1 - t; this._w = s * w + t * this._w; this._x = s * x + t * this._x; this._y = s * y + t * this._y; this._z = s * z + t * this._z; return this.normalize(); } var sinHalfTheta = Math.sqrt( sqrSinHalfTheta ); var halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta ); var ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta, ratioB = Math.sin( t * halfTheta ) / sinHalfTheta; this._w = ( w * ratioA + this._w * ratioB ); this._x = ( x * ratioA + this._x * ratioB ); this._y = ( y * ratioA + this._y * ratioB ); this._z = ( z * ratioA + this._z * ratioB ); this.onChangeCallback(); return this; }, equals: function ( quaternion ) { return ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w ); }, fromArray: function ( array, offset ) { if ( offset === undefined ) offset = 0; this._x = array[ offset ]; this._y = array[ offset + 1 ]; this._z = array[ offset + 2 ]; this._w = array[ offset + 3 ]; this.onChangeCallback(); return this; }, toArray: function ( array, offset ) { if ( array === undefined ) array = []; if ( offset === undefined ) offset = 0; array[ offset ] = this._x; array[ offset + 1 ] = this._y; array[ offset + 2 ] = this._z; array[ offset + 3 ] = this._w; return array; }, onChange: function ( callback ) { this.onChangeCallback = callback; return this; }, onChangeCallback: function () {} } ); /** * @author mrdoob / http://mrdoob.com/ * @author kile / http://kile.stravaganza.org/ * @author philogb / http://blog.thejit.org/ * @author mikael emtinger / http://gomo.se/ * @author egraether / http://egraether.com/ * @author WestLangley / http://github.com/WestLangley */ function Vector3( x, y, z ) { this.x = x || 0; this.y = y || 0; this.z = z || 0; } Object.assign( Vector3.prototype, { isVector3: true, set: function ( x, y, z ) { this.x = x; this.y = y; this.z = z; return this; }, setScalar: function ( scalar ) { this.x = scalar; this.y = scalar; this.z = scalar; return this; }, setX: function ( x ) { this.x = x; return this; }, setY: function ( y ) { this.y = y; return this; }, setZ: function ( z ) { this.z = z; return this; }, setComponent: function ( index, value ) { switch ( index ) { case 0: this.x = value; break; case 1: this.y = value; break; case 2: this.z = value; break; default: throw new Error( 'index is out of range: ' + index ); } return this; }, getComponent: function ( index ) { switch ( index ) { case 0: return this.x; case 1: return this.y; case 2: return this.z; default: throw new Error( 'index is out of range: ' + index ); } }, clone: function () { return new this.constructor( this.x, this.y, this.z ); }, copy: function ( v ) { this.x = v.x; this.y = v.y; this.z = v.z; return this; }, add: function ( v, w ) { if ( w !== undefined ) { console.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' ); return this.addVectors( v, w ); } this.x += v.x; this.y += v.y; this.z += v.z; return this; }, addScalar: function ( s ) { this.x += s; this.y += s; this.z += s; return this; }, addVectors: function ( a, b ) { this.x = a.x + b.x; this.y = a.y + b.y; this.z = a.z + b.z; return this; }, addScaledVector: function ( v, s ) { this.x += v.x * s; this.y += v.y * s; this.z += v.z * s; return this; }, sub: function ( v, w ) { if ( w !== undefined ) { console.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' ); return this.subVectors( v, w ); } this.x -= v.x; this.y -= v.y; this.z -= v.z; return this; }, subScalar: function ( s ) { this.x -= s; this.y -= s; this.z -= s; return this; }, subVectors: function ( a, b ) { this.x = a.x - b.x; this.y = a.y - b.y; this.z = a.z - b.z; return this; }, multiply: function ( v, w ) { if ( w !== undefined ) { console.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' ); return this.multiplyVectors( v, w ); } this.x *= v.x; this.y *= v.y; this.z *= v.z; return this; }, multiplyScalar: function ( scalar ) { this.x *= scalar; this.y *= scalar; this.z *= scalar; return this; }, multiplyVectors: function ( a, b ) { this.x = a.x * b.x; this.y = a.y * b.y; this.z = a.z * b.z; return this; }, applyEuler: function () { var quaternion = new Quaternion(); return function applyEuler( euler ) { if ( ! ( euler && euler.isEuler ) ) { console.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' ); } return this.applyQuaternion( quaternion.setFromEuler( euler ) ); }; }(), applyAxisAngle: function () { var quaternion = new Quaternion(); return function applyAxisAngle( axis, angle ) { return this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) ); }; }(), applyMatrix3: function ( m ) { var x = this.x, y = this.y, z = this.z; var e = m.elements; this.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z; this.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z; this.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z; return this; }, applyMatrix4: function ( m ) { var x = this.x, y = this.y, z = this.z; var e = m.elements; var w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); this.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w; this.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w; this.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w; return this; }, applyQuaternion: function ( q ) { var x = this.x, y = this.y, z = this.z; var qx = q.x, qy = q.y, qz = q.z, qw = q.w; // calculate quat * vector var ix = qw * x + qy * z - qz * y; var iy = qw * y + qz * x - qx * z; var iz = qw * z + qx * y - qy * x; var iw = - qx * x - qy * y - qz * z; // calculate result * inverse quat this.x = ix * qw + iw * - qx + iy * - qz - iz * - qy; this.y = iy * qw + iw * - qy + iz * - qx - ix * - qz; this.z = iz * qw + iw * - qz + ix * - qy - iy * - qx; return this; }, project: function ( camera ) { return this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix ); }, unproject: function () { var matrix = new Matrix4(); return function unproject( camera ) { return this.applyMatrix4( matrix.getInverse( camera.projectionMatrix ) ).applyMatrix4( camera.matrixWorld ); }; }(), transformDirection: function ( m ) { // input: THREE.Matrix4 affine matrix // vector interpreted as a direction var x = this.x, y = this.y, z = this.z; var e = m.elements; this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z; this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z; this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z; return this.normalize(); }, divide: function ( v ) { this.x /= v.x; this.y /= v.y; this.z /= v.z; return this; }, divideScalar: function ( scalar ) { return this.multiplyScalar( 1 / scalar ); }, min: function ( v ) { this.x = Math.min( this.x, v.x ); this.y = Math.min( this.y, v.y ); this.z = Math.min( this.z, v.z ); return this; }, max: function ( v ) { this.x = Math.max( this.x, v.x ); this.y = Math.max( this.y, v.y ); this.z = Math.max( this.z, v.z ); return this; }, clamp: function ( min, max ) { // assumes min < max, componentwise this.x = Math.max( min.x, Math.min( max.x, this.x ) ); this.y = Math.max( min.y, Math.min( max.y, this.y ) ); this.z = Math.max( min.z, Math.min( max.z, this.z ) ); return this; }, clampScalar: function () { var min = new Vector3(); var max = new Vector3(); return function clampScalar( minVal, maxVal ) { min.set( minVal, minVal, minVal ); max.set( maxVal, maxVal, maxVal ); return this.clamp( min, max ); }; }(), clampLength: function ( min, max ) { var length = this.length(); return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) ); }, floor: function () { this.x = Math.floor( this.x ); this.y = Math.floor( this.y ); this.z = Math.floor( this.z ); return this; }, ceil: function () { this.x = Math.ceil( this.x ); this.y = Math.ceil( this.y ); this.z = Math.ceil( this.z ); return this; }, round: function () { this.x = Math.round( this.x ); this.y = Math.round( this.y ); this.z = Math.round( this.z ); return this; }, roundToZero: function () { this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x ); this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y ); this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z ); return this; }, negate: function () { this.x = - this.x; this.y = - this.y; this.z = - this.z; return this; }, dot: function ( v ) { return this.x * v.x + this.y * v.y + this.z * v.z; }, // TODO lengthSquared? lengthSq: function () { return this.x * this.x + this.y * this.y + this.z * this.z; }, length: function () { return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z ); }, manhattanLength: function () { return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ); }, normalize: function () { return this.divideScalar( this.length() || 1 ); }, setLength: function ( length ) { return this.normalize().multiplyScalar( length ); }, lerp: function ( v, alpha ) { this.x += ( v.x - this.x ) * alpha; this.y += ( v.y - this.y ) * alpha; this.z += ( v.z - this.z ) * alpha; return this; }, lerpVectors: function ( v1, v2, alpha ) { return this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 ); }, cross: function ( v, w ) { if ( w !== undefined ) { console.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' ); return this.crossVectors( v, w ); } return this.crossVectors( this, v ); }, crossVectors: function ( a, b ) { var ax = a.x, ay = a.y, az = a.z; var bx = b.x, by = b.y, bz = b.z; this.x = ay * bz - az * by; this.y = az * bx - ax * bz; this.z = ax * by - ay * bx; return this; }, projectOnVector: function ( vector ) { var scalar = vector.dot( this ) / vector.lengthSq(); return this.copy( vector ).multiplyScalar( scalar ); }, projectOnPlane: function () { var v1 = new Vector3(); return function projectOnPlane( planeNormal ) { v1.copy( this ).projectOnVector( planeNormal ); return this.sub( v1 ); }; }(), reflect: function () { // reflect incident vector off plane orthogonal to normal // normal is assumed to have unit length var v1 = new Vector3(); return function reflect( normal ) { return this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) ); }; }(), angleTo: function ( v ) { var theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) ); // clamp, to handle numerical problems return Math.acos( _Math.clamp( theta, - 1, 1 ) ); }, distanceTo: function ( v ) { return Math.sqrt( this.distanceToSquared( v ) ); }, distanceToSquared: function ( v ) { var dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z; return dx * dx + dy * dy + dz * dz; }, manhattanDistanceTo: function ( v ) { return Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z ); }, setFromSpherical: function ( s ) { return this.setFromSphericalCoords( s.radius, s.phi, s.theta ); }, setFromSphericalCoords: function ( radius, phi, theta ) { var sinPhiRadius = Math.sin( phi ) * radius; this.x = sinPhiRadius * Math.sin( theta ); this.y = Math.cos( phi ) * radius; this.z = sinPhiRadius * Math.cos( theta ); return this; }, setFromCylindrical: function ( c ) { return this.setFromCylindricalCoords( c.radius, c.theta, c.y ); }, setFromCylindricalCoords: function ( radius, theta, y ) { this.x = radius * Math.sin( theta ); this.y = y; this.z = radius * Math.cos( theta ); return this; }, setFromMatrixPosition: function ( m ) { var e = m.elements; this.x = e[ 12 ]; this.y = e[ 13 ]; this.z = e[ 14 ]; return this; }, setFromMatrixScale: function ( m ) { var sx = this.setFromMatrixColumn( m, 0 ).length(); var sy = this.setFromMatrixColumn( m, 1 ).length(); var sz = this.setFromMatrixColumn( m, 2 ).length(); this.x = sx; this.y = sy; this.z = sz; return this; }, setFromMatrixColumn: function ( m, index ) { return this.fromArray( m.elements, index * 4 ); }, equals: function ( v ) { return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) ); }, fromArray: function ( array, offset ) { if ( offset === undefined ) offset = 0; this.x = array[ offset ]; this.y = array[ offset + 1 ]; this.z = array[ offset + 2 ]; return this; }, toArray: function ( array, offset ) { if ( array === undefined ) array = []; if ( offset === undefined ) offset = 0; array[ offset ] = this.x; array[ offset + 1 ] = this.y; array[ offset + 2 ] = this.z; return array; }, fromBufferAttribute: function ( attribute, index, offset ) { if ( offset !== undefined ) { console.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' ); } this.x = attribute.getX( index ); this.y = attribute.getY( index ); this.z = attribute.getZ( index ); return this; } } ); /** * @author alteredq / http://alteredqualia.com/ * @author WestLangley / http://github.com/WestLangley * @author bhouston / http://clara.io * @author tschw */ function Matrix3() { this.elements = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ]; if ( arguments.length > 0 ) { console.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' ); } } Object.assign( Matrix3.prototype, { isMatrix3: true, set: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) { var te = this.elements; te[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31; te[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32; te[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33; return this; }, identity: function () { this.set( 1, 0, 0, 0, 1, 0, 0, 0, 1 ); return this; }, clone: function () { return new this.constructor().fromArray( this.elements ); }, copy: function ( m ) { var te = this.elements; var me = m.elements; te[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ]; return this; }, setFromMatrix4: function ( m ) { var me = m.elements; this.set( me[ 0 ], me[ 4 ], me[ 8 ], me[ 1 ], me[ 5 ], me[ 9 ], me[ 2 ], me[ 6 ], me[ 10 ] ); return this; }, applyToBufferAttribute: function () { var v1 = new Vector3(); return function applyToBufferAttribute( attribute ) { for ( var i = 0, l = attribute.count; i < l; i ++ ) { v1.x = attribute.getX( i ); v1.y = attribute.getY( i ); v1.z = attribute.getZ( i ); v1.applyMatrix3( this ); attribute.setXYZ( i, v1.x, v1.y, v1.z ); } return attribute; }; }(), multiply: function ( m ) { return this.multiplyMatrices( this, m ); }, premultiply: function ( m ) { return this.multiplyMatrices( m, this ); }, multiplyMatrices: function ( a, b ) { var ae = a.elements; var be = b.elements; var te = this.elements; var a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ]; var a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ]; var a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ]; var b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ]; var b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ]; var b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ]; te[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31; te[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32; te[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33; te[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31; te[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32; te[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33; te[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31; te[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32; te[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33; return this; }, multiplyScalar: function ( s ) { var te = this.elements; te[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s; te[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s; te[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s; return this; }, determinant: function () { var te = this.elements; var a = te[ 0 ], b = te[ 1 ], c = te[ 2 ], d = te[ 3 ], e = te[ 4 ], f = te[ 5 ], g = te[ 6 ], h = te[ 7 ], i = te[ 8 ]; return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g; }, getInverse: function ( matrix, throwOnDegenerate ) { if ( matrix && matrix.isMatrix4 ) { console.error( "THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument." ); } var me = matrix.elements, te = this.elements, n11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ], n13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ], t11 = n33 * n22 - n32 * n23, t12 = n32 * n13 - n33 * n12, t13 = n23 * n12 - n22 * n13, det = n11 * t11 + n21 * t12 + n31 * t13; if ( det === 0 ) { var msg = "THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0"; if ( throwOnDegenerate === true ) { throw new Error( msg ); } else { console.warn( msg ); } return this.identity(); } var detInv = 1 / det; te[ 0 ] = t11 * detInv; te[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv; te[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv; te[ 3 ] = t12 * detInv; te[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv; te[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv; te[ 6 ] = t13 * detInv; te[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv; te[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv; return this; }, transpose: function () { var tmp, m = this.elements; tmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp; tmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp; tmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp; return this; }, getNormalMatrix: function ( matrix4 ) { return this.setFromMatrix4( matrix4 ).getInverse( this ).transpose(); }, transposeIntoArray: function ( r ) { var m = this.elements; r[ 0 ] = m[ 0 ]; r[ 1 ] = m[ 3 ]; r[ 2 ] = m[ 6 ]; r[ 3 ] = m[ 1 ]; r[ 4 ] = m[ 4 ]; r[ 5 ] = m[ 7 ]; r[ 6 ] = m[ 2 ]; r[ 7 ] = m[ 5 ]; r[ 8 ] = m[ 8 ]; return this; }, setUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) { var c = Math.cos( rotation ); var s = Math.sin( rotation ); this.set( sx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx, - sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty, 0, 0, 1 ); }, scale: function ( sx, sy ) { var te = this.elements; te[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx; te[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy; return this; }, rotate: function ( theta ) { var c = Math.cos( theta ); var s = Math.sin( theta ); var te = this.elements; var a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ]; var a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ]; te[ 0 ] = c * a11 + s * a21; te[ 3 ] = c * a12 + s * a22; te[ 6 ] = c * a13 + s * a23; te[ 1 ] = - s * a11 + c * a21; te[ 4 ] = - s * a12 + c * a22; te[ 7 ] = - s * a13 + c * a23; return this; }, translate: function ( tx, ty ) { var te = this.elements; te[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ]; te[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ]; return this; }, equals: function ( matrix ) { var te = this.elements; var me = matrix.elements; for ( var i = 0; i < 9; i ++ ) { if ( te[ i ] !== me[ i ] ) return false; } return true; }, fromArray: function ( array, offset ) { if ( offset === undefined ) offset = 0; for ( var i = 0; i < 9; i ++ ) { this.elements[ i ] = array[ i + offset ]; } return this; }, toArray: function ( array, offset ) { if ( array === undefined ) array = []; if ( offset === undefined ) offset = 0; var te = this.elements; array[ offset ] = te[ 0 ]; array[ offset + 1 ] = te[ 1 ]; array[ offset + 2 ] = te[ 2 ]; array[ offset + 3 ] = te[ 3 ]; array[ offset + 4 ] = te[ 4 ]; array[ offset + 5 ] = te[ 5 ]; array[ offset + 6 ] = te[ 6 ]; array[ offset + 7 ] = te[ 7 ]; array[ offset + 8 ] = te[ 8 ]; return array; } } ); /** * @author mrdoob / http://mrdoob.com/ * @author alteredq / http://alteredqualia.com/ * @author szimek / https://github.com/szimek/ */ var _canvas; var ImageUtils = { getDataURL: function ( image ) { var canvas; if ( typeof HTMLCanvasElement == 'undefined' ) { return image.src; } else if ( image instanceof HTMLCanvasElement ) { canvas = image; } else { if ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ); _canvas.width = image.width; _canvas.height = image.height; var context = _canvas.getContext( '2d' ); if ( image instanceof ImageData ) { context.putImageData( image, 0, 0 ); } else { context.drawImage( image, 0, 0, image.width, image.height ); } canvas = _canvas; } if ( canvas.width > 2048 || canvas.height > 2048 ) { return canvas.toDataURL( 'image/jpeg', 0.6 ); } else { return canvas.toDataURL( 'image/png' ); } } }; /** * @author mrdoob / http://mrdoob.com/ * @author alteredq / http://alteredqualia.com/ * @author szimek / https://github.com/szimek/ */ var textureId = 0; function Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) { Object.defineProperty( this, 'id', { value: textureId ++ } ); this.uuid = _Math.generateUUID(); this.name = ''; this.image = image !== undefined ? image : Texture.DEFAULT_IMAGE; this.mipmaps = []; this.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING; this.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping; this.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping; this.magFilter = magFilter !== undefined ? magFilter : LinearFilter; this.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter; this.anisotropy = anisotropy !== undefined ? anisotropy : 1; this.format = format !== undefined ? format : RGBAFormat; this.type = type !== undefined ? type : UnsignedByteType; this.offset = new Vector2( 0, 0 ); this.repeat = new Vector2( 1, 1 ); this.center = new Vector2( 0, 0 ); this.rotation = 0; this.matrixAutoUpdate = true; this.matrix = new Matrix3(); this.generateMipmaps = true; this.premultiplyAlpha = false; this.flipY = true; this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml) // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap. // // Also changing the encoding after already used by a Material will not automatically make the Material // update. You need to explicitly call Material.needsUpdate to trigger it to recompile. this.encoding = encoding !== undefined ? encoding : LinearEncoding; this.version = 0; this.onUpdate = null; } Texture.DEFAULT_IMAGE = undefined; Texture.DEFAULT_MAPPING = UVMapping; Texture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), { constructor: Texture, isTexture: true, updateMatrix: function () { this.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y ); }, clone: function () { return new this.constructor().copy( this ); }, copy: function ( source ) { this.name = source.name; this.image = source.image; this.mipmaps = source.mipmaps.slice( 0 ); this.mapping = source.mapping; this.wrapS = source.wrapS; this.wrapT = source.wrapT; this.magFilter = source.magFilter; this.minFilter = source.minFilter; this.anisotropy = source.anisotropy; this.format = source.format; this.type = source.type; this.offset.copy( source.offset ); this.repeat.copy( source.repeat ); this.center.copy( source.center ); this.rotation = source.rotation; this.matrixAutoUpdate = source.matrixAutoUpdate; this.matrix.copy( source.matrix ); this.generateMipmaps = source.generateMipmaps; this.premultiplyAlpha = source.premultiplyAlpha; this.flipY = source.flipY; this.unpackAlignment = source.unpackAlignment; this.encoding = source.encoding; return this; }, toJSON: function ( meta ) { var isRootObject = ( meta === undefined || typeof meta === 'string' ); if ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) { return meta.textures[ this.uuid ]; } var output = { metadata: { version: 4.5, type: 'Texture', generator: 'Texture.toJSON' }, uuid: this.uuid, name: this.name, mapping: this.mapping, repeat: [ this.repeat.x, this.repeat.y ], offset: [ this.offset.x, this.offset.y ], center: [ this.center.x, this.center.y ], rotation: this.rotation, wrap: [ this.wrapS, this.wrapT ], format: this.format, type: this.type, encoding: this.encoding, minFilter: this.minFilter, magFilter: this.magFilter, anisotropy: this.anisotropy, flipY: this.flipY, premultiplyAlpha: this.premultiplyAlpha, unpackAlignment: this.unpackAlignment }; if ( this.image !== undefined ) { // TODO: Move to THREE.Image var image = this.image; if ( image.uuid === undefined ) { image.uuid = _Math.generateUUID(); // UGH } if ( ! isRootObject && meta.images[ image.uuid ] === undefined ) { var url; if ( Array.isArray( image ) ) { // process array of images e.g. CubeTexture url = []; for ( var i = 0, l = image.length; i < l; i ++ ) { url.push( ImageUtils.getDataURL( image[ i ] ) ); } } else { // process single image url = ImageUtils.getDataURL( image ); } meta.images[ image.uuid ] = { uuid: image.uuid, url: url }; } output.image = image.uuid; } if ( ! isRootObject ) { meta.textures[ this.uuid ] = output; } return output; }, dispose: function () { this.dispatchEvent( { type: 'dispose' } ); }, transformUv: function ( uv ) { if ( this.mapping !== UVMapping ) return uv; uv.applyMatrix3( this.matrix ); if ( uv.x < 0 || uv.x > 1 ) { switch ( this.wrapS ) { case RepeatWrapping: uv.x = uv.x - Math.floor( uv.x ); break; case ClampToEdgeWrapping: uv.x = uv.x < 0 ? 0 : 1; break; case MirroredRepeatWrapping: if ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) { uv.x = Math.ceil( uv.x ) - uv.x; } else { uv.x = uv.x - Math.floor( uv.x ); } break; } } if ( uv.y < 0 || uv.y > 1 ) { switch ( this.wrapT ) { case RepeatWrapping: uv.y = uv.y - Math.floor( uv.y ); break; case ClampToEdgeWrapping: uv.y = uv.y < 0 ? 0 : 1; break; case MirroredRepeatWrapping: if ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) { uv.y = Math.ceil( uv.y ) - uv.y; } else { uv.y = uv.y - Math.floor( uv.y ); } break; } } if ( this.flipY ) { uv.y = 1 - uv.y; } return uv; } } ); Object.defineProperty( Texture.prototype, "needsUpdate", { set: function ( value ) { if ( value === true ) this.version ++; } } ); /** * @author supereggbert / http://www.paulbrunt.co.uk/ * @author philogb / http://blog.thejit.org/ * @author mikael emtinger / http://gomo.se/ * @author egraether / http://egraether.com/ * @author WestLangley / http://github.com/WestLangley */ function Vector4( x, y, z, w ) { this.x = x || 0; this.y = y || 0; this.z = z || 0; this.w = ( w !== undefined ) ? w : 1; } Object.assign( Vector4.prototype, { isVector4: true, set: function ( x, y, z, w ) { this.x = x; this.y = y; this.z = z; this.w = w; return this; }, setScalar: function ( scalar ) { this.x = scalar; this.y = scalar; this.z = scalar; this.w = scalar; return this; }, setX: function ( x ) { this.x = x; return this; }, setY: function ( y ) { this.y = y; return this; }, setZ: function ( z ) { this.z = z; return this; }, setW: function ( w ) { this.w = w; return this; }, setComponent: function ( index, value ) { switch ( index ) { case 0: this.x = value; break; case 1: this.y = value; break; case 2: this.z = value; break; case 3: this.w = value; break; default: throw new Error( 'index is out of range: ' + index ); } return this; }, getComponent: function ( index ) { switch ( index ) { case 0: return this.x; case 1: return this.y; case 2: return this.z; case 3: return this.w; default: throw new Error( 'index is out of range: ' + index ); } }, clone: function () { return new this.constructor( this.x, this.y, this.z, this.w ); }, copy: function ( v ) { this.x = v.x; this.y = v.y; this.z = v.z; this.w = ( v.w !== undefined ) ? v.w : 1; return this; }, add: function ( v, w ) { if ( w !== undefined ) { console.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' ); return this.addVectors( v, w ); } this.x += v.x; this.y += v.y; this.z += v.z; this.w += v.w; return this; }, addScalar: function ( s ) { this.x += s; this.y += s; this.z += s; this.w += s; return this; }, addVectors: function ( a, b ) { this.x = a.x + b.x; this.y = a.y + b.y; this.z = a.z + b.z; this.w = a.w + b.w; return this; }, addScaledVector: function ( v, s ) { this.x += v.x * s; this.y += v.y * s; this.z += v.z * s; this.w += v.w * s; return this; }, sub: function ( v, w ) { if ( w !== undefined ) { console.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' ); return this.subVectors( v, w ); } this.x -= v.x; this.y -= v.y; this.z -= v.z; this.w -= v.w; return this; }, subScalar: function ( s ) { this.x -= s; this.y -= s; this.z -= s; this.w -= s; return this; }, subVectors: function ( a, b ) { this.x = a.x - b.x; this.y = a.y - b.y; this.z = a.z - b.z; this.w = a.w - b.w; return this; }, multiplyScalar: function ( scalar ) { this.x *= scalar; this.y *= scalar; this.z *= scalar; this.w *= scalar; return this; }, applyMatrix4: function ( m ) { var x = this.x, y = this.y, z = this.z, w = this.w; var e = m.elements; this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w; this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w; this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w; this.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w; return this; }, divideScalar: function ( scalar ) { return this.multiplyScalar( 1 / scalar ); }, setAxisAngleFromQuaternion: function ( q ) { // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm // q is assumed to be normalized this.w = 2 * Math.acos( q.w ); var s = Math.sqrt( 1 - q.w * q.w ); if ( s < 0.0001 ) { this.x = 1; this.y = 0; this.z = 0; } else { this.x = q.x / s; this.y = q.y / s; this.z = q.z / s; } return this; }, setAxisAngleFromRotationMatrix: function ( m ) { // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled) var angle, x, y, z, // variables for result epsilon = 0.01, // margin to allow for rounding errors epsilon2 = 0.1, // margin to distinguish between 0 and 180 degrees te = m.elements, m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ], m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ], m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ]; if ( ( Math.abs( m12 - m21 ) < epsilon ) && ( Math.abs( m13 - m31 ) < epsilon ) && ( Math.abs( m23 - m32 ) < epsilon ) ) { // singularity found // first check for identity matrix which must have +1 for all terms // in leading diagonal and zero in other terms if ( ( Math.abs( m12 + m21 ) < epsilon2 ) && ( Math.abs( m13 + m31 ) < epsilon2 ) && ( Math.abs( m23 + m32 ) < epsilon2 ) && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) { // this singularity is identity matrix so angle = 0 this.set( 1, 0, 0, 0 ); return this; // zero angle, arbitrary axis } // otherwise this singularity is angle = 180 angle = Math.PI; var xx = ( m11 + 1 ) / 2; var yy = ( m22 + 1 ) / 2; var zz = ( m33 + 1 ) / 2; var xy = ( m12 + m21 ) / 4; var xz = ( m13 + m31 ) / 4; var yz = ( m23 + m32 ) / 4; if ( ( xx > yy ) && ( xx > zz ) ) { // m11 is the largest diagonal term if ( xx < epsilon ) { x = 0; y = 0.707106781; z = 0.707106781; } else { x = Math.sqrt( xx ); y = xy / x; z = xz / x; } } else if ( yy > zz ) { // m22 is the largest diagonal term if ( yy < epsilon ) { x = 0.707106781; y = 0; z = 0.707106781; } else { y = Math.sqrt( yy ); x = xy / y; z = yz / y; } } else { // m33 is the largest diagonal term so base result on this if ( zz < epsilon ) { x = 0.707106781; y = 0.707106781; z = 0; } else { z = Math.sqrt( zz ); x = xz / z; y = yz / z; } } this.set( x, y, z, angle ); return this; // return 180 deg rotation } // as we have reached here there are no singularities so we can handle normally var s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) + ( m13 - m31 ) * ( m13 - m31 ) + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize if ( Math.abs( s ) < 0.001 ) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be // caught by singularity test above, but I've left it in just in case this.x = ( m32 - m23 ) / s; this.y = ( m13 - m31 ) / s; this.z = ( m21 - m12 ) / s; this.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 ); return this; }, min: function ( v ) { this.x = Math.min( this.x, v.x ); this.y = Math.min( this.y, v.y ); this.z = Math.min( this.z, v.z ); this.w = Math.min( this.w, v.w ); return this; }, max: function ( v ) { this.x = Math.max( this.x, v.x ); this.y = Math.max( this.y, v.y ); this.z = Math.max( this.z, v.z ); this.w = Math.max( this.w, v.w ); return this; }, clamp: function ( min, max ) { // assumes min < max, componentwise this.x = Math.max( min.x, Math.min( max.x, this.x ) ); this.y = Math.max( min.y, Math.min( max.y, this.y ) ); this.z = Math.max( min.z, Math.min( max.z, this.z ) ); this.w = Math.max( min.w, Math.min( max.w, this.w ) ); return this; }, clampScalar: function () { var min, max; return function clampScalar( minVal, maxVal ) { if ( min === undefined ) { min = new Vector4(); max = new Vector4(); } min.set( minVal, minVal, minVal, minVal ); max.set( maxVal, maxVal, maxVal, maxVal ); return this.clamp( min, max ); }; }(), clampLength: function ( min, max ) { var length = this.length(); return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) ); }, floor: function () { this.x = Math.floor( this.x ); this.y = Math.floor( this.y ); this.z = Math.floor( this.z ); this.w = Math.floor( this.w ); return this; }, ceil: function () { this.x = Math.ceil( this.x ); this.y = Math.ceil( this.y ); this.z = Math.ceil( this.z ); this.w = Math.ceil( this.w ); return this; }, round: function () { this.x = Math.round( this.x ); this.y = Math.round( this.y ); this.z = Math.round( this.z ); this.w = Math.round( this.w ); return this; }, roundToZero: function () { this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x ); this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y ); this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z ); this.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w ); return this; }, negate: function () { this.x = - this.x; this.y = - this.y; this.z = - this.z; this.w = - this.w; return this; }, dot: function ( v ) { return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w; }, lengthSq: function () { return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w; }, length: function () { return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w ); }, manhattanLength: function () { return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w ); }, normalize: function () { return this.divideScalar( this.length() || 1 ); }, setLength: function ( length ) { return this.normalize().multiplyScalar( length ); }, lerp: function ( v, alpha ) { this.x += ( v.x - this.x ) * alpha; this.y += ( v.y - this.y ) * alpha; this.z += ( v.z - this.z ) * alpha; this.w += ( v.w - this.w ) * alpha; return this; }, lerpVectors: function ( v1, v2, alpha ) { return this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 ); }, equals: function ( v ) { return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) ); }, fromArray: function ( array, offset ) { if ( offset === undefined ) offset = 0; this.x = array[ offset ]; this.y = array[ offset + 1 ]; this.z = array[ offset + 2 ]; this.w = array[ offset + 3 ]; return this; }, toArray: function ( array, offset ) { if ( array === undefined ) array = []; if ( offset === undefined ) offset = 0; array[ offset ] = this.x; array[ offset + 1 ] = this.y; array[ offset + 2 ] = this.z; array[ offset + 3 ] = this.w; return array; }, fromBufferAttribute: function ( attribute, index, offset ) { if ( offset !== undefined ) { console.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' ); } this.x = attribute.getX( index ); this.y = attribute.getY( index ); this.z = attribute.getZ( index ); this.w = attribute.getW( index ); return this; } } ); /** * @author szimek / https://github.com/szimek/ * @author alteredq / http://alteredqualia.com/ * @author Marius Kintel / https://github.com/kintel */ /* In options, we can specify: * Texture parameters for an auto-generated target texture * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers */ function WebGLRenderTarget( width, height, options ) { this.width = width; this.height = height; this.scissor = new Vector4( 0, 0, width, height ); this.scissorTest = false; this.viewport = new Vector4( 0, 0, width, height ); options = options || {}; this.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding ); this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false; this.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter; this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true; this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true; this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null; } WebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), { constructor: WebGLRenderTarget, isWebGLRenderTarget: true, setSize: function ( width, height ) { if ( this.width !== width || this.height !== height ) { this.width = width; this.height = height; this.dispose(); } this.viewport.set( 0, 0, width, height ); this.scissor.set( 0, 0, width, height ); }, clone: function () { return new this.constructor().copy( this ); }, copy: function ( source ) { this.width = source.width; this.height = source.height; this.viewport.copy( source.viewport ); this.texture = source.texture.clone(); this.depthBuffer = source.depthBuffer; this.stencilBuffer = source.stencilBuffer; this.depthTexture = source.depthTexture; return this; }, dispose: function () { this.dispatchEvent( { type: 'dispose' } ); } } ); /** * @author Mugen87 / https://github.com/Mugen87 * @author Matt DesLauriers / @mattdesl */ function WebGLMultisampleRenderTarget( width, height, options ) { WebGLRenderTarget.call( this, width, height, options ); this.samples = 4; } WebGLMultisampleRenderTarget.prototype = Object.assign( Object.create( WebGLRenderTarget.prototype ), { constructor: WebGLMultisampleRenderTarget, isWebGLMultisampleRenderTarget: true, copy: function ( source ) { WebGLRenderTarget.prototype.copy.call( this, source ); this.samples = source.samples; return this; } } ); /** * @author alteredq / http://alteredqualia.com */ function WebGLRenderTargetCube( width, height, options ) { WebGLRenderTarget.call( this, width, height, options ); } WebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype ); WebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube; WebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true; /** * @author alteredq / http://alteredqualia.com/ */ function DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) { Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ); this.image = { data: data, width: width, height: height }; this.magFilter = magFilter !== undefined ? magFilter : NearestFilter; this.minFilter = minFilter !== undefined ? minFilter : NearestFilter; this.generateMipmaps = false; this.flipY = false; this.unpackAlignment = 1; } DataTexture.prototype = Object.create( Texture.prototype ); DataTexture.prototype.constructor = DataTexture; DataTexture.prototype.isDataTexture = true; /** * @author bhouston / http://clara.io * @author WestLangley / http://github.com/WestLangley */ function Box3( min, max ) { this.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity ); this.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity ); } Object.assign( Box3.prototype, { isBox3: true, set: function ( min, max ) { this.min.copy( min ); this.max.copy( max ); return this; }, setFromArray: function ( array ) { var minX = + Infinity; var minY = + Infinity; var minZ = + Infinity; var maxX = - Infinity; var maxY = - Infinity; var maxZ = - Infinity; for ( var i = 0, l = array.length; i < l; i += 3 ) { var x = array[ i ]; var y = array[ i + 1 ]; var z = array[ i + 2 ]; if ( x < minX ) minX = x; if ( y < minY ) minY = y; if ( z < minZ ) minZ = z; if ( x > maxX ) maxX = x; if ( y > maxY ) maxY = y; if ( z > maxZ ) maxZ = z; } this.min.set( minX, minY, minZ ); this.max.set( maxX, maxY, maxZ ); return this; }, setFromBufferAttribute: function ( attribute ) { var minX = + Infinity; var minY = + Infinity; var minZ = + Infinity; var maxX = - Infinity; var maxY = - Infinity; var maxZ = - Infinity; for ( var i = 0, l = attribute.count; i < l; i ++ ) { var x = attribute.getX( i ); var y = attribute.getY( i ); var z = attribute.getZ( i ); if ( x < minX ) minX = x; if ( y < minY ) minY = y; if ( z < minZ ) minZ = z; if ( x > maxX ) maxX = x; if ( y > maxY ) maxY = y; if ( z > maxZ ) maxZ = z; } this.min.set( minX, minY, minZ ); this.max.set( maxX, maxY, maxZ ); return this; }, setFromPoints: function ( points ) { this.makeEmpty(); for ( var i = 0, il = points.length; i < il; i ++ ) { this.expandByPoint( points[ i ] ); } return this; }, setFromCenterAndSize: function () { var v1 = new Vector3(); return function setFromCenterAndSize( center, size ) { var halfSize = v1.copy( size ).multiplyScalar( 0.5 ); this.min.copy( center ).sub( halfSize ); this.max.copy( center ).add( halfSize ); return this; }; }(), setFromObject: function ( object ) { this.makeEmpty(); return this.expandByObject( object ); }, clone: function () { return new this.constructor().copy( this ); }, copy: function ( box ) { this.min.copy( box.min ); this.max.copy( box.max ); return this; }, makeEmpty: function () { this.min.x = this.min.y = this.min.z = + Infinity; this.max.x = this.max.y = this.max.z = - Infinity; return this; }, isEmpty: function () { // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z ); }, getCenter: function ( target ) { if ( target === undefined ) { console.warn( 'THREE.Box3: .getCenter() target is now required' ); target = new Vector3(); } return this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 ); }, getSize: function ( target ) { if ( target === undefined ) { console.warn( 'THREE.Box3: .getSize() target is now required' ); target = new Vector3(); } return this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min ); }, expandByPoint: function ( point ) { this.min.min( point ); this.max.max( point ); return this; }, expandByVector: function ( vector ) { this.min.sub( vector ); this.max.add( vector ); return this; }, expandByScalar: function ( scalar ) { this.min.addScalar( - scalar ); this.max.addScalar( scalar ); return this; }, expandByObject: function () { // Computes the world-axis-aligned bounding box of an object (including its children), // accounting for both the object's, and children's, world transforms var scope, i, l; var v1 = new Vector3(); function traverse( node ) { var geometry = node.geometry; if ( geometry !== undefined ) { if ( geometry.isGeometry ) { var vertices = geometry.vertices; for ( i = 0, l = vertices.length; i < l; i ++ ) { v1.copy( vertices[ i ] ); v1.applyMatrix4( node.matrixWorld ); scope.expandByPoint( v1 ); } } else if ( geometry.isBufferGeometry ) { var attribute = geometry.attributes.position; if ( attribute !== undefined ) { for ( i = 0, l = attribute.count; i < l; i ++ ) { v1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld ); scope.expandByPoint( v1 ); } } } } } return function expandByObject( object ) { scope = this; object.updateMatrixWorld( true ); object.traverse( traverse ); return this; }; }(), containsPoint: function ( point ) { return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z ? false : true; }, containsBox: function ( box ) { return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z; }, getParameter: function ( point, target ) { // This can potentially have a divide by zero if the box // has a size dimension of 0. if ( target === undefined ) { console.warn( 'THREE.Box3: .getParameter() target is now required' ); target = new Vector3(); } return target.set( ( point.x - this.min.x ) / ( this.max.x - this.min.x ), ( point.y - this.min.y ) / ( this.max.y - this.min.y ), ( point.z - this.min.z ) / ( this.max.z - this.min.z ) ); }, intersectsBox: function ( box ) { // using 6 splitting planes to rule out intersections. return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z ? false : true; }, intersectsSphere: ( function () { var closestPoint = new Vector3(); return function intersectsSphere( sphere ) { // Find the point on the AABB closest to the sphere center. this.clampPoint( sphere.center, closestPoint ); // If that point is inside the sphere, the AABB and sphere intersect. return closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius ); }; } )(), intersectsPlane: function ( plane ) { // We compute the minimum and maximum dot product values. If those values // are on the same side (back or front) of the plane, then there is no intersection. var min, max; if ( plane.normal.x > 0 ) { min = plane.normal.x * this.min.x; max = plane.normal.x * this.max.x; } else { min = plane.normal.x * this.max.x; max = plane.normal.x * this.min.x; } if ( plane.normal.y > 0 ) { min += plane.normal.y * this.min.y; max += plane.normal.y * this.max.y; } else { min += plane.normal.y * this.max.y; max += plane.normal.y * this.min.y; } if ( plane.normal.z > 0 ) { min += plane.normal.z * this.min.z; max += plane.normal.z * this.max.z; } else { min += plane.normal.z * this.max.z; max += plane.normal.z * this.min.z; } return ( min <= - plane.constant && max >= - plane.constant ); }, intersectsTriangle: ( function () { // triangle centered vertices var v0 = new Vector3(); var v1 = new Vector3(); var v2 = new Vector3(); // triangle edge vectors var f0 = new Vector3(); var f1 = new Vector3(); var f2 = new Vector3(); var testAxis = new Vector3(); var center = new Vector3(); var extents = new Vector3(); var triangleNormal = new Vector3(); function satForAxes( axes ) { var i, j; for ( i = 0, j = axes.length - 3; i <= j; i += 3 ) { testAxis.fromArray( axes, i ); // project the aabb onto the seperating axis var r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z ); // project all 3 vertices of the triangle onto the seperating axis var p0 = v0.dot( testAxis ); var p1 = v1.dot( testAxis ); var p2 = v2.dot( testAxis ); // actual test, basically see if either of the most extreme of the triangle points intersects r if ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) { // points of the projected triangle are outside the projected half-length of the aabb // the axis is seperating and we can exit return false; } } return true; } return function intersectsTriangle( triangle ) { if ( this.isEmpty() ) { return false; } // compute box center and extents this.getCenter( center ); extents.subVectors( this.max, center ); // translate triangle to aabb origin v0.subVectors( triangle.a, center ); v1.subVectors( triangle.b, center ); v2.subVectors( triangle.c, center ); // compute edge vectors for triangle f0.subVectors( v1, v0 ); f1.subVectors( v2, v1 ); f2.subVectors( v0, v2 ); // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb // make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation // axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned) var axes = [ 0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y, f0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x, - f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0 ]; if ( ! satForAxes( axes ) ) { return false; } // test 3 face normals from the aabb axes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ]; if ( ! satForAxes( axes ) ) { return false; } // finally testing the face normal of the triangle // use already existing triangle edge vectors here triangleNormal.crossVectors( f0, f1 ); axes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ]; return satForAxes( axes ); }; } )(), clampPoint: function ( point, target ) { if ( target === undefined ) { console.warn( 'THREE.Box3: .clampPoint() target is now required' ); target = new Vector3(); } return target.copy( point ).clamp( this.min, this.max ); }, distanceToPoint: function () { var v1 = new Vector3(); return function distanceToPoint( point ) { var clampedPoint = v1.copy( point ).clamp( this.min, this.max ); return clampedPoint.sub( point ).length(); }; }(), getBoundingSphere: function () { var v1 = new Vector3(); return function getBoundingSphere( target ) { if ( target === undefined ) { console.warn( 'THREE.Box3: .getBoundingSphere() target is now required' ); target = new Sphere(); } this.getCenter( target.center ); target.radius = this.getSize( v1 ).length() * 0.5; return target; }; }(), intersect: function ( box ) { this.min.max( box.min ); this.max.min( box.max ); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values. if ( this.isEmpty() ) this.makeEmpty(); return this; }, union: function ( box ) { this.min.min( box.min ); this.max.max( box.max ); return this; }, applyMatrix4: function () { var points = [ new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3() ]; return function applyMatrix4( matrix ) { // transform of empty box is an empty box. if ( this.isEmpty() ) return this; // NOTE: I am using a binary pattern to specify all 2^3 combinations below points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000 points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001 points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010 points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011 points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100 points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101 points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110 points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111 this.setFromPoints( points ); return this; }; }(), translate: function ( offset ) { this.min.add( offset ); this.max.add( offset ); return this; }, equals: function ( box ) { return box.min.equals( this.min ) && box.max.equals( this.max ); } } ); /** * @author bhouston / http://clara.io * @author mrdoob / http://mrdoob.com/ */ function Sphere( center, radius ) { this.center = ( center !== undefined ) ? center : new Vector3(); this.radius = ( radius !== undefined ) ? radius : 0; } Object.assign( Sphere.prototype, { set: function ( center, radius ) { this.center.copy( center ); this.radius = radius; return this; }, setFromPoints: function () { var box = new Box3(); return function setFromPoints( points, optionalCenter ) { var center = this.center; if ( optionalCenter !== undefined ) { center.copy( optionalCenter ); } else { box.setFromPoints( points ).getCenter( center ); } var maxRadiusSq = 0; for ( var i = 0, il = points.length; i < il; i ++ ) { maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) ); } this.radius = Math.sqrt( maxRadiusSq ); return this; }; }(), clone: function () { return new this.constructor().copy( this ); }, copy: function ( sphere ) { this.center.copy( sphere.center ); this.radius = sphere.radius; return this; }, empty: function () { return ( this.radius <= 0 ); }, containsPoint: function ( point ) { return ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) ); }, distanceToPoint: function ( point ) { return ( point.distanceTo( this.center ) - this.radius ); }, intersectsSphere: function ( sphere ) { var radiusSum = this.radius + sphere.radius; return sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum ); }, intersectsBox: function ( box ) { return box.intersectsSphere( this ); }, intersectsPlane: function ( plane ) { return Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius; }, clampPoint: function ( point, target ) { var deltaLengthSq = this.center.distanceToSquared( point ); if ( target === undefined ) { console.warn( 'THREE.Sphere: .clampPoint() target is now required' ); target = new Vector3(); } target.copy( point ); if ( deltaLengthSq > ( this.radius * this.radius ) ) { target.sub( this.center ).normalize(); target.multiplyScalar( this.radius ).add( this.center ); } return target; }, getBoundingBox: function ( target ) { if ( target === undefined ) { console.warn( 'THREE.Sphere: .getBoundingBox() target is now required' ); target = new Box3(); } target.set( this.center, this.center ); target.expandByScalar( this.radius ); return target; }, applyMatrix4: function ( matrix ) { this.center.applyMatrix4( matrix ); this.radius = this.radius * matrix.getMaxScaleOnAxis(); return this; }, translate: function ( offset ) { this.center.add( offset ); return this; }, equals: function ( sphere ) { return sphere.center.equals( this.center ) && ( sphere.radius === this.radius ); } } ); /** * @author bhouston / http://clara.io */ function Plane( normal, constant ) { // normal is assumed to be normalized this.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 ); this.constant = ( constant !== undefined ) ? constant : 0; } Object.assign( Plane.prototype, { set: function ( normal, constant ) { this.normal.copy( normal ); this.constant = constant; return this; }, setComponents: function ( x, y, z, w ) { this.normal.set( x, y, z ); this.constant = w; return this; }, setFromNormalAndCoplanarPoint: function ( normal, point ) { this.normal.copy( normal ); this.constant = - point.dot( this.normal ); return this; }, setFromCoplanarPoints: function () { var v1 = new Vector3(); var v2 = new Vector3(); return function setFromCoplanarPoints( a, b, c ) { var normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)? this.setFromNormalAndCoplanarPoint( normal, a ); return this; }; }(), clone: function () { return new this.constructor().copy( this ); }, copy: function ( plane ) { this.normal.copy( plane.normal ); this.constant = plane.constant; return this; }, normalize: function () { // Note: will lead to a divide by zero if the plane is invalid. var inverseNormalLength = 1.0 / this.normal.length(); this.normal.multiplyScalar( inverseNormalLength ); this.constant *= inverseNormalLength; return this; }, negate: function () { this.constant *= - 1; this.normal.negate(); return this; }, distanceToPoint: function ( point ) { return this.normal.dot( point ) + this.constant; }, distanceToSphere: function ( sphere ) { return this.distanceToPoint( sphere.center ) - sphere.radius; }, projectPoint: function ( point, target ) { if ( target === undefined ) { console.warn( 'THREE.Plane: .projectPoint() target is now required' ); target = new Vector3(); } return target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point ); }, intersectLine: function () { var v1 = new Vector3(); return function intersectLine( line, target ) { if ( target === undefined ) { console.warn( 'THREE.Plane: .intersectLine() target is now required' ); target = new Vector3(); } var direction = line.delta( v1 ); var denominator = this.normal.dot( direction ); if ( denominator === 0 ) { // line is coplanar, return origin if ( this.distanceToPoint( line.start ) === 0 ) { return target.copy( line.start ); } // Unsure if this is the correct method to handle this case. return undefined; } var t = - ( line.start.dot( this.normal ) + this.constant ) / denominator; if ( t < 0 || t > 1 ) { return undefined; } return target.copy( direction ).multiplyScalar( t ).add( line.start ); }; }(), intersectsLine: function ( line ) { // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it. var startSign = this.distanceToPoint( line.start ); var endSign = this.distanceToPoint( line.end ); return ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 ); }, intersectsBox: function ( box ) { return box.intersectsPlane( this ); }, intersectsSphere: function ( sphere ) { return sphere.intersectsPlane( this ); }, coplanarPoint: function ( target ) { if ( target === undefined ) { console.warn( 'THREE.Plane: .coplanarPoint() target is now required' ); target = new Vector3(); } return target.copy( this.normal ).multiplyScalar( - this.constant ); }, applyMatrix4: function () { var v1 = new Vector3(); var m1 = new Matrix3(); return function applyMatrix4( matrix, optionalNormalMatrix ) { var normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix ); var referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix ); var normal = this.normal.applyMatrix3( normalMatrix ).normalize(); this.constant = - referencePoint.dot( normal ); return this; }; }(), translate: function ( offset ) { this.constant -= offset.dot( this.normal ); return this; }, equals: function ( plane ) { return plane.normal.equals( this.normal ) && ( plane.constant === this.constant ); } } ); /** * @author mrdoob / http://mrdoob.com/ * @author alteredq / http://alteredqualia.com/ * @author bhouston / http://clara.io */ function Frustum( p0, p1, p2, p3, p4, p5 ) { this.planes = [ ( p0 !== undefined ) ? p0 : new Plane(), ( p1 !== undefined ) ? p1 : new Plane(), ( p2 !== undefined ) ? p2 : new Plane(), ( p3 !== undefined ) ? p3 : new Plane(), ( p4 !== undefined ) ? p4 : new Plane(), ( p5 !== undefined ) ? p5 : new Plane() ]; } Object.assign( Frustum.prototype, { set: function ( p0, p1, p2, p3, p4, p5 ) { var planes = this.planes; planes[ 0 ].copy( p0 ); planes[ 1 ].copy( p1 ); planes[ 2 ].copy( p2 ); planes[ 3 ].copy( p3 ); planes[ 4 ].copy( p4 ); planes[ 5 ].copy( p5 ); return this; }, clone: function () { return new this.constructor().copy( this ); }, copy: function ( frustum ) { var planes = this.planes; for ( var i = 0; i < 6; i ++ ) { planes[ i ].copy( frustum.planes[ i ] ); } return this; }, setFromMatrix: function ( m ) { var planes = this.planes; var me = m.elements; var me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ]; var me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ]; var me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ]; var me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ]; planes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize(); planes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize(); planes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize(); planes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize(); planes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize(); planes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize(); return this; }, intersectsObject: function () { var sphere = new Sphere(); return function intersectsObject( object ) { var geometry = object.geometry; if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere(); sphere.copy( geometry.boundingSphere ) .applyMatrix4( object.matrixWorld ); return this.intersectsSphere( sphere ); }; }(), intersectsSprite: function () { var sphere = new Sphere(); return function intersectsSprite( sprite ) { sphere.center.set( 0, 0, 0 ); sphere.radius = 0.7071067811865476; sphere.applyMatrix4( sprite.matrixWorld ); return this.intersectsSphere( sphere ); }; }(), intersectsSphere: function ( sphere ) { var planes = this.planes; var center = sphere.center; var negRadius = - sphere.radius; for ( var i = 0; i < 6; i ++ ) { var distance = planes[ i ].distanceToPoint( center ); if ( distance < negRadius ) { return false; } } return true; }, intersectsBox: function () { var p = new Vector3(); return function intersectsBox( box ) { var planes = this.planes; for ( var i = 0; i < 6; i ++ ) { var plane = planes[ i ]; // corner at max distance p.x = plane.normal.x > 0 ? box.max.x : box.min.x; p.y = plane.normal.y > 0 ? box.max.y : box.min.y; p.z = plane.normal.z > 0 ? box.max.z : box.min.z; if ( plane.distanceToPoint( p ) < 0 ) { return false; } } return true; }; }(), containsPoint: function ( point ) { var planes = this.planes; for ( var i = 0; i < 6; i ++ ) { if ( planes[ i ].distanceToPoint( point ) < 0 ) { return false; } } return true; } } ); var alphamap_fragment = "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif"; var alphamap_pars_fragment = "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif"; var alphatest_fragment = "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif"; var aomap_fragment = "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif"; var aomap_pars_fragment = "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif"; var begin_vertex = "vec3 transformed = vec3( position );"; var beginnormal_vertex = "vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif"; var bsdfs = "vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick( specularColor, dotNV );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}"; var bumpmap_pars_fragment = "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif"; var clipping_planes_fragment = "#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t#endif\n#endif"; var clipping_planes_pars_fragment = "#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif"; var clipping_planes_pars_vertex = "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvarying vec3 vViewPosition;\n#endif"; var clipping_planes_vertex = "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif"; var color_fragment = "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif"; var color_pars_fragment = "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif"; var color_pars_vertex = "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif"; var color_vertex = "#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif"; var common = "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}"; var cube_uv_reflection_fragment = "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1 (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale = bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif"; var defaultnormal_vertex = "vec3 transformedNormal = normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = normalMatrix * objectTangent;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif"; var displacementmap_pars_vertex = "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif"; var displacementmap_vertex = "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif"; var emissivemap_fragment = "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif"; var emissivemap_pars_fragment = "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif"; var encodings_fragment = "gl_FragColor = linearToOutputTexel( gl_FragColor );"; var encodings_pars_fragment = "\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}"; var envmap_fragment = "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif"; var envmap_pars_fragment = "#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif"; var envmap_pars_vertex = "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif"; var envmap_vertex = "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif"; var fog_vertex = "#ifdef USE_FOG\n\tfogDepth = -mvPosition.z;\n#endif"; var fog_pars_vertex = "#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif"; var fog_fragment = "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif"; var fog_pars_fragment = "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif"; var gradientmap_pars_fragment = "#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif"; var lightmap_fragment = "#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif"; var lightmap_pars_fragment = "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif"; var lights_lambert_vertex = "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif"; var lights_pars_begin = "uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif"; var envmap_physical_pars_fragment = "#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif"; var lights_phong_fragment = "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;"; var lights_phong_pars_fragment = "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)"; var lights_physical_fragment = "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif"; var lights_physical_pars_fragment = "struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3( 0, 1, 0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#endif\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\tfloat clearCoatInv = 1.0 - clearCoatDHR;\n\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec3 singleScattering = vec3( 0.0 );\n\t\tvec3 multiScattering = vec3( 0.0 );\n\t\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\t\tvec3 diffuse = material.diffuseColor;\n\t\treflectedLight.indirectSpecular += clearCoatInv * radiance * singleScattering;\n\t\treflectedLight.indirectDiffuse += multiScattering * cosineWeightedIrradiance;\n\t\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n\t#else\n\t\treflectedLight.indirectSpecular += clearCoatInv * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#endif\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material ) GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material ) GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}"; var lights_fragment_begin = "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearCoatRadiance = vec3( 0.0 );\n#endif"; var lights_fragment_maps = "#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\n\t#ifndef STANDARD\n\t\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\n\t#endif\n#endif"; var lights_fragment_end = "#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, irradiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif"; var logdepthbuf_fragment = "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif"; var logdepthbuf_pars_fragment = "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n#endif"; var logdepthbuf_pars_vertex = "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif"; var logdepthbuf_vertex = "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\tgl_Position.z *= gl_Position.w;\n\t#endif\n#endif"; var map_fragment = "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif"; var map_pars_fragment = "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif"; var map_particle_fragment = "#ifdef USE_MAP\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif"; var map_particle_pars_fragment = "#ifdef USE_MAP\n\tuniform mat3 uvTransform;\n\tuniform sampler2D map;\n#endif"; var metalnessmap_fragment = "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif"; var metalnessmap_pars_fragment = "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif"; var morphnormal_vertex = "#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif"; var morphtarget_pars_vertex = "#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif"; var morphtarget_vertex = "#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif"; var normal_fragment_begin = "#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t#endif\n#endif"; var normal_fragment_maps = "#ifdef USE_NORMALMAP\n\t#ifdef OBJECTSPACE_NORMALMAP\n\t\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\t#ifdef FLIP_SIDED\n\t\t\tnormal = - normal;\n\t\t#endif\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\tnormal = normalize( normalMatrix * normal );\n\t#else\n\t\t#ifdef USE_TANGENT\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\t\tmapN.xy = normalScale * mapN.xy;\n\t\t\tnormal = normalize( vTBN * mapN );\n\t\t#else\n\t\t\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\t\t#endif\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif"; var normalmap_pars_fragment = "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\t#ifdef OBJECTSPACE_NORMALMAP\n\t\tuniform mat3 normalMatrix;\n\t#else\n\t\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\t\tvec2 st0 = dFdx( vUv.st );\n\t\t\tvec2 st1 = dFdy( vUv.st );\n\t\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\t\tvec3 N = normalize( surf_norm );\n\t\t\tmat3 tsn = mat3( S, T, N );\n\t\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\t\tmapN.xy *= normalScale;\n\t\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\treturn normalize( tsn * mapN );\n\t\t}\n\t#endif\n#endif"; var packing = "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}"; var premultiplied_alpha_fragment = "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif"; var project_vertex = "vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position = projectionMatrix * mvPosition;"; var dithering_fragment = "#if defined( DITHERING )\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif"; var dithering_pars_fragment = "#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif"; var roughnessmap_fragment = "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif"; var roughnessmap_pars_fragment = "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif"; var shadowmap_pars_fragment = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif"; var shadowmap_pars_vertex = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif"; var shadowmap_vertex = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif"; var shadowmask_pars_fragment = "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}"; var skinbase_vertex = "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif"; var skinning_pars_vertex = "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif"; var skinning_vertex = "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif"; var skinnormal_vertex = "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif"; var specularmap_fragment = "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif"; var specularmap_pars_fragment = "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif"; var tonemapping_fragment = "#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif"; var tonemapping_pars_fragment = "#ifndef saturate\n\t#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n}"; var uv_pars_fragment = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif"; var uv_pars_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif"; var uv_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif"; var uv2_pars_fragment = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif"; var uv2_pars_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif"; var uv2_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif"; var worldpos_vertex = "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n#endif"; var background_frag = "uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}"; var background_vert = "varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}"; var cube_frag = "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}"; var cube_vert = "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}"; var depth_frag = "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}"; var depth_vert = "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}"; var distanceRGBA_frag = "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}"; var distanceRGBA_vert = "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}"; var equirect_frag = "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}"; var equirect_vert = "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}"; var linedashed_frag = "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"; var linedashed_vert = "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"; var meshbasic_frag = "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"; var meshbasic_vert = "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}"; var meshlambert_frag = "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}"; var meshlambert_vert = "#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}"; var meshmatcap_frag = "#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"; var meshmatcap_vert = "#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}"; var meshphong_frag = "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}"; var meshphong_vert = "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}"; var meshphysical_frag = "#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}"; var meshphysical_vert = "#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}"; var normal_frag = "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}"; var normal_vert = "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}"; var points_frag = "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"; var points_vert = "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}"; var shadow_frag = "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <fog_fragment>\n}"; var shadow_vert = "#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}"; var sprite_frag = "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"; var sprite_vert = "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"; var ShaderChunk = { alphamap_fragment: alphamap_fragment, alphamap_pars_fragment: alphamap_pars_fragment, alphatest_fragment: alphatest_fragment, aomap_fragment: aomap_fragment, aomap_pars_fragment: aomap_pars_fragment, begin_vertex: begin_vertex, beginnormal_vertex: beginnormal_vertex, bsdfs: bsdfs, bumpmap_pars_fragment: bumpmap_pars_fragment, clipping_planes_fragment: clipping_planes_fragment, clipping_planes_pars_fragment: clipping_planes_pars_fragment, clipping_planes_pars_vertex: clipping_planes_pars_vertex, clipping_planes_vertex: clipping_planes_vertex, color_fragment: color_fragment, color_pars_fragment: color_pars_fragment, color_pars_vertex: color_pars_vertex, color_vertex: color_vertex, common: common, cube_uv_reflection_fragment: cube_uv_reflection_fragment, defaultnormal_vertex: defaultnormal_vertex, displacementmap_pars_vertex: displacementmap_pars_vertex, displacementmap_vertex: displacementmap_vertex, emissivemap_fragment: emissivemap_fragment, emissivemap_pars_fragment: emissivemap_pars_fragment, encodings_fragment: encodings_fragment, encodings_pars_fragment: encodings_pars_fragment, envmap_fragment: envmap_fragment, envmap_pars_fragment: envmap_pars_fragment, envmap_pars_vertex: envmap_pars_vertex, envmap_physical_pars_fragment: envmap_physical_pars_fragment, envmap_vertex: envmap_vertex, fog_vertex: fog_vertex, fog_pars_vertex: fog_pars_vertex, fog_fragment: fog_fragment, fog_pars_fragment: fog_pars_fragment, gradientmap_pars_fragment: gradientmap_pars_fragment, lightmap_fragment: lightmap_fragment, lightmap_pars_fragment: lightmap_pars_fragment, lights_lambert_vertex: lights_lambert_vertex, lights_pars_begin: lights_pars_begin, lights_phong_fragment: lights_phong_fragment, lights_phong_pars_fragment: lights_phong_pars_fragment, lights_physical_fragment: lights_physical_fragment, lights_physical_pars_fragment: lights_physical_pars_fragment, lights_fragment_begin: lights_fragment_begin, lights_fragment_maps: lights_fragment_maps, lights_fragment_end: lights_fragment_end, logdepthbuf_fragment: logdepthbuf_fragment, logdepthbuf_pars_fragment: logdepthbuf_pars_fragment, logdepthbuf_pars_vertex: logdepthbuf_pars_vertex, logdepthbuf_vertex: logdepthbuf_vertex, map_fragment: map_fragment, map_pars_fragment: map_pars_fragment, map_particle_fragment: map_particle_fragment, map_particle_pars_fragment: map_particle_pars_fragment, metalnessmap_fragment: metalnessmap_fragment, metalnessmap_pars_fragment: metalnessmap_pars_fragment, morphnormal_vertex: morphnormal_vertex, morphtarget_pars_vertex: morphtarget_pars_vertex, morphtarget_vertex: morphtarget_vertex, normal_fragment_begin: normal_fragment_begin, normal_fragment_maps: normal_fragment_maps, normalmap_pars_fragment: normalmap_pars_fragment, packing: packing, premultiplied_alpha_fragment: premultiplied_alpha_fragment, project_vertex: project_vertex, dithering_fragment: dithering_fragment, dithering_pars_fragment: dithering_pars_fragment, roughnessmap_fragment: roughnessmap_fragment, roughnessmap_pars_fragment: roughnessmap_pars_fragment, shadowmap_pars_fragment: shadowmap_pars_fragment, shadowmap_pars_vertex: shadowmap_pars_vertex, shadowmap_vertex: shadowmap_vertex, shadowmask_pars_fragment: shadowmask_pars_fragment, skinbase_vertex: skinbase_vertex, skinning_pars_vertex: skinning_pars_vertex, skinning_vertex: skinning_vertex, skinnormal_vertex: skinnormal_vertex, specularmap_fragment: specularmap_fragment, specularmap_pars_fragment: specularmap_pars_fragment, tonemapping_fragment: tonemapping_fragment, tonemapping_pars_fragment: tonemapping_pars_fragment, uv_pars_fragment: uv_pars_fragment, uv_pars_vertex: uv_pars_vertex, uv_vertex: uv_vertex, uv2_pars_fragment: uv2_pars_fragment, uv2_pars_vertex: uv2_pars_vertex, uv2_vertex: uv2_vertex, worldpos_vertex: worldpos_vertex, background_frag: background_frag, background_vert: background_vert, cube_frag: cube_frag, cube_vert: cube_vert, depth_frag: depth_frag, depth_vert: depth_vert, distanceRGBA_frag: distanceRGBA_frag, distanceRGBA_vert: distanceRGBA_vert, equirect_frag: equirect_frag, equirect_vert: equirect_vert, linedashed_frag: linedashed_frag, linedashed_vert: linedashed_vert, meshbasic_frag: meshbasic_frag, meshbasic_vert: meshbasic_vert, meshlambert_frag: meshlambert_frag, meshlambert_vert: meshlambert_vert, meshmatcap_frag: meshmatcap_frag, meshmatcap_vert: meshmatcap_vert, meshphong_frag: meshphong_frag, meshphong_vert: meshphong_vert, meshphysical_frag: meshphysical_frag, meshphysical_vert: meshphysical_vert, normal_frag: normal_frag, normal_vert: normal_vert, points_frag: points_frag, points_vert: points_vert, shadow_frag: shadow_frag, shadow_vert: shadow_vert, sprite_frag: sprite_frag, sprite_vert: sprite_vert }; /** * Uniform Utilities */ function cloneUniforms( src ) { var dst = {}; for ( var u in src ) { dst[ u ] = {}; for ( var p in src[ u ] ) { var property = src[ u ][ p ]; if ( property && ( property.isColor || property.isMatrix3 || property.isMatrix4 || property.isVector2 || property.isVector3 || property.isVector4 || property.isTexture ) ) { dst[ u ][ p ] = property.clone(); } else if ( Array.isArray( property ) ) { dst[ u ][ p ] = property.slice(); } else { dst[ u ][ p ] = property; } } } return dst; } function mergeUniforms( uniforms ) { var merged = {}; for ( var u = 0; u < uniforms.length; u ++ ) { var tmp = cloneUniforms( uniforms[ u ] ); for ( var p in tmp ) { merged[ p ] = tmp[ p ]; } } return merged; } // Legacy var UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms }; /** * @author mrdoob / http://mrdoob.com/ */ var ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF, 'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2, 'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50, 'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B, 'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B, 'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F, 'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3, 'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222, 'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700, 'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4, 'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00, 'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3, 'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA, 'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32, 'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3, 'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC, 'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD, 'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6, 'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9, 'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F, 'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE, 'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA, 'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0, 'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 }; function Color( r, g, b ) { if ( g === undefined && b === undefined ) { // r is THREE.Color, hex or string return this.set( r ); } return this.setRGB( r, g, b ); } Object.assign( Color.prototype, { isColor: true, r: 1, g: 1, b: 1, set: function ( value ) { if ( value && value.isColor ) { this.copy( value ); } else if ( typeof value === 'number' ) { this.setHex( value ); } else if ( typeof value === 'string' ) { this.setStyle( value ); } return this; }, setScalar: function ( scalar ) { this.r = scalar; this.g = scalar; this.b = scalar; return this; }, setHex: function ( hex ) { hex = Math.floor( hex ); this.r = ( hex >> 16 & 255 ) / 255; this.g = ( hex >> 8 & 255 ) / 255; this.b = ( hex & 255 ) / 255; return this; }, setRGB: function ( r, g, b ) { this.r = r; this.g = g; this.b = b; return this; }, setHSL: function () { function hue2rgb( p, q, t ) { if ( t < 0 ) t += 1; if ( t > 1 ) t -= 1; if ( t < 1 / 6 ) return p + ( q - p ) * 6 * t; if ( t < 1 / 2 ) return q; if ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t ); return p; } return function setHSL( h, s, l ) { // h,s,l ranges are in 0.0 - 1.0 h = _Math.euclideanModulo( h, 1 ); s = _Math.clamp( s, 0, 1 ); l = _Math.clamp( l, 0, 1 ); if ( s === 0 ) { this.r = this.g = this.b = l; } else { var p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s ); var q = ( 2 * l ) - p; this.r = hue2rgb( q, p, h + 1 / 3 ); this.g = hue2rgb( q, p, h ); this.b = hue2rgb( q, p, h - 1 / 3 ); } return this; }; }(), setStyle: function ( style ) { function handleAlpha( string ) { if ( string === undefined ) return; if ( parseFloat( string ) < 1 ) { console.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' ); } } var m; if ( m = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec( style ) ) { // rgb / hsl var color; var name = m[ 1 ]; var components = m[ 2 ]; switch ( name ) { case 'rgb': case 'rgba': if ( color = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec( components ) ) { // rgb(255,0,0) rgba(255,0,0,0.5) this.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255; this.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255; this.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255; handleAlpha( color[ 5 ] ); return this; } if ( color = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec( components ) ) { // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5) this.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100; this.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100; this.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100; handleAlpha( color[ 5 ] ); return this; } break; case 'hsl': case 'hsla': if ( color = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec( components ) ) { // hsl(120,50%,50%) hsla(120,50%,50%,0.5) var h = parseFloat( color[ 1 ] ) / 360; var s = parseInt( color[ 2 ], 10 ) / 100; var l = parseInt( color[ 3 ], 10 ) / 100; handleAlpha( color[ 5 ] ); return this.setHSL( h, s, l ); } break; } } else if ( m = /^\#([A-Fa-f0-9]+)$/.exec( style ) ) { // hex color var hex = m[ 1 ]; var size = hex.length; if ( size === 3 ) { // #ff0 this.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255; this.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255; this.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255; return this; } else if ( size === 6 ) { // #ff0000 this.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255; this.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255; this.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255; return this; } } if ( style && style.length > 0 ) { // color keywords var hex = ColorKeywords[ style ]; if ( hex !== undefined ) { // red this.setHex( hex ); } else { // unknown color console.warn( 'THREE.Color: Unknown color ' + style ); } } return this; }, clone: function () { return new this.constructor( this.r, this.g, this.b ); }, copy: function ( color ) { this.r = color.r; this.g = color.g; this.b = color.b; return this; }, copyGammaToLinear: function ( color, gammaFactor ) { if ( gammaFactor === undefined ) gammaFactor = 2.0; this.r = Math.pow( color.r, gammaFactor ); this.g = Math.pow( color.g, gammaFactor ); this.b = Math.pow( color.b, gammaFactor ); return this; }, copyLinearToGamma: function ( color, gammaFactor ) { if ( gammaFactor === undefined ) gammaFactor = 2.0; var safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0; this.r = Math.pow( color.r, safeInverse ); this.g = Math.pow( color.g, safeInverse ); this.b = Math.pow( color.b, safeInverse ); return this; }, convertGammaToLinear: function ( gammaFactor ) { this.copyGammaToLinear( this, gammaFactor ); return this; }, convertLinearToGamma: function ( gammaFactor ) { this.copyLinearToGamma( this, gammaFactor ); return this; }, copySRGBToLinear: function () { function SRGBToLinear( c ) { return ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 ); } return function copySRGBToLinear( color ) { this.r = SRGBToLinear( color.r ); this.g = SRGBToLinear( color.g ); this.b = SRGBToLinear( color.b ); return this; }; }(), copyLinearToSRGB: function () { function LinearToSRGB( c ) { return ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055; } return function copyLinearToSRGB( color ) { this.r = LinearToSRGB( color.r ); this.g = LinearToSRGB( color.g ); this.b = LinearToSRGB( color.b ); return this; }; }(), convertSRGBToLinear: function () { this.copySRGBToLinear( this ); return this; }, convertLinearToSRGB: function () { this.copyLinearToSRGB( this ); return this; }, getHex: function () { return ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0; }, getHexString: function () { return ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 ); }, getHSL: function ( target ) { // h,s,l ranges are in 0.0 - 1.0 if ( target === undefined ) { console.warn( 'THREE.Color: .getHSL() target is now required' ); target = { h: 0, s: 0, l: 0 }; } var r = this.r, g = this.g, b = this.b; var max = Math.max( r, g, b ); var min = Math.min( r, g, b ); var hue, saturation; var lightness = ( min + max ) / 2.0; if ( min === max ) { hue = 0; saturation = 0; } else { var delta = max - min; saturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min ); switch ( max ) { case r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break; case g: hue = ( b - r ) / delta + 2; break; case b: hue = ( r - g ) / delta + 4; break; } hue /= 6; } target.h = hue; target.s = saturation; target.l = lightness; return target; }, getStyle: function () { return 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')'; }, offsetHSL: function () { var hsl = {}; return function ( h, s, l ) { this.getHSL( hsl ); hsl.h += h; hsl.s += s; hsl.l += l; this.setHSL( hsl.h, hsl.s, hsl.l ); return this; }; }(), add: function ( color ) { this.r += color.r; this.g += color.g; this.b += color.b; return this; }, addColors: function ( color1, color2 ) { this.r = color1.r + color2.r; this.g = color1.g + color2.g; this.b = color1.b + color2.b; return this; }, addScalar: function ( s ) { this.r += s; this.g += s; this.b += s; return this; }, sub: function ( color ) { this.r = Math.max( 0, this.r - color.r ); this.g = Math.max( 0, this.g - color.g ); this.b = Math.max( 0, this.b - color.b ); return this; }, multiply: function ( color ) { this.r *= color.r; this.g *= color.g; this.b *= color.b; return this; }, multiplyScalar: function ( s ) { this.r *= s; this.g *= s; this.b *= s; return this; }, lerp: function ( color, alpha ) { this.r += ( color.r - this.r ) * alpha; this.g += ( color.g - this.g ) * alpha; this.b += ( color.b - this.b ) * alpha; return this; }, lerpHSL: function () { var hslA = { h: 0, s: 0, l: 0 }; var hslB = { h: 0, s: 0, l: 0 }; return function lerpHSL( color, alpha ) { this.getHSL( hslA ); color.getHSL( hslB ); var h = _Math.lerp( hslA.h, hslB.h, alpha ); var s = _Math.lerp( hslA.s, hslB.s, alpha ); var l = _Math.lerp( hslA.l, hslB.l, alpha ); this.setHSL( h, s, l ); return this; }; }(), equals: function ( c ) { return ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b ); }, fromArray: function ( array, offset ) { if ( offset === undefined ) offset = 0; this.r = array[ offset ]; this.g = array[ offset + 1 ]; this.b = array[ offset + 2 ]; return this; }, toArray: function ( array, offset ) { if ( array === undefined ) array = []; if ( offset === undefined ) offset = 0; array[ offset ] = this.r; array[ offset + 1 ] = this.g; array[ offset + 2 ] = this.b; return array; }, toJSON: function () { return this.getHex(); } } ); /** * Uniforms library for shared webgl shaders */ var UniformsLib = { common: { diffuse: { value: new Color( 0xeeeeee ) }, opacity: { value: 1.0 }, map: { value: null }, uvTransform: { value: new Matrix3() }, alphaMap: { value: null }, }, specularmap: { specularMap: { value: null }, }, envmap: { envMap: { value: null }, flipEnvMap: { value: - 1 }, reflectivity: { value: 1.0 }, refractionRatio: { value: 0.98 }, maxMipLevel: { value: 0 } }, aomap: { aoMap: { value: null }, aoMapIntensity: { value: 1 } }, lightmap: { lightMap: { value: null }, lightMapIntensity: { value: 1 } }, emissivemap: { emissiveMap: { value: null } }, bumpmap: { bumpMap: { value: null }, bumpScale: { value: 1 } }, normalmap: { normalMap: { value: null }, normalScale: { value: new Vector2( 1, 1 ) } }, displacementmap: { displacementMap: { value: null }, displacementScale: { value: 1 }, displacementBias: { value: 0 } }, roughnessmap: { roughnessMap: { value: null } }, metalnessmap: { metalnessMap: { value: null } }, gradientmap: { gradientMap: { value: null } }, fog: { fogDensity: { value: 0.00025 }, fogNear: { value: 1 }, fogFar: { value: 2000 }, fogColor: { value: new Color( 0xffffff ) } }, lights: { ambientLightColor: { value: [] }, directionalLights: { value: [], properties: { direction: {}, color: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {} } }, directionalShadowMap: { value: [] }, directionalShadowMatrix: { value: [] }, spotLights: { value: [], properties: { color: {}, position: {}, direction: {}, distance: {}, coneCos: {}, penumbraCos: {}, decay: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {} } }, spotShadowMap: { value: [] }, spotShadowMatrix: { value: [] }, pointLights: { value: [], properties: { color: {}, position: {}, decay: {}, distance: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {}, shadowCameraNear: {}, shadowCameraFar: {} } }, pointShadowMap: { value: [] }, pointShadowMatrix: { value: [] }, hemisphereLights: { value: [], properties: { direction: {}, skyColor: {}, groundColor: {} } }, // TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src rectAreaLights: { value: [], properties: { color: {}, position: {}, width: {}, height: {} } } }, points: { diffuse: { value: new Color( 0xeeeeee ) }, opacity: { value: 1.0 }, size: { value: 1.0 }, scale: { value: 1.0 }, map: { value: null }, uvTransform: { value: new Matrix3() } }, sprite: { diffuse: { value: new Color( 0xeeeeee ) }, opacity: { value: 1.0 }, center: { value: new Vector2( 0.5, 0.5 ) }, rotation: { value: 0.0 }, map: { value: null }, uvTransform: { value: new Matrix3() } } }; /** * @author alteredq / http://alteredqualia.com/ * @author mrdoob / http://mrdoob.com/ * @author mikael emtinger / http://gomo.se/ */ var ShaderLib = { basic: { uniforms: mergeUniforms( [ UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.fog ] ), vertexShader: ShaderChunk.meshbasic_vert, fragmentShader: ShaderChunk.meshbasic_frag }, lambert: { uniforms: mergeUniforms( [ UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.fog, UniformsLib.lights, { emissive: { value: new Color( 0x000000 ) } } ] ), vertexShader: ShaderChunk.meshlambert_vert, fragmentShader: ShaderChunk.meshlambert_frag }, phong: { uniforms: mergeUniforms( [ UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.gradientmap, UniformsLib.fog, UniformsLib.lights, { emissive: { value: new Color( 0x000000 ) }, specular: { value: new Color( 0x111111 ) }, shininess: { value: 30 } } ] ), vertexShader: ShaderChunk.meshphong_vert, fragmentShader: ShaderChunk.meshphong_frag }, standard: { uniforms: mergeUniforms( [ UniformsLib.common, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.roughnessmap, UniformsLib.metalnessmap, UniformsLib.fog, UniformsLib.lights, { emissive: { value: new Color( 0x000000 ) }, roughness: { value: 0.5 }, metalness: { value: 0.5 }, envMapIntensity: { value: 1 } // temporary } ] ), vertexShader: ShaderChunk.meshphysical_vert, fragmentShader: ShaderChunk.meshphysical_frag }, matcap: { uniforms: mergeUniforms( [ UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, { matcap: { value: null } } ] ), vertexShader: ShaderChunk.meshmatcap_vert, fragmentShader: ShaderChunk.meshmatcap_frag }, points: { uniforms: mergeUniforms( [ UniformsLib.points, UniformsLib.fog ] ), vertexShader: ShaderChunk.points_vert, fragmentShader: ShaderChunk.points_frag }, dashed: { uniforms: mergeUniforms( [ UniformsLib.common, UniformsLib.fog, { scale: { value: 1 }, dashSize: { value: 1 }, totalSize: { value: 2 } } ] ), vertexShader: ShaderChunk.linedashed_vert, fragmentShader: ShaderChunk.linedashed_frag }, depth: { uniforms: mergeUniforms( [ UniformsLib.common, UniformsLib.displacementmap ] ), vertexShader: ShaderChunk.depth_vert, fragmentShader: ShaderChunk.depth_frag }, normal: { uniforms: mergeUniforms( [ UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, { opacity: { value: 1.0 } } ] ), vertexShader: ShaderChunk.normal_vert, fragmentShader: ShaderChunk.normal_frag }, sprite: { uniforms: mergeUniforms( [ UniformsLib.sprite, UniformsLib.fog ] ), vertexShader: ShaderChunk.sprite_vert, fragmentShader: ShaderChunk.sprite_frag }, background: { uniforms: { uvTransform: { value: new Matrix3() }, t2D: { value: null }, }, vertexShader: ShaderChunk.background_vert, fragmentShader: ShaderChunk.background_frag }, /* ------------------------------------------------------------------------- // Cube map shader ------------------------------------------------------------------------- */ cube: { uniforms: { tCube: { value: null }, tFlip: { value: - 1 }, opacity: { value: 1.0 } }, vertexShader: ShaderChunk.cube_vert, fragmentShader: ShaderChunk.cube_frag }, equirect: { uniforms: { tEquirect: { value: null }, }, vertexShader: ShaderChunk.equirect_vert, fragmentShader: ShaderChunk.equirect_frag }, distanceRGBA: { uniforms: mergeUniforms( [ UniformsLib.common, UniformsLib.displacementmap, { referencePosition: { value: new Vector3() }, nearDistance: { value: 1 }, farDistance: { value: 1000 } } ] ), vertexShader: ShaderChunk.distanceRGBA_vert, fragmentShader: ShaderChunk.distanceRGBA_frag }, shadow: { uniforms: mergeUniforms( [ UniformsLib.lights, UniformsLib.fog, { color: { value: new Color( 0x00000 ) }, opacity: { value: 1.0 } }, ] ), vertexShader: ShaderChunk.shadow_vert, fragmentShader: ShaderChunk.shadow_frag } }; ShaderLib.physical = { uniforms: mergeUniforms( [ ShaderLib.standard.uniforms, { clearCoat: { value: 0 }, clearCoatRoughness: { value: 0 } } ] ), vertexShader: ShaderChunk.meshphysical_vert, fragmentShader: ShaderChunk.meshphysical_frag }; /** * @author mrdoob / http://mrdoob.com/ */ function WebGLAnimation() { var context = null; var isAnimating = false; var animationLoop = null; function onAnimationFrame( time, frame ) { if ( isAnimating === false ) return; animationLoop( time, frame ); context.requestAnimationFrame( onAnimationFrame ); } return { start: function () { if ( isAnimating === true ) return; if ( animationLoop === null ) return; context.requestAnimationFrame( onAnimationFrame ); isAnimating = true; }, stop: function () { isAnimating = false; }, setAnimationLoop: function ( callback ) { animationLoop = callback; }, setContext: function ( value ) { context = value; } }; } /** * @author mrdoob / http://mrdoob.com/ */ function WebGLAttributes( gl ) { var buffers = new WeakMap(); function createBuffer( attribute, bufferType ) { var array = attribute.array; var usage = attribute.dynamic ? 35048 : 35044; var buffer = gl.createBuffer(); gl.bindBuffer( bufferType, buffer ); gl.bufferData( bufferType, array, usage ); attribute.onUploadCallback(); var type = 5126; if ( array instanceof Float32Array ) { type = 5126; } else if ( array instanceof Float64Array ) { console.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' ); } else if ( array instanceof Uint16Array ) { type = 5123; } else if ( array instanceof Int16Array ) { type = 5122; } else if ( array instanceof Uint32Array ) { type = 5125; } else if ( array instanceof Int32Array ) { type = 5124; } else if ( array instanceof Int8Array ) { type = 5120; } else if ( array instanceof Uint8Array ) { type = 5121; } return { buffer: buffer, type: type, bytesPerElement: array.BYTES_PER_ELEMENT, version: attribute.version }; } function updateBuffer( buffer, attribute, bufferType ) { var array = attribute.array; var updateRange = attribute.updateRange; gl.bindBuffer( bufferType, buffer ); if ( attribute.dynamic === false ) { gl.bufferData( bufferType, array, 35044 ); } else if ( updateRange.count === - 1 ) { // Not using update ranges gl.bufferSubData( bufferType, 0, array ); } else if ( updateRange.count === 0 ) { console.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' ); } else { gl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array.subarray( updateRange.offset, updateRange.offset + updateRange.count ) ); updateRange.count = - 1; // reset range } } // function get( attribute ) { if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data; return buffers.get( attribute ); } function remove( attribute ) { if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data; var data = buffers.get( attribute ); if ( data ) { gl.deleteBuffer( data.buffer ); buffers.delete( attribute ); } } function update( attribute, bufferType ) { if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data; var data = buffers.get( attribute ); if ( data === undefined ) { buffers.set( attribute, createBuffer( attribute, bufferType ) ); } else if ( data.version < attribute.version ) { updateBuffer( data.buffer, attribute, bufferType ); data.version = attribute.version; } } return { get: get, remove: remove, update: update }; } /** * @author mrdoob / http://mrdoob.com/ * @author alteredq / http://alteredqualia.com/ */ function Face3( a, b, c, normal, color, materialIndex ) { this.a = a; this.b = b; this.c = c; this.normal = ( normal && normal.isVector3 ) ? normal : new Vector3(); this.vertexNormals = Array.isArray( normal ) ? normal : []; this.color = ( color && color.isColor ) ? color : new Color(); this.vertexColors = Array.isArray( color ) ? color : []; this.materialIndex = materialIndex !== undefined ? materialIndex : 0; } Object.assign( Face3.prototype, { clone: function () { return new this.constructor().copy( this ); }, copy: function ( source ) { this.a = source.a; this.b = source.b; this.c = source.c; this.normal.copy( source.normal ); this.color.copy( source.color ); this.materialIndex = source.materialIndex; for ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) { this.vertexNormals[ i ] = source.vertexNormals[ i ].clone(); } for ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) { this.vertexColors[ i ] = source.vertexColors[ i ].clone(); } return this; } } ); /** * @author mrdoob / http://mrdoob.com/ * @author WestLangley / http://github.com/WestLangley * @author bhouston / http://clara.io */ function Euler( x, y, z, order ) { this._x = x || 0; this._y = y || 0; this._z = z || 0; this._order = order || Euler.DefaultOrder; } Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ]; Euler.DefaultOrder = 'XYZ'; Object.defineProperties( Euler.prototype, { x: { get: function () { return this._x; }, set: function ( value ) { this._x = value; this.onChangeCallback(); } }, y: { get: function () { return this._y; }, set: function ( value ) { this._y = value; this.onChangeCallback(); } }, z: { get: function () { return this._z; }, set: function ( value ) { this._z = value; this.onChangeCallback(); } }, order: { get: function () { return this._order; }, set: function ( value ) { this._order = value; this.onChangeCallback(); } } } ); Object.assign( Euler.prototype, { isEuler: true, set: function ( x, y, z, order ) { this._x = x; this._y = y; this._z = z; this._order = order || this._order; this.onChangeCallback(); return this; }, clone: function () { return new this.constructor( this._x, this._y, this._z, this._order ); }, copy: function ( euler ) { this._x = euler._x; this._y = euler._y; this._z = euler._z; this._order = euler._order; this.onChangeCallback(); return this; }, setFromRotationMatrix: function ( m, order, update ) { var clamp = _Math.clamp; // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled) var te = m.elements; var m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ]; var m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ]; var m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ]; order = order || this._order; if ( order === 'XYZ' ) { this._y = Math.asin( clamp( m13, - 1, 1 ) ); if ( Math.abs( m13 ) < 0.99999 ) { this._x = Math.atan2( - m23, m33 ); this._z = Math.atan2( - m12, m11 ); } else { this._x = Math.atan2( m32, m22 ); this._z = 0; } } else if ( order === 'YXZ' ) { this._x = Math.asin( - clamp( m23, - 1, 1 ) ); if ( Math.abs( m23 ) < 0.99999 ) { this._y = Math.atan2( m13, m33 ); this._z = Math.atan2( m21, m22 ); } else { this._y = Math.atan2( - m31, m11 ); this._z = 0; } } else if ( order === 'ZXY' ) { this._x = Math.asin( clamp( m32, - 1, 1 ) ); if ( Math.abs( m32 ) < 0.99999 ) { this._y = Math.atan2( - m31, m33 ); this._z = Math.atan2( - m12, m22 ); } else { this._y = 0; this._z = Math.atan2( m21, m11 ); } } else if ( order === 'ZYX' ) { this._y = Math.asin( - clamp( m31, - 1, 1 ) ); if ( Math.abs( m31 ) < 0.99999 ) { this._x = Math.atan2( m32, m33 ); this._z = Math.atan2( m21, m11 ); } else { this._x = 0; this._z = Math.atan2( - m12, m22 ); } } else if ( order === 'YZX' ) { this._z = Math.asin( clamp( m21, - 1, 1 ) ); if ( Math.abs( m21 ) < 0.99999 ) { this._x = Math.atan2( - m23, m22 ); this._y = Math.atan2( - m31, m11 ); } else { this._x = 0; this._y = Math.atan2( m13, m33 ); } } else if ( order === 'XZY' ) { this._z = Math.asin( - clamp( m12, - 1, 1 ) ); if ( Math.abs( m12 ) < 0.99999 ) { this._x = Math.atan2( m32, m22 ); this._y = Math.atan2( m13, m11 ); } else { this._x = Math.atan2( - m23, m33 ); this._y = 0; } } else { console.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order ); } this._order = order; if ( update !== false ) this.onChangeCallback(); return this; }, setFromQuaternion: function () { var matrix = new Matrix4(); return function setFromQuaternion( q, order, update ) { matrix.makeRotationFromQuaternion( q ); return this.setFromRotationMatrix( matrix, order, update ); }; }(), setFromVector3: function ( v, order ) { return this.set( v.x, v.y, v.z, order || this._order ); }, reorder: function () { // WARNING: this discards revolution information -bhouston var q = new Quaternion(); return function reorder( newOrder ) { q.setFromEuler( this ); return this.setFromQuaternion( q, newOrder ); }; }(), equals: function ( euler ) { return ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order ); }, fromArray: function ( array ) { this._x = array[ 0 ]; this._y = array[ 1 ]; this._z = array[ 2 ]; if ( array[ 3 ] !== undefined ) this._order = array[ 3 ]; this.onChangeCallback(); return this; }, toArray: function ( array, offset ) { if ( array === undefined ) array = []; if ( offset === undefined ) offset = 0; array[ offset ] = this._x; array[ offset + 1 ] = this._y; array[ offset + 2 ] = this._z; array[ offset + 3 ] = this._order; return array; }, toVector3: function ( optionalResult ) { if ( optionalResult ) { return optionalResult.set( this._x, this._y, this._z ); } else { return new Vector3( this._x, this._y, this._z ); } }, onChange: function ( callback ) { this.onChangeCallback = callback; return this; }, onChangeCallback: function () {} } ); /** * @author mrdoob / http://mrdoob.com/ */ function Layers() { this.mask = 1 | 0; } Object.assign( Layers.prototype, { set: function ( channel ) { this.mask = 1 << channel | 0; }, enable: function ( channel ) { this.mask |= 1 << channel | 0; }, toggle: function ( channel ) { this.mask ^= 1 << channel | 0; }, disable: function ( channel ) { this.mask &= ~ ( 1 << channel | 0 ); }, test: function ( layers ) { return ( this.mask & layers.mask ) !== 0; } } ); /** * @author mrdoob / http://mrdoob.com/ * @author mikael emtinger / http://gomo.se/ * @author alteredq / http://alteredqualia.com/ * @author WestLangley / http://github.com/WestLangley * @author elephantatwork / www.elephantatwork.ch */ var object3DId = 0; function Object3D() { Object.defineProperty( this, 'id', { value: object3DId ++ } ); this.uuid = _Math.generateUUID(); this.name = ''; this.type = 'Object3D'; this.parent = null; this.children = []; this.up = Object3D.DefaultUp.clone(); var position = new Vector3(); var rotation = new Euler(); var quaternion = new Quaternion(); var scale = new Vector3( 1, 1, 1 ); function onRotationChange() { quaternion.setFromEuler( rotation, false ); } function onQuaternionChange() { rotation.setFromQuaternion( quaternion, undefined, false ); } rotation.onChange( onRotationChange ); quaternion.onChange( onQuaternionChange ); Object.defineProperties( this, { position: { configurable: true, enumerable: true, value: position }, rotation: { configurable: true, enumerable: true, value: rotation }, quaternion: { configurable: true, enumerable: true, value: quaternion }, scale: { configurable: true, enumerable: true, value: scale }, modelViewMatrix: { value: new Matrix4() }, normalMatrix: { value: new Matrix3() } } ); this.matrix = new Matrix4(); this.matrixWorld = new Matrix4(); this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate; this.matrixWorldNeedsUpdate = false; this.layers = new Layers(); this.visible = true; this.castShadow = false; this.receiveShadow = false; this.frustumCulled = true; this.renderOrder = 0; this.userData = {}; } Object3D.DefaultUp = new Vector3( 0, 1, 0 ); Object3D.DefaultMatrixAutoUpdate = true; Object3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), { constructor: Object3D, isObject3D: true, onBeforeRender: function () {}, onAfterRender: function () {}, applyMatrix: function ( matrix ) { this.matrix.multiplyMatrices( matrix, this.matrix ); this.matrix.decompose( this.position, this.quaternion, this.scale ); }, applyQuaternion: function ( q ) { this.quaternion.premultiply( q ); return this; }, setRotationFromAxisAngle: function ( axis, angle ) { // assumes axis is normalized this.quaternion.setFromAxisAngle( axis, angle ); }, setRotationFromEuler: function ( euler ) { this.quaternion.setFromEuler( euler, true ); }, setRotationFromMatrix: function ( m ) { // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled) this.quaternion.setFromRotationMatrix( m ); }, setRotationFromQuaternion: function ( q ) { // assumes q is normalized this.quaternion.copy( q ); }, rotateOnAxis: function () { // rotate object on axis in object space // axis is assumed to be normalized var q1 = new Quaternion(); return function rotateOnAxis( axis, angle ) { q1.setFromAxisAngle( axis, angle ); this.quaternion.multiply( q1 ); return this; }; }(), rotateOnWorldAxis: function () { // rotate object on axis in world space // axis is assumed to be normalized // method assumes no rotated parent var q1 = new Quaternion(); return function rotateOnWorldAxis( axis, angle ) { q1.setFromAxisAngle( axis, angle ); this.quaternion.premultiply( q1 ); return this; }; }(), rotateX: function () { var v1 = new Vector3( 1, 0, 0 ); return function rotateX( angle ) { return this.rotateOnAxis( v1, angle ); }; }(), rotateY: function () { var v1 = new Vector3( 0, 1, 0 ); return function rotateY( angle ) { return this.rotateOnAxis( v1, angle ); }; }(), rotateZ: function () { var v1 = new Vector3( 0, 0, 1 ); return function rotateZ( angle ) { return this.rotateOnAxis( v1, angle ); }; }(), translateOnAxis: function () { // translate object by distance along axis in object space // axis is assumed to be normalized var v1 = new Vector3(); return function translateOnAxis( axis, distance ) { v1.copy( axis ).applyQuaternion( this.quaternion ); this.position.add( v1.multiplyScalar( distance ) ); return this; }; }(), translateX: function () { var v1 = new Vector3( 1, 0, 0 ); return function translateX( distance ) { return this.translateOnAxis( v1, distance ); }; }(), translateY: function () { var v1 = new Vector3( 0, 1, 0 ); return function translateY( distance ) { return this.translateOnAxis( v1, distance ); }; }(), translateZ: function () { var v1 = new Vector3( 0, 0, 1 ); return function translateZ( distance ) { return this.translateOnAxis( v1, distance ); }; }(), localToWorld: function ( vector ) { return vector.applyMatrix4( this.matrixWorld ); }, worldToLocal: function () { var m1 = new Matrix4(); return function worldToLocal( vector ) { return vector.applyMatrix4( m1.getInverse( this.matrixWorld ) ); }; }(), lookAt: function () { // This method does not support objects having non-uniformly-scaled parent(s) var q1 = new Quaternion(); var m1 = new Matrix4(); var target = new Vector3(); var position = new Vector3(); return function lookAt( x, y, z ) { if ( x.isVector3 ) { target.copy( x ); } else { target.set( x, y, z ); } var parent = this.parent; this.updateWorldMatrix( true, false ); position.setFromMatrixPosition( this.matrixWorld ); if ( this.isCamera || this.isLight ) { m1.lookAt( position, target, this.up ); } else { m1.lookAt( target, position, this.up ); } this.quaternion.setFromRotationMatrix( m1 ); if ( parent ) { m1.extractRotation( parent.matrixWorld ); q1.setFromRotationMatrix( m1 ); this.quaternion.premultiply( q1.inverse() ); } }; }(), add: function ( object ) { if ( arguments.length > 1 ) { for ( var i = 0; i < arguments.length; i ++ ) { this.add( arguments[ i ] ); } return this; } if ( object === this ) { console.error( "THREE.Object3D.add: object can't be added as a child of itself.", object ); return this; } if ( ( object && object.isObject3D ) ) { if ( object.parent !== null ) { object.parent.remove( object ); } object.parent = this; object.dispatchEvent( { type: 'added' } ); this.children.push( object ); } else { console.error( "THREE.Object3D.add: object not an instance of THREE.Object3D.", object ); } return this; }, remove: function ( object ) { if ( arguments.length > 1 ) { for ( var i = 0; i < arguments.length; i ++ ) { this.remove( arguments[ i ] ); } return this; } var index = this.children.indexOf( object ); if ( index !== - 1 ) { object.parent = null; object.dispatchEvent( { type: 'removed' } ); this.children.splice( index, 1 ); } return this; }, getObjectById: function ( id ) { return this.getObjectByProperty( 'id', id ); }, getObjectByName: function ( name ) { return this.getObjectByProperty( 'name', name ); }, getObjectByProperty: function ( name, value ) { if ( this[ name ] === value ) return this; for ( var i = 0, l = this.children.length; i < l; i ++ ) { var child = this.children[ i ]; var object = child.getObjectByProperty( name, value ); if ( object !== undefined ) { return object; } } return undefined; }, getWorldPosition: function ( target ) { if ( target === undefined ) { console.warn( 'THREE.Object3D: .getWorldPosition() target is now required' ); target = new Vector3(); } this.updateMatrixWorld( true ); return target.setFromMatrixPosition( this.matrixWorld ); }, getWorldQuaternion: function () { var position = new Vector3(); var scale = new Vector3(); return function getWorldQuaternion( target ) { if ( target === undefined ) { console.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' ); target = new Quaternion(); } this.updateMatrixWorld( true ); this.matrixWorld.decompose( position, target, scale ); return target; }; }(), getWorldScale: function () { var position = new Vector3(); var quaternion = new Quaternion(); return function getWorldScale( target ) { if ( target === undefined ) { console.warn( 'THREE.Object3D: .getWorldScale() target is now required' ); target = new Vector3(); } this.updateMatrixWorld( true ); this.matrixWorld.decompose( position, quaternion, target ); return target; }; }(), getWorldDirection: function ( target ) { if ( target === undefined ) { console.warn( 'THREE.Object3D: .getWorldDirection() target is now required' ); target = new Vector3(); } this.updateMatrixWorld( true ); var e = this.matrixWorld.elements; return target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize(); }, raycast: function () {}, traverse: function ( callback ) { callback( this ); var children = this.children; for ( var i = 0, l = children.length; i < l; i ++ ) { children[ i ].traverse( callback ); } }, traverseVisible: function ( callback ) { if ( this.visible === false ) return; callback( this ); var children = this.children; for ( var i = 0, l = children.length; i < l; i ++ ) { children[ i ].traverseVisible( callback ); } }, traverseAncestors: function ( callback ) { var parent = this.parent; if ( parent !== null ) { callback( parent ); parent.traverseAncestors( callback ); } }, updateMatrix: function () { this.matrix.compose( this.position, this.quaternion, this.scale ); this.matrixWorldNeedsUpdate = true; }, updateMatrixWorld: function ( force ) { if ( this.matrixAutoUpdate ) this.updateMatrix(); if ( this.matrixWorldNeedsUpdate || force ) { if ( this.parent === null ) { this.matrixWorld.copy( this.matrix ); } else { this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix ); } this.matrixWorldNeedsUpdate = false; force = true; } // update children var children = this.children; for ( var i = 0, l = children.length; i < l; i ++ ) { children[ i ].updateMatrixWorld( force ); } }, updateWorldMatrix: function ( updateParents, updateChildren ) { var parent = this.parent; if ( updateParents === true && parent !== null ) { parent.updateWorldMatrix( true, false ); } if ( this.matrixAutoUpdate ) this.updateMatrix(); if ( this.parent === null ) { this.matrixWorld.copy( this.matrix ); } else { this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix ); } // update children if ( updateChildren === true ) { var children = this.children; for ( var i = 0, l = children.length; i < l; i ++ ) { children[ i ].updateWorldMatrix( false, true ); } } }, toJSON: function ( meta ) { // meta is a string when called from JSON.stringify var isRootObject = ( meta === undefined || typeof meta === 'string' ); var output = {}; // meta is a hash used to collect geometries, materials. // not providing it implies that this is the root object // being serialized. if ( isRootObject ) { // initialize meta obj meta = { geometries: {}, materials: {}, textures: {}, images: {}, shapes: {} }; output.metadata = { version: 4.5, type: 'Object', generator: 'Object3D.toJSON' }; } // standard Object3D serialization var object = {}; object.uuid = this.uuid; object.type = this.type; if ( this.name !== '' ) object.name = this.name; if ( this.castShadow === true ) object.castShadow = true; if ( this.receiveShadow === true ) object.receiveShadow = true; if ( this.visible === false ) object.visible = false; if ( this.frustumCulled === false ) object.frustumCulled = false; if ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder; if ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData; object.layers = this.layers.mask; object.matrix = this.matrix.toArray(); if ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false; // object specific properties if ( this.isMesh && this.drawMode !== TrianglesDrawMode ) object.drawMode = this.drawMode; // function serialize( library, element ) { if ( library[ element.uuid ] === undefined ) { library[ element.uuid ] = element.toJSON( meta ); } return element.uuid; } if ( this.isMesh || this.isLine || this.isPoints ) { object.geometry = serialize( meta.geometries, this.geometry ); var parameters = this.geometry.parameters; if ( parameters !== undefined && parameters.shapes !== undefined ) { var shapes = parameters.shapes; if ( Array.isArray( shapes ) ) { for ( var i = 0, l = shapes.length; i < l; i ++ ) { var shape = shapes[ i ]; serialize( meta.shapes, shape ); } } else { serialize( meta.shapes, shapes ); } } } if ( this.material !== undefined ) { if ( Array.isArray( this.material ) ) { var uuids = []; for ( var i = 0, l = this.material.length; i < l; i ++ ) { uuids.push( serialize( meta.materials, this.material[ i ] ) ); } object.material = uuids; } else { object.material = serialize( meta.materials, this.material ); } } // if ( this.children.length > 0 ) { object.children = []; for ( var i = 0; i < this.children.length; i ++ ) { object.children.push( this.children[ i ].toJSON( meta ).object ); } } if ( isRootObject ) { var geometries = extractFromCache( meta.geometries ); var materials = extractFromCache( meta.materials ); var textures = extractFromCache( meta.textures ); var images = extractFromCache( meta.images ); var shapes = extractFromCache( meta.shapes ); if ( geometries.length > 0 ) output.geometries = geometries; if ( materials.length > 0 ) output.materials = materials; if ( textures.length > 0 ) output.textures = textures; if ( images.length > 0 ) output.images = images; if ( shapes.length > 0 ) output.shapes = shapes; } output.object = object; return output; // extract data from the cache hash // remove metadata on each item // and return as array function extractFromCache( cache ) { var values = []; for ( var key in cache ) { var data = cache[ key ]; delete data.metadata; values.push( data ); } return values; } }, clone: function ( recursive ) { return new this.constructor().copy( this, recursive ); }, copy: function ( source, recursive ) { if ( recursive === undefined ) recursive = true; this.name = source.name; this.up.copy( source.up ); this.position.copy( source.position ); this.quaternion.copy( source.quaternion ); this.scale.copy( source.scale ); this.matrix.copy( source.matrix ); this.matrixWorld.copy( source.matrixWorld ); this.matrixAutoUpdate = source.matrixAutoUpdate; this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate; this.layers.mask = source.layers.mask; this.visible = source.visible; this.castShadow = source.castShadow; this.receiveShadow = source.receiveShadow; this.frustumCulled = source.frustumCulled; this.renderOrder = source.renderOrder; this.userData = JSON.parse( JSON.stringify( source.userData ) ); if ( recursive === true ) { for ( var i = 0; i < source.children.length; i ++ ) { var child = source.children[ i ]; this.add( child.clone() ); } } return this; } } ); /** * @author mrdoob / http://mrdoob.com/ * @author kile / http://kile.stravaganza.org/ * @author alteredq / http://alteredqualia.com/ * @author mikael emtinger / http://gomo.se/ * @author zz85 / http://www.lab4games.net/zz85/blog * @author bhouston / http://clara.io */ var geometryId = 0; // Geometry uses even numbers as Id function Geometry() { Object.defineProperty( this, 'id', { value: geometryId += 2 } ); this.uuid = _Math.generateUUID(); this.name = ''; this.type = 'Geometry'; this.vertices = []; this.colors = []; this.faces = []; this.faceVertexUvs = [[]]; this.morphTargets = []; this.morphNormals = []; this.skinWeights = []; this.skinIndices = []; this.lineDistances = []; this.boundingBox = null; this.boundingSphere = null; // update flags this.elementsNeedUpdate = false; this.verticesNeedUpdate = false; this.uvsNeedUpdate = false; this.normalsNeedUpdate = false; this.colorsNeedUpdate = false; this.lineDistancesNeedUpdate = false; this.groupsNeedUpdate = false; } Geometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), { constructor: Geometry, isGeometry: true, applyMatrix: function ( matrix ) { var normalMatrix = new Matrix3().getNormalMatrix( matrix ); for ( var i = 0, il = this.vertices.length; i < il; i ++ ) { var vertex = this.vertices[ i ]; vertex.applyMatrix4( matrix ); } for ( var i = 0, il = this.faces.length; i < il; i ++ ) { var face = this.faces[ i ]; face.normal.applyMatrix3( normalMatrix ).normalize(); for ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) { face.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize(); } } if ( this.boundingBox !== null ) { this.computeBoundingBox(); } if ( this.boundingSphere !== null ) { this.computeBoundingSphere(); } this.verticesNeedUpdate = true; this.normalsNeedUpdate = true; return this; }, rotateX: function () { // rotate geometry around world x-axis var m1 = new Matrix4(); return function rotateX( angle ) { m1.makeRotationX( angle ); this.applyMatrix( m1 ); return this; }; }(), rotateY: function () { // rotate geometry around world y-axis var m1 = new Matrix4(); return function rotateY( angle ) { m1.makeRotationY( angle ); this.applyMatrix( m1 ); return this; }; }(), rotateZ: function () { // rotate geometry around world z-axis var m1 = new Matrix4(); return function rotateZ( angle ) { m1.makeRotationZ( angle ); this.applyMatrix( m1 ); return this; }; }(), translate: function () { // translate geometry var m1 = new Matrix4(); return function translate( x, y, z ) { m1.makeTranslation( x, y, z ); this.applyMatrix( m1 ); return this; }; }(), scale: function () { // scale geometry var m1 = new Matrix4(); return function scale( x, y, z ) { m1.makeScale( x, y, z ); this.applyMatrix( m1 ); return this; }; }(), lookAt: function () { var obj = new Object3D(); return function lookAt( vector ) { obj.lookAt( vector ); obj.updateMatrix(); this.applyMatrix( obj.matrix ); }; }(), fromBufferGeometry: function ( geometry ) { var scope = this; var indices = geometry.index !== null ? geometry.index.array : undefined; var attributes = geometry.attributes; var positions = attributes.position.array; var normals = attributes.normal !== undefined ? attributes.normal.array : undefined; var colors = attributes.color !== undefined ? attributes.color.array : undefined; var uvs = attributes.uv !== undefined ? attributes.uv.array : undefined; var uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined; if ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = []; for ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) { scope.vertices.push( new Vector3().fromArray( positions, i ) ); if ( colors !== undefined ) { scope.colors.push( new Color().fromArray( colors, i ) ); } } function addFace( a, b, c, materialIndex ) { var vertexColors = ( colors === undefined ) ? [] : [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ]; var vertexNormals = ( normals === undefined ) ? [] : [ new Vector3().fromArray( normals, a * 3 ), new Vector3().fromArray( normals, b * 3 ), new Vector3().fromArray( normals, c * 3 ) ]; var face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex ); scope.faces.push( face ); if ( uvs !== undefined ) { scope.faceVertexUvs[ 0 ].push( [ new Vector2().fromArray( uvs, a * 2 ), new Vector2().fromArray( uvs, b * 2 ), new Vector2().fromArray( uvs, c * 2 ) ] ); } if ( uvs2 !== undefined ) { scope.faceVertexUvs[ 1 ].push( [ new Vector2().fromArray( uvs2, a * 2 ), new Vector2().fromArray( uvs2, b * 2 ), new Vector2().fromArray( uvs2, c * 2 ) ] ); } } var groups = geometry.groups; if ( groups.length > 0 ) { for ( var i = 0; i < groups.length; i ++ ) { var group = groups[ i ]; var start = group.start; var count = group.count; for ( var j = start, jl = start + count; j < jl; j += 3 ) { if ( indices !== undefined ) { addFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex ); } else { addFace( j, j + 1, j + 2, group.materialIndex ); } } } } else { if ( indices !== undefined ) { for ( var i = 0; i < indices.length; i += 3 ) { addFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] ); } } else { for ( var i = 0; i < positions.length / 3; i += 3 ) { addFace( i, i + 1, i + 2 ); } } } this.computeFaceNormals(); if ( geometry.boundingBox !== null ) { this.boundingBox = geometry.boundingBox.clone(); } if ( geometry.boundingSphere !== null ) { this.boundingSphere = geometry.boundingSphere.clone(); } return this; }, center: function () { var offset = new Vector3(); return function center() { this.computeBoundingBox(); this.boundingBox.getCenter( offset ).negate(); this.translate( offset.x, offset.y, offset.z ); return this; }; }(), normalize: function () { this.computeBoundingSphere(); var center = this.boundingSphere.center; var radius = this.boundingSphere.radius; var s = radius === 0 ? 1 : 1.0 / radius; var matrix = new Matrix4(); matrix.set( s, 0, 0, - s * center.x, 0, s, 0, - s * center.y, 0, 0, s, - s * center.z, 0, 0, 0, 1 ); this.applyMatrix( matrix ); return this; }, computeFaceNormals: function () { var cb = new Vector3(), ab = new Vector3(); for ( var f = 0, fl = this.faces.length; f < fl; f ++ ) { var face = this.faces[ f ]; var vA = this.vertices[ face.a ]; var vB = this.vertices[ face.b ]; var vC = this.vertices[ face.c ]; cb.subVectors( vC, vB ); ab.subVectors( vA, vB ); cb.cross( ab ); cb.normalize(); face.normal.copy( cb ); } }, computeVertexNormals: function ( areaWeighted ) { if ( areaWeighted === undefined ) areaWeighted = true; var v, vl, f, fl, face, vertices; vertices = new Array( this.vertices.length ); for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) { vertices[ v ] = new Vector3(); } if ( areaWeighted ) { // vertex normals weighted by triangle areas // http://www.iquilezles.org/www/articles/normals/normals.htm var vA, vB, vC; var cb = new Vector3(), ab = new Vector3(); for ( f = 0, fl = this.faces.length; f < fl; f ++ ) { face = this.faces[ f ]; vA = this.vertices[ face.a ]; vB = this.vertices[ face.b ]; vC = this.vertices[ face.c ]; cb.subVectors( vC, vB ); ab.subVectors( vA, vB ); cb.cross( ab ); vertices[ face.a ].add( cb ); vertices[ face.b ].add( cb ); vertices[ face.c ].add( cb ); } } else { this.computeFaceNormals(); for ( f = 0, fl = this.faces.length; f < fl; f ++ ) { face = this.faces[ f ]; vertices[ face.a ].add( face.normal ); vertices[ face.b ].add( face.normal ); vertices[ face.c ].add( face.normal ); } } for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) { vertices[ v ].normalize(); } for ( f = 0, fl = this.faces.length; f < fl; f ++ ) { face = this.faces[ f ]; var vertexNormals = face.vertexNormals; if ( vertexNormals.length === 3 ) { vertexNormals[ 0 ].copy( vertices[ face.a ] ); vertexNormals[ 1 ].copy( vertices[ face.b ] ); vertexNormals[ 2 ].copy( vertices[ face.c ] ); } else { vertexNormals[ 0 ] = vertices[ face.a ].clone(); vertexNormals[ 1 ] = vertices[ face.b ].clone(); vertexNormals[ 2 ] = vertices[ face.c ].clone(); } } if ( this.faces.length > 0 ) { this.normalsNeedUpdate = true; } }, computeFlatVertexNormals: function () { var f, fl, face; this.computeFaceNormals(); for ( f = 0, fl = this.faces.length; f < fl; f ++ ) { face = this.faces[ f ]; var vertexNormals = face.vertexNormals; if ( vertexNormals.length === 3 ) { vertexNormals[ 0 ].copy( face.normal ); vertexNormals[ 1 ].copy( face.normal ); vertexNormals[ 2 ].copy( face.normal ); } else { vertexNormals[ 0 ] = face.normal.clone(); vertexNormals[ 1 ] = face.normal.clone(); vertexNormals[ 2 ] = face.normal.clone(); } } if ( this.faces.length > 0 ) { this.normalsNeedUpdate = true; } }, computeMorphNormals: function () { var i, il, f, fl, face; // save original normals // - create temp variables on first access // otherwise just copy (for faster repeated calls) for ( f = 0, fl = this.faces.length; f < fl; f ++ ) { face = this.faces[ f ]; if ( ! face.__originalFaceNormal ) { face.__originalFaceNormal = face.normal.clone(); } else { face.__originalFaceNormal.copy( face.normal ); } if ( ! face.__originalVertexNormals ) face.__originalVertexNormals = []; for ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) { if ( ! face.__originalVertexNormals[ i ] ) { face.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone(); } else { face.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] ); } } } // use temp geometry to compute face and vertex normals for each morph var tmpGeo = new Geometry(); tmpGeo.faces = this.faces; for ( i = 0, il = this.morphTargets.length; i < il; i ++ ) { // create on first access if ( ! this.morphNormals[ i ] ) { this.morphNormals[ i ] = {}; this.morphNormals[ i ].faceNormals = []; this.morphNormals[ i ].vertexNormals = []; var dstNormalsFace = this.morphNormals[ i ].faceNormals; var dstNormalsVertex = this.morphNormals[ i ].vertexNormals; var faceNormal, vertexNormals; for ( f = 0, fl = this.faces.length; f < fl; f ++ ) { faceNormal = new Vector3(); vertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() }; dstNormalsFace.push( faceNormal ); dstNormalsVertex.push( vertexNormals ); } } var morphNormals = this.morphNormals[ i ]; // set vertices to morph target tmpGeo.vertices = this.morphTargets[ i ].vertices; // compute morph normals tmpGeo.computeFaceNormals(); tmpGeo.computeVertexNormals(); // store morph normals var faceNormal, vertexNormals; for ( f = 0, fl = this.faces.length; f < fl; f ++ ) { face = this.faces[ f ]; faceNormal = morphNormals.faceNormals[ f ]; vertexNormals = morphNormals.vertexNormals[ f ]; faceNormal.copy( face.normal ); vertexNormals.a.copy( face.vertexNormals[ 0 ] ); vertexNormals.b.copy( face.vertexNormals[ 1 ] ); vertexNormals.c.copy( face.vertexNormals[ 2 ] ); } } // restore original normals for ( f = 0, fl = this.faces.length; f < fl; f ++ ) { face = this.faces[ f ]; face.normal = face.__originalFaceNormal; face.vertexNormals = face.__originalVertexNormals; } }, computeBoundingBox: function () { if ( this.boundingBox === null ) { this.boundingBox = new Box3(); } this.boundingBox.setFromPoints( this.vertices ); }, computeBoundingSphere: function () { if ( this.boundingSphere === null ) { this.boundingSphere = new Sphere(); } this.boundingSphere.setFromPoints( this.vertices ); }, merge: function ( geometry, matrix, materialIndexOffset ) { if ( ! ( geometry && geometry.isGeometry ) ) { console.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry ); return; } var normalMatrix, vertexOffset = this.vertices.length, vertices1 = this.vertices, vertices2 = geometry.vertices, faces1 = this.faces, faces2 = geometry.faces, uvs1 = this.faceVertexUvs[ 0 ], uvs2 = geometry.faceVertexUvs[ 0 ], colors1 = this.colors, colors2 = geometry.colors; if ( materialIndexOffset === undefined ) materialIndexOffset = 0; if ( matrix !== undefined ) { normalMatrix = new Matrix3().getNormalMatrix( matrix ); } // vertices for ( var i = 0, il = vertices2.length; i < il; i ++ ) { var vertex = vertices2[ i ]; var vertexCopy = vertex.clone(); if ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix ); vertices1.push( vertexCopy ); } // colors for ( var i = 0, il = colors2.length; i < il; i ++ ) { colors1.push( colors2[ i ].clone() ); } // faces for ( i = 0, il = faces2.length; i < il; i ++ ) { var face = faces2[ i ], faceCopy, normal, color, faceVertexNormals = face.vertexNormals, faceVertexColors = face.vertexColors; faceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset ); faceCopy.normal.copy( face.normal ); if ( normalMatrix !== undefined ) { faceCopy.normal.applyMatrix3( normalMatrix ).normalize(); } for ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) { normal = faceVertexNormals[ j ].clone(); if ( normalMatrix !== undefined ) { normal.applyMatrix3( normalMatrix ).normalize(); } faceCopy.vertexNormals.push( normal ); } faceCopy.color.copy( face.color ); for ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) { color = faceVertexColors[ j ]; faceCopy.vertexColors.push( color.clone() ); } faceCopy.materialIndex = face.materialIndex + materialIndexOffset; faces1.push( faceCopy ); } // uvs for ( i = 0, il = uvs2.length; i < il; i ++ ) { var uv = uvs2[ i ], uvCopy = []; if ( uv === undefined ) { continue; } for ( var j = 0, jl = uv.length; j < jl; j ++ ) { uvCopy.push( uv[ j ].clone() ); } uvs1.push( uvCopy ); } }, mergeMesh: function ( mesh ) { if ( ! ( mesh && mesh.isMesh ) ) { console.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh ); return; } if ( mesh.matrixAutoUpdate ) mesh.updateMatrix(); this.merge( mesh.geometry, mesh.matrix ); }, /* * Checks for duplicate vertices with hashmap. * Duplicated vertices are removed * and faces' vertices are updated. */ mergeVertices: function () { var verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique) var unique = [], changes = []; var v, key; var precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001 var precision = Math.pow( 10, precisionPoints ); var i, il, face; var indices, j, jl; for ( i = 0, il = this.vertices.length; i < il; i ++ ) { v = this.vertices[ i ]; key = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision ); if ( verticesMap[ key ] === undefined ) { verticesMap[ key ] = i; unique.push( this.vertices[ i ] ); changes[ i ] = unique.length - 1; } else { //console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]); changes[ i ] = changes[ verticesMap[ key ] ]; } } // if faces are completely degenerate after merging vertices, we // have to remove them from the geometry. var faceIndicesToRemove = []; for ( i = 0, il = this.faces.length; i < il; i ++ ) { face = this.faces[ i ]; face.a = changes[ face.a ]; face.b = changes[ face.b ]; face.c = changes[ face.c ]; indices = [ face.a, face.b, face.c ]; // if any duplicate vertices are found in a Face3 // we have to remove the face as nothing can be saved for ( var n = 0; n < 3; n ++ ) { if ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) { faceIndicesToRemove.push( i ); break; } } } for ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) { var idx = faceIndicesToRemove[ i ]; this.faces.splice( idx, 1 ); for ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) { this.faceVertexUvs[ j ].splice( idx, 1 ); } } // Use unique set of vertices var diff = this.vertices.length - unique.length; this.vertices = unique; return diff; }, setFromPoints: function ( points ) { this.vertices = []; for ( var i = 0, l = points.length; i < l; i ++ ) { var point = points[ i ]; this.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) ); } return this; }, sortFacesByMaterialIndex: function () { var faces = this.faces; var length = faces.length; // tag faces for ( var i = 0; i < length; i ++ ) { faces[ i ]._id = i; } // sort faces function materialIndexSort( a, b ) { return a.materialIndex - b.materialIndex; } faces.sort( materialIndexSort ); // sort uvs var uvs1 = this.faceVertexUvs[ 0 ]; var uvs2 = this.faceVertexUvs[ 1 ]; var newUvs1, newUvs2; if ( uvs1 && uvs1.length === length ) newUvs1 = []; if ( uvs2 && uvs2.length === length ) newUvs2 = []; for ( var i = 0; i < length; i ++ ) { var id = faces[ i ]._id; if ( newUvs1 ) newUvs1.push( uvs1[ id ] ); if ( newUvs2 ) newUvs2.push( uvs2[ id ] ); } if ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1; if ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2; }, toJSON: function () { var data = { metadata: { version: 4.5, type: 'Geometry', generator: 'Geometry.toJSON' } }; // standard Geometry serialization data.uuid = this.uuid; data.type = this.type; if ( this.name !== '' ) data.name = this.name; if ( this.parameters !== undefined ) { var parameters = this.parameters; for ( var key in parameters ) { if ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ]; } return data; } var vertices = []; for ( var i = 0; i < this.vertices.length; i ++ ) { var vertex = this.vertices[ i ]; vertices.push( vertex.x, vertex.y, vertex.z ); } var faces = []; var normals = []; var normalsHash = {}; var colors = []; var colorsHash = {}; var uvs = []; var uvsHash = {}; for ( var i = 0; i < this.faces.length; i ++ ) { var face = this.faces[ i ]; var hasMaterial = true; var hasFaceUv = false; // deprecated var hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined; var hasFaceNormal = face.normal.length() > 0; var hasFaceVertexNormal = face.vertexNormals.length > 0; var hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1; var hasFaceVertexColor = face.vertexColors.length > 0; var faceType = 0; faceType = setBit( faceType, 0, 0 ); // isQuad faceType = setBit( faceType, 1, hasMaterial ); faceType = setBit( faceType, 2, hasFaceUv ); faceType = setBit( faceType, 3, hasFaceVertexUv ); faceType = setBit( faceType, 4, hasFaceNormal ); faceType = setBit( faceType, 5, hasFaceVertexNormal ); faceType = setBit( faceType, 6, hasFaceColor ); faceType = setBit( faceType, 7, hasFaceVertexColor ); faces.push( faceType ); faces.push( face.a, face.b, face.c ); faces.push( face.materialIndex ); if ( hasFaceVertexUv ) { var faceVertexUvs = this.faceVertexUvs[ 0 ][ i ]; faces.push( getUvIndex( faceVertexUvs[ 0 ] ), getUvIndex( faceVertexUvs[ 1 ] ), getUvIndex( faceVertexUvs[ 2 ] ) ); } if ( hasFaceNormal ) { faces.push( getNormalIndex( face.normal ) ); } if ( hasFaceVertexNormal ) { var vertexNormals = face.vertexNormals; faces.push( getNormalIndex( vertexNormals[ 0 ] ), getNormalIndex( vertexNormals[ 1 ] ), getNormalIndex( vertexNormals[ 2 ] ) ); } if ( hasFaceColor ) { faces.push( getColorIndex( face.color ) ); } if ( hasFaceVertexColor ) { var vertexColors = face.vertexColors; faces.push( getColorIndex( vertexColors[ 0 ] ), getColorIndex( vertexColors[ 1 ] ), getColorIndex( vertexColors[ 2 ] ) ); } } function setBit( value, position, enabled ) { return enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) ); } function getNormalIndex( normal ) { var hash = normal.x.toString() + normal.y.toString() + normal.z.toString(); if ( normalsHash[ hash ] !== undefined ) { return normalsHash[ hash ]; } normalsHash[ hash ] = normals.length / 3; normals.push( normal.x, normal.y, normal.z ); return normalsHash[ hash ]; } function getColorIndex( color ) { var hash = color.r.toString() + color.g.toString() + color.b.toString(); if ( colorsHash[ hash ] !== undefined ) { return colorsHash[ hash ]; } colorsHash[ hash ] = colors.length; colors.push( color.getHex() ); return colorsHash[ hash ]; } function getUvIndex( uv ) { var hash = uv.x.toString() + uv.y.toString(); if ( uvsHash[ hash ] !== undefined ) { return uvsHash[ hash ]; } uvsHash[ hash ] = uvs.length / 2; uvs.push( uv.x, uv.y ); return uvsHash[ hash ]; } data.data = {}; data.data.vertices = vertices; data.data.normals = normals; if ( colors.length > 0 ) data.data.colors = colors; if ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility data.data.faces = faces; return data; }, clone: function () { /* // Handle primitives var parameters = this.parameters; if ( parameters !== undefined ) { var values = []; for ( var key in parameters ) { values.push( parameters[ key ] ); } var geometry = Object.create( this.constructor.prototype ); this.constructor.apply( geometry, values ); return geometry; } return new this.constructor().copy( this ); */ return new Geometry().copy( this ); }, copy: function ( source ) { var i, il, j, jl, k, kl; // reset this.vertices = []; this.colors = []; this.faces = []; this.faceVertexUvs = [[]]; this.morphTargets = []; this.morphNormals = []; this.skinWeights = []; this.skinIndices = []; this.lineDistances = []; this.boundingBox = null; this.boundingSphere = null; // name this.name = source.name; // vertices var vertices = source.vertices; for ( i = 0, il = vertices.length; i < il; i ++ ) { this.vertices.push( vertices[ i ].clone() ); } // colors var colors = source.colors; for ( i = 0, il = colors.length; i < il; i ++ ) { this.colors.push( colors[ i ].clone() ); } // faces var faces = source.faces; for ( i = 0, il = faces.length; i < il; i ++ ) { this.faces.push( faces[ i ].clone() ); } // face vertex uvs for ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) { var faceVertexUvs = source.faceVertexUvs[ i ]; if ( this.faceVertexUvs[ i ] === undefined ) { this.faceVertexUvs[ i ] = []; } for ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) { var uvs = faceVertexUvs[ j ], uvsCopy = []; for ( k = 0, kl = uvs.length; k < kl; k ++ ) { var uv = uvs[ k ]; uvsCopy.push( uv.clone() ); } this.faceVertexUvs[ i ].push( uvsCopy ); } } // morph targets var morphTargets = source.morphTargets; for ( i = 0, il = morphTargets.length; i < il; i ++ ) { var morphTarget = {}; morphTarget.name = morphTargets[ i ].name; // vertices if ( morphTargets[ i ].vertices !== undefined ) { morphTarget.vertices = []; for ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) { morphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() ); } } // normals if ( morphTargets[ i ].normals !== undefined ) { morphTarget.normals = []; for ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) { morphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() ); } } this.morphTargets.push( morphTarget ); } // morph normals var morphNormals = source.morphNormals; for ( i = 0, il = morphNormals.length; i < il; i ++ ) { var morphNormal = {}; // vertex normals if ( morphNormals[ i ].vertexNormals !== undefined ) { morphNormal.vertexNormals = []; for ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) { var srcVertexNormal = morphNormals[ i ].vertexNormals[ j ]; var destVertexNormal = {}; destVertexNormal.a = srcVertexNormal.a.clone(); destVertexNormal.b = srcVertexNormal.b.clone(); destVertexNormal.c = srcVertexNormal.c.clone(); morphNormal.vertexNormals.push( destVertexNormal ); } } // face normals if ( morphNormals[ i ].faceNormals !== undefined ) { morphNormal.faceNormals = []; for ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) { morphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() ); } } this.morphNormals.push( morphNormal ); } // skin weights var skinWeights = source.skinWeights; for ( i = 0, il = skinWeights.length; i < il; i ++ ) { this.skinWeights.push( skinWeights[ i ].clone() ); } // skin indices var skinIndices = source.skinIndices; for ( i = 0, il = skinIndices.length; i < il; i ++ ) { this.skinIndices.push( skinIndices[ i ].clone() ); } // line distances var lineDistances = source.lineDistances; for ( i = 0, il = lineDistances.length; i < il; i ++ ) { this.lineDistances.push( lineDistances[ i ] ); } // bounding box var boundingBox = source.boundingBox; if ( boundingBox !== null ) { this.boundingBox = boundingBox.clone(); } // bounding sphere var boundingSphere = source.boundingSphere; if ( boundingSphere !== null ) { this.boundingSphere = boundingSphere.clone(); } // update flags this.elementsNeedUpdate = source.elementsNeedUpdate; this.verticesNeedUpdate = source.verticesNeedUpdate; this.uvsNeedUpdate = source.uvsNeedUpdate; this.normalsNeedUpdate = source.normalsNeedUpdate; this.colorsNeedUpdate = source.colorsNeedUpdate; this.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate; this.groupsNeedUpdate = source.groupsNeedUpdate; return this; }, dispose: function () { this.dispatchEvent( { type: 'dispose' } ); } } ); /** * @author mrdoob / http://mrdoob.com/ */ function BufferAttribute( array, itemSize, normalized ) { if ( Array.isArray( array ) ) { throw new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' ); } this.name = ''; this.array = array; this.itemSize = itemSize; this.count = array !== undefined ? array.length / itemSize : 0; this.normalized = normalized === true; this.dynamic = false; this.updateRange = { offset: 0, count: - 1 }; this.version = 0; } Object.defineProperty( BufferAttribute.prototype, 'needsUpdate', { set: function ( value ) { if ( value === true ) this.version ++; } } ); Object.assign( BufferAttribute.prototype, { isBufferAttribute: true, onUploadCallback: function () {}, setArray: function ( array ) { if ( Array.isArray( array ) ) { throw new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' ); } this.count = array !== undefined ? array.length / this.itemSize : 0; this.array = array; return this; }, setDynamic: function ( value ) { this.dynamic = value; return this; }, copy: function ( source ) { this.name = source.name; this.array = new source.array.constructor( source.array ); this.itemSize = source.itemSize; this.count = source.count; this.normalized = source.normalized; this.dynamic = source.dynamic; return this; }, copyAt: function ( index1, attribute, index2 ) { index1 *= this.itemSize; index2 *= attribute.itemSize; for ( var i = 0, l = this.itemSize; i < l; i ++ ) { this.array[ index1 + i ] = attribute.array[ index2 + i ]; } return this; }, copyArray: function ( array ) { this.array.set( array ); return this; }, copyColorsArray: function ( colors ) { var array = this.array, offset = 0; for ( var i = 0, l = colors.length; i < l; i ++ ) { var color = colors[ i ]; if ( color === undefined ) { console.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i ); color = new Color(); } array[ offset ++ ] = color.r; array[ offset ++ ] = color.g; array[ offset ++ ] = color.b; } return this; }, copyVector2sArray: function ( vectors ) { var array = this.array, offset = 0; for ( var i = 0, l = vectors.length; i < l; i ++ ) { var vector = vectors[ i ]; if ( vector === undefined ) { console.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i ); vector = new Vector2(); } array[ offset ++ ] = vector.x; array[ offset ++ ] = vector.y; } return this; }, copyVector3sArray: function ( vectors ) { var array = this.array, offset = 0; for ( var i = 0, l = vectors.length; i < l; i ++ ) { var vector = vectors[ i ]; if ( vector === undefined ) { console.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i ); vector = new Vector3(); } array[ offset ++ ] = vector.x; array[ offset ++ ] = vector.y; array[ offset ++ ] = vector.z; } return this; }, copyVector4sArray: function ( vectors ) { var array = this.array, offset = 0; for ( var i = 0, l = vectors.length; i < l; i ++ ) { var vector = vectors[ i ]; if ( vector === undefined ) { console.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i ); vector = new Vector4(); } array[ offset ++ ] = vector.x; array[ offset ++ ] = vector.y; array[ offset ++ ] = vector.z; array[ offset ++ ] = vector.w; } return this; }, set: function ( value, offset ) { if ( offset === undefined ) offset = 0; this.array.set( value, offset ); return this; }, getX: function ( index ) { return this.array[ index * this.itemSize ]; }, setX: function ( index, x ) { this.array[ index * this.itemSize ] = x; return this; }, getY: function ( index ) { return this.array[ index * this.itemSize + 1 ]; }, setY: function ( index, y ) { this.array[ index * this.itemSize + 1 ] = y; return this; }, getZ: function ( index ) { return this.array[ index * this.itemSize + 2 ]; }, setZ: function ( index, z ) { this.array[ index * this.itemSize + 2 ] = z; return this; }, getW: function ( index ) { return this.array[ index * this.itemSize + 3 ]; }, setW: function ( index, w ) { this.array[ index * this.itemSize + 3 ] = w; return this; }, setXY: function ( index, x, y ) { index *= this.itemSize; this.array[ index + 0 ] = x; this.array[ index + 1 ] = y; return this; }, setXYZ: function ( index, x, y, z ) { index *= this.itemSize; this.array[ index + 0 ] = x; this.array[ index + 1 ] = y; this.array[ index + 2 ] = z; return this; }, setXYZW: function ( index, x, y, z, w ) { index *= this.itemSize; this.array[ index + 0 ] = x; this.array[ index + 1 ] = y; this.array[ index + 2 ] = z; this.array[ index + 3 ] = w; return this; }, onUpload: function ( callback ) { this.onUploadCallback = callback; return this; }, clone: function () { return new this.constructor( this.array, this.itemSize ).copy( this ); } } ); // function Int8BufferAttribute( array, itemSize, normalized ) { BufferAttribute.call( this, new Int8Array( array ), itemSize, normalized ); } Int8BufferAttribute.prototype = Object.create( BufferAttribute.prototype ); Int8BufferAttribute.prototype.constructor = Int8BufferAttribute; function Uint8BufferAttribute( array, itemSize, normalized ) { BufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized ); } Uint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype ); Uint8BufferAttribute.prototype.constructor = Uint8BufferAttribute; function Uint8ClampedBufferAttribute( array, itemSize, normalized ) { BufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized ); } Uint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype ); Uint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute; function Int16BufferAttribute( array, itemSize, normalized ) { BufferAttribute.call( this, new Int16Array( array ), itemSize, normalized ); } Int16BufferAttribute.prototype = Object.create( BufferAttribute.prototype ); Int16BufferAttribute.prototype.constructor = Int16BufferAttribute; function Uint16BufferAttribute( array, itemSize, normalized ) { BufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized ); } Uint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype ); Uint16BufferAttribute.prototype.constructor = Uint16BufferAttribute; function Int32BufferAttribute( array, itemSize, normalized ) { BufferAttribute.call( this, new Int32Array( array ), itemSize, normalized ); } Int32BufferAttribute.prototype = Object.create( BufferAttribute.prototype ); Int32BufferAttribute.prototype.constructor = Int32BufferAttribute; function Uint32BufferAttribute( array, itemSize, normalized ) { BufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized ); } Uint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype ); Uint32BufferAttribute.prototype.constructor = Uint32BufferAttribute; function Float32BufferAttribute( array, itemSize, normalized ) { BufferAttribute.call( this, new Float32Array( array ), itemSize, normalized ); } Float32BufferAttribute.prototype = Object.create( BufferAttribute.prototype ); Float32BufferAttribute.prototype.constructor = Float32BufferAttribute; function Float64BufferAttribute( array, itemSize, normalized ) { BufferAttribute.call( this, new Float64Array( array ), itemSize, normalized ); } Float64BufferAttribute.prototype = Object.create( BufferAttribute.prototype ); Float64BufferAttribute.prototype.constructor = Float64BufferAttribute; /** * @author mrdoob / http://mrdoob.com/ */ function DirectGeometry() { this.vertices = []; this.normals = []; this.colors = []; this.uvs = []; this.uvs2 = []; this.groups = []; this.morphTargets = {}; this.skinWeights = []; this.skinIndices = []; // this.lineDistances = []; this.boundingBox = null; this.boundingSphere = null; // update flags this.verticesNeedUpdate = false; this.normalsNeedUpdate = false; this.colorsNeedUpdate = false; this.uvsNeedUpdate = false; this.groupsNeedUpdate = false; } Object.assign( DirectGeometry.prototype, { computeGroups: function ( geometry ) { var group; var groups = []; var materialIndex = undefined; var faces = geometry.faces; for ( var i = 0; i < faces.length; i ++ ) { var face = faces[ i ]; // materials if ( face.materialIndex !== materialIndex ) { materialIndex = face.materialIndex; if ( group !== undefined ) { group.count = ( i * 3 ) - group.start; groups.push( group ); } group = { start: i * 3, materialIndex: materialIndex }; } } if ( group !== undefined ) { group.count = ( i * 3 ) - group.start; groups.push( group ); } this.groups = groups; }, fromGeometry: function ( geometry ) { var faces = geometry.faces; var vertices = geometry.vertices; var faceVertexUvs = geometry.faceVertexUvs; var hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0; var hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0; // morphs var morphTargets = geometry.morphTargets; var morphTargetsLength = morphTargets.length; var morphTargetsPosition; if ( morphTargetsLength > 0 ) { morphTargetsPosition = []; for ( var i = 0; i < morphTargetsLength; i ++ ) { morphTargetsPosition[ i ] = { name: morphTargets[ i ].name, data: [] }; } this.morphTargets.position = morphTargetsPosition; } var morphNormals = geometry.morphNormals; var morphNormalsLength = morphNormals.length; var morphTargetsNormal; if ( morphNormalsLength > 0 ) { morphTargetsNormal = []; for ( var i = 0; i < morphNormalsLength; i ++ ) { morphTargetsNormal[ i ] = { name: morphNormals[ i ].name, data: [] }; } this.morphTargets.normal = morphTargetsNormal; } // skins var skinIndices = geometry.skinIndices; var skinWeights = geometry.skinWeights; var hasSkinIndices = skinIndices.length === vertices.length; var hasSkinWeights = skinWeights.length === vertices.length; // if ( vertices.length > 0 && faces.length === 0 ) { console.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' ); } for ( var i = 0; i < faces.length; i ++ ) { var face = faces[ i ]; this.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] ); var vertexNormals = face.vertexNormals; if ( vertexNormals.length === 3 ) { this.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] ); } else { var normal = face.normal; this.normals.push( normal, normal, normal ); } var vertexColors = face.vertexColors; if ( vertexColors.length === 3 ) { this.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] ); } else { var color = face.color; this.colors.push( color, color, color ); } if ( hasFaceVertexUv === true ) { var vertexUvs = faceVertexUvs[ 0 ][ i ]; if ( vertexUvs !== undefined ) { this.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] ); } else { console.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i ); this.uvs.push( new Vector2(), new Vector2(), new Vector2() ); } } if ( hasFaceVertexUv2 === true ) { var vertexUvs = faceVertexUvs[ 1 ][ i ]; if ( vertexUvs !== undefined ) { this.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] ); } else { console.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i ); this.uvs2.push( new Vector2(), new Vector2(), new Vector2() ); } } // morphs for ( var j = 0; j < morphTargetsLength; j ++ ) { var morphTarget = morphTargets[ j ].vertices; morphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] ); } for ( var j = 0; j < morphNormalsLength; j ++ ) { var morphNormal = morphNormals[ j ].vertexNormals[ i ]; morphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c ); } // skins if ( hasSkinIndices ) { this.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] ); } if ( hasSkinWeights ) { this.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] ); } } this.computeGroups( geometry ); this.verticesNeedUpdate = geometry.verticesNeedUpdate; this.normalsNeedUpdate = geometry.normalsNeedUpdate; this.colorsNeedUpdate = geometry.colorsNeedUpdate; this.uvsNeedUpdate = geometry.uvsNeedUpdate; this.groupsNeedUpdate = geometry.groupsNeedUpdate; return this; } } ); /** * @author mrdoob / http://mrdoob.com/ */ function arrayMax( array ) { if ( array.length === 0 ) return - Infinity; var max = array[ 0 ]; for ( var i = 1, l = array.length; i < l; ++ i ) { if ( array[ i ] > max ) max = array[ i ]; } return max; } /** * @author alteredq / http://alteredqualia.com/ * @author mrdoob / http://mrdoob.com/ */ var bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id function BufferGeometry() { Object.defineProperty( this, 'id', { value: bufferGeometryId += 2 } ); this.uuid = _Math.generateUUID(); this.name = ''; this.type = 'BufferGeometry'; this.index = null; this.attributes = {}; this.morphAttributes = {}; this.groups = []; this.boundingBox = null; this.boundingSphere = null; this.drawRange = { start: 0, count: Infinity }; this.userData = {}; } BufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), { constructor: BufferGeometry, isBufferGeometry: true, getIndex: function () { return this.index; }, setIndex: function ( index ) { if ( Array.isArray( index ) ) { this.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 ); } else { this.index = index; } }, addAttribute: function ( name, attribute ) { if ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) { console.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' ); return this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) ); } if ( name === 'index' ) { console.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' ); this.setIndex( attribute ); return this; } this.attributes[ name ] = attribute; return this; }, getAttribute: function ( name ) { return this.attributes[ name ]; }, removeAttribute: function ( name ) { delete this.attributes[ name ]; return this; }, addGroup: function ( start, count, materialIndex ) { this.groups.push( { start: start, count: count, materialIndex: materialIndex !== undefined ? materialIndex : 0 } ); }, clearGroups: function () { this.groups = []; }, setDrawRange: function ( start, count ) { this.drawRange.start = start; this.drawRange.count = count; }, applyMatrix: function ( matrix ) { var position = this.attributes.position; if ( position !== undefined ) { matrix.applyToBufferAttribute( position ); position.needsUpdate = true; } var normal = this.attributes.normal; if ( normal !== undefined ) { var normalMatrix = new Matrix3().getNormalMatrix( matrix ); normalMatrix.applyToBufferAttribute( normal ); normal.needsUpdate = true; } var tangent = this.attributes.tangent; if ( tangent !== undefined ) { var normalMatrix = new Matrix3().getNormalMatrix( matrix ); // Tangent is vec4, but the '.w' component is a sign value (+1/-1). normalMatrix.applyToBufferAttribute( tangent ); tangent.needsUpdate = true; } if ( this.boundingBox !== null ) { this.computeBoundingBox(); } if ( this.boundingSphere !== null ) { this.computeBoundingSphere(); } return this; }, rotateX: function () { // rotate geometry around world x-axis var m1 = new Matrix4(); return function rotateX( angle ) { m1.makeRotationX( angle ); this.applyMatrix( m1 ); return this; }; }(), rotateY: function () { // rotate geometry around world y-axis var m1 = new Matrix4(); return function rotateY( angle ) { m1.makeRotationY( angle ); this.applyMatrix( m1 ); return this; }; }(), rotateZ: function () { // rotate geometry around world z-axis var m1 = new Matrix4(); return function rotateZ( angle ) { m1.makeRotationZ( angle ); this.applyMatrix( m1 ); return this; }; }(), translate: function () { // translate geometry var m1 = new Matrix4(); return function translate( x, y, z ) { m1.makeTranslation( x, y, z ); this.applyMatrix( m1 ); return this; }; }(), scale: function () { // scale geometry var m1 = new Matrix4(); return function scale( x, y, z ) { m1.makeScale( x, y, z ); this.applyMatrix( m1 ); return this; }; }(), lookAt: function () { var obj = new Object3D(); return function lookAt( vector ) { obj.lookAt( vector ); obj.updateMatrix(); this.applyMatrix( obj.matrix ); }; }(), center: function () { var offset = new Vector3(); return function center() { this.computeBoundingBox(); this.boundingBox.getCenter( offset ).negate(); this.translate( offset.x, offset.y, offset.z ); return this; }; }(), setFromObject: function ( object ) { // console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this ); var geometry = object.geometry; if ( object.isPoints || object.isLine ) { var positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 ); var colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 ); this.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) ); this.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) ); if ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) { var lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 ); this.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) ); } if ( geometry.boundingSphere !== null ) { this.boundingSphere = geometry.boundingSphere.clone(); } if ( geometry.boundingBox !== null ) { this.boundingBox = geometry.boundingBox.clone(); } } else if ( object.isMesh ) { if ( geometry && geometry.isGeometry ) { this.fromGeometry( geometry ); } } return this; }, setFromPoints: function ( points ) { var position = []; for ( var i = 0, l = points.length; i < l; i ++ ) { var point = points[ i ]; position.push( point.x, point.y, point.z || 0 ); } this.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) ); return this; }, updateFromObject: function ( object ) { var geometry = object.geometry; if ( object.isMesh ) { var direct = geometry.__directGeometry; if ( geometry.elementsNeedUpdate === true ) { direct = undefined; geometry.elementsNeedUpdate = false; } if ( direct === undefined ) { return this.fromGeometry( geometry ); } direct.verticesNeedUpdate = geometry.verticesNeedUpdate; direct.normalsNeedUpdate = geometry.normalsNeedUpdate; direct.colorsNeedUpdate = geometry.colorsNeedUpdate; direct.uvsNeedUpdate = geometry.uvsNeedUpdate; direct.groupsNeedUpdate = geometry.groupsNeedUpdate; geometry.verticesNeedUpdate = false; geometry.normalsNeedUpdate = false; geometry.colorsNeedUpdate = false; geometry.uvsNeedUpdate = false; geometry.groupsNeedUpdate = false; geometry = direct; } var attribute; if ( geometry.verticesNeedUpdate === true ) { attribute = this.attributes.position; if ( attribute !== undefined ) { attribute.copyVector3sArray( geometry.vertices ); attribute.needsUpdate = true; } geometry.verticesNeedUpdate = false; } if ( geometry.normalsNeedUpdate === true ) { attribute = this.attributes.normal; if ( attribute !== undefined ) { attribute.copyVector3sArray( geometry.normals ); attribute.needsUpdate = true; } geometry.normalsNeedUpdate = false; } if ( geometry.colorsNeedUpdate === true ) { attribute = this.attributes.color; if ( attribute !== undefined ) { attribute.copyColorsArray( geometry.colors ); attribute.needsUpdate = true; } geometry.colorsNeedUpdate = false; } if ( geometry.uvsNeedUpdate ) { attribute = this.attributes.uv; if ( attribute !== undefined ) { attribute.copyVector2sArray( geometry.uvs ); attribute.needsUpdate = true; } geometry.uvsNeedUpdate = false; } if ( geometry.lineDistancesNeedUpdate ) { attribute = this.attributes.lineDistance; if ( attribute !== undefined ) { attribute.copyArray( geometry.lineDistances ); attribute.needsUpdate = true; } geometry.lineDistancesNeedUpdate = false; } if ( geometry.groupsNeedUpdate ) { geometry.computeGroups( object.geometry ); this.groups = geometry.groups; geometry.groupsNeedUpdate = false; } return this; }, fromGeometry: function ( geometry ) { geometry.__directGeometry = new DirectGeometry().fromGeometry( geometry ); return this.fromDirectGeometry( geometry.__directGeometry ); }, fromDirectGeometry: function ( geometry ) { var positions = new Float32Array( geometry.vertices.length * 3 ); this.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) ); if ( geometry.normals.length > 0 ) { var normals = new Float32Array( geometry.normals.length * 3 ); this.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) ); } if ( geometry.colors.length > 0 ) { var colors = new Float32Array( geometry.colors.length * 3 ); this.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) ); } if ( geometry.uvs.length > 0 ) { var uvs = new Float32Array( geometry.uvs.length * 2 ); this.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) ); } if ( geometry.uvs2.length > 0 ) { var uvs2 = new Float32Array( geometry.uvs2.length * 2 ); this.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) ); } // groups this.groups = geometry.groups; // morphs for ( var name in geometry.morphTargets ) { var array = []; var morphTargets = geometry.morphTargets[ name ]; for ( var i = 0, l = morphTargets.length; i < l; i ++ ) { var morphTarget = morphTargets[ i ]; var attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 ); attribute.name = morphTarget.name; array.push( attribute.copyVector3sArray( morphTarget.data ) ); } this.morphAttributes[ name ] = array; } // skinning if ( geometry.skinIndices.length > 0 ) { var skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 ); this.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) ); } if ( geometry.skinWeights.length > 0 ) { var skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 ); this.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) ); } // if ( geometry.boundingSphere !== null ) { this.boundingSphere = geometry.boundingSphere.clone(); } if ( geometry.boundingBox !== null ) { this.boundingBox = geometry.boundingBox.clone(); } return this; }, computeBoundingBox: function () { var box = new Box3(); return function computeBoundingBox() { if ( this.boundingBox === null ) { this.boundingBox = new Box3(); } var position = this.attributes.position; var morphAttributesPosition = this.morphAttributes.position; if ( position !== undefined ) { this.boundingBox.setFromBufferAttribute( position ); // process morph attributes if present if ( morphAttributesPosition ) { for ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) { var morphAttribute = morphAttributesPosition[ i ]; box.setFromBufferAttribute( morphAttribute ); this.boundingBox.expandByPoint( box.min ); this.boundingBox.expandByPoint( box.max ); } } } else { this.boundingBox.makeEmpty(); } if ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) { console.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this ); } }; }(), computeBoundingSphere: function () { var box = new Box3(); var boxMorphTargets = new Box3(); var vector = new Vector3(); return function computeBoundingSphere() { if ( this.boundingSphere === null ) { this.boundingSphere = new Sphere(); } var position = this.attributes.position; var morphAttributesPosition = this.morphAttributes.position; if ( position ) { // first, find the center of the bounding sphere var center = this.boundingSphere.center; box.setFromBufferAttribute( position ); // process morph attributes if present if ( morphAttributesPosition ) { for ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) { var morphAttribute = morphAttributesPosition[ i ]; boxMorphTargets.setFromBufferAttribute( morphAttribute ); box.expandByPoint( boxMorphTargets.min ); box.expandByPoint( boxMorphTargets.max ); } } box.getCenter( center ); // second, try to find a boundingSphere with a radius smaller than the // boundingSphere of the boundingBox: sqrt(3) smaller in the best case var maxRadiusSq = 0; for ( var i = 0, il = position.count; i < il; i ++ ) { vector.fromBufferAttribute( position, i ); maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) ); } // process morph attributes if present if ( morphAttributesPosition ) { for ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) { var morphAttribute = morphAttributesPosition[ i ]; for ( var j = 0, jl = morphAttribute.count; j < jl; j ++ ) { vector.fromBufferAttribute( morphAttribute, i ); maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) ); } } } this.boundingSphere.radius = Math.sqrt( maxRadiusSq ); if ( isNaN( this.boundingSphere.radius ) ) { console.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this ); } } }; }(), computeFaceNormals: function () { // backwards compatibility }, computeVertexNormals: function () { var index = this.index; var attributes = this.attributes; if ( attributes.position ) { var positions = attributes.position.array; if ( attributes.normal === undefined ) { this.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) ); } else { // reset existing normals to zero var array = attributes.normal.array; for ( var i = 0, il = array.length; i < il; i ++ ) { array[ i ] = 0; } } var normals = attributes.normal.array; var vA, vB, vC; var pA = new Vector3(), pB = new Vector3(), pC = new Vector3(); var cb = new Vector3(), ab = new Vector3(); // indexed elements if ( index ) { var indices = index.array; for ( var i = 0, il = index.count; i < il; i += 3 ) { vA = indices[ i + 0 ] * 3; vB = indices[ i + 1 ] * 3; vC = indices[ i + 2 ] * 3; pA.fromArray( positions, vA ); pB.fromArray( positions, vB ); pC.fromArray( positions, vC ); cb.subVectors( pC, pB ); ab.subVectors( pA, pB ); cb.cross( ab ); normals[ vA ] += cb.x; normals[ vA + 1 ] += cb.y; normals[ vA + 2 ] += cb.z; normals[ vB ] += cb.x; normals[ vB + 1 ] += cb.y; normals[ vB + 2 ] += cb.z; normals[ vC ] += cb.x; normals[ vC + 1 ] += cb.y; normals[ vC + 2 ] += cb.z; } } else { // non-indexed elements (unconnected triangle soup) for ( var i = 0, il = positions.length; i < il; i += 9 ) { pA.fromArray( positions, i ); pB.fromArray( positions, i + 3 ); pC.fromArray( positions, i + 6 ); cb.subVectors( pC, pB ); ab.subVectors( pA, pB ); cb.cross( ab ); normals[ i ] = cb.x; normals[ i + 1 ] = cb.y; normals[ i + 2 ] = cb.z; normals[ i + 3 ] = cb.x; normals[ i + 4 ] = cb.y; normals[ i + 5 ] = cb.z; normals[ i + 6 ] = cb.x; normals[ i + 7 ] = cb.y; normals[ i + 8 ] = cb.z; } } this.normalizeNormals(); attributes.normal.needsUpdate = true; } }, merge: function ( geometry, offset ) { if ( ! ( geometry && geometry.isBufferGeometry ) ) { console.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry ); return; } if ( offset === undefined ) { offset = 0; console.warn( 'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. ' + 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.' ); } var attributes = this.attributes; for ( var key in attributes ) { if ( geometry.attributes[ key ] === undefined ) continue; var attribute1 = attributes[ key ]; var attributeArray1 = attribute1.array; var attribute2 = geometry.attributes[ key ]; var attributeArray2 = attribute2.array; var attributeSize = attribute2.itemSize; for ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) { attributeArray1[ j ] = attributeArray2[ i ]; } } return this; }, normalizeNormals: function () { var vector = new Vector3(); return function normalizeNormals() { var normals = this.attributes.normal; for ( var i = 0, il = normals.count; i < il; i ++ ) { vector.x = normals.getX( i ); vector.y = normals.getY( i ); vector.z = normals.getZ( i ); vector.normalize(); normals.setXYZ( i, vector.x, vector.y, vector.z ); } }; }(), toNonIndexed: function () { function convertBufferAttribute( attribute, indices ) { var array = attribute.array; var itemSize = attribute.itemSize; var array2 = new array.constructor( indices.length * itemSize ); var index = 0, index2 = 0; for ( var i = 0, l = indices.length; i < l; i ++ ) { index = indices[ i ] * itemSize; for ( var j = 0; j < itemSize; j ++ ) { array2[ index2 ++ ] = array[ index ++ ]; } } return new BufferAttribute( array2, itemSize ); } // if ( this.index === null ) { console.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' ); return this; } var geometry2 = new BufferGeometry(); var indices = this.index.array; var attributes = this.attributes; // attributes for ( var name in attributes ) { var attribute = attributes[ name ]; var newAttribute = convertBufferAttribute( attribute, indices ); geometry2.addAttribute( name, newAttribute ); } // morph attributes var morphAttributes = this.morphAttributes; for ( name in morphAttributes ) { var morphArray = []; var morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes for ( var i = 0, il = morphAttribute.length; i < il; i ++ ) { var attribute = morphAttribute[ i ]; var newAttribute = convertBufferAttribute( attribute, indices ); morphArray.push( newAttribute ); } geometry2.morphAttributes[ name ] = morphArray; } // groups var groups = this.groups; for ( var i = 0, l = groups.length; i < l; i ++ ) { var group = groups[ i ]; geometry2.addGroup( group.start, group.count, group.materialIndex ); } return geometry2; }, toJSON: function () { var data = { metadata: { version: 4.5, type: 'BufferGeometry', generator: 'BufferGeometry.toJSON' } }; // standard BufferGeometry serialization data.uuid = this.uuid; data.type = this.type; if ( this.name !== '' ) data.name = this.name; if ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData; if ( this.parameters !== undefined ) { var parameters = this.parameters; for ( var key in parameters ) { if ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ]; } return data; } data.data = { attributes: {} }; var index = this.index; if ( index !== null ) { data.data.index = { type: index.array.constructor.name, array: Array.prototype.slice.call( index.array ) }; } var attributes = this.attributes; for ( var key in attributes ) { var attribute = attributes[ key ]; var attributeData = { itemSize: attribute.itemSize, type: attribute.array.constructor.name, array: Array.prototype.slice.call( attribute.array ), normalized: attribute.normalized }; if ( attribute.name !== '' ) attributeData.name = attribute.name; data.data.attributes[ key ] = attributeData; } var morphAttributes = {}; var hasMorphAttributes = false; for ( var key in this.morphAttributes ) { var attributeArray = this.morphAttributes[ key ]; var array = []; for ( var i = 0, il = attributeArray.length; i < il; i ++ ) { var attribute = attributeArray[ i ]; var attributeData = { itemSize: attribute.itemSize, type: attribute.array.constructor.name, array: Array.prototype.slice.call( attribute.array ), normalized: attribute.normalized }; if ( attribute.name !== '' ) attributeData.name = attribute.name; array.push( attributeData ); } if ( array.length > 0 ) { morphAttributes[ key ] = array; hasMorphAttributes = true; } } if ( hasMorphAttributes ) data.data.morphAttributes = morphAttributes; var groups = this.groups; if ( groups.length > 0 ) { data.data.groups = JSON.parse( JSON.stringify( groups ) ); } var boundingSphere = this.boundingSphere; if ( boundingSphere !== null ) { data.data.boundingSphere = { center: boundingSphere.center.toArray(), radius: boundingSphere.radius }; } return data; }, clone: function () { /* // Handle primitives var parameters = this.parameters; if ( parameters !== undefined ) { var values = []; for ( var key in parameters ) { values.push( parameters[ key ] ); } var geometry = Object.create( this.constructor.prototype ); this.constructor.apply( geometry, values ); return geometry; } return new this.constructor().copy( this ); */ return new BufferGeometry().copy( this ); }, copy: function ( source ) { var name, i, l; // reset this.index = null; this.attributes = {}; this.morphAttributes = {}; this.groups = []; this.boundingBox = null; this.boundingSphere = null; // name this.name = source.name; // index var index = source.index; if ( index !== null ) { this.setIndex( index.clone() ); } // attributes var attributes = source.attributes; for ( name in attributes ) { var attribute = attributes[ name ]; this.addAttribute( name, attribute.clone() ); } // morph attributes var morphAttributes = source.morphAttributes; for ( name in morphAttributes ) { var array = []; var morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes for ( i = 0, l = morphAttribute.length; i < l; i ++ ) { array.push( morphAttribute[ i ].clone() ); } this.morphAttributes[ name ] = array; } // groups var groups = source.groups; for ( i = 0, l = groups.length; i < l; i ++ ) { var group = groups[ i ]; this.addGroup( group.start, group.count, group.materialIndex ); } // bounding box var boundingBox = source.boundingBox; if ( boundingBox !== null ) { this.boundingBox = boundingBox.clone(); } // bounding sphere var boundingSphere = source.boundingSphere; if ( boundingSphere !== null ) { this.boundingSphere = boundingSphere.clone(); } // draw range this.drawRange.start = source.drawRange.start; this.drawRange.count = source.drawRange.count; // user data this.userData = source.userData; return this; }, dispose: function () { this.dispatchEvent( { type: 'dispose' } ); } } ); /** * @author mrdoob / http://mrdoob.com/ * @author Mugen87 / https://github.com/Mugen87 */ // BoxGeometry function BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) { Geometry.call( this ); this.type = 'BoxGeometry'; this.parameters = { width: width, height: height, depth: depth, widthSegments: widthSegments, heightSegments: heightSegments, depthSegments: depthSegments }; this.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) ); this.mergeVertices(); } BoxGeometry.prototype = Object.create( Geometry.prototype ); BoxGeometry.prototype.constructor = BoxGeometry; // BoxBufferGeometry function BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) { BufferGeometry.call( this ); this.type = 'BoxBufferGeometry'; this.parameters = { width: width, height: height, depth: depth, widthSegments: widthSegments, heightSegments: heightSegments, depthSegments: depthSegments }; var scope = this; width = width || 1; height = height || 1; depth = depth || 1; // segments widthSegments = Math.floor( widthSegments ) || 1; heightSegments = Math.floor( heightSegments ) || 1; depthSegments = Math.floor( depthSegments ) || 1; // buffers var indices = []; var vertices = []; var normals = []; var uvs = []; // helper variables var numberOfVertices = 0; var groupStart = 0; // build each side of the box geometry buildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px buildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx buildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py buildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny buildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz buildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz // build geometry this.setIndex( indices ); this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) ); this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) ); this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) ); function buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) { var segmentWidth = width / gridX; var segmentHeight = height / gridY; var widthHalf = width / 2; var heightHalf = height / 2; var depthHalf = depth / 2; var gridX1 = gridX + 1; var gridY1 = gridY + 1; var vertexCounter = 0; var groupCount = 0; var ix, iy; var vector = new Vector3(); // generate vertices, normals and uvs for ( iy = 0; iy < gridY1; iy ++ ) { var y = iy * segmentHeight - heightHalf; for ( ix = 0; ix < gridX1; ix ++ ) { var x = ix * segmentWidth - widthHalf; // set values to correct vector component vector[ u ] = x * udir; vector[ v ] = y * vdir; vector[ w ] = depthHalf; // now apply vector to vertex buffer vertices.push( vector.x, vector.y, vector.z ); // set values to correct vector component vector[ u ] = 0; vector[ v ] = 0; vector[ w ] = depth > 0 ? 1 : - 1; // now apply vector to normal buffer normals.push( vector.x, vector.y, vector.z ); // uvs uvs.push( ix / gridX ); uvs.push( 1 - ( iy / gridY ) ); // counters vertexCounter += 1; } } // indices // 1. you need three indices to draw a single face // 2. a single segment consists of two faces // 3. so we need to generate six (2*3) indices per segment for ( iy = 0; iy < gridY; iy ++ ) { for ( ix = 0; ix < gridX; ix ++ ) { var a = numberOfVertices + ix + gridX1 * iy; var b = numberOfVertices + ix + gridX1 * ( iy + 1 ); var c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 ); var d = numberOfVertices + ( ix + 1 ) + gridX1 * iy; // faces indices.push( a, b, d ); indices.push( b, c, d ); // increase counter groupCount += 6; } } // add a group to the geometry. this will ensure multi material support scope.addGroup( groupStart, groupCount, materialIndex ); // calculate new start value for groups groupStart += groupCount; // update total number of vertices numberOfVertices += vertexCounter; } } BoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype ); BoxBufferGeometry.prototype.constructor = BoxBufferGeometry; /** * @author mrdoob / http://mrdoob.com/ * @author Mugen87 / https://github.com/Mugen87 */ // PlaneGeometry function PlaneGeometry( width, height, widthSegments, heightSegments ) { Geometry.call( this ); this.type = 'PlaneGeometry'; this.parameters = { width: width, height: height, widthSegments: widthSegments, heightSegments: heightSegments }; this.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) ); this.mergeVertices(); } PlaneGeometry.prototype = Object.create( Geometry.prototype ); PlaneGeometry.prototype.constructor = PlaneGeometry; // PlaneBufferGeometry function PlaneBufferGeometry( width, height, widthSegments, heightSegments ) { BufferGeometry.call( this ); this.type = 'PlaneBufferGeometry'; this.parameters = { width: width, height: height, widthSegments: widthSegments, heightSegments: heightSegments }; width = width || 1; height = height || 1; var width_half = width / 2; var height_half = height / 2; var gridX = Math.floor( widthSegments ) || 1; var gridY = Math.floor( heightSegments ) || 1; var gridX1 = gridX + 1; var gridY1 = gridY + 1; var segment_width = width / gridX; var segment_height = height / gridY; var ix, iy; // buffers var indices = []; var vertices = []; var normals = []; var uvs = []; // generate vertices, normals and uvs for ( iy = 0; iy < gridY1; iy ++ ) { var y = iy * segment_height - height_half; for ( ix = 0; ix < gridX1; ix ++ ) { var x = ix * segment_width - width_half; vertices.push( x, - y, 0 ); normals.push( 0, 0, 1 ); uvs.push( ix / gridX ); uvs.push( 1 - ( iy / gridY ) ); } } // indices for ( iy = 0; iy < gridY; iy ++ ) { for ( ix = 0; ix < gridX; ix ++ ) { var a = ix + gridX1 * iy; var b = ix + gridX1 * ( iy + 1 ); var c = ( ix + 1 ) + gridX1 * ( iy + 1 ); var d = ( ix + 1 ) + gridX1 * iy; // faces indices.push( a, b, d ); indices.push( b, c, d ); } } // build geometry this.setIndex( indices ); this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) ); this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) ); this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) ); } PlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype ); PlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry; /** * @author mrdoob / http://mrdoob.com/ * @author alteredq / http://alteredqualia.com/ */ var materialId = 0; function Material() { Object.defineProperty( this, 'id', { value: materialId ++ } ); this.uuid = _Math.generateUUID(); this.name = ''; this.type = 'Material'; this.fog = true; this.lights = true; this.blending = NormalBlending; this.side = FrontSide; this.flatShading = false; this.vertexTangents = false; this.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors this.opacity = 1; this.transparent = false; this.blendSrc = SrcAlphaFactor; this.blendDst = OneMinusSrcAlphaFactor; this.blendEquation = AddEquation; this.blendSrcAlpha = null; this.blendDstAlpha = null; this.blendEquationAlpha = null; this.depthFunc = LessEqualDepth; this.depthTest = true; this.depthWrite = true; this.clippingPlanes = null; this.clipIntersection = false; this.clipShadows = false; this.shadowSide = null; this.colorWrite = true; this.precision = null; // override the renderer's default precision for this material this.polygonOffset = false; this.polygonOffsetFactor = 0; this.polygonOffsetUnits = 0; this.dithering = false; this.alphaTest = 0; this.premultipliedAlpha = false; this.visible = true; this.userData = {}; this.needsUpdate = true; } Material.prototype = Object.assign( Object.create( EventDispatcher.prototype ), { constructor: Material, isMaterial: true, onBeforeCompile: function () {}, setValues: function ( values ) { if ( values === undefined ) return; for ( var key in values ) { var newValue = values[ key ]; if ( newValue === undefined ) { console.warn( "THREE.Material: '" + key + "' parameter is undefined." ); continue; } // for backward compatability if shading is set in the constructor if ( key === 'shading' ) { console.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' ); this.flatShading = ( newValue === FlatShading ) ? true : false; continue; } var currentValue = this[ key ]; if ( currentValue === undefined ) { console.warn( "THREE." + this.type + ": '" + key + "' is not a property of this material." ); continue; } if ( currentValue && currentValue.isColor ) { currentValue.set( newValue ); } else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) { currentValue.copy( newValue ); } else { this[ key ] = newValue; } } }, toJSON: function ( meta ) { var isRoot = ( meta === undefined || typeof meta === 'string' ); if ( isRoot ) { meta = { textures: {}, images: {} }; } var data = { metadata: { version: 4.5, type: 'Material', generator: 'Material.toJSON' } }; // standard Material serialization data.uuid = this.uuid; data.type = this.type; if ( this.name !== '' ) data.name = this.name; if ( this.color && this.color.isColor ) data.color = this.color.getHex(); if ( this.roughness !== undefined ) data.roughness = this.roughness; if ( this.metalness !== undefined ) data.metalness = this.metalness; if ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex(); if ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity; if ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex(); if ( this.shininess !== undefined ) data.shininess = this.shininess; if ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat; if ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness; if ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid; if ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid; if ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid; if ( this.aoMap && this.aoMap.isTexture ) { data.aoMap = this.aoMap.toJSON( meta ).uuid; data.aoMapIntensity = this.aoMapIntensity; } if ( this.bumpMap && this.bumpMap.isTexture ) { data.bumpMap = this.bumpMap.toJSON( meta ).uuid; data.bumpScale = this.bumpScale; } if ( this.normalMap && this.normalMap.isTexture ) { data.normalMap = this.normalMap.toJSON( meta ).uuid; data.normalMapType = this.normalMapType; data.normalScale = this.normalScale.toArray(); } if ( this.displacementMap && this.displacementMap.isTexture ) { data.displacementMap = this.displacementMap.toJSON( meta ).uuid; data.displacementScale = this.displacementScale; data.displacementBias = this.displacementBias; } if ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid; if ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid; if ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid; if ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid; if ( this.envMap && this.envMap.isTexture ) { data.envMap = this.envMap.toJSON( meta ).uuid; data.reflectivity = this.reflectivity; // Scale behind envMap if ( this.combine !== undefined ) data.combine = this.combine; if ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity; } if ( this.gradientMap && this.gradientMap.isTexture ) { data.gradientMap = this.gradientMap.toJSON( meta ).uuid; } if ( this.size !== undefined ) data.size = this.size; if ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation; if ( this.blending !== NormalBlending ) data.blending = this.blending; if ( this.flatShading === true ) data.flatShading = this.flatShading; if ( this.side !== FrontSide ) data.side = this.side; if ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors; if ( this.opacity < 1 ) data.opacity = this.opacity; if ( this.transparent === true ) data.transparent = this.transparent; data.depthFunc = this.depthFunc; data.depthTest = this.depthTest; data.depthWrite = this.depthWrite; // rotation (SpriteMaterial) if ( this.rotation !== 0 ) data.rotation = this.rotation; if ( this.polygonOffset === true ) data.polygonOffset = true; if ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor; if ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits; if ( this.linewidth !== 1 ) data.linewidth = this.linewidth; if ( this.dashSize !== undefined ) data.dashSize = this.dashSize; if ( this.gapSize !== undefined ) data.gapSize = this.gapSize; if ( this.scale !== undefined ) data.scale = this.scale; if ( this.dithering === true ) data.dithering = true; if ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest; if ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha; if ( this.wireframe === true ) data.wireframe = this.wireframe; if ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth; if ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap; if ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin; if ( this.morphTargets === true ) data.morphTargets = true; if ( this.skinning === true ) data.skinning = true; if ( this.visible === false ) data.visible = false; if ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData; // TODO: Copied from Object3D.toJSON function extractFromCache( cache ) { var values = []; for ( var key in cache ) { var data = cache[ key ]; delete data.metadata; values.push( data ); } return values; } if ( isRoot ) { var textures = extractFromCache( meta.textures ); var images = extractFromCache( meta.images ); if ( textures.length > 0 ) data.textures = textures; if ( images.length > 0 ) data.images = images; } return data; }, clone: function () { return new this.constructor().copy( this ); }, copy: function ( source ) { this.name = source.name; this.fog = source.fog; this.lights = source.lights; this.blending = source.blending; this.side = source.side; this.flatShading = source.flatShading; this.vertexColors = source.vertexColors; this.opacity = source.opacity; this.transparent = source.transparent; this.blendSrc = source.blendSrc; this.blendDst = source.blendDst; this.blendEquation = source.blendEquation; this.blendSrcAlpha = source.blendSrcAlpha; this.blendDstAlpha = source.blendDstAlpha; this.blendEquationAlpha = source.blendEquationAlpha; this.depthFunc = source.depthFunc; this.depthTest = source.depthTest; this.depthWrite = source.depthWrite; this.colorWrite = source.colorWrite; this.precision = source.precision; this.polygonOffset = source.polygonOffset; this.polygonOffsetFactor = source.polygonOffsetFactor; this.polygonOffsetUnits = source.polygonOffsetUnits; this.dithering = source.dithering; this.alphaTest = source.alphaTest; this.premultipliedAlpha = source.premultipliedAlpha; this.visible = source.visible; this.userData = JSON.parse( JSON.stringify( source.userData ) ); this.clipShadows = source.clipShadows; this.clipIntersection = source.clipIntersection; var srcPlanes = source.clippingPlanes, dstPlanes = null; if ( srcPlanes !== null ) { var n = srcPlanes.length; dstPlanes = new Array( n ); for ( var i = 0; i !== n; ++ i ) dstPlanes[ i ] = srcPlanes[ i ].clone(); } this.clippingPlanes = dstPlanes; this.shadowSide = source.shadowSide; return this; }, dispose: function () { this.dispatchEvent( { type: 'dispose' } ); } } ); var default_vertex = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"; var default_fragment = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}"; /** * @author alteredq / http://alteredqualia.com/ * * parameters = { * defines: { "label" : "value" }, * uniforms: { "parameter1": { value: 1.0 }, "parameter2": { value2: 2 } }, * * fragmentShader: <string>, * vertexShader: <string>, * * wireframe: <boolean>, * wireframeLinewidth: <float>, * * lights: <bool>, * * skinning: <bool>, * morphTargets: <bool>, * morphNormals: <bool> * } */ function ShaderMaterial( parameters ) { Material.call( this ); this.type = 'ShaderMaterial'; this.defines = {}; this.uniforms = {}; this.vertexShader = default_vertex; this.fragmentShader = default_fragment; this.linewidth = 1; this.wireframe = false; this.wireframeLinewidth = 1; this.fog = false; // set to use scene fog this.lights = false; // set to use scene lights this.clipping = false; // set to use user-defined clipping planes this.skinning = false; // set to use skinning attribute streams this.morphTargets = false; // set to use morph targets this.morphNormals = false; // set to use morph normals this.extensions = { derivatives: false, // set to use derivatives fragDepth: false, // set to use fragment depth values drawBuffers: false, // set to use draw buffers shaderTextureLOD: false // set to use shader texture LOD }; // When rendered geometry doesn't include these attributes but the material does, // use these default values in WebGL. This avoids errors when buffer data is missing. this.defaultAttributeValues = { 'color': [ 1, 1, 1 ], 'uv': [ 0, 0 ], 'uv2': [ 0, 0 ] }; this.index0AttributeName = undefined; this.uniformsNeedUpdate = false; if ( parameters !== undefined ) { if ( parameters.attributes !== undefined ) { console.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' ); } this.setValues( parameters ); } } ShaderMaterial.prototype = Object.create( Material.prototype ); ShaderMaterial.prototype.constructor = ShaderMaterial; ShaderMaterial.prototype.isShaderMaterial = true; ShaderMaterial.prototype.copy = function ( source ) { Material.prototype.copy.call( this, source ); this.fragmentShader = source.fragmentShader; this.vertexShader = source.vertexShader; this.uniforms = cloneUniforms( source.uniforms ); this.defines = Object.assign( {}, source.defines ); this.wireframe = source.wireframe; this.wireframeLinewidth = source.wireframeLinewidth; this.lights = source.lights; this.clipping = source.clipping; this.skinning = source.skinning; this.morphTargets = source.morphTargets; this.morphNormals = source.morphNormals; this.extensions = source.extensions; return this; }; ShaderMaterial.prototype.toJSON = function ( meta ) { var data = Material.prototype.toJSON.call( this, meta ); data.uniforms = {}; for ( var name in this.uniforms ) { var uniform = this.uniforms[ name ]; var value = uniform.value; if ( value && value.isTexture ) { data.uniforms[ name ] = { type: 't', value: value.toJSON( meta ).uuid }; } else if ( value && value.isColor ) { data.uniforms[ name ] = { type: 'c', value: value.getHex() }; } else if ( value && value.isVector2 ) { data.uniforms[ name ] = { type: 'v2', value: value.toArray() }; } else if ( value && value.isVector3 ) { data.uniforms[ name ] = { type: 'v3', value: value.toArray() }; } else if ( value && value.isVector4 ) { data.uniforms[ name ] = { type: 'v4', value: value.toArray() }; } else if ( value && value.isMatrix3 ) { data.uniforms[ name ] = { type: 'm3', value: value.toArray() }; } else if ( value && value.isMatrix4 ) { data.uniforms[ name ] = { type: 'm4', value: value.toArray() }; } else { data.uniforms[ name ] = { value: value }; // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far } } if ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines; data.vertexShader = this.vertexShader; data.fragmentShader = this.fragmentShader; var extensions = {}; for ( var key in this.extensions ) { if ( this.extensions[ key ] === true ) extensions[ key ] = true; } if ( Object.keys( extensions ).length > 0 ) data.extensions = extensions; return data; }; /** * @author bhouston / http://clara.io */ function Ray( origin, direction ) { this.origin = ( origin !== undefined ) ? origin : new Vector3(); this.direction = ( direction !== undefined ) ? direction : new Vector3(); } Object.assign( Ray.prototype, { set: function ( origin, direction ) { this.origin.copy( origin ); this.direction.copy( direction ); return this; }, clone: function () { return new this.constructor().copy( this ); }, copy: function ( ray ) { this.origin.copy( ray.origin ); this.direction.copy( ray.direction ); return this; }, at: function ( t, target ) { if ( target === undefined ) { console.warn( 'THREE.Ray: .at() target is now required' ); target = new Vector3(); } return target.copy( this.direction ).multiplyScalar( t ).add( this.origin ); }, lookAt: function ( v ) { this.direction.copy( v ).sub( this.origin ).normalize(); return this; }, recast: function () { var v1 = new Vector3(); return function recast( t ) { this.origin.copy( this.at( t, v1 ) ); return this; }; }(), closestPointToPoint: function ( point, target ) { if ( target === undefined ) { console.warn( 'THREE.Ray: .closestPointToPoint() target is now required' ); target = new Vector3(); } target.subVectors( point, this.origin ); var directionDistance = target.dot( this.direction ); if ( directionDistance < 0 ) { return target.copy( this.origin ); } return target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin ); }, distanceToPoint: function ( point ) { return Math.sqrt( this.distanceSqToPoint( point ) ); }, distanceSqToPoint: function () { var v1 = new Vector3(); return function distanceSqToPoint( point ) { var directionDistance = v1.subVectors( point, this.origin ).dot( this.direction ); // point behind the ray if ( directionDistance < 0 ) { return this.origin.distanceToSquared( point ); } v1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin ); return v1.distanceToSquared( point ); }; }(), distanceSqToSegment: function () { var segCenter = new Vector3(); var segDir = new Vector3(); var diff = new Vector3(); return function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) { // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h // It returns the min distance between the ray and the segment // defined by v0 and v1 // It can also set two optional targets : // - The closest point on the ray // - The closest point on the segment segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 ); segDir.copy( v1 ).sub( v0 ).normalize(); diff.copy( this.origin ).sub( segCenter ); var segExtent = v0.distanceTo( v1 ) * 0.5; var a01 = - this.direction.dot( segDir ); var b0 = diff.dot( this.direction ); var b1 = - diff.dot( segDir ); var c = diff.lengthSq(); var det = Math.abs( 1 - a01 * a01 ); var s0, s1, sqrDist, extDet; if ( det > 0 ) { // The ray and segment are not parallel. s0 = a01 * b1 - b0; s1 = a01 * b0 - b1; extDet = segExtent * det; if ( s0 >= 0 ) { if ( s1 >= - extDet ) { if ( s1 <= extDet ) { // region 0 // Minimum at interior points of ray and segment. var invDet = 1 / det; s0 *= invDet; s1 *= invDet; sqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c; } else { // region 1 s1 = segExtent; s0 = Math.max( 0, - ( a01 * s1 + b0 ) ); sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c; } } else { // region 5 s1 = - segExtent; s0 = Math.max( 0, - ( a01 * s1 + b0 ) ); sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c; } } else { if ( s1 <= - extDet ) { // region 4 s0 = Math.max( 0, - ( - a01 * segExtent + b0 ) ); s1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent ); sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c; } else if ( s1 <= extDet ) { // region 3 s0 = 0; s1 = Math.min( Math.max( - segExtent, - b1 ), segExtent ); sqrDist = s1 * ( s1 + 2 * b1 ) + c; } else { // region 2 s0 = Math.max( 0, - ( a01 * segExtent + b0 ) ); s1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent ); sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c; } } } else { // Ray and segment are parallel. s1 = ( a01 > 0 ) ? - segExtent : segExtent; s0 = Math.max( 0, - ( a01 * s1 + b0 ) ); sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c; } if ( optionalPointOnRay ) { optionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin ); } if ( optionalPointOnSegment ) { optionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter ); } return sqrDist; }; }(), intersectSphere: function () { var v1 = new Vector3(); return function intersectSphere( sphere, target ) { v1.subVectors( sphere.center, this.origin ); var tca = v1.dot( this.direction ); var d2 = v1.dot( v1 ) - tca * tca; var radius2 = sphere.radius * sphere.radius; if ( d2 > radius2 ) return null; var thc = Math.sqrt( radius2 - d2 ); // t0 = first intersect point - entrance on front of sphere var t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere var t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null if ( t0 < 0 && t1 < 0 ) return null; // test to see if t0 is behind the ray: // if it is, the ray is inside the sphere, so return the second exit point scaled by t1, // in order to always return an intersect point that is in front of the ray. if ( t0 < 0 ) return this.at( t1, target ); // else t0 is in front of the ray, so return the first collision point scaled by t0 return this.at( t0, target ); }; }(), intersectsSphere: function ( sphere ) { return this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius ); }, distanceToPlane: function ( plane ) { var denominator = plane.normal.dot( this.direction ); if ( denominator === 0 ) { // line is coplanar, return origin if ( plane.distanceToPoint( this.origin ) === 0 ) { return 0; } // Null is preferable to undefined since undefined means.... it is undefined return null; } var t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator; // Return if the ray never intersects the plane return t >= 0 ? t : null; }, intersectPlane: function ( plane, target ) { var t = this.distanceToPlane( plane ); if ( t === null ) { return null; } return this.at( t, target ); }, intersectsPlane: function ( plane ) { // check if the ray lies on the plane first var distToPoint = plane.distanceToPoint( this.origin ); if ( distToPoint === 0 ) { return true; } var denominator = plane.normal.dot( this.direction ); if ( denominator * distToPoint < 0 ) { return true; } // ray origin is behind the plane (and is pointing behind it) return false; }, intersectBox: function ( box, target ) { var tmin, tmax, tymin, tymax, tzmin, tzmax; var invdirx = 1 / this.direction.x, invdiry = 1 / this.direction.y, invdirz = 1 / this.direction.z; var origin = this.origin; if ( invdirx >= 0 ) { tmin = ( box.min.x - origin.x ) * invdirx; tmax = ( box.max.x - origin.x ) * invdirx; } else { tmin = ( box.max.x - origin.x ) * invdirx; tmax = ( box.min.x - origin.x ) * invdirx; } if ( invdiry >= 0 ) { tymin = ( box.min.y - origin.y ) * invdiry; tymax = ( box.max.y - origin.y ) * invdiry; } else { tymin = ( box.max.y - origin.y ) * invdiry; tymax = ( box.min.y - origin.y ) * invdiry; } if ( ( tmin > tymax ) || ( tymin > tmax ) ) return null; // These lines also handle the case where tmin or tmax is NaN // (result of 0 * Infinity). x !== x returns true if x is NaN if ( tymin > tmin || tmin !== tmin ) tmin = tymin; if ( tymax < tmax || tmax !== tmax ) tmax = tymax; if ( invdirz >= 0 ) { tzmin = ( box.min.z - origin.z ) * invdirz; tzmax = ( box.max.z - origin.z ) * invdirz; } else { tzmin = ( box.max.z - origin.z ) * invdirz; tzmax = ( box.min.z - origin.z ) * invdirz; } if ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null; if ( tzmin > tmin || tmin !== tmin ) tmin = tzmin; if ( tzmax < tmax || tmax !== tmax ) tmax = tzmax; //return point closest to the ray (positive side) if ( tmax < 0 ) return null; return this.at( tmin >= 0 ? tmin : tmax, target ); }, intersectsBox: ( function () { var v = new Vector3(); return function intersectsBox( box ) { return this.intersectBox( box, v ) !== null; }; } )(), intersectTriangle: function () { // Compute the offset origin, edges, and normal. var diff = new Vector3(); var edge1 = new Vector3(); var edge2 = new Vector3(); var normal = new Vector3(); return function intersectTriangle( a, b, c, backfaceCulling, target ) { // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h edge1.subVectors( b, a ); edge2.subVectors( c, a ); normal.crossVectors( edge1, edge2 ); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction, // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by // |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2)) // |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q)) // |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N) var DdN = this.direction.dot( normal ); var sign; if ( DdN > 0 ) { if ( backfaceCulling ) return null; sign = 1; } else if ( DdN < 0 ) { sign = - 1; DdN = - DdN; } else { return null; } diff.subVectors( this.origin, a ); var DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) ); // b1 < 0, no intersection if ( DdQxE2 < 0 ) { return null; } var DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) ); // b2 < 0, no intersection if ( DdE1xQ < 0 ) { return null; } // b1+b2 > 1, no intersection if ( DdQxE2 + DdE1xQ > DdN ) { return null; } // Line intersects triangle, check if ray does. var QdN = - sign * diff.dot( normal ); // t < 0, no intersection if ( QdN < 0 ) { return null; } // Ray intersects triangle. return this.at( QdN / DdN, target ); }; }(), applyMatrix4: function ( matrix4 ) { this.origin.applyMatrix4( matrix4 ); this.direction.transformDirection( matrix4 ); return this; }, equals: function ( ray ) { return ray.origin.equals( this.origin ) && ray.direction.equals( this.direction ); } } ); /** * @author bhouston / http://clara.io * @author mrdoob / http://mrdoob.com/ */ function Triangle( a, b, c ) { this.a = ( a !== undefined ) ? a : new Vector3(); this.b = ( b !== undefined ) ? b : new Vector3(); this.c = ( c !== undefined ) ? c : new Vector3(); } Object.assign( Triangle, { getNormal: function () { var v0 = new Vector3(); return function getNormal( a, b, c, target ) { if ( target === undefined ) { console.warn( 'THREE.Triangle: .getNormal() target is now required' ); target = new Vector3(); } target.subVectors( c, b ); v0.subVectors( a, b ); target.cross( v0 ); var targetLengthSq = target.lengthSq(); if ( targetLengthSq > 0 ) { return target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) ); } return target.set( 0, 0, 0 ); }; }(), // static/instance method to calculate barycentric coordinates // based on: http://www.blackpawn.com/texts/pointinpoly/default.html getBarycoord: function () { var v0 = new Vector3(); var v1 = new Vector3(); var v2 = new Vector3(); return function getBarycoord( point, a, b, c, target ) { v0.subVectors( c, a ); v1.subVectors( b, a ); v2.subVectors( point, a ); var dot00 = v0.dot( v0 ); var dot01 = v0.dot( v1 ); var dot02 = v0.dot( v2 ); var dot11 = v1.dot( v1 ); var dot12 = v1.dot( v2 ); var denom = ( dot00 * dot11 - dot01 * dot01 ); if ( target === undefined ) { console.warn( 'THREE.Triangle: .getBarycoord() target is now required' ); target = new Vector3(); } // collinear or singular triangle if ( denom === 0 ) { // arbitrary location outside of triangle? // not sure if this is the best idea, maybe should be returning undefined return target.set( - 2, - 1, - 1 ); } var invDenom = 1 / denom; var u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom; var v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom; // barycentric coordinates must always sum to 1 return target.set( 1 - u - v, v, u ); }; }(), containsPoint: function () { var v1 = new Vector3(); return function containsPoint( point, a, b, c ) { Triangle.getBarycoord( point, a, b, c, v1 ); return ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 ); }; }(), getUV: function () { var barycoord = new Vector3(); return function getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) { this.getBarycoord( point, p1, p2, p3, barycoord ); target.set( 0, 0 ); target.addScaledVector( uv1, barycoord.x ); target.addScaledVector( uv2, barycoord.y ); target.addScaledVector( uv3, barycoord.z ); return target; }; }() } ); Object.assign( Triangle.prototype, { set: function ( a, b, c ) { this.a.copy( a ); this.b.copy( b ); this.c.copy( c ); return this; }, setFromPointsAndIndices: function ( points, i0, i1, i2 ) { this.a.copy( points[ i0 ] ); this.b.copy( points[ i1 ] ); this.c.copy( points[ i2 ] ); return this; }, clone: function () { return new this.constructor().copy( this ); }, copy: function ( triangle ) { this.a.copy( triangle.a ); this.b.copy( triangle.b ); this.c.copy( triangle.c ); return this; }, getArea: function () { var v0 = new Vector3(); var v1 = new Vector3(); return function getArea() { v0.subVectors( this.c, this.b ); v1.subVectors( this.a, this.b ); return v0.cross( v1 ).length() * 0.5; }; }(), getMidpoint: function ( target ) { if ( target === undefined ) { console.warn( 'THREE.Triangle: .getMidpoint() target is now required' ); target = new Vector3(); } return target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 ); }, getNormal: function ( target ) { return Triangle.getNormal( this.a, this.b, this.c, target ); }, getPlane: function ( target ) { if ( target === undefined ) { console.warn( 'THREE.Triangle: .getPlane() target is now required' ); target = new Vector3(); } return target.setFromCoplanarPoints( this.a, this.b, this.c ); }, getBarycoord: function ( point, target ) { return Triangle.getBarycoord( point, this.a, this.b, this.c, target ); }, containsPoint: function ( point ) { return Triangle.containsPoint( point, this.a, this.b, this.c ); }, getUV: function ( point, uv1, uv2, uv3, result ) { return Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, result ); }, intersectsBox: function ( box ) { return box.intersectsTriangle( this ); }, closestPointToPoint: function () { var vab = new Vector3(); var vac = new Vector3(); var vbc = new Vector3(); var vap = new Vector3(); var vbp = new Vector3(); var vcp = new Vector3(); return function closestPointToPoint( p, target ) { if ( target === undefined ) { console.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' ); target = new Vector3(); } var a = this.a, b = this.b, c = this.c; var v, w; // algorithm thanks to Real-Time Collision Detection by Christer Ericson, // published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc., // under the accompanying license; see chapter 5.1.5 for detailed explanation. // basically, we're distinguishing which of the voronoi regions of the triangle // the point lies in with the minimum amount of redundant computation. vab.subVectors( b, a ); vac.subVectors( c, a ); vap.subVectors( p, a ); var d1 = vab.dot( vap ); var d2 = vac.dot( vap ); if ( d1 <= 0 && d2 <= 0 ) { // vertex region of A; barycentric coords (1, 0, 0) return target.copy( a ); } vbp.subVectors( p, b ); var d3 = vab.dot( vbp ); var d4 = vac.dot( vbp ); if ( d3 >= 0 && d4 <= d3 ) { // vertex region of B; barycentric coords (0, 1, 0) return target.copy( b ); } var vc = d1 * d4 - d3 * d2; if ( vc <= 0 && d1 >= 0 && d3 <= 0 ) { v = d1 / ( d1 - d3 ); // edge region of AB; barycentric coords (1-v, v, 0) return target.copy( a ).addScaledVector( vab, v ); } vcp.subVectors( p, c ); var d5 = vab.dot( vcp ); var d6 = vac.dot( vcp ); if ( d6 >= 0 && d5 <= d6 ) { // vertex region of C; barycentric coords (0, 0, 1) return target.copy( c ); } var vb = d5 * d2 - d1 * d6; if ( vb <= 0 && d2 >= 0 && d6 <= 0 ) { w = d2 / ( d2 - d6 ); // edge region of AC; barycentric coords (1-w, 0, w) return target.copy( a ).addScaledVector( vac, w ); } var va = d3 * d6 - d5 * d4; if ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) { vbc.subVectors( c, b ); w = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) ); // edge region of BC; barycentric coords (0, 1-w, w) return target.copy( b ).addScaledVector( vbc, w ); // edge region of BC } // face region var denom = 1 / ( va + vb + vc ); // u = va * denom v = vb * denom; w = vc * denom; return target.copy( a ).addScaledVector( vab, v ).addScaledVector( vac, w ); }; }(), equals: function ( triangle ) { return triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c ); } } ); /** * @author mrdoob / http://mrdoob.com/ * @author alteredq / http://alteredqualia.com/ * * parameters = { * color: <hex>, * opacity: <float>, * map: new THREE.Texture( <Image> ), * * lightMap: new THREE.Texture( <Image> ), * lightMapIntensity: <float> * * aoMap: new THREE.Texture( <Image> ), * aoMapIntensity: <float> * * specularMap: new THREE.Texture( <Image> ), * * alphaMap: new THREE.Texture( <Image> ), * * envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ), * combine: THREE.Multiply, * reflectivity: <float>, * refractionRatio: <float>, * * depthTest: <bool>, * depthWrite: <bool>, * * wireframe: <boolean>, * wireframeLinewidth: <float>, * * skinning: <bool>, * morphTargets: <bool> * } */ function MeshBasicMaterial( parameters ) { Material.call( this ); this.type = 'MeshBasicMaterial'; this.color = new Color( 0xffffff ); // emissive this.map = null; this.lightMap = null; this.lightMapIntensity = 1.0; this.aoMap = null; this.aoMapIntensity = 1.0; this.specularMap = null; this.alphaMap = null; this.envMap = null; this.combine = MultiplyOperation; this.reflectivity = 1; this.refractionRatio = 0.98; this.wireframe = false; this.wireframeLinewidth = 1; this.wireframeLinecap = 'round'; this.wireframeLinejoin = 'round'; this.skinning = false; this.morphTargets = false; this.lights = false; this.setValues( parameters ); } MeshBasicMaterial.prototype = Object.create( Material.prototype ); MeshBasicMaterial.prototype.constructor = MeshBasicMaterial; MeshBasicMaterial.prototype.isMeshBasicMaterial = true; MeshBasicMaterial.prototype.copy = function ( source ) { Material.prototype.copy.call( this, source ); this.color.copy( source.color ); this.map = source.map; this.lightMap = source.lightMap; this.lightMapIntensity = source.lightMapIntensity; this.aoMap = source.aoMap; this.aoMapIntensity = source.aoMapIntensity; this.specularMap = source.specularMap; this.alphaMap = source.alphaMap; this.envMap = source.envMap; this.combine = source.combine; this.reflectivity = source.reflectivity; this.refractionRatio = source.refractionRatio; this.wireframe = source.wireframe; this.wireframeLinewidth = source.wireframeLinewidth; this.wireframeLinecap = source.wireframeLinecap; this.wireframeLinejoin = source.wireframeLinejoin; this.skinning = source.skinning; this.morphTargets = source.morphTargets; return this; }; /** * @author mrdoob / http://mrdoob.com/ * @author alteredq / http://alteredqualia.com/ * @author mikael emtinger / http://gomo.se/ * @author jonobr1 / http://jonobr1.com/ */ function Mesh( geometry, material ) { Object3D.call( this ); this.type = 'Mesh'; this.geometry = geometry !== undefined ? geometry : new BufferGeometry(); this.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } ); this.drawMode = TrianglesDrawMode; this.updateMorphTargets(); } Mesh.prototype = Object.assign( Object.create( Object3D.prototype ), { constructor: Mesh, isMesh: true, setDrawMode: function ( value ) { this.drawMode = value; }, copy: function ( source ) { Object3D.prototype.copy.call( this, source ); this.drawMode = source.drawMode; if ( source.morphTargetInfluences !== undefined ) { this.morphTargetInfluences = source.morphTargetInfluences.slice(); } if ( source.morphTargetDictionary !== undefined ) { this.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary ); } return this; }, updateMorphTargets: function () { var geometry = this.geometry; var m, ml, name; if ( geometry.isBufferGeometry ) { var morphAttributes = geometry.morphAttributes; var keys = Object.keys( morphAttributes ); if ( keys.length > 0 ) { var morphAttribute = morphAttributes[ keys[ 0 ] ]; if ( morphAttribute !== undefined ) { this.morphTargetInfluences = []; this.morphTargetDictionary = {}; for ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) { name = morphAttribute[ m ].name || String( m ); this.morphTargetInfluences.push( 0 ); this.morphTargetDictionary[ name ] = m; } } } } else { var morphTargets = geometry.morphTargets; if ( morphTargets !== undefined && morphTargets.length > 0 ) { console.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' ); } } }, raycast: ( function () { var inverseMatrix = new Matrix4(); var ray = new Ray(); var sphere = new Sphere(); var vA = new Vector3(); var vB = new Vector3(); var vC = new Vector3(); var tempA = new Vector3(); var tempB = new Vector3(); var tempC = new Vector3(); var morphA = new Vector3(); var morphB = new Vector3(); var morphC = new Vector3(); var uvA = new Vector2(); var uvB = new Vector2(); var uvC = new Vector2(); var intersectionPoint = new Vector3(); var intersectionPointWorld = new Vector3(); function checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) { var intersect; if ( material.side === BackSide ) { intersect = ray.intersectTriangle( pC, pB, pA, true, point ); } else { intersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point ); } if ( intersect === null ) return null; intersectionPointWorld.copy( point ); intersectionPointWorld.applyMatrix4( object.matrixWorld ); var distance = raycaster.ray.origin.distanceTo( intersectionPointWorld ); if ( distance < raycaster.near || distance > raycaster.far ) return null; return { distance: distance, point: intersectionPointWorld.clone(), object: object }; } function checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, uv, a, b, c ) { vA.fromBufferAttribute( position, a ); vB.fromBufferAttribute( position, b ); vC.fromBufferAttribute( position, c ); var morphInfluences = object.morphTargetInfluences; if ( material.morphTargets && morphPosition && morphInfluences ) { morphA.set( 0, 0, 0 ); morphB.set( 0, 0, 0 ); morphC.set( 0, 0, 0 ); for ( var i = 0, il = morphPosition.length; i < il; i ++ ) { var influence = morphInfluences[ i ]; var morphAttribute = morphPosition[ i ]; if ( influence === 0 ) continue; tempA.fromBufferAttribute( morphAttribute, a ); tempB.fromBufferAttribute( morphAttribute, b ); tempC.fromBufferAttribute( morphAttribute, c ); morphA.addScaledVector( tempA.sub( vA ), influence ); morphB.addScaledVector( tempB.sub( vB ), influence ); morphC.addScaledVector( tempC.sub( vC ), influence ); } vA.add( morphA ); vB.add( morphB ); vC.add( morphC ); } var intersection = checkIntersection( object, material, raycaster, ray, vA, vB, vC, intersectionPoint ); if ( intersection ) { if ( uv ) { uvA.fromBufferAttribute( uv, a ); uvB.fromBufferAttribute( uv, b ); uvC.fromBufferAttribute( uv, c ); intersection.uv = Triangle.getUV( intersectionPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() ); } var face = new Face3( a, b, c ); Triangle.getNormal( vA, vB, vC, face.normal ); intersection.face = face; } return intersection; } return function raycast( raycaster, intersects ) { var geometry = this.geometry; var material = this.material; var matrixWorld = this.matrixWorld; if ( material === undefined ) return; // Checking boundingSphere distance to ray if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere(); sphere.copy( geometry.boundingSphere ); sphere.applyMatrix4( matrixWorld ); if ( raycaster.ray.intersectsSphere( sphere ) === false ) return; // inverseMatrix.getInverse( matrixWorld ); ray.copy( raycaster.ray ).applyMatrix4( inverseMatrix ); // Check boundingBox before continuing if ( geometry.boundingBox !== null ) { if ( ray.intersectsBox( geometry.boundingBox ) === false ) return; } var intersection; if ( geometry.isBufferGeometry ) { var a, b, c; var index = geometry.index; var position = geometry.attributes.position; var morphPosition = geometry.morphAttributes.position; var uv = geometry.attributes.uv; var groups = geometry.groups; var drawRange = geometry.drawRange; var i, j, il, jl; var group, groupMaterial; var start, end; if ( index !== null ) { // indexed buffer geometry if ( Array.isArray( material ) ) { for ( i = 0, il = groups.length; i < il; i ++ ) { group = groups[ i ]; groupMaterial = material[ group.materialIndex ]; start = Math.max( group.start, drawRange.start ); end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ); for ( j = start, jl = end; j < jl; j += 3 ) { a = index.getX( j ); b = index.getX( j + 1 ); c = index.getX( j + 2 ); intersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, morphPosition, uv, a, b, c ); if ( intersection ) { intersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics intersection.face.materialIndex = group.materialIndex; intersects.push( intersection ); } } } } else { start = Math.max( 0, drawRange.start ); end = Math.min( index.count, ( drawRange.start + drawRange.count ) ); for ( i = start, il = end; i < il; i += 3 ) { a = index.getX( i ); b = index.getX( i + 1 ); c = index.getX( i + 2 ); intersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, morphPosition, uv, a, b, c ); if ( intersection ) { intersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics intersects.push( intersection ); } } } } else if ( position !== undefined ) { // non-indexed buffer geometry if ( Array.isArray( material ) ) { for ( i = 0, il = groups.length; i < il; i ++ ) { group = groups[ i ]; groupMaterial = material[ group.materialIndex ]; start = Math.max( group.start, drawRange.start ); end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ); for ( j = start, jl = end; j < jl; j += 3 ) { a = j; b = j + 1; c = j + 2; intersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, morphPosition, uv, a, b, c ); if ( intersection ) { intersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics intersection.face.materialIndex = group.materialIndex; intersects.push( intersection ); } } } } else { start = Math.max( 0, drawRange.start ); end = Math.min( position.count, ( drawRange.start + drawRange.count ) ); for ( i = start, il = end; i < il; i += 3 ) { a = i; b = i + 1; c = i + 2; intersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, morphPosition, uv, a, b, c ); if ( intersection ) { intersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics intersects.push( intersection ); } } } } } else if ( geometry.isGeometry ) { var fvA, fvB, fvC; var isMultiMaterial = Array.isArray( material ); var vertices = geometry.vertices; var faces = geometry.faces; var uvs; var faceVertexUvs = geometry.faceVertexUvs[ 0 ]; if ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs; for ( var f = 0, fl = faces.length; f < fl; f ++ ) { var face = faces[ f ]; var faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material; if ( faceMaterial === undefined ) continue; fvA = vertices[ face.a ]; fvB = vertices[ face.b ]; fvC = vertices[ face.c ]; intersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint ); if ( intersection ) { if ( uvs && uvs[ f ] ) { var uvs_f = uvs[ f ]; uvA.copy( uvs_f[ 0 ] ); uvB.copy( uvs_f[ 1 ] ); uvC.copy( uvs_f[ 2 ] ); intersection.uv = Triangle.getUV( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC, new Vector2() ); } intersection.face = face; intersection.faceIndex = f; intersects.push( intersection ); } } } }; }() ), clone: function () { return new this.constructor( this.geometry, this.material ).copy( this ); } } ); /** * @author mrdoob / http://mrdoob.com/ */ function WebGLBackground( renderer, state, objects, premultipliedAlpha ) { var clearColor = new Color( 0x000000 ); var clearAlpha = 0; var planeMesh; var boxMesh; // Store the current background texture and its `version` // so we can recompile the material accordingly. var currentBackground = null; var currentBackgroundVersion = 0; function render( renderList, scene, camera, forceClear ) { var background = scene.background; // Ignore background in AR // TODO: Reconsider this. var vr = renderer.vr; var session = vr.getSession && vr.getSession(); if ( session && session.environmentBlendMode === 'additive' ) { background = null; } if ( background === null ) { setClear( clearColor, clearAlpha ); currentBackground = null; currentBackgroundVersion = 0; } else if ( background && background.isColor ) { setClear( background, 1 ); forceClear = true; currentBackground = null; currentBackgroundVersion = 0; } if ( renderer.autoClear || forceClear ) { renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil ); } if ( background && ( background.isCubeTexture || background.isWebGLRenderTargetCube ) ) { if ( boxMesh === undefined ) { boxMesh = new Mesh( new BoxBufferGeometry( 1, 1, 1 ), new ShaderMaterial( { type: 'BackgroundCubeMaterial', uniforms: cloneUniforms( ShaderLib.cube.uniforms ), vertexShader: ShaderLib.cube.vertexShader, fragmentShader: ShaderLib.cube.fragmentShader, side: BackSide, depthTest: false, depthWrite: false, fog: false } ) ); boxMesh.geometry.removeAttribute( 'normal' ); boxMesh.geometry.removeAttribute( 'uv' ); boxMesh.onBeforeRender = function ( renderer, scene, camera ) { this.matrixWorld.copyPosition( camera.matrixWorld ); }; // enable code injection for non-built-in material Object.defineProperty( boxMesh.material, 'map', { get: function () { return this.uniforms.tCube.value; } } ); objects.update( boxMesh ); } var texture = background.isWebGLRenderTargetCube ? background.texture : background; boxMesh.material.uniforms.tCube.value = texture; boxMesh.material.uniforms.tFlip.value = ( background.isWebGLRenderTargetCube ) ? 1 : - 1; if ( currentBackground !== background || currentBackgroundVersion !== texture.version ) { boxMesh.material.needsUpdate = true; currentBackground = background; currentBackgroundVersion = texture.version; } // push to the pre-sorted opaque render list renderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null ); } else if ( background && background.isTexture ) { if ( planeMesh === undefined ) { planeMesh = new Mesh( new PlaneBufferGeometry( 2, 2 ), new ShaderMaterial( { type: 'BackgroundMaterial', uniforms: cloneUniforms( ShaderLib.background.uniforms ), vertexShader: ShaderLib.background.vertexShader, fragmentShader: ShaderLib.background.fragmentShader, side: FrontSide, depthTest: false, depthWrite: false, fog: false } ) ); planeMesh.geometry.removeAttribute( 'normal' ); // enable code injection for non-built-in material Object.defineProperty( planeMesh.material, 'map', { get: function () { return this.uniforms.t2D.value; } } ); objects.update( planeMesh ); } planeMesh.material.uniforms.t2D.value = background; if ( background.matrixAutoUpdate === true ) { background.updateMatrix(); } planeMesh.material.uniforms.uvTransform.value.copy( background.matrix ); if ( currentBackground !== background || currentBackgroundVersion !== background.version ) { planeMesh.material.needsUpdate = true; currentBackground = background; currentBackgroundVersion = background.version; } // push to the pre-sorted opaque render list renderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null ); } } function setClear( color, alpha ) { state.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha ); } return { getClearColor: function () { return clearColor; }, setClearColor: function ( color, alpha ) { clearColor.set( color ); clearAlpha = alpha !== undefined ? alpha : 1; setClear( clearColor, clearAlpha ); }, getClearAlpha: function () { return clearAlpha; }, setClearAlpha: function ( alpha ) { clearAlpha = alpha; setClear( clearColor, clearAlpha ); }, render: render }; } /** * @author mrdoob / http://mrdoob.com/ */ function WebGLBufferRenderer( gl, extensions, info, capabilities ) { var mode; function setMode( value ) { mode = value; } function render( start, count ) { gl.drawArrays( mode, start, count ); info.update( count, mode ); } function renderInstances( geometry, start, count ) { var extension; if ( capabilities.isWebGL2 ) { extension = gl; } else { extension = extensions.get( 'ANGLE_instanced_arrays' ); if ( extension === null ) { console.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' ); return; } } extension[ capabilities.isWebGL2 ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE' ]( mode, start, count, geometry.maxInstancedCount ); info.update( count, mode, geometry.maxInstancedCount ); } // this.setMode = setMode; this.render = render; this.renderInstances = renderInstances; } /** * @author mrdoob / http://mrdoob.com/ */ function WebGLCapabilities( gl, extensions, parameters ) { var maxAnisotropy; function getMaxAnisotropy() { if ( maxAnisotropy !== undefined ) return maxAnisotropy; var extension = extensions.get( 'EXT_texture_filter_anisotropic' ); if ( extension !== null ) { maxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT ); } else { maxAnisotropy = 0; } return maxAnisotropy; } function getMaxPrecision( precision ) { if ( precision === 'highp' ) { if ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 && gl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) { return 'highp'; } precision = 'mediump'; } if ( precision === 'mediump' ) { if ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 && gl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) { return 'mediump'; } } return 'lowp'; } var isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext; var precision = parameters.precision !== undefined ? parameters.precision : 'highp'; var maxPrecision = getMaxPrecision( precision ); if ( maxPrecision !== precision ) { console.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' ); precision = maxPrecision; } var logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true; var maxTextures = gl.getParameter( 34930 ); var maxVertexTextures = gl.getParameter( 35660 ); var maxTextureSize = gl.getParameter( 3379 ); var maxCubemapSize = gl.getParameter( 34076 ); var maxAttributes = gl.getParameter( 34921 ); var maxVertexUniforms = gl.getParameter( 36347 ); var maxVaryings = gl.getParameter( 36348 ); var maxFragmentUniforms = gl.getParameter( 36349 ); var vertexTextures = maxVertexTextures > 0; var floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' ); var floatVertexTextures = vertexTextures && floatFragmentTextures; var maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0; return { isWebGL2: isWebGL2, getMaxAnisotropy: getMaxAnisotropy, getMaxPrecision: getMaxPrecision, precision: precision, logarithmicDepthBuffer: logarithmicDepthBuffer, maxTextures: maxTextures, maxVertexTextures: maxVertexTextures, maxTextureSize: maxTextureSize, maxCubemapSize: maxCubemapSize, maxAttributes: maxAttributes, maxVertexUniforms: maxVertexUniforms, maxVaryings: maxVaryings, maxFragmentUniforms: maxFragmentUniforms, vertexTextures: vertexTextures, floatFragmentTextures: floatFragmentTextures, floatVertexTextures: floatVertexTextures, maxSamples: maxSamples }; } /** * @author tschw */ function WebGLClipping() { var scope = this, globalState = null, numGlobalPlanes = 0, localClippingEnabled = false, renderingShadows = false, plane = new Plane(), viewNormalMatrix = new Matrix3(), uniform = { value: null, needsUpdate: false }; this.uniform = uniform; this.numPlanes = 0; this.numIntersection = 0; this.init = function ( planes, enableLocalClipping, camera ) { var enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to // run another frame in order to reset the state: numGlobalPlanes !== 0 || localClippingEnabled; localClippingEnabled = enableLocalClipping; globalState = projectPlanes( planes, camera, 0 ); numGlobalPlanes = planes.length; return enabled; }; this.beginShadows = function () { renderingShadows = true; projectPlanes( null ); }; this.endShadows = function () { renderingShadows = false; resetGlobalState(); }; this.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) { if ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) { // there's no local clipping if ( renderingShadows ) { // there's no global clipping projectPlanes( null ); } else { resetGlobalState(); } } else { var nGlobal = renderingShadows ? 0 : numGlobalPlanes, lGlobal = nGlobal * 4, dstArray = cache.clippingState || null; uniform.value = dstArray; // ensure unique state dstArray = projectPlanes( planes, camera, lGlobal, fromCache ); for ( var i = 0; i !== lGlobal; ++ i ) { dstArray[ i ] = globalState[ i ]; } cache.clippingState = dstArray; this.numIntersection = clipIntersection ? this.numPlanes : 0; this.numPlanes += nGlobal; } }; function resetGlobalState() { if ( uniform.value !== globalState ) { uniform.value = globalState; uniform.needsUpdate = numGlobalPlanes > 0; } scope.numPlanes = numGlobalPlanes; scope.numIntersection = 0; } function projectPlanes( planes, camera, dstOffset, skipTransform ) { var nPlanes = planes !== null ? planes.length : 0, dstArray = null; if ( nPlanes !== 0 ) { dstArray = uniform.value; if ( skipTransform !== true || dstArray === null ) { var flatSize = dstOffset + nPlanes * 4, viewMatrix = camera.matrixWorldInverse; viewNormalMatrix.getNormalMatrix( viewMatrix ); if ( dstArray === null || dstArray.length < flatSize ) { dstArray = new Float32Array( flatSize ); } for ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) { plane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix ); plane.normal.toArray( dstArray, i4 ); dstArray[ i4 + 3 ] = plane.constant; } } uniform.value = dstArray; uniform.needsUpdate = true; } scope.numPlanes = nPlanes; return dstArray; } } /** * @author mrdoob / http://mrdoob.com/ */ function WebGLExtensions( gl ) { var extensions = {}; return { get: function ( name ) { if ( extensions[ name ] !== undefined ) { return extensions[ name ]; } var extension; switch ( name ) { case 'WEBGL_depth_texture': extension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' ); break; case 'EXT_texture_filter_anisotropic': extension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' ); break; case 'WEBGL_compressed_texture_s3tc': extension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' ); break; case 'WEBGL_compressed_texture_pvrtc': extension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' ); break; default: extension = gl.getExtension( name ); } if ( extension === null ) { console.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' ); } extensions[ name ] = extension; return extension; } }; } /** * @author mrdoob / http://mrdoob.com/ */ function WebGLGeometries( gl, attributes, info ) { var geometries = {}; var wireframeAttributes = {}; function onGeometryDispose( event ) { var geometry = event.target; var buffergeometry = geometries[ geometry.id ]; if ( buffergeometry.index !== null ) { attributes.remove( buffergeometry.index ); } for ( var name in buffergeometry.attributes ) { attributes.remove( buffergeometry.attributes[ name ] ); } geometry.removeEventListener( 'dispose', onGeometryDispose ); delete geometries[ geometry.id ]; var attribute = wireframeAttributes[ buffergeometry.id ]; if ( attribute ) { attributes.remove( attribute ); delete wireframeAttributes[ buffergeometry.id ]; } // info.memory.geometries --; } function get( object, geometry ) { var buffergeometry = geometries[ geometry.id ]; if ( buffergeometry ) return buffergeometry; geometry.addEventListener( 'dispose', onGeometryDispose ); if ( geometry.isBufferGeometry ) { buffergeometry = geometry; } else if ( geometry.isGeometry ) { if ( geometry._bufferGeometry === undefined ) { geometry._bufferGeometry = new BufferGeometry().setFromObject( object ); } buffergeometry = geometry._bufferGeometry; } geometries[ geometry.id ] = buffergeometry; info.memory.geometries ++; return buffergeometry; } function update( geometry ) { var index = geometry.index; var geometryAttributes = geometry.attributes; if ( index !== null ) { attributes.update( index, 34963 ); } for ( var name in geometryAttributes ) { attributes.update( geometryAttributes[ name ], 34962 ); } // morph targets var morphAttributes = geometry.morphAttributes; for ( var name in morphAttributes ) { var array = morphAttributes[ name ]; for ( var i = 0, l = array.length; i < l; i ++ ) { attributes.update( array[ i ], 34962 ); } } } function getWireframeAttribute( geometry ) { var attribute = wireframeAttributes[ geometry.id ]; if ( attribute ) return attribute; var indices = []; var geometryIndex = geometry.index; var geometryAttributes = geometry.attributes; // console.time( 'wireframe' ); if ( geometryIndex !== null ) { var array = geometryIndex.array; for ( var i = 0, l = array.length; i < l; i += 3 ) { var a = array[ i + 0 ]; var b = array[ i + 1 ]; var c = array[ i + 2 ]; indices.push( a, b, b, c, c, a ); } } else { var array = geometryAttributes.position.array; for ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) { var a = i + 0; var b = i + 1; var c = i + 2; indices.push( a, b, b, c, c, a ); } } // console.timeEnd( 'wireframe' ); attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 ); attributes.update( attribute, 34963 ); wireframeAttributes[ geometry.id ] = attribute; return attribute; } return { get: get, update: update, getWireframeAttribute: getWireframeAttribute }; } /** * @author mrdoob / http://mrdoob.com/ */ function WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) { var mode; function setMode( value ) { mode = value; } var type, bytesPerElement; function setIndex( value ) { type = value.type; bytesPerElement = value.bytesPerElement; } function render( start, count ) { gl.drawElements( mode, count, type, start * bytesPerElement ); info.update( count, mode ); } function renderInstances( geometry, start, count ) { var extension; if ( capabilities.isWebGL2 ) { extension = gl; } else { var extension = extensions.get( 'ANGLE_instanced_arrays' ); if ( extension === null ) { console.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' ); return; } } extension[ capabilities.isWebGL2 ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE' ]( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount ); info.update( count, mode, geometry.maxInstancedCount ); } // this.setMode = setMode; this.setIndex = setIndex; this.render = render; this.renderInstances = renderInstances; } /** * @author Mugen87 / https://github.com/Mugen87 */ function WebGLInfo( gl ) { var memory = { geometries: 0, textures: 0 }; var render = { frame: 0, calls: 0, triangles: 0, points: 0, lines: 0 }; function update( count, mode, instanceCount ) { instanceCount = instanceCount || 1; render.calls ++; switch ( mode ) { case 4: render.triangles += instanceCount * ( count / 3 ); break; case 5: case 6: render.triangles += instanceCount * ( count - 2 ); break; case 1: render.lines += instanceCount * ( count / 2 ); break; case 3: render.lines += instanceCount * ( count - 1 ); break; case 2: render.lines += instanceCount * count; break; case 0: render.points += instanceCount * count; break; default: console.error( 'THREE.WebGLInfo: Unknown draw mode:', mode ); break; } } function reset() { render.frame ++; render.calls = 0; render.triangles = 0; render.points = 0; render.lines = 0; } return { memory: memory, render: render, programs: null, autoReset: true, reset: reset, update: update }; } /** * @author mrdoob / http://mrdoob.com/ */ function absNumericalSort( a, b ) { return Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] ); } function WebGLMorphtargets( gl ) { var influencesList = {}; var morphInfluences = new Float32Array( 8 ); function update( object, geometry, material, program ) { var objectInfluences = object.morphTargetInfluences; var length = objectInfluences.length; var influences = influencesList[ geometry.id ]; if ( influences === undefined ) { // initialise list influences = []; for ( var i = 0; i < length; i ++ ) { influences[ i ] = [ i, 0 ]; } influencesList[ geometry.id ] = influences; } var morphTargets = material.morphTargets && geometry.morphAttributes.position; var morphNormals = material.morphNormals && geometry.morphAttributes.normal; // Remove current morphAttributes for ( var i = 0; i < length; i ++ ) { var influence = influences[ i ]; if ( influence[ 1 ] !== 0 ) { if ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i ); if ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i ); } } // Collect influences for ( var i = 0; i < length; i ++ ) { var influence = influences[ i ]; influence[ 0 ] = i; influence[ 1 ] = objectInfluences[ i ]; } influences.sort( absNumericalSort ); // Add morphAttributes for ( var i = 0; i < 8; i ++ ) { var influence = influences[ i ]; if ( influence ) { var index = influence[ 0 ]; var value = influence[ 1 ]; if ( value ) { if ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] ); if ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] ); morphInfluences[ i ] = value; continue; } } morphInfluences[ i ] = 0; } program.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences ); } return { update: update }; } /** * @author mrdoob / http://mrdoob.com/ */ function WebGLObjects( geometries, info ) { var updateList = {}; function update( object ) { var frame = info.render.frame; var geometry = object.geometry; var buffergeometry = geometries.get( object, geometry ); // Update once per frame if ( updateList[ buffergeometry.id ] !== frame ) { if ( geometry.isGeometry ) { buffergeometry.updateFromObject( object ); } geometries.update( buffergeometry ); updateList[ buffergeometry.id ] = frame; } return buffergeometry; } function dispose() { updateList = {}; } return { update: update, dispose: dispose }; } /** * @author mrdoob / http://mrdoob.com/ */ function CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) { images = images !== undefined ? images : []; mapping = mapping !== undefined ? mapping : CubeReflectionMapping; format = format !== undefined ? format : RGBFormat; Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ); this.flipY = false; } CubeTexture.prototype = Object.create( Texture.prototype ); CubeTexture.prototype.constructor = CubeTexture; CubeTexture.prototype.isCubeTexture = true; Object.defineProperty( CubeTexture.prototype, 'images', { get: function () { return this.image; }, set: function ( value ) { this.image = value; } } ); /** * @author Takahiro https://github.com/takahirox */ function DataTexture2DArray( data, width, height, depth ) { Texture.call( this, null ); this.image = { data: data, width: width, height: height, depth: depth }; this.magFilter = NearestFilter; this.minFilter = NearestFilter; this.wrapR = ClampToEdgeWrapping; this.generateMipmaps = false; this.flipY = false; } DataTexture2DArray.prototype = Object.create( Texture.prototype ); DataTexture2DArray.prototype.constructor = DataTexture2DArray; DataTexture2DArray.prototype.isDataTexture2DArray = true; /** * @author Artur Trzesiok */ function DataTexture3D( data, width, height, depth ) { // We're going to add .setXXX() methods for setting properties later. // Users can still set in DataTexture3D directly. // // var texture = new THREE.DataTexture3D( data, width, height, depth ); // texture.anisotropy = 16; // // See #14839 Texture.call( this, null ); this.image = { data: data, width: width, height: height, depth: depth }; this.magFilter = NearestFilter; this.minFilter = NearestFilter; this.wrapR = ClampToEdgeWrapping; this.generateMipmaps = false; this.flipY = false; } DataTexture3D.prototype = Object.create( Texture.prototype ); DataTexture3D.prototype.constructor = DataTexture3D; DataTexture3D.prototype.isDataTexture3D = true; /** * @author tschw * @author Mugen87 / https://github.com/Mugen87 * @author mrdoob / http://mrdoob.com/ * * Uniforms of a program. * Those form a tree structure with a special top-level container for the root, * which you get by calling 'new WebGLUniforms( gl, program, renderer )'. * * * Properties of inner nodes including the top-level container: * * .seq - array of nested uniforms * .map - nested uniforms by name * * * Methods of all nodes except the top-level container: * * .setValue( gl, value, [renderer] ) * * uploads a uniform value(s) * the 'renderer' parameter is needed for sampler uniforms * * * Static methods of the top-level container (renderer factorizations): * * .upload( gl, seq, values, renderer ) * * sets uniforms in 'seq' to 'values[id].value' * * .seqWithValue( seq, values ) : filteredSeq * * filters 'seq' entries with corresponding entry in values * * * Methods of the top-level container (renderer factorizations): * * .setValue( gl, name, value ) * * sets uniform with name 'name' to 'value' * * .set( gl, obj, prop ) * * sets uniform from object and property with same name than uniform * * .setOptional( gl, obj, prop ) * * like .set for an optional property of the object * */ var emptyTexture = new Texture(); var emptyTexture2dArray = new DataTexture2DArray(); var emptyTexture3d = new DataTexture3D(); var emptyCubeTexture = new CubeTexture(); // --- Base for inner nodes (including the root) --- function UniformContainer() { this.seq = []; this.map = {}; } // --- Utilities --- // Array Caches (provide typed arrays for temporary by size) var arrayCacheF32 = []; var arrayCacheI32 = []; // Float32Array caches used for uploading Matrix uniforms var mat4array = new Float32Array( 16 ); var mat3array = new Float32Array( 9 ); var mat2array = new Float32Array( 4 ); // Flattening for arrays of vectors and matrices function flatten( array, nBlocks, blockSize ) { var firstElem = array[ 0 ]; if ( firstElem <= 0 || firstElem > 0 ) return array; // unoptimized: ! isNaN( firstElem ) // see http://jacksondunstan.com/articles/983 var n = nBlocks * blockSize, r = arrayCacheF32[ n ]; if ( r === undefined ) { r = new Float32Array( n ); arrayCacheF32[ n ] = r; } if ( nBlocks !== 0 ) { firstElem.toArray( r, 0 ); for ( var i = 1, offset = 0; i !== nBlocks; ++ i ) { offset += blockSize; array[ i ].toArray( r, offset ); } } return r; } function arraysEqual( a, b ) { if ( a.length !== b.length ) return false; for ( var i = 0, l = a.length; i < l; i ++ ) { if ( a[ i ] !== b[ i ] ) return false; } return true; } function copyArray( a, b ) { for ( var i = 0, l = b.length; i < l; i ++ ) { a[ i ] = b[ i ]; } } // Texture unit allocation function allocTexUnits( renderer, n ) { var r = arrayCacheI32[ n ]; if ( r === undefined ) { r = new Int32Array( n ); arrayCacheI32[ n ] = r; } for ( var i = 0; i !== n; ++ i ) r[ i ] = renderer.allocTextureUnit(); return r; } // --- Setters --- // Note: Defining these methods externally, because they come in a bunch // and this way their names minify. // Single scalar function setValue1f( gl, v ) { var cache = this.cache; if ( cache[ 0 ] === v ) return; gl.uniform1f( this.addr, v ); cache[ 0 ] = v; } function setValue1i( gl, v ) { var cache = this.cache; if ( cache[ 0 ] === v ) return; gl.uniform1i( this.addr, v ); cache[ 0 ] = v; } // Single float vector (from flat array or THREE.VectorN) function setValue2fv( gl, v ) { var cache = this.cache; if ( v.x !== undefined ) { if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) { gl.uniform2f( this.addr, v.x, v.y ); cache[ 0 ] = v.x; cache[ 1 ] = v.y; } } else { if ( arraysEqual( cache, v ) ) return; gl.uniform2fv( this.addr, v ); copyArray( cache, v ); } } function setValue3fv( gl, v ) { var cache = this.cache; if ( v.x !== undefined ) { if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) { gl.uniform3f( this.addr, v.x, v.y, v.z ); cache[ 0 ] = v.x; cache[ 1 ] = v.y; cache[ 2 ] = v.z; } } else if ( v.r !== undefined ) { if ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) { gl.uniform3f( this.addr, v.r, v.g, v.b ); cache[ 0 ] = v.r; cache[ 1 ] = v.g; cache[ 2 ] = v.b; } } else { if ( arraysEqual( cache, v ) ) return; gl.uniform3fv( this.addr, v ); copyArray( cache, v ); } } function setValue4fv( gl, v ) { var cache = this.cache; if ( v.x !== undefined ) { if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) { gl.uniform4f( this.addr, v.x, v.y, v.z, v.w ); cache[ 0 ] = v.x; cache[ 1 ] = v.y; cache[ 2 ] = v.z; cache[ 3 ] = v.w; } } else { if ( arraysEqual( cache, v ) ) return; gl.uniform4fv( this.addr, v ); copyArray( cache, v ); } } // Single matrix (from flat array or MatrixN) function setValue2fm( gl, v ) { var cache = this.cache; var elements = v.elements; if ( elements === undefined ) { if ( arraysEqual( cache, v ) ) return; gl.uniformMatrix2fv( this.addr, false, v ); copyArray( cache, v ); } else { if ( arraysEqual( cache, elements ) ) return; mat2array.set( elements ); gl.uniformMatrix2fv( this.addr, false, mat2array ); copyArray( cache, elements ); } } function setValue3fm( gl, v ) { var cache = this.cache; var elements = v.elements; if ( elements === undefined ) { if ( arraysEqual( cache, v ) ) return; gl.uniformMatrix3fv( this.addr, false, v ); copyArray( cache, v ); } else { if ( arraysEqual( cache, elements ) ) return; mat3array.set( elements ); gl.uniformMatrix3fv( this.addr, false, mat3array ); copyArray( cache, elements ); } } function setValue4fm( gl, v ) { var cache = this.cache; var elements = v.elements; if ( elements === undefined ) { if ( arraysEqual( cache, v ) ) return; gl.uniformMatrix4fv( this.addr, false, v ); copyArray( cache, v ); } else { if ( arraysEqual( cache, elements ) ) return; mat4array.set( elements ); gl.uniformMatrix4fv( this.addr, false, mat4array ); copyArray( cache, elements ); } } // Single texture (2D / Cube) function setValueT1( gl, v, renderer ) { var cache = this.cache; var unit = renderer.allocTextureUnit(); if ( cache[ 0 ] !== unit ) { gl.uniform1i( this.addr, unit ); cache[ 0 ] = unit; } renderer.setTexture2D( v || emptyTexture, unit ); } function setValueT2DArray1( gl, v, renderer ) { var cache = this.cache; var unit = renderer.allocTextureUnit(); if ( cache[ 0 ] !== unit ) { gl.uniform1i( this.addr, unit ); cache[ 0 ] = unit; } renderer.setTexture2DArray( v || emptyTexture2dArray, unit ); } function setValueT3D1( gl, v, renderer ) { var cache = this.cache; var unit = renderer.allocTextureUnit(); if ( cache[ 0 ] !== unit ) { gl.uniform1i( this.addr, unit ); cache[ 0 ] = unit; } renderer.setTexture3D( v || emptyTexture3d, unit ); } function setValueT6( gl, v, renderer ) { var cache = this.cache; var unit = renderer.allocTextureUnit(); if ( cache[ 0 ] !== unit ) { gl.uniform1i( this.addr, unit ); cache[ 0 ] = unit; } renderer.setTextureCube( v || emptyCubeTexture, unit ); } // Integer / Boolean vectors or arrays thereof (always flat arrays) function setValue2iv( gl, v ) { var cache = this.cache; if ( arraysEqual( cache, v ) ) return; gl.uniform2iv( this.addr, v ); copyArray( cache, v ); } function setValue3iv( gl, v ) { var cache = this.cache; if ( arraysEqual( cache, v ) ) return; gl.uniform3iv( this.addr, v ); copyArray( cache, v ); } function setValue4iv( gl, v ) { var cache = this.cache; if ( arraysEqual( cache, v ) ) return; gl.uniform4iv( this.addr, v ); copyArray( cache, v ); } // Helper to pick the right setter for the singular case function getSingularSetter( type ) { switch ( type ) { case 0x1406: return setValue1f; // FLOAT case 0x8b50: return setValue2fv; // _VEC2 case 0x8b51: return setValue3fv; // _VEC3 case 0x8b52: return setValue4fv; // _VEC4 case 0x8b5a: return setValue2fm; // _MAT2 case 0x8b5b: return setValue3fm; // _MAT3 case 0x8b5c: return setValue4fm; // _MAT4 case 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES case 0x8b5f: return setValueT3D1; // SAMPLER_3D case 0x8b60: return setValueT6; // SAMPLER_CUBE case 0x8DC1: return setValueT2DArray1; // SAMPLER_2D_ARRAY case 0x1404: case 0x8b56: return setValue1i; // INT, BOOL case 0x8b53: case 0x8b57: return setValue2iv; // _VEC2 case 0x8b54: case 0x8b58: return setValue3iv; // _VEC3 case 0x8b55: case 0x8b59: return setValue4iv; // _VEC4 } } // Array of scalars function setValue1fv( gl, v ) { var cache = this.cache; if ( arraysEqual( cache, v ) ) return; gl.uniform1fv( this.addr, v ); copyArray( cache, v ); } function setValue1iv( gl, v ) { var cache = this.cache; if ( arraysEqual( cache, v ) ) return; gl.uniform1iv( this.addr, v ); copyArray( cache, v ); } // Array of vectors (flat or from THREE classes) function setValueV2a( gl, v ) { var cache = this.cache; var data = flatten( v, this.size, 2 ); if ( arraysEqual( cache, data ) ) return; gl.uniform2fv( this.addr, data ); this.updateCache( data ); } function setValueV3a( gl, v ) { var cache = this.cache; var data = flatten( v, this.size, 3 ); if ( arraysEqual( cache, data ) ) return; gl.uniform3fv( this.addr, data ); this.updateCache( data ); } function setValueV4a( gl, v ) { var cache = this.cache; var data = flatten( v, this.size, 4 ); if ( arraysEqual( cache, data ) ) return; gl.uniform4fv( this.addr, data ); this.updateCache( data ); } // Array of matrices (flat or from THREE clases) function setValueM2a( gl, v ) { var cache = this.cache; var data = flatten( v, this.size, 4 ); if ( arraysEqual( cache, data ) ) return; gl.uniformMatrix2fv( this.addr, false, data ); this.updateCache( data ); } function setValueM3a( gl, v ) { var cache = this.cache; var data = flatten( v, this.size, 9 ); if ( arraysEqual( cache, data ) ) return; gl.uniformMatrix3fv( this.addr, false, data ); this.updateCache( data ); } function setValueM4a( gl, v ) { var cache = this.cache; var data = flatten( v, this.size, 16 ); if ( arraysEqual( cache, data ) ) return; gl.uniformMatrix4fv( this.addr, false, data ); this.updateCache( data ); } // Array of textures (2D / Cube) function setValueT1a( gl, v, renderer ) { var cache = this.cache; var n = v.length; var units = allocTexUnits( renderer, n ); if ( arraysEqual( cache, units ) === false ) { gl.uniform1iv( this.addr, units ); copyArray( cache, units ); } for ( var i = 0; i !== n; ++ i ) { renderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] ); } } function setValueT6a( gl, v, renderer ) { var cache = this.cache; var n = v.length; var units = allocTexUnits( renderer, n ); if ( arraysEqual( cache, units ) === false ) { gl.uniform1iv( this.addr, units ); copyArray( cache, units ); } for ( var i = 0; i !== n; ++ i ) { renderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] ); } } // Helper to pick the right setter for a pure (bottom-level) array function getPureArraySetter( type ) { switch ( type ) { case 0x1406: return setValue1fv; // FLOAT case 0x8b50: return setValueV2a; // _VEC2 case 0x8b51: return setValueV3a; // _VEC3 case 0x8b52: return setValueV4a; // _VEC4 case 0x8b5a: return setValueM2a; // _MAT2 case 0x8b5b: return setValueM3a; // _MAT3 case 0x8b5c: return setValueM4a; // _MAT4 case 0x8b5e: return setValueT1a; // SAMPLER_2D case 0x8b60: return setValueT6a; // SAMPLER_CUBE case 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL case 0x8b53: case 0x8b57: return setValue2iv; // _VEC2 case 0x8b54: case 0x8b58: return setValue3iv; // _VEC3 case 0x8b55: case 0x8b59: return setValue4iv; // _VEC4 } } // --- Uniform Classes --- function SingleUniform( id, activeInfo, addr ) { this.id = id; this.addr = addr; this.cache = []; this.setValue = getSingularSetter( activeInfo.type ); // this.path = activeInfo.name; // DEBUG } function PureArrayUniform( id, activeInfo, addr ) { this.id = id; this.addr = addr; this.cache = []; this.size = activeInfo.size; this.setValue = getPureArraySetter( activeInfo.type ); // this.path = activeInfo.name; // DEBUG } PureArrayUniform.prototype.updateCache = function ( data ) { var cache = this.cache; if ( data instanceof Float32Array && cache.length !== data.length ) { this.cache = new Float32Array( data.length ); } copyArray( cache, data ); }; function StructuredUniform( id ) { this.id = id; UniformContainer.call( this ); // mix-in } StructuredUniform.prototype.setValue = function ( gl, value, renderer ) { var seq = this.seq; for ( var i = 0, n = seq.length; i !== n; ++ i ) { var u = seq[ i ]; u.setValue( gl, value[ u.id ], renderer ); } }; // --- Top-level --- // Parser - builds up the property tree from the path strings var RePathPart = /([\w\d_]+)(\])?(\[|\.)?/g; // extracts // - the identifier (member name or array index) // - followed by an optional right bracket (found when array index) // - followed by an optional left bracket or dot (type of subscript) // // Note: These portions can be read in a non-overlapping fashion and // allow straightforward parsing of the hierarchy that WebGL encodes // in the uniform names. function addUniform( container, uniformObject ) { container.seq.push( uniformObject ); container.map[ uniformObject.id ] = uniformObject; } function parseUniform( activeInfo, addr, container ) { var path = activeInfo.name, pathLength = path.length; // reset RegExp object, because of the early exit of a previous run RePathPart.lastIndex = 0; while ( true ) { var match = RePathPart.exec( path ), matchEnd = RePathPart.lastIndex, id = match[ 1 ], idIsIndex = match[ 2 ] === ']', subscript = match[ 3 ]; if ( idIsIndex ) id = id | 0; // convert to integer if ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) { // bare name or "pure" bottom-level array "[0]" suffix addUniform( container, subscript === undefined ? new SingleUniform( id, activeInfo, addr ) : new PureArrayUniform( id, activeInfo, addr ) ); break; } else { // step into inner node / create it in case it doesn't exist var map = container.map, next = map[ id ]; if ( next === undefined ) { next = new StructuredUniform( id ); addUniform( container, next ); } container = next; } } } // Root Container function WebGLUniforms( gl, program, renderer ) { UniformContainer.call( this ); this.renderer = renderer; var n = gl.getProgramParameter( program, 35718 ); for ( var i = 0; i < n; ++ i ) { var info = gl.getActiveUniform( program, i ), addr = gl.getUniformLocation( program, info.name ); parseUniform( info, addr, this ); } } WebGLUniforms.prototype.setValue = function ( gl, name, value ) { var u = this.map[ name ]; if ( u !== undefined ) u.setValue( gl, value, this.renderer ); }; WebGLUniforms.prototype.setOptional = function ( gl, object, name ) { var v = object[ name ]; if ( v !== undefined ) this.setValue( gl, name, v ); }; // Static interface WebGLUniforms.upload = function ( gl, seq, values, renderer ) { for ( var i = 0, n = seq.length; i !== n; ++ i ) { var u = seq[ i ], v = values[ u.id ]; if ( v.needsUpdate !== false ) { // note: always updating when .needsUpdate is undefined u.setValue( gl, v.value, renderer ); } } }; WebGLUniforms.seqWithValue = function ( seq, values ) { var r = []; for ( var i = 0, n = seq.length; i !== n; ++ i ) { var u = seq[ i ]; if ( u.id in values ) r.push( u ); } return r; }; /** * @author mrdoob / http://mrdoob.com/ */ function addLineNumbers( string ) { var lines = string.split( '\n' ); for ( var i = 0; i < lines.length; i ++ ) { lines[ i ] = ( i + 1 ) + ': ' + lines[ i ]; } return lines.join( '\n' ); } function WebGLShader( gl, type, string ) { var shader = gl.createShader( type ); gl.shaderSource( shader, string ); gl.compileShader( shader ); if ( gl.getShaderParameter( shader, 35713 ) === false ) { console.error( 'THREE.WebGLShader: Shader couldn\'t compile.' ); } if ( gl.getShaderInfoLog( shader ) !== '' ) { console.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === 35633 ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) ); } // --enable-privileged-webgl-extension // console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) ); return shader; } /** * @author mrdoob / http://mrdoob.com/ */ var programIdCount = 0; function getEncodingComponents( encoding ) { switch ( encoding ) { case LinearEncoding: return [ 'Linear', '( value )' ]; case sRGBEncoding: return [ 'sRGB', '( value )' ]; case RGBEEncoding: return [ 'RGBE', '( value )' ]; case RGBM7Encoding: return [ 'RGBM', '( value, 7.0 )' ]; case RGBM16Encoding: return [ 'RGBM', '( value, 16.0 )' ]; case RGBDEncoding: return [ 'RGBD', '( value, 256.0 )' ]; case GammaEncoding: return [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ]; default: throw new Error( 'unsupported encoding: ' + encoding ); } } function getTexelDecodingFunction( functionName, encoding ) { var components = getEncodingComponents( encoding ); return 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }'; } function getTexelEncodingFunction( functionName, encoding ) { var components = getEncodingComponents( encoding ); return 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }'; } function getToneMappingFunction( functionName, toneMapping ) { var toneMappingName; switch ( toneMapping ) { case LinearToneMapping: toneMappingName = 'Linear'; break; case ReinhardToneMapping: toneMappingName = 'Reinhard'; break; case Uncharted2ToneMapping: toneMappingName = 'Uncharted2'; break; case CineonToneMapping: toneMappingName = 'OptimizedCineon'; break; case ACESFilmicToneMapping: toneMappingName = 'ACESFilmic'; break; default: throw new Error( 'unsupported toneMapping: ' + toneMapping ); } return 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }'; } function generateExtensions( extensions, parameters, rendererExtensions ) { extensions = extensions || {}; var chunks = [ ( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || ( parameters.normalMap && ! parameters.objectSpaceNormalMap ) || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '', ( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '', ( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '', ( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : '' ]; return chunks.filter( filterEmptyLine ).join( '\n' ); } function generateDefines( defines ) { var chunks = []; for ( var name in defines ) { var value = defines[ name ]; if ( value === false ) continue; chunks.push( '#define ' + name + ' ' + value ); } return chunks.join( '\n' ); } function fetchAttributeLocations( gl, program ) { var attributes = {}; var n = gl.getProgramParameter( program, 35721 ); for ( var i = 0; i < n; i ++ ) { var info = gl.getActiveAttrib( program, i ); var name = info.name; // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i ); attributes[ name ] = gl.getAttribLocation( program, name ); } return attributes; } function filterEmptyLine( string ) { return string !== ''; } function replaceLightNums( string, parameters ) { return string .replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights ) .replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights ) .replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights ) .replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights ) .replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights ); } function replaceClippingPlaneNums( string, parameters ) { return string .replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes ) .replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) ); } function parseIncludes( string ) { var pattern = /^[ \t]*#include +<([\w\d./]+)>/gm; function replace( match, include ) { var replace = ShaderChunk[ include ]; if ( replace === undefined ) { throw new Error( 'Can not resolve #include <' + include + '>' ); } return parseIncludes( replace ); } return string.replace( pattern, replace ); } function unrollLoops( string ) { var pattern = /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g; function replace( match, start, end, snippet ) { var unroll = ''; for ( var i = parseInt( start ); i < parseInt( end ); i ++ ) { unroll += snippet.replace( /\[ i \]/g, '[ ' + i + ' ]' ); } return unroll; } return string.replace( pattern, replace ); } function WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities ) { var gl = renderer.context; var defines = material.defines; var vertexShader = shader.vertexShader; var fragmentShader = shader.fragmentShader; var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC'; if ( parameters.shadowMapType === PCFShadowMap ) { shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF'; } else if ( parameters.shadowMapType === PCFSoftShadowMap ) { shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT'; } var envMapTypeDefine = 'ENVMAP_TYPE_CUBE'; var envMapModeDefine = 'ENVMAP_MODE_REFLECTION'; var envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY'; if ( parameters.envMap ) { switch ( material.envMap.mapping ) { case CubeReflectionMapping: case CubeRefractionMapping: envMapTypeDefine = 'ENVMAP_TYPE_CUBE'; break; case CubeUVReflectionMapping: case CubeUVRefractionMapping: envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV'; break; case EquirectangularReflectionMapping: case EquirectangularRefractionMapping: envMapTypeDefine = 'ENVMAP_TYPE_EQUIREC'; break; case SphericalReflectionMapping: envMapTypeDefine = 'ENVMAP_TYPE_SPHERE'; break; } switch ( material.envMap.mapping ) { case CubeRefractionMapping: case EquirectangularRefractionMapping: envMapModeDefine = 'ENVMAP_MODE_REFRACTION'; break; } switch ( material.combine ) { case MultiplyOperation: envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY'; break; case MixOperation: envMapBlendingDefine = 'ENVMAP_BLENDING_MIX'; break; case AddOperation: envMapBlendingDefine = 'ENVMAP_BLENDING_ADD'; break; } } var gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0; // console.log( 'building new program ' ); // var customExtensions = capabilities.isWebGL2 ? '' : generateExtensions( material.extensions, parameters, extensions ); var customDefines = generateDefines( defines ); // var program = gl.createProgram(); var prefixVertex, prefixFragment; if ( material.isRawShaderMaterial ) { prefixVertex = [ customDefines ].filter( filterEmptyLine ).join( '\n' ); if ( prefixVertex.length > 0 ) { prefixVertex += '\n'; } prefixFragment = [ customExtensions, customDefines ].filter( filterEmptyLine ).join( '\n' ); if ( prefixFragment.length > 0 ) { prefixFragment += '\n'; } } else { prefixVertex = [ 'precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + shader.name, customDefines, parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, ( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '', ( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', ( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_TANGENT', ' attribute vec4 tangent;', '#endif', '#ifdef USE_COLOR', ' attribute vec3 color;', '#endif', '#ifdef USE_MORPHTARGETS', ' attribute vec3 morphTarget0;', ' attribute vec3 morphTarget1;', ' attribute vec3 morphTarget2;', ' attribute vec3 morphTarget3;', ' #ifdef USE_MORPHNORMALS', ' attribute vec3 morphNormal0;', ' attribute vec3 morphNormal1;', ' attribute vec3 morphNormal2;', ' attribute vec3 morphNormal3;', ' #else', ' attribute vec3 morphTarget4;', ' attribute vec3 morphTarget5;', ' attribute vec3 morphTarget6;', ' attribute vec3 morphTarget7;', ' #endif', '#endif', '#ifdef USE_SKINNING', ' attribute vec4 skinIndex;', ' attribute vec4 skinWeight;', '#endif', '\n' ].filter( filterEmptyLine ).join( '\n' ); prefixFragment = [ customExtensions, 'precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + shader.name, customDefines, parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer '#define GAMMA_FACTOR ' + gammaFactorDefine, ( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '', ( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.matcap ? '#define USE_MATCAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', ( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.gradientMap ? '#define USE_GRADIENTMAP' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '', parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '', parameters.envMap && ( capabilities.isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) ) ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', ( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '', ( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below ( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '', parameters.dithering ? '#define DITHERING' : '', ( parameters.outputEncoding || parameters.mapEncoding || parameters.matcapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below parameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '', parameters.matcapEncoding ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '', parameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '', parameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '', parameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '', parameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '', '\n' ].filter( filterEmptyLine ).join( '\n' ); } vertexShader = parseIncludes( vertexShader ); vertexShader = replaceLightNums( vertexShader, parameters ); vertexShader = replaceClippingPlaneNums( vertexShader, parameters ); fragmentShader = parseIncludes( fragmentShader ); fragmentShader = replaceLightNums( fragmentShader, parameters ); fragmentShader = replaceClippingPlaneNums( fragmentShader, parameters ); vertexShader = unrollLoops( vertexShader ); fragmentShader = unrollLoops( fragmentShader ); if ( capabilities.isWebGL2 && ! material.isRawShaderMaterial ) { var isGLSL3ShaderMaterial = false; var versionRegex = /^\s*#version\s+300\s+es\s*\n/; if ( material.isShaderMaterial && vertexShader.match( versionRegex ) !== null && fragmentShader.match( versionRegex ) !== null ) { isGLSL3ShaderMaterial = true; vertexShader = vertexShader.replace( versionRegex, '' ); fragmentShader = fragmentShader.replace( versionRegex, '' ); } // GLSL 3.0 conversion prefixVertex = [ '#version 300 es\n', '#define attribute in', '#define varying out', '#define texture2D texture' ].join( '\n' ) + '\n' + prefixVertex; prefixFragment = [ '#version 300 es\n', '#define varying in', isGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;', isGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor', '#define gl_FragDepthEXT gl_FragDepth', '#define texture2D texture', '#define textureCube texture', '#define texture2DProj textureProj', '#define texture2DLodEXT textureLod', '#define texture2DProjLodEXT textureProjLod', '#define textureCubeLodEXT textureLod', '#define texture2DGradEXT textureGrad', '#define texture2DProjGradEXT textureProjGrad', '#define textureCubeGradEXT textureGrad' ].join( '\n' ) + '\n' + prefixFragment; } var vertexGlsl = prefixVertex + vertexShader; var fragmentGlsl = prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl ); // console.log( '*FRAGMENT*', fragmentGlsl ); var glVertexShader = WebGLShader( gl, 35633, vertexGlsl ); var glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl ); gl.attachShader( program, glVertexShader ); gl.attachShader( program, glFragmentShader ); // Force a particular attribute to index 0. if ( material.index0AttributeName !== undefined ) { gl.bindAttribLocation( program, 0, material.index0AttributeName ); } else if ( parameters.morphTargets === true ) { // programs with morphTargets displace position out of attribute 0 gl.bindAttribLocation( program, 0, 'position' ); } gl.linkProgram( program ); var programLog = gl.getProgramInfoLog( program ).trim(); var vertexLog = gl.getShaderInfoLog( glVertexShader ).trim(); var fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim(); var runnable = true; var haveDiagnostics = true; // console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) ); // console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) ); if ( gl.getProgramParameter( program, 35714 ) === false ) { runnable = false; console.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog ); } else if ( programLog !== '' ) { console.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog ); } else if ( vertexLog === '' || fragmentLog === '' ) { haveDiagnostics = false; } if ( haveDiagnostics ) { this.diagnostics = { runnable: runnable, material: material, programLog: programLog, vertexShader: { log: vertexLog, prefix: prefixVertex }, fragmentShader: { log: fragmentLog, prefix: prefixFragment } }; } // clean up gl.deleteShader( glVertexShader ); gl.deleteShader( glFragmentShader ); // set up caching for uniform locations var cachedUniforms; this.getUniforms = function () { if ( cachedUniforms === undefined ) { cachedUniforms = new WebGLUniforms( gl, program, renderer ); } return cachedUniforms; }; // set up caching for attribute locations var cachedAttributes; this.getAttributes = function () { if ( cachedAttributes === undefined ) { cachedAttributes = fetchAttributeLocations( gl, program ); } return cachedAttributes; }; // free resource this.destroy = function () { gl.deleteProgram( program ); this.program = undefined; }; // DEPRECATED Object.defineProperties( this, { uniforms: { get: function () { console.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' ); return this.getUniforms(); } }, attributes: { get: function () { console.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' ); return this.getAttributes(); } } } ); // this.name = shader.name; this.id = programIdCount ++; this.code = code; this.usedTimes = 1; this.program = program; this.vertexShader = glVertexShader; this.fragmentShader = glFragmentShader; return this; } /** * @author mrdoob / http://mrdoob.com/ */ function WebGLPrograms( renderer, extensions, capabilities ) { var programs = []; var shaderIDs = { MeshDepthMaterial: 'depth', MeshDistanceMaterial: 'distanceRGBA', MeshNormalMaterial: 'normal', MeshBasicMaterial: 'basic', MeshLambertMaterial: 'lambert', MeshPhongMaterial: 'phong', MeshToonMaterial: 'phong', MeshStandardMaterial: 'physical', MeshPhysicalMaterial: 'physical', MeshMatcapMaterial: 'matcap', LineBasicMaterial: 'basic', LineDashedMaterial: 'dashed', PointsMaterial: 'points', ShadowMaterial: 'shadow', SpriteMaterial: 'sprite' }; var parameterNames = [ "precision", "supportsVertexTextures", "map", "mapEncoding", "matcap", "matcapEncoding", "envMap", "envMapMode", "envMapEncoding", "lightMap", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "objectSpaceNormalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "vertexTangents", "fog", "useFog", "fogExp", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "shadowMapEnabled", "shadowMapType", "toneMapping", 'physicallyCorrectLights', "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering" ]; function allocateBones( object ) { var skeleton = object.skeleton; var bones = skeleton.bones; if ( capabilities.floatVertexTextures ) { return 1024; } else { // default for when object is not specified // ( for example when prebuilding shader to be used with multiple objects ) // // - leave some extra space for other uniforms // - limit here is ANGLE's 254 max uniform vectors // (up to 54 should be safe) var nVertexUniforms = capabilities.maxVertexUniforms; var nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 ); var maxBones = Math.min( nVertexMatrices, bones.length ); if ( maxBones < bones.length ) { console.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' ); return 0; } return maxBones; } } function getTextureEncodingFromMap( map, gammaOverrideLinear ) { var encoding; if ( ! map ) { encoding = LinearEncoding; } else if ( map.isTexture ) { encoding = map.encoding; } else if ( map.isWebGLRenderTarget ) { console.warn( "THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead." ); encoding = map.texture.encoding; } // add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point. if ( encoding === LinearEncoding && gammaOverrideLinear ) { encoding = GammaEncoding; } return encoding; } this.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) { var shaderID = shaderIDs[ material.type ]; // heuristics to create shader parameters according to lights in the scene // (not to blow over maxLights budget) var maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0; var precision = capabilities.precision; if ( material.precision !== null ) { precision = capabilities.getMaxPrecision( material.precision ); if ( precision !== material.precision ) { console.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' ); } } var currentRenderTarget = renderer.getRenderTarget(); var parameters = { shaderID: shaderID, precision: precision, supportsVertexTextures: capabilities.vertexTextures, outputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ), map: !! material.map, mapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ), matcap: !! material.matcap, matcapEncoding: getTextureEncodingFromMap( material.matcap, renderer.gammaInput ), envMap: !! material.envMap, envMapMode: material.envMap && material.envMap.mapping, envMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ), envMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ), lightMap: !! material.lightMap, aoMap: !! material.aoMap, emissiveMap: !! material.emissiveMap, emissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ), bumpMap: !! material.bumpMap, normalMap: !! material.normalMap, objectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap, displacementMap: !! material.displacementMap, roughnessMap: !! material.roughnessMap, metalnessMap: !! material.metalnessMap, specularMap: !! material.specularMap, alphaMap: !! material.alphaMap, gradientMap: !! material.gradientMap, combine: material.combine, vertexTangents: ( material.normalMap && material.vertexTangents ), vertexColors: material.vertexColors, fog: !! fog, useFog: material.fog, fogExp: ( fog && fog.isFogExp2 ), flatShading: material.flatShading, sizeAttenuation: material.sizeAttenuation, logarithmicDepthBuffer: capabilities.logarithmicDepthBuffer, skinning: material.skinning && maxBones > 0, maxBones: maxBones, useVertexTexture: capabilities.floatVertexTextures, morphTargets: material.morphTargets, morphNormals: material.morphNormals, maxMorphTargets: renderer.maxMorphTargets, maxMorphNormals: renderer.maxMorphNormals, numDirLights: lights.directional.length, numPointLights: lights.point.length, numSpotLights: lights.spot.length, numRectAreaLights: lights.rectArea.length, numHemiLights: lights.hemi.length, numClippingPlanes: nClipPlanes, numClipIntersection: nClipIntersection, dithering: material.dithering, shadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0, shadowMapType: renderer.shadowMap.type, toneMapping: renderer.toneMapping, physicallyCorrectLights: renderer.physicallyCorrectLights, premultipliedAlpha: material.premultipliedAlpha, alphaTest: material.alphaTest, doubleSided: material.side === DoubleSide, flipSided: material.side === BackSide, depthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false }; return parameters; }; this.getProgramCode = function ( material, parameters ) { var array = []; if ( parameters.shaderID ) { array.push( parameters.shaderID ); } else { array.push( material.fragmentShader ); array.push( material.vertexShader ); } if ( material.defines !== undefined ) { for ( var name in material.defines ) { array.push( name ); array.push( material.defines[ name ] ); } } for ( var i = 0; i < parameterNames.length; i ++ ) { array.push( parameters[ parameterNames[ i ] ] ); } array.push( material.onBeforeCompile.toString() ); array.push( renderer.gammaOutput ); array.push( renderer.gammaFactor ); return array.join(); }; this.acquireProgram = function ( material, shader, parameters, code ) { var program; // Check if code has been already compiled for ( var p = 0, pl = programs.length; p < pl; p ++ ) { var programInfo = programs[ p ]; if ( programInfo.code === code ) { program = programInfo; ++ program.usedTimes; break; } } if ( program === undefined ) { program = new WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities ); programs.push( program ); } return program; }; this.releaseProgram = function ( program ) { if ( -- program.usedTimes === 0 ) { // Remove from unordered set var i = programs.indexOf( program ); programs[ i ] = programs[ programs.length - 1 ]; programs.pop(); // Free WebGL resources program.destroy(); } }; // Exposed for resource monitoring & error feedback via renderer.info: this.programs = programs; } /** * @author fordacious / fordacious.github.io */ function WebGLProperties() { var properties = new WeakMap(); function get( object ) { var map = properties.get( object ); if ( map === undefined ) { map = {}; properties.set( object, map ); } return map; } function remove( object ) { properties.delete( object ); } function update( object, key, value ) { properties.get( object )[ key ] = value; } function dispose() { properties = new WeakMap(); } return { get: get, remove: remove, update: update, dispose: dispose }; } /** * @author mrdoob / http://mrdoob.com/ */ function painterSortStable( a, b ) { if ( a.groupOrder !== b.groupOrder ) { return a.groupOrder - b.groupOrder; } else if ( a.renderOrder !== b.renderOrder ) { return a.renderOrder - b.renderOrder; } else if ( a.program && b.program && a.program !== b.program ) { return a.program.id - b.program.id; } else if ( a.material.id !== b.material.id ) { return a.material.id - b.material.id; } else if ( a.z !== b.z ) { return a.z - b.z; } else { return a.id - b.id; } } function reversePainterSortStable( a, b ) { if ( a.groupOrder !== b.groupOrder ) { return a.groupOrder - b.groupOrder; } else if ( a.renderOrder !== b.renderOrder ) { return a.renderOrder - b.renderOrder; } else if ( a.z !== b.z ) { return b.z - a.z; } else { return a.id - b.id; } } function WebGLRenderList() { var renderItems = []; var renderItemsIndex = 0; var opaque = []; var transparent = []; function init() { renderItemsIndex = 0; opaque.length = 0; transparent.length = 0; } function getNextRenderItem( object, geometry, material, groupOrder, z, group ) { var renderItem = renderItems[ renderItemsIndex ]; if ( renderItem === undefined ) { renderItem = { id: object.id, object: object, geometry: geometry, material: material, program: material.program, groupOrder: groupOrder, renderOrder: object.renderOrder, z: z, group: group }; renderItems[ renderItemsIndex ] = renderItem; } else { renderItem.id = object.id; renderItem.object = object; renderItem.geometry = geometry; renderItem.material = material; renderItem.program = material.program; renderItem.groupOrder = groupOrder; renderItem.renderOrder = object.renderOrder; renderItem.z = z; renderItem.group = group; } renderItemsIndex ++; return renderItem; } function push( object, geometry, material, groupOrder, z, group ) { var renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group ); ( material.transparent === true ? transparent : opaque ).push( renderItem ); } function unshift( object, geometry, material, groupOrder, z, group ) { var renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group ); ( material.transparent === true ? transparent : opaque ).unshift( renderItem ); } function sort() { if ( opaque.length > 1 ) opaque.sort( painterSortStable ); if ( transparent.length > 1 ) transparent.sort( reversePainterSortStable ); } return { opaque: opaque, transparent: transparent, init: init, push: push, unshift: unshift, sort: sort }; } function WebGLRenderLists() { var lists = {}; function onSceneDispose( event ) { var scene = event.target; scene.removeEventListener( 'dispose', onSceneDispose ); delete lists[ scene.id ]; } function get( scene, camera ) { var cameras = lists[ scene.id ]; var list; if ( cameras === undefined ) { list = new WebGLRenderList(); lists[ scene.id ] = {}; lists[ scene.id ][ camera.id ] = list; scene.addEventListener( 'dispose', onSceneDispose ); } else { list = cameras[ camera.id ]; if ( list === undefined ) { list = new WebGLRenderList(); cameras[ camera.id ] = list; } } return list; } function dispose() { lists = {}; } return { get: get, dispose: dispose }; } /** * @author mrdoob / http://mrdoob.com/ */ function UniformsCache() { var lights = {}; return { get: function ( light ) { if ( lights[ light.id ] !== undefined ) { return lights[ light.id ]; } var uniforms; switch ( light.type ) { case 'DirectionalLight': uniforms = { direction: new Vector3(), color: new Color(), shadow: false, shadowBias: 0, shadowRadius: 1, shadowMapSize: new Vector2() }; break; case 'SpotLight': uniforms = { position: new Vector3(), direction: new Vector3(), color: new Color(), distance: 0, coneCos: 0, penumbraCos: 0, decay: 0, shadow: false, shadowBias: 0, shadowRadius: 1, shadowMapSize: new Vector2() }; break; case 'PointLight': uniforms = { position: new Vector3(), color: new Color(), distance: 0, decay: 0, shadow: false, shadowBias: 0, shadowRadius: 1, shadowMapSize: new Vector2(), shadowCameraNear: 1, shadowCameraFar: 1000 }; break; case 'HemisphereLight': uniforms = { direction: new Vector3(), skyColor: new Color(), groundColor: new Color() }; break; case 'RectAreaLight': uniforms = { color: new Color(), position: new Vector3(), halfWidth: new Vector3(), halfHeight: new Vector3() // TODO (abelnation): set RectAreaLight shadow uniforms }; break; } lights[ light.id ] = uniforms; return uniforms; } }; } var count = 0; function WebGLLights() { var cache = new UniformsCache(); var state = { id: count ++, hash: { stateID: - 1, directionalLength: - 1, pointLength: - 1, spotLength: - 1, rectAreaLength: - 1, hemiLength: - 1, shadowsLength: - 1 }, ambient: [ 0, 0, 0 ], directional: [], directionalShadowMap: [], directionalShadowMatrix: [], spot: [], spotShadowMap: [], spotShadowMatrix: [], rectArea: [], point: [], pointShadowMap: [], pointShadowMatrix: [], hemi: [] }; var vector3 = new Vector3(); var matrix4 = new Matrix4(); var matrix42 = new Matrix4(); function setup( lights, shadows, camera ) { var r = 0, g = 0, b = 0; var directionalLength = 0; var pointLength = 0; var spotLength = 0; var rectAreaLength = 0; var hemiLength = 0; var viewMatrix = camera.matrixWorldInverse; for ( var i = 0, l = lights.length; i < l; i ++ ) { var light = lights[ i ]; var color = light.color; var intensity = light.intensity; var distance = light.distance; var shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null; if ( light.isAmbientLight ) { r += color.r * intensity; g += color.g * intensity; b += color.b * intensity; } else if ( light.isDirectionalLight ) { var uniforms = cache.get( light ); uniforms.color.copy( light.color ).multiplyScalar( light.intensity ); uniforms.direction.setFromMatrixPosition( light.matrixWorld ); vector3.setFromMatrixPosition( light.target.matrixWorld ); uniforms.direction.sub( vector3 ); uniforms.direction.transformDirection( viewMatrix ); uniforms.shadow = light.castShadow; if ( light.castShadow ) { var shadow = light.shadow; uniforms.shadowBias = shadow.bias; uniforms.shadowRadius = shadow.radius; uniforms.shadowMapSize = shadow.mapSize; } state.directionalShadowMap[ directionalLength ] = shadowMap; state.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix; state.directional[ directionalLength ] = uniforms; directionalLength ++; } else if ( light.isSpotLight ) { var uniforms = cache.get( light ); uniforms.position.setFromMatrixPosition( light.matrixWorld ); uniforms.position.applyMatrix4( viewMatrix ); uniforms.color.copy( color ).multiplyScalar( intensity ); uniforms.distance = distance; uniforms.direction.setFromMatrixPosition( light.matrixWorld ); vector3.setFromMatrixPosition( light.target.matrixWorld ); uniforms.direction.sub( vector3 ); uniforms.direction.transformDirection( viewMatrix ); uniforms.coneCos = Math.cos( light.angle ); uniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) ); uniforms.decay = light.decay; uniforms.shadow = light.castShadow; if ( light.castShadow ) { var shadow = light.shadow; uniforms.shadowBias = shadow.bias; uniforms.shadowRadius = shadow.radius; uniforms.shadowMapSize = shadow.mapSize; } state.spotShadowMap[ spotLength ] = shadowMap; state.spotShadowMatrix[ spotLength ] = light.shadow.matrix; state.spot[ spotLength ] = uniforms; spotLength ++; } else if ( light.isRectAreaLight ) { var uniforms = cache.get( light ); // (a) intensity is the total visible light emitted //uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) ); // (b) intensity is the brightness of the light uniforms.color.copy( color ).multiplyScalar( intensity ); uniforms.position.setFromMatrixPosition( light.matrixWorld ); uniforms.position.applyMatrix4( viewMatrix ); // extract local rotation of light to derive width/height half vectors matrix42.identity(); matrix4.copy( light.matrixWorld ); matrix4.premultiply( viewMatrix ); matrix42.extractRotation( matrix4 ); uniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 ); uniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 ); uniforms.halfWidth.applyMatrix4( matrix42 ); uniforms.halfHeight.applyMatrix4( matrix42 ); // TODO (abelnation): RectAreaLight distance? // uniforms.distance = distance; state.rectArea[ rectAreaLength ] = uniforms; rectAreaLength ++; } else if ( light.isPointLight ) { var uniforms = cache.get( light ); uniforms.position.setFromMatrixPosition( light.matrixWorld ); uniforms.position.applyMatrix4( viewMatrix ); uniforms.color.copy( light.color ).multiplyScalar( light.intensity ); uniforms.distance = light.distance; uniforms.decay = light.decay; uniforms.shadow = light.castShadow; if ( light.castShadow ) { var shadow = light.shadow; uniforms.shadowBias = shadow.bias; uniforms.shadowRadius = shadow.radius; uniforms.shadowMapSize = shadow.mapSize; uniforms.shadowCameraNear = shadow.camera.near; uniforms.shadowCameraFar = shadow.camera.far; } state.pointShadowMap[ pointLength ] = shadowMap; state.pointShadowMatrix[ pointLength ] = light.shadow.matrix; state.point[ pointLength ] = uniforms; pointLength ++; } else if ( light.isHemisphereLight ) { var uniforms = cache.get( light ); uniforms.direction.setFromMatrixPosition( light.matrixWorld ); uniforms.direction.transformDirection( viewMatrix ); uniforms.direction.normalize(); uniforms.skyColor.copy( light.color ).multiplyScalar( intensity ); uniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity ); state.hemi[ hemiLength ] = uniforms; hemiLength ++; } } state.ambient[ 0 ] = r; state.ambient[ 1 ] = g; state.ambient[ 2 ] = b; state.directional.length = directionalLength; state.spot.length = spotLength; state.rectArea.length = rectAreaLength; state.point.length = pointLength; state.hemi.length = hemiLength; state.hash.stateID = state.id; state.hash.directionalLength = directionalLength; state.hash.pointLength = pointLength; state.hash.spotLength = spotLength; state.hash.rectAreaLength = rectAreaLength; state.hash.hemiLength = hemiLength; state.hash.shadowsLength = shadows.length; } return { setup: setup, state: state }; } /** * @author Mugen87 / https://github.com/Mugen87 */ function WebGLRenderState() { var lights = new WebGLLights(); var lightsArray = []; var shadowsArray = []; function init() { lightsArray.length = 0; shadowsArray.length = 0; } function pushLight( light ) { lightsArray.push( light ); } function pushShadow( shadowLight ) { shadowsArray.push( shadowLight ); } function setupLights( camera ) { lights.setup( lightsArray, shadowsArray, camera ); } var state = { lightsArray: lightsArray, shadowsArray: shadowsArray, lights: lights }; return { init: init, state: state, setupLights: setupLights, pushLight: pushLight, pushShadow: pushShadow }; } function WebGLRenderStates() { var renderStates = {}; function onSceneDispose( event ) { var scene = event.target; scene.removeEventListener( 'dispose', onSceneDispose ); delete renderStates[ scene.id ]; } function get( scene, camera ) { var renderState; if ( renderStates[ scene.id ] === undefined ) { renderState = new WebGLRenderState(); renderStates[ scene.id ] = {}; renderStates[ scene.id ][ camera.id ] = renderState; scene.addEventListener( 'dispose', onSceneDispose ); } else { if ( renderStates[ scene.id ][ camera.id ] === undefined ) { renderState = new WebGLRenderState(); renderStates[ scene.id ][ camera.id ] = renderState; } else { renderState = renderStates[ scene.id ][ camera.id ]; } } return renderState; } function dispose() { renderStates = {}; } return { get: get, dispose: dispose }; } /** * @author mrdoob / http://mrdoob.com/ * @author alteredq / http://alteredqualia.com/ * @author bhouston / https://clara.io * @author WestLangley / http://github.com/WestLangley * * parameters = { * * opacity: <float>, * * map: new THREE.Texture( <Image> ), * * alphaMap: new THREE.Texture( <Image> ), * * displacementMap: new THREE.Texture( <Image> ), * displacementScale: <float>, * displacementBias: <float>, * * wireframe: <boolean>, * wireframeLinewidth: <float> * } */ function MeshDepthMaterial( parameters ) { Material.call( this ); this.type = 'MeshDepthMaterial'; this.depthPacking = BasicDepthPacking; this.skinning = false; this.morphTargets = false; this.map = null; this.alphaMap = null; this.displacementMap = null; this.displacementScale = 1; this.displacementBias = 0; this.wireframe = false; this.wireframeLinewidth = 1; this.fog = false; this.lights = false; this.setValues( parameters ); } MeshDepthMaterial.prototype = Object.create( Material.prototype ); MeshDepthMaterial.prototype.constructor = MeshDepthMaterial; MeshDepthMaterial.prototype.isMeshDepthMaterial = true; MeshDepthMaterial.prototype.copy = function ( source ) { Material.prototype.copy.call( this, source ); this.depthPacking = source.depthPacking; this.skinning = source.skinning; this.morphTargets = source.morphTargets; this.map = source.map; this.alphaMap = source.alphaMap; this.displacementMap = source.displacementMap; this.displacementScale = source.displacementScale; this.displacementBias = source.displacementBias; this.wireframe = source.wireframe; this.wireframeLinewidth = source.wireframeLinewidth; return this; }; /** * @author WestLangley / http://github.com/WestLangley * * parameters = { * * referencePosition: <float>, * nearDistance: <float>, * farDistance: <float>, * * skinning: <bool>, * morphTargets: <bool>, * * map: new THREE.Texture( <Image> ), * * alphaMap: new THREE.Texture( <Image> ), * * displacementMap: new THREE.Texture( <Image> ), * displacementScale: <float>, * displacementBias: <float> * * } */ function MeshDistanceMaterial( parameters ) { Material.call( this ); this.type = 'MeshDistanceMaterial'; this.referencePosition = new Vector3(); this.nearDistance = 1; this.farDistance = 1000; this.skinning = false; this.morphTargets = false; this.map = null; this.alphaMap = null; this.displacementMap = null; this.displacementScale = 1; this.displacementBias = 0; this.fog = false; this.lights = false; this.setValues( parameters ); } MeshDistanceMaterial.prototype = Object.create( Material.prototype ); MeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial; MeshDistanceMaterial.prototype.isMeshDistanceMaterial = true; MeshDistanceMaterial.prototype.copy = function ( source ) { Material.prototype.copy.call( this, source ); this.referencePosition.copy( source.referencePosition ); this.nearDistance = source.nearDistance; this.farDistance = source.farDistance; this.skinning = source.skinning; this.morphTargets = source.morphTargets; this.map = source.map; this.alphaMap = source.alphaMap; this.displacementMap = source.displacementMap; this.displacementScale = source.displacementScale; this.displacementBias = source.displacementBias; return this; }; /** * @author alteredq / http://alteredqualia.com/ * @author mrdoob / http://mrdoob.com/ */ function WebGLShadowMap( _renderer, _objects, maxTextureSize ) { var _frustum = new Frustum(), _projScreenMatrix = new Matrix4(), _shadowMapSize = new Vector2(), _maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ), _lookTarget = new Vector3(), _lightPositionWorld = new Vector3(), _MorphingFlag = 1, _SkinningFlag = 2, _NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1, _depthMaterials = new Array( _NumberOfMaterialVariants ), _distanceMaterials = new Array( _NumberOfMaterialVariants ), _materialCache = {}; var shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide }; var cubeDirections = [ new Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ), new Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 ) ]; var cubeUps = [ new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ), new Vector3( 0, 0, - 1 ) ]; var cube2DViewPorts = [ new Vector4(), new Vector4(), new Vector4(), new Vector4(), new Vector4(), new Vector4() ]; // init for ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) { var useMorphing = ( i & _MorphingFlag ) !== 0; var useSkinning = ( i & _SkinningFlag ) !== 0; var depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking, morphTargets: useMorphing, skinning: useSkinning } ); _depthMaterials[ i ] = depthMaterial; // var distanceMaterial = new MeshDistanceMaterial( { morphTargets: useMorphing, skinning: useSkinning } ); _distanceMaterials[ i ] = distanceMaterial; } // var scope = this; this.enabled = false; this.autoUpdate = true; this.needsUpdate = false; this.type = PCFShadowMap; this.render = function ( lights, scene, camera ) { if ( scope.enabled === false ) return; if ( scope.autoUpdate === false && scope.needsUpdate === false ) return; if ( lights.length === 0 ) return; var currentRenderTarget = _renderer.getRenderTarget(); var _state = _renderer.state; // Set GL state for depth map. _state.setBlending( NoBlending ); _state.buffers.color.setClear( 1, 1, 1, 1 ); _state.buffers.depth.setTest( true ); _state.setScissorTest( false ); // render depth map var faceCount; for ( var i = 0, il = lights.length; i < il; i ++ ) { var light = lights[ i ]; var shadow = light.shadow; var isPointLight = light && light.isPointLight; if ( shadow === undefined ) { console.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' ); continue; } var shadowCamera = shadow.camera; _shadowMapSize.copy( shadow.mapSize ); _shadowMapSize.min( _maxShadowMapSize ); if ( isPointLight ) { var vpWidth = _shadowMapSize.x; var vpHeight = _shadowMapSize.y; // These viewports map a cube-map onto a 2D texture with the // following orientation: // // xzXZ // y Y // // X - Positive x direction // x - Negative x direction // Y - Positive y direction // y - Negative y direction // Z - Positive z direction // z - Negative z direction // positive X cube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight ); // negative X cube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight ); // positive Z cube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight ); // negative Z cube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight ); // positive Y cube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight ); // negative Y cube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight ); _shadowMapSize.x *= 4.0; _shadowMapSize.y *= 2.0; } if ( shadow.map === null ) { var pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat }; shadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars ); shadow.map.texture.name = light.name + ".shadowMap"; shadowCamera.updateProjectionMatrix(); } if ( shadow.isSpotLightShadow ) { shadow.update( light ); } var shadowMap = shadow.map; var shadowMatrix = shadow.matrix; _lightPositionWorld.setFromMatrixPosition( light.matrixWorld ); shadowCamera.position.copy( _lightPositionWorld ); if ( isPointLight ) { faceCount = 6; // for point lights we set the shadow matrix to be a translation-only matrix // equal to inverse of the light's position shadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z ); } else { faceCount = 1; _lookTarget.setFromMatrixPosition( light.target.matrixWorld ); shadowCamera.lookAt( _lookTarget ); shadowCamera.updateMatrixWorld(); // compute shadow matrix shadowMatrix.set( 0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0 ); shadowMatrix.multiply( shadowCamera.projectionMatrix ); shadowMatrix.multiply( shadowCamera.matrixWorldInverse ); } _renderer.setRenderTarget( shadowMap ); _renderer.clear(); // render shadow map for each cube face (if omni-directional) or // run a single pass if not for ( var face = 0; face < faceCount; face ++ ) { if ( isPointLight ) { _lookTarget.copy( shadowCamera.position ); _lookTarget.add( cubeDirections[ face ] ); shadowCamera.up.copy( cubeUps[ face ] ); shadowCamera.lookAt( _lookTarget ); shadowCamera.updateMatrixWorld(); var vpDimensions = cube2DViewPorts[ face ]; _state.viewport( vpDimensions ); } // update camera matrices and frustum _projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse ); _frustum.setFromMatrix( _projScreenMatrix ); // set object matrices & frustum culling renderObject( scene, camera, shadowCamera, isPointLight ); } } scope.needsUpdate = false; _renderer.setRenderTarget( currentRenderTarget ); }; function getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) { var geometry = object.geometry; var result = null; var materialVariants = _depthMaterials; var customMaterial = object.customDepthMaterial; if ( isPointLight ) { materialVariants = _distanceMaterials; customMaterial = object.customDistanceMaterial; } if ( ! customMaterial ) { var useMorphing = false; if ( material.morphTargets ) { if ( geometry && geometry.isBufferGeometry ) { useMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0; } else if ( geometry && geometry.isGeometry ) { useMorphing = geometry.morphTargets && geometry.morphTargets.length > 0; } } if ( object.isSkinnedMesh && material.skinning === false ) { console.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object ); } var useSkinning = object.isSkinnedMesh && material.skinning; var variantIndex = 0; if ( useMorphing ) variantIndex |= _MorphingFlag; if ( useSkinning ) variantIndex |= _SkinningFlag; result = materialVariants[ variantIndex ]; } else { result = customMaterial; } if ( _renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0 ) { // in this case we need a unique material instance reflecting the // appropriate state var keyA = result.uuid, keyB = material.uuid; var materialsForVariant = _materialCache[ keyA ]; if ( materialsForVariant === undefined ) { materialsForVariant = {}; _materialCache[ keyA ] = materialsForVariant; } var cachedMaterial = materialsForVariant[ keyB ]; if ( cachedMaterial === undefined ) { cachedMaterial = result.clone(); materialsForVariant[ keyB ] = cachedMaterial; } result = cachedMaterial; } result.visible = material.visible; result.wireframe = material.wireframe; result.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ]; result.clipShadows = material.clipShadows; result.clippingPlanes = material.clippingPlanes; result.clipIntersection = material.clipIntersection; result.wireframeLinewidth = material.wireframeLinewidth; result.linewidth = material.linewidth; if ( isPointLight && result.isMeshDistanceMaterial ) { result.referencePosition.copy( lightPositionWorld ); result.nearDistance = shadowCameraNear; result.farDistance = shadowCameraFar; } return result; } function renderObject( object, camera, shadowCamera, isPointLight ) { if ( object.visible === false ) return; var visible = object.layers.test( camera.layers ); if ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) { if ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) { object.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld ); var geometry = _objects.update( object ); var material = object.material; if ( Array.isArray( material ) ) { var groups = geometry.groups; for ( var k = 0, kl = groups.length; k < kl; k ++ ) { var group = groups[ k ]; var groupMaterial = material[ group.materialIndex ]; if ( groupMaterial && groupMaterial.visible ) { var depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far ); _renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group ); } } } else if ( material.visible ) { var depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far ); _renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null ); } } } var children = object.children; for ( var i = 0, l = children.length; i < l; i ++ ) { renderObject( children[ i ], camera, shadowCamera, isPointLight ); } } } /** * @author mrdoob / http://mrdoob.com/ */ function WebGLState( gl, extensions, utils, capabilities ) { function ColorBuffer() { var locked = false; var color = new Vector4(); var currentColorMask = null; var currentColorClear = new Vector4( 0, 0, 0, 0 ); return { setMask: function ( colorMask ) { if ( currentColorMask !== colorMask && ! locked ) { gl.colorMask( colorMask, colorMask, colorMask, colorMask ); currentColorMask = colorMask; } }, setLocked: function ( lock ) { locked = lock; }, setClear: function ( r, g, b, a, premultipliedAlpha ) { if ( premultipliedAlpha === true ) { r *= a; g *= a; b *= a; } color.set( r, g, b, a ); if ( currentColorClear.equals( color ) === false ) { gl.clearColor( r, g, b, a ); currentColorClear.copy( color ); } }, reset: function () { locked = false; currentColorMask = null; currentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state } }; } function DepthBuffer() { var locked = false; var currentDepthMask = null; var currentDepthFunc = null; var currentDepthClear = null; return { setTest: function ( depthTest ) { if ( depthTest ) { enable( 2929 ); } else { disable( 2929 ); } }, setMask: function ( depthMask ) { if ( currentDepthMask !== depthMask && ! locked ) { gl.depthMask( depthMask ); currentDepthMask = depthMask; } }, setFunc: function ( depthFunc ) { if ( currentDepthFunc !== depthFunc ) { if ( depthFunc ) { switch ( depthFunc ) { case NeverDepth: gl.depthFunc( 512 ); break; case AlwaysDepth: gl.depthFunc( 519 ); break; case LessDepth: gl.depthFunc( 513 ); break; case LessEqualDepth: gl.depthFunc( 515 ); break; case EqualDepth: gl.depthFunc( 514 ); break; case GreaterEqualDepth: gl.depthFunc( 518 ); break; case GreaterDepth: gl.depthFunc( 516 ); break; case NotEqualDepth: gl.depthFunc( 517 ); break; default: gl.depthFunc( 515 ); } } else { gl.depthFunc( 515 ); } currentDepthFunc = depthFunc; } }, setLocked: function ( lock ) { locked = lock; }, setClear: function ( depth ) { if ( currentDepthClear !== depth ) { gl.clearDepth( depth ); currentDepthClear = depth; } }, reset: function () { locked = false; currentDepthMask = null; currentDepthFunc = null; currentDepthClear = null; } }; } function StencilBuffer() { var locked = false; var currentStencilMask = null; var currentStencilFunc = null; var currentStencilRef = null; var currentStencilFuncMask = null; var currentStencilFail = null; var currentStencilZFail = null; var currentStencilZPass = null; var currentStencilClear = null; return { setTest: function ( stencilTest ) { if ( stencilTest ) { enable( 2960 ); } else { disable( 2960 ); } }, setMask: function ( stencilMask ) { if ( currentStencilMask !== stencilMask && ! locked ) { gl.stencilMask( stencilMask ); currentStencilMask = stencilMask; } }, setFunc: function ( stencilFunc, stencilRef, stencilMask ) { if ( currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask ) { gl.stencilFunc( stencilFunc, stencilRef, stencilMask ); currentStencilFunc = stencilFunc; currentStencilRef = stencilRef; currentStencilFuncMask = stencilMask; } }, setOp: function ( stencilFail, stencilZFail, stencilZPass ) { if ( currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass ) { gl.stencilOp( stencilFail, stencilZFail, stencilZPass ); currentStencilFail = stencilFail; currentStencilZFail = stencilZFail; currentStencilZPass = stencilZPass; } }, setLocked: function ( lock ) { locked = lock; }, setClear: function ( stencil ) { if ( currentStencilClear !== stencil ) { gl.clearStencil( stencil ); currentStencilClear = stencil; } }, reset: function () { locked = false; currentStencilMask = null; currentStencilFunc = null; currentStencilRef = null; currentStencilFuncMask = null; currentStencilFail = null; currentStencilZFail = null; currentStencilZPass = null; currentStencilClear = null; } }; } // var colorBuffer = new ColorBuffer(); var depthBuffer = new DepthBuffer(); var stencilBuffer = new StencilBuffer(); var maxVertexAttributes = gl.getParameter( 34921 ); var newAttributes = new Uint8Array( maxVertexAttributes ); var enabledAttributes = new Uint8Array( maxVertexAttributes ); var attributeDivisors = new Uint8Array( maxVertexAttributes ); var enabledCapabilities = {}; var compressedTextureFormats = null; var currentProgram = null; var currentBlendingEnabled = null; var currentBlending = null; var currentBlendEquation = null; var currentBlendSrc = null; var currentBlendDst = null; var currentBlendEquationAlpha = null; var currentBlendSrcAlpha = null; var currentBlendDstAlpha = null; var currentPremultipledAlpha = false; var currentFlipSided = null; var currentCullFace = null; var currentLineWidth = null; var currentPolygonOffsetFactor = null; var currentPolygonOffsetUnits = null; var maxTextures = gl.getParameter( 35661 ); var lineWidthAvailable = false; var version = 0; var glVersion = gl.getParameter( 7938 ); if ( glVersion.indexOf( 'WebGL' ) !== - 1 ) { version = parseFloat( /^WebGL\ ([0-9])/.exec( glVersion )[ 1 ] ); lineWidthAvailable = ( version >= 1.0 ); } else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) { version = parseFloat( /^OpenGL\ ES\ ([0-9])/.exec( glVersion )[ 1 ] ); lineWidthAvailable = ( version >= 2.0 ); } var currentTextureSlot = null; var currentBoundTextures = {}; var currentScissor = new Vector4(); var currentViewport = new Vector4(); function createTexture( type, target, count ) { var data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4. var texture = gl.createTexture(); gl.bindTexture( type, texture ); gl.texParameteri( type, 10241, 9728 ); gl.texParameteri( type, 10240, 9728 ); for ( var i = 0; i < count; i ++ ) { gl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data ); } return texture; } var emptyTextures = {}; emptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 ); emptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 ); // init colorBuffer.setClear( 0, 0, 0, 1 ); depthBuffer.setClear( 1 ); stencilBuffer.setClear( 0 ); enable( 2929 ); depthBuffer.setFunc( LessEqualDepth ); setFlipSided( false ); setCullFace( CullFaceBack ); enable( 2884 ); setBlending( NoBlending ); // function initAttributes() { for ( var i = 0, l = newAttributes.length; i < l; i ++ ) { newAttributes[ i ] = 0; } } function enableAttribute( attribute ) { enableAttributeAndDivisor( attribute, 0 ); } function enableAttributeAndDivisor( attribute, meshPerAttribute ) { newAttributes[ attribute ] = 1; if ( enabledAttributes[ attribute ] === 0 ) { gl.enableVertexAttribArray( attribute ); enabledAttributes[ attribute ] = 1; } if ( attributeDivisors[ attribute ] !== meshPerAttribute ) { var extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' ); extension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute ); attributeDivisors[ attribute ] = meshPerAttribute; } } function disableUnusedAttributes() { for ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) { if ( enabledAttributes[ i ] !== newAttributes[ i ] ) { gl.disableVertexAttribArray( i ); enabledAttributes[ i ] = 0; } } } function enable( id ) { if ( enabledCapabilities[ id ] !== true ) { gl.enable( id ); enabledCapabilities[ id ] = true; } } function disable( id ) { if ( enabledCapabilities[ id ] !== false ) { gl.disable( id ); enabledCapabilities[ id ] = false; } } function getCompressedTextureFormats() { if ( compressedTextureFormats === null ) { compressedTextureFormats = []; if ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) || extensions.get( 'WEBGL_compressed_texture_s3tc' ) || extensions.get( 'WEBGL_compressed_texture_etc1' ) || extensions.get( 'WEBGL_compressed_texture_astc' ) ) { var formats = gl.getParameter( 34467 ); for ( var i = 0; i < formats.length; i ++ ) { compressedTextureFormats.push( formats[ i ] ); } } } return compressedTextureFormats; } function useProgram( program ) { if ( currentProgram !== program ) { gl.useProgram( program ); currentProgram = program; return true; } return false; } function setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) { if ( blending === NoBlending ) { if ( currentBlendingEnabled ) { disable( 3042 ); currentBlendingEnabled = false; } return; } if ( ! currentBlendingEnabled ) { enable( 3042 ); currentBlendingEnabled = true; } if ( blending !== CustomBlending ) { if ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) { if ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) { gl.blendEquation( 32774 ); currentBlendEquation = AddEquation; currentBlendEquationAlpha = AddEquation; } if ( premultipliedAlpha ) { switch ( blending ) { case NormalBlending: gl.blendFuncSeparate( 1, 771, 1, 771 ); break; case AdditiveBlending: gl.blendFunc( 1, 1 ); break; case SubtractiveBlending: gl.blendFuncSeparate( 0, 0, 769, 771 ); break; case MultiplyBlending: gl.blendFuncSeparate( 0, 768, 0, 770 ); break; default: console.error( 'THREE.WebGLState: Invalid blending: ', blending ); break; } } else { switch ( blending ) { case NormalBlending: gl.blendFuncSeparate( 770, 771, 1, 771 ); break; case AdditiveBlending: gl.blendFunc( 770, 1 ); break; case SubtractiveBlending: gl.blendFunc( 0, 769 ); break; case MultiplyBlending: gl.blendFunc( 0, 768 ); break; default: console.error( 'THREE.WebGLState: Invalid blending: ', blending ); break; } } currentBlendSrc = null; currentBlendDst = null; currentBlendSrcAlpha = null; currentBlendDstAlpha = null; currentBlending = blending; currentPremultipledAlpha = premultipliedAlpha; } return; } // custom blending blendEquationAlpha = blendEquationAlpha || blendEquation; blendSrcAlpha = blendSrcAlpha || blendSrc; blendDstAlpha = blendDstAlpha || blendDst; if ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) { gl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) ); currentBlendEquation = blendEquation; currentBlendEquationAlpha = blendEquationAlpha; } if ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) { gl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) ); currentBlendSrc = blendSrc; currentBlendDst = blendDst; currentBlendSrcAlpha = blendSrcAlpha; currentBlendDstAlpha = blendDstAlpha; } currentBlending = blending; currentPremultipledAlpha = null; } function setMaterial( material, frontFaceCW ) { material.side === DoubleSide ? disable( 2884 ) : enable( 2884 ); var flipSided = ( material.side === BackSide ); if ( frontFaceCW ) flipSided = ! flipSided; setFlipSided( flipSided ); ( material.blending === NormalBlending && material.transparent === false ) ? setBlending( NoBlending ) : setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha ); depthBuffer.setFunc( material.depthFunc ); depthBuffer.setTest( material.depthTest ); depthBuffer.setMask( material.depthWrite ); colorBuffer.setMask( material.colorWrite ); setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits ); } // function setFlipSided( flipSided ) { if ( currentFlipSided !== flipSided ) { if ( flipSided ) { gl.frontFace( 2304 ); } else { gl.frontFace( 2305 ); } currentFlipSided = flipSided; } } function setCullFace( cullFace ) { if ( cullFace !== CullFaceNone ) { enable( 2884 ); if ( cullFace !== currentCullFace ) { if ( cullFace === CullFaceBack ) { gl.cullFace( 1029 ); } else if ( cullFace === CullFaceFront ) { gl.cullFace( 1028 ); } else { gl.cullFace( 1032 ); } } } else { disable( 2884 ); } currentCullFace = cullFace; } function setLineWidth( width ) { if ( width !== currentLineWidth ) { if ( lineWidthAvailable ) gl.lineWidth( width ); currentLineWidth = width; } } function setPolygonOffset( polygonOffset, factor, units ) { if ( polygonOffset ) { enable( 32823 ); if ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) { gl.polygonOffset( factor, units ); currentPolygonOffsetFactor = factor; currentPolygonOffsetUnits = units; } } else { disable( 32823 ); } } function setScissorTest( scissorTest ) { if ( scissorTest ) { enable( 3089 ); } else { disable( 3089 ); } } // texture function activeTexture( webglSlot ) { if ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1; if ( currentTextureSlot !== webglSlot ) { gl.activeTexture( webglSlot ); currentTextureSlot = webglSlot; } } function bindTexture( webglType, webglTexture ) { if ( currentTextureSlot === null ) { activeTexture(); } var boundTexture = currentBoundTextures[ currentTextureSlot ]; if ( boundTexture === undefined ) { boundTexture = { type: undefined, texture: undefined }; currentBoundTextures[ currentTextureSlot ] = boundTexture; } if ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) { gl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] ); boundTexture.type = webglType; boundTexture.texture = webglTexture; } } function compressedTexImage2D() { try { gl.compressedTexImage2D.apply( gl, arguments ); } catch ( error ) { console.error( 'THREE.WebGLState:', error ); } } function texImage2D() { try { gl.texImage2D.apply( gl, arguments ); } catch ( error ) { console.error( 'THREE.WebGLState:', error ); } } function texImage3D() { try { gl.texImage3D.apply( gl, arguments ); } catch ( error ) { console.error( 'THREE.WebGLState:', error ); } } // function scissor( scissor ) { if ( currentScissor.equals( scissor ) === false ) { gl.scissor( scissor.x, scissor.y, scissor.z, scissor.w ); currentScissor.copy( scissor ); } } function viewport( viewport ) { if ( currentViewport.equals( viewport ) === false ) { gl.viewport( viewport.x, viewport.y, viewport.z, viewport.w ); currentViewport.copy( viewport ); } } // function reset() { for ( var i = 0; i < enabledAttributes.length; i ++ ) { if ( enabledAttributes[ i ] === 1 ) { gl.disableVertexAttribArray( i ); enabledAttributes[ i ] = 0; } } enabledCapabilities = {}; compressedTextureFormats = null; currentTextureSlot = null; currentBoundTextures = {}; currentProgram = null; currentBlending = null; currentFlipSided = null; currentCullFace = null; colorBuffer.reset(); depthBuffer.reset(); stencilBuffer.reset(); } return { buffers: { color: colorBuffer, depth: depthBuffer, stencil: stencilBuffer }, initAttributes: initAttributes, enableAttribute: enableAttribute, enableAttributeAndDivisor: enableAttributeAndDivisor, disableUnusedAttributes: disableUnusedAttributes, enable: enable, disable: disable, getCompressedTextureFormats: getCompressedTextureFormats, useProgram: useProgram, setBlending: setBlending, setMaterial: setMaterial, setFlipSided: setFlipSided, setCullFace: setCullFace, setLineWidth: setLineWidth, setPolygonOffset: setPolygonOffset, setScissorTest: setScissorTest, activeTexture: activeTexture, bindTexture: bindTexture, compressedTexImage2D: compressedTexImage2D, texImage2D: texImage2D, texImage3D: texImage3D, scissor: scissor, viewport: viewport, reset: reset }; } /** * @author mrdoob / http://mrdoob.com/ */ function WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) { var _videoTextures = {}; var _canvas; // var useOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'; function createCanvas( width, height ) { // Use OffscreenCanvas when available. Specially needed in web workers return useOffscreenCanvas ? new OffscreenCanvas( width, height ) : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ); } function resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) { var scale = 1; // handle case if texture exceeds max size if ( image.width > maxSize || image.height > maxSize ) { scale = maxSize / Math.max( image.width, image.height ); } // only perform resize if necessary if ( scale < 1 || needsPowerOfTwo === true ) { // only perform resize for certain image types if ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) || ( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) || ( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) { var floor = needsPowerOfTwo ? _Math.floorPowerOfTwo : Math.floor; var width = floor( scale * image.width ); var height = floor( scale * image.height ); if ( _canvas === undefined ) _canvas = createCanvas( width, height ); // cube textures can't reuse the same canvas var canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas; canvas.width = width; canvas.height = height; var context = canvas.getContext( '2d' ); context.drawImage( image, 0, 0, width, height ); console.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' ); return canvas; } else { if ( 'data' in image ) { console.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' ); } return image; } } return image; } function isPowerOfTwo( image ) { return _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height ); } function textureNeedsPowerOfTwo( texture ) { if ( capabilities.isWebGL2 ) return false; return ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) || ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ); } function textureNeedsGenerateMipmaps( texture, supportsMips ) { return texture.generateMipmaps && supportsMips && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter; } function generateMipmap( target, texture, width, height ) { _gl.generateMipmap( target ); var textureProperties = properties.get( texture ); // Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11 textureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E; } function getInternalFormat( glFormat, glType ) { if ( ! capabilities.isWebGL2 ) return glFormat; var internalFormat = glFormat; if ( glFormat === 6403 ) { if ( glType === 5126 ) internalFormat = 33326; if ( glType === 5131 ) internalFormat = 33325; if ( glType === 5121 ) internalFormat = 33321; } if ( glFormat === 6407 ) { if ( glType === 5126 ) internalFormat = 34837; if ( glType === 5131 ) internalFormat = 34843; if ( glType === 5121 ) internalFormat = 32849; } if ( glFormat === 6408 ) { if ( glType === 5126 ) internalFormat = 34836; if ( glType === 5131 ) internalFormat = 34842; if ( glType === 5121 ) internalFormat = 32856; } if ( internalFormat === 33325 || internalFormat === 33326 || internalFormat === 34842 || internalFormat === 34836 ) { extensions.get( 'EXT_color_buffer_float' ); } else if ( internalFormat === 34843 || internalFormat === 34837 ) { console.warn( 'THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead.' ); } return internalFormat; } // Fallback filters for non-power-of-2 textures function filterFallback( f ) { if ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) { return 9728; } return 9729; } // function onTextureDispose( event ) { var texture = event.target; texture.removeEventListener( 'dispose', onTextureDispose ); deallocateTexture( texture ); if ( texture.isVideoTexture ) { delete _videoTextures[ texture.id ]; } info.memory.textures --; } function onRenderTargetDispose( event ) { var renderTarget = event.target; renderTarget.removeEventListener( 'dispose', onRenderTargetDispose ); deallocateRenderTarget( renderTarget ); info.memory.textures --; } // function deallocateTexture( texture ) { var textureProperties = properties.get( texture ); if ( textureProperties.__webglInit === undefined ) return; _gl.deleteTexture( textureProperties.__webglTexture ); properties.remove( texture ); } function deallocateRenderTarget( renderTarget ) { var renderTargetProperties = properties.get( renderTarget ); var textureProperties = properties.get( renderTarget.texture ); if ( ! renderTarget ) return; if ( textureProperties.__webglTexture !== undefined ) { _gl.deleteTexture( textureProperties.__webglTexture ); } if ( renderTarget.depthTexture ) { renderTarget.depthTexture.dispose(); } if ( renderTarget.isWebGLRenderTargetCube ) { for ( var i = 0; i < 6; i ++ ) { _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] ); if ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] ); } } else { _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer ); if ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer ); } properties.remove( renderTarget.texture ); properties.remove( renderTarget ); } // function setTexture2D( texture, slot ) { var textureProperties = properties.get( texture ); if ( texture.isVideoTexture ) updateVideoTexture( texture ); if ( texture.version > 0 && textureProperties.__version !== texture.version ) { var image = texture.image; if ( image === undefined ) { console.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' ); } else if ( image.complete === false ) { console.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' ); } else { uploadTexture( textureProperties, texture, slot ); return; } } state.activeTexture( 33984 + slot ); state.bindTexture( 3553, textureProperties.__webglTexture ); } function setTexture2DArray( texture, slot ) { var textureProperties = properties.get( texture ); if ( texture.version > 0 && textureProperties.__version !== texture.version ) { uploadTexture( textureProperties, texture, slot ); return; } state.activeTexture( 33984 + slot ); state.bindTexture( 35866, textureProperties.__webglTexture ); } function setTexture3D( texture, slot ) { var textureProperties = properties.get( texture ); if ( texture.version > 0 && textureProperties.__version !== texture.version ) { uploadTexture( textureProperties, texture, slot ); return; } state.activeTexture( 33984 + slot ); state.bindTexture( 32879, textureProperties.__webglTexture ); } function setTextureCube( texture, slot ) { var textureProperties = properties.get( texture ); if ( texture.image.length === 6 ) { if ( texture.version > 0 && textureProperties.__version !== texture.version ) { initTexture( textureProperties, texture ); state.activeTexture( 33984 + slot ); state.bindTexture( 34067, textureProperties.__webglTexture ); _gl.pixelStorei( 37440, texture.flipY ); var isCompressed = ( texture && texture.isCompressedTexture ); var isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture ); var cubeImage = []; for ( var i = 0; i < 6; i ++ ) { if ( ! isCompressed && ! isDataTexture ) { cubeImage[ i ] = resizeImage( texture.image[ i ], false, true, capabilities.maxCubemapSize ); } else { cubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ]; } } var image = cubeImage[ 0 ], supportsMips = isPowerOfTwo( image ) || capabilities.isWebGL2, glFormat = utils.convert( texture.format ), glType = utils.convert( texture.type ), glInternalFormat = getInternalFormat( glFormat, glType ); setTextureParameters( 34067, texture, supportsMips ); for ( var i = 0; i < 6; i ++ ) { if ( ! isCompressed ) { if ( isDataTexture ) { state.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data ); } else { state.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] ); } } else { var mipmap, mipmaps = cubeImage[ i ].mipmaps; for ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) { mipmap = mipmaps[ j ]; if ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) { if ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) { state.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data ); } else { console.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' ); } } else { state.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data ); } } } } if ( ! isCompressed ) { textureProperties.__maxMipLevel = 0; } else { textureProperties.__maxMipLevel = mipmaps.length - 1; } if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) { // We assume images for cube map have the same size. generateMipmap( 34067, texture, image.width, image.height ); } textureProperties.__version = texture.version; if ( texture.onUpdate ) texture.onUpdate( texture ); } else { state.activeTexture( 33984 + slot ); state.bindTexture( 34067, textureProperties.__webglTexture ); } } } function setTextureCubeDynamic( texture, slot ) { state.activeTexture( 33984 + slot ); state.bindTexture( 34067, properties.get( texture ).__webglTexture ); } function setTextureParameters( textureType, texture, supportsMips ) { var extension; if ( supportsMips ) { _gl.texParameteri( textureType, 10242, utils.convert( texture.wrapS ) ); _gl.texParameteri( textureType, 10243, utils.convert( texture.wrapT ) ); if ( textureType === 32879 || textureType === 35866 ) { _gl.texParameteri( textureType, 32882, utils.convert( texture.wrapR ) ); } _gl.texParameteri( textureType, 10240, utils.convert( texture.magFilter ) ); _gl.texParameteri( textureType, 10241, utils.convert( texture.minFilter ) ); } else { _gl.texParameteri( textureType, 10242, 33071 ); _gl.texParameteri( textureType, 10243, 33071 ); if ( textureType === 32879 || textureType === 35866 ) { _gl.texParameteri( textureType, 32882, 33071 ); } if ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) { console.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' ); } _gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) ); _gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) ); if ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) { console.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' ); } } extension = extensions.get( 'EXT_texture_filter_anisotropic' ); if ( extension ) { if ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return; if ( texture.type === HalfFloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return; if ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) { _gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) ); properties.get( texture ).__currentAnisotropy = texture.anisotropy; } } } function initTexture( textureProperties, texture ) { if ( textureProperties.__webglInit === undefined ) { textureProperties.__webglInit = true; texture.addEventListener( 'dispose', onTextureDispose ); textureProperties.__webglTexture = _gl.createTexture(); info.memory.textures ++; } } function uploadTexture( textureProperties, texture, slot ) { var textureType = 3553; if ( texture.isDataTexture2DArray ) textureType = 35866; if ( texture.isDataTexture3D ) textureType = 32879; initTexture( textureProperties, texture ); state.activeTexture( 33984 + slot ); state.bindTexture( textureType, textureProperties.__webglTexture ); _gl.pixelStorei( 37440, texture.flipY ); _gl.pixelStorei( 37441, texture.premultiplyAlpha ); _gl.pixelStorei( 3317, texture.unpackAlignment ); var needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false; var image = resizeImage( texture.image, needsPowerOfTwo, false, capabilities.maxTextureSize ); var supportsMips = isPowerOfTwo( image ) || capabilities.isWebGL2, glFormat = utils.convert( texture.format ), glType = utils.convert( texture.type ), glInternalFormat = getInternalFormat( glFormat, glType ); setTextureParameters( textureType, texture, supportsMips ); var mipmap, mipmaps = texture.mipmaps; if ( texture.isDepthTexture ) { // populate depth texture with dummy data glInternalFormat = 6402; if ( texture.type === FloatType ) { if ( ! capabilities.isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' ); glInternalFormat = 36012; } else if ( capabilities.isWebGL2 ) { // WebGL 2.0 requires signed internalformat for glTexImage2D glInternalFormat = 33189; } if ( texture.format === DepthFormat && glInternalFormat === 6402 ) { // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are // DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/) if ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) { console.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' ); texture.type = UnsignedShortType; glType = utils.convert( texture.type ); } } // Depth stencil textures need the DEPTH_STENCIL internal format // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/) if ( texture.format === DepthStencilFormat ) { glInternalFormat = 34041; // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are // DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL. // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/) if ( texture.type !== UnsignedInt248Type ) { console.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' ); texture.type = UnsignedInt248Type; glType = utils.convert( texture.type ); } } state.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null ); } else if ( texture.isDataTexture ) { // use manually created mipmaps if available // if there are no manual mipmaps // set 0 level mipmap and then use GL to generate other mipmap levels if ( mipmaps.length > 0 && supportsMips ) { for ( var i = 0, il = mipmaps.length; i < il; i ++ ) { mipmap = mipmaps[ i ]; state.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data ); } texture.generateMipmaps = false; textureProperties.__maxMipLevel = mipmaps.length - 1; } else { state.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data ); textureProperties.__maxMipLevel = 0; } } else if ( texture.isCompressedTexture ) { for ( var i = 0, il = mipmaps.length; i < il; i ++ ) { mipmap = mipmaps[ i ]; if ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) { if ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) { state.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data ); } else { console.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' ); } } else { state.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data ); } } textureProperties.__maxMipLevel = mipmaps.length - 1; } else if ( texture.isDataTexture2DArray ) { state.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data ); textureProperties.__maxMipLevel = 0; } else if ( texture.isDataTexture3D ) { state.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data ); textureProperties.__maxMipLevel = 0; } else { // regular Texture (image, video, canvas) // use manually created mipmaps if available // if there are no manual mipmaps // set 0 level mipmap and then use GL to generate other mipmap levels if ( mipmaps.length > 0 && supportsMips ) { for ( var i = 0, il = mipmaps.length; i < il; i ++ ) { mipmap = mipmaps[ i ]; state.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap ); } texture.generateMipmaps = false; textureProperties.__maxMipLevel = mipmaps.length - 1; } else { state.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image ); textureProperties.__maxMipLevel = 0; } } if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) { generateMipmap( 3553, texture, image.width, image.height ); } textureProperties.__version = texture.version; if ( texture.onUpdate ) texture.onUpdate( texture ); } // Render targets // Setup storage for target texture and bind it to correct framebuffer function setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) { var glFormat = utils.convert( renderTarget.texture.format ); var glType = utils.convert( renderTarget.texture.type ); var glInternalFormat = getInternalFormat( glFormat, glType ); state.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null ); _gl.bindFramebuffer( 36160, framebuffer ); _gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 ); _gl.bindFramebuffer( 36160, null ); } // Setup storage for internal depth/stencil buffers and bind to correct framebuffer function setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) { _gl.bindRenderbuffer( 36161, renderbuffer ); if ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) { if ( isMultisample ) { var samples = getRenderTargetSamples( renderTarget ); _gl.renderbufferStorageMultisample( 36161, samples, 33189, renderTarget.width, renderTarget.height ); } else { _gl.renderbufferStorage( 36161, 33189, renderTarget.width, renderTarget.height ); } _gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer ); } else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) { if ( isMultisample ) { var samples = getRenderTargetSamples( renderTarget ); _gl.renderbufferStorageMultisample( 36161, samples, 34041, renderTarget.width, renderTarget.height ); } else { _gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height ); } _gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer ); } else { var glFormat = utils.convert( renderTarget.texture.format ); var glType = utils.convert( renderTarget.texture.type ); var glInternalFormat = getInternalFormat( glFormat, glType ); if ( isMultisample ) { var samples = getRenderTargetSamples( renderTarget ); _gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height ); } else { _gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height ); } } _gl.bindRenderbuffer( 36161, null ); } // Setup resources for a Depth Texture for a FBO (needs an extension) function setupDepthTexture( framebuffer, renderTarget ) { var isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube ); if ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' ); _gl.bindFramebuffer( 36160, framebuffer ); if ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) { throw new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' ); } // upload an empty depth texture with framebuffer size if ( ! properties.get( renderTarget.depthTexture ).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height ) { renderTarget.depthTexture.image.width = renderTarget.width; renderTarget.depthTexture.image.height = renderTarget.height; renderTarget.depthTexture.needsUpdate = true; } setTexture2D( renderTarget.depthTexture, 0 ); var webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture; if ( renderTarget.depthTexture.format === DepthFormat ) { _gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 ); } else if ( renderTarget.depthTexture.format === DepthStencilFormat ) { _gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 ); } else { throw new Error( 'Unknown depthTexture format' ); } } // Setup GL resources for a non-texture depth buffer function setupDepthRenderbuffer( renderTarget ) { var renderTargetProperties = properties.get( renderTarget ); var isCube = ( renderTarget.isWebGLRenderTargetCube === true ); if ( renderTarget.depthTexture ) { if ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' ); setupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget ); } else { if ( isCube ) { renderTargetProperties.__webglDepthbuffer = []; for ( var i = 0; i < 6; i ++ ) { _gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] ); renderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer(); setupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget ); } } else { _gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer ); renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer(); setupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget ); } } _gl.bindFramebuffer( 36160, null ); } // Set up GL resources for the render target function setupRenderTarget( renderTarget ) { var renderTargetProperties = properties.get( renderTarget ); var textureProperties = properties.get( renderTarget.texture ); renderTarget.addEventListener( 'dispose', onRenderTargetDispose ); textureProperties.__webglTexture = _gl.createTexture(); info.memory.textures ++; var isCube = ( renderTarget.isWebGLRenderTargetCube === true ); var isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true ); var supportsMips = isPowerOfTwo( renderTarget ) || capabilities.isWebGL2; // Setup framebuffer if ( isCube ) { renderTargetProperties.__webglFramebuffer = []; for ( var i = 0; i < 6; i ++ ) { renderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer(); } } else { renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer(); if ( isMultisample ) { if ( capabilities.isWebGL2 ) { renderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer(); renderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer(); _gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer ); var glFormat = utils.convert( renderTarget.texture.format ); var glType = utils.convert( renderTarget.texture.type ); var glInternalFormat = getInternalFormat( glFormat, glType ); var samples = getRenderTargetSamples( renderTarget ); _gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height ); _gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer ); _gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer ); _gl.bindRenderbuffer( 36161, null ); if ( renderTarget.depthBuffer ) { renderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer(); setupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true ); } _gl.bindFramebuffer( 36160, null ); } else { console.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' ); } } } // Setup color buffer if ( isCube ) { state.bindTexture( 34067, textureProperties.__webglTexture ); setTextureParameters( 34067, renderTarget.texture, supportsMips ); for ( var i = 0; i < 6; i ++ ) { setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, 36064, 34069 + i ); } if ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) { generateMipmap( 34067, renderTarget.texture, renderTarget.width, renderTarget.height ); } state.bindTexture( 34067, null ); } else { state.bindTexture( 3553, textureProperties.__webglTexture ); setTextureParameters( 3553, renderTarget.texture, supportsMips ); setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553 ); if ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) { generateMipmap( 3553, renderTarget.texture, renderTarget.width, renderTarget.height ); } state.bindTexture( 3553, null ); } // Setup depth and stencil buffers if ( renderTarget.depthBuffer ) { setupDepthRenderbuffer( renderTarget ); } } function updateRenderTargetMipmap( renderTarget ) { var texture = renderTarget.texture; var supportsMips = isPowerOfTwo( renderTarget ) || capabilities.isWebGL2; if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) { var target = renderTarget.isWebGLRenderTargetCube ? 34067 : 3553; var webglTexture = properties.get( texture ).__webglTexture; state.bindTexture( target, webglTexture ); generateMipmap( target, texture, renderTarget.width, renderTarget.height ); state.bindTexture( target, null ); } } function updateMultisampleRenderTarget( renderTarget ) { if ( renderTarget.isWebGLMultisampleRenderTarget ) { if ( capabilities.isWebGL2 ) { var renderTargetProperties = properties.get( renderTarget ); _gl.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer ); _gl.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer ); var width = renderTarget.width; var height = renderTarget.height; var mask = 16384; if ( renderTarget.depthBuffer ) mask |= 256; if ( renderTarget.stencilBuffer ) mask |= 1024; _gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 ); } else { console.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' ); } } } function getRenderTargetSamples( renderTarget ) { return ( capabilities.isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ? Math.min( capabilities.maxSamples, renderTarget.samples ) : 0; } function updateVideoTexture( texture ) { var id = texture.id; var frame = info.render.frame; // Check the last frame we updated the VideoTexture if ( _videoTextures[ id ] !== frame ) { _videoTextures[ id ] = frame; texture.update(); } } this.setTexture2D = setTexture2D; this.setTexture2DArray = setTexture2DArray; this.setTexture3D = setTexture3D; this.setTextureCube = setTextureCube; this.setTextureCubeDynamic = setTextureCubeDynamic; this.setupRenderTarget = setupRenderTarget; this.updateRenderTargetMipmap = updateRenderTargetMipmap; this.updateMultisampleRenderTarget = updateMultisampleRenderTarget; } /** * @author thespite / http://www.twitter.com/thespite */ function WebGLUtils( gl, extensions, capabilities ) { function convert( p ) { var extension; if ( p === RepeatWrapping ) return 10497; if ( p === ClampToEdgeWrapping ) return 33071; if ( p === MirroredRepeatWrapping ) return 33648; if ( p === NearestFilter ) return 9728; if ( p === NearestMipMapNearestFilter ) return 9984; if ( p === NearestMipMapLinearFilter ) return 9986; if ( p === LinearFilter ) return 9729; if ( p === LinearMipMapNearestFilter ) return 9985; if ( p === LinearMipMapLinearFilter ) return 9987; if ( p === UnsignedByteType ) return 5121; if ( p === UnsignedShort4444Type ) return 32819; if ( p === UnsignedShort5551Type ) return 32820; if ( p === UnsignedShort565Type ) return 33635; if ( p === ByteType ) return 5120; if ( p === ShortType ) return 5122; if ( p === UnsignedShortType ) return 5123; if ( p === IntType ) return 5124; if ( p === UnsignedIntType ) return 5125; if ( p === FloatType ) return 5126; if ( p === HalfFloatType ) { if ( capabilities.isWebGL2 ) return 5131; extension = extensions.get( 'OES_texture_half_float' ); if ( extension !== null ) return extension.HALF_FLOAT_OES; } if ( p === AlphaFormat ) return 6406; if ( p === RGBFormat ) return 6407; if ( p === RGBAFormat ) return 6408; if ( p === LuminanceFormat ) return 6409; if ( p === LuminanceAlphaFormat ) return 6410; if ( p === DepthFormat ) return 6402; if ( p === DepthStencilFormat ) return 34041; if ( p === RedFormat ) return 6403; if ( p === AddEquation ) return 32774; if ( p === SubtractEquation ) return 32778; if ( p === ReverseSubtractEquation ) return 32779; if ( p === ZeroFactor ) return 0; if ( p === OneFactor ) return 1; if ( p === SrcColorFactor ) return 768; if ( p === OneMinusSrcColorFactor ) return 769; if ( p === SrcAlphaFactor ) return 770; if ( p === OneMinusSrcAlphaFactor ) return 771; if ( p === DstAlphaFactor ) return 772; if ( p === OneMinusDstAlphaFactor ) return 773; if ( p === DstColorFactor ) return 774; if ( p === OneMinusDstColorFactor ) return 775; if ( p === SrcAlphaSaturateFactor ) return 776; if ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) { extension = extensions.get( 'WEBGL_compressed_texture_s3tc' ); if ( extension !== null ) { if ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT; if ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT; if ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT; if ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT; } } if ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) { extension = extensions.get( 'WEBGL_compressed_texture_pvrtc' ); if ( extension !== null ) { if ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG; if ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG; if ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG; if ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG; } } if ( p === RGB_ETC1_Format ) { extension = extensions.get( 'WEBGL_compressed_texture_etc1' ); if ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL; } if ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format || p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format || p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format || p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format || p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) { extension = extensions.get( 'WEBGL_compressed_texture_astc' ); if ( extension !== null ) { return p; } } if ( p === MinEquation || p === MaxEquation ) { if ( capabilities.isWebGL2 ) { if ( p === MinEquation ) return 32775; if ( p === MaxEquation ) return 32776; } extension = extensions.get( 'EXT_blend_minmax' ); if ( extension !== null ) { if ( p === MinEquation ) return extension.MIN_EXT; if ( p === MaxEquation ) return extension.MAX_EXT; } } if ( p === UnsignedInt248Type ) { if ( capabilities.isWebGL2 ) return 34042; extension = extensions.get( 'WEBGL_depth_texture' ); if ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL; } return 0; } return { convert: convert }; } /** * @author mrdoob / http://mrdoob.com/ */ function Group() { Object3D.call( this ); this.type = 'Group'; } Group.prototype = Object.assign( Object.create( Object3D.prototype ), { constructor: Group, isGroup: true } ); /** * @author mrdoob / http://mrdoob.com/ * @author mikael emtinger / http://gomo.se/ * @author WestLangley / http://github.com/WestLangley */ function Camera() { Object3D.call( this ); this.type = 'Camera'; this.matrixWorldInverse = new Matrix4(); this.projectionMatrix = new Matrix4(); this.projectionMatrixInverse = new Matrix4(); } Camera.prototype = Object.assign( Object.create( Object3D.prototype ), { constructor: Camera, isCamera: true, copy: function ( source, recursive ) { Object3D.prototype.copy.call( this, source, recursive ); this.matrixWorldInverse.copy( source.matrixWorldInverse ); this.projectionMatrix.copy( source.projectionMatrix ); this.projectionMatrixInverse.copy( source.projectionMatrixInverse ); return this; }, getWorldDirection: function ( target ) { if ( target === undefined ) { console.warn( 'THREE.Camera: .getWorldDirection() target is now required' ); target = new Vector3(); } this.updateMatrixWorld( true ); var e = this.matrixWorld.elements; return target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize(); }, updateMatrixWorld: function ( force ) { Object3D.prototype.updateMatrixWorld.call( this, force ); this.matrixWorldInverse.getInverse( this.matrixWorld ); }, clone: function () { return new this.constructor().copy( this ); } } ); /** * @author mrdoob / http://mrdoob.com/ * @author greggman / http://games.greggman.com/ * @author zz85 / http://www.lab4games.net/zz85/blog * @author tschw */ function PerspectiveCamera( fov, aspect, near, far ) { Camera.call( this ); this.type = 'PerspectiveCamera'; this.fov = fov !== undefined ? fov : 50; this.zoom = 1; this.near = near !== undefined ? near : 0.1; this.far = far !== undefined ? far : 2000; this.focus = 10; this.aspect = aspect !== undefined ? aspect : 1; this.view = null; this.filmGauge = 35; // width of the film (default in millimeters) this.filmOffset = 0; // horizontal film offset (same unit as gauge) this.updateProjectionMatrix(); } PerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), { constructor: PerspectiveCamera, isPerspectiveCamera: true, copy: function ( source, recursive ) { Camera.prototype.copy.call( this, source, recursive ); this.fov = source.fov; this.zoom = source.zoom; this.near = source.near; this.far = source.far; this.focus = source.focus; this.aspect = source.aspect; this.view = source.view === null ? null : Object.assign( {}, source.view ); this.filmGauge = source.filmGauge; this.filmOffset = source.filmOffset; return this; }, /** * Sets the FOV by focal length in respect to the current .filmGauge. * * The default film gauge is 35, so that the focal length can be specified for * a 35mm (full frame) camera. * * Values for focal length and film gauge must have the same unit. */ setFocalLength: function ( focalLength ) { // see http://www.bobatkins.com/photography/technical/field_of_view.html var vExtentSlope = 0.5 * this.getFilmHeight() / focalLength; this.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope ); this.updateProjectionMatrix(); }, /** * Calculates the focal length from the current .fov and .filmGauge. */ getFocalLength: function () { var vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov ); return 0.5 * this.getFilmHeight() / vExtentSlope; }, getEffectiveFOV: function () { return _Math.RAD2DEG * 2 * Math.atan( Math.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom ); }, getFilmWidth: function () { // film not completely covered in portrait format (aspect < 1) return this.filmGauge * Math.min( this.aspect, 1 ); }, getFilmHeight: function () { // film not completely covered in landscape format (aspect > 1) return this.filmGauge / Math.max( this.aspect, 1 ); }, /** * Sets an offset in a larger frustum. This is useful for multi-window or * multi-monitor/multi-machine setups. * * For example, if you have 3x2 monitors and each monitor is 1920x1080 and * the monitors are in grid like this * * +---+---+---+ * | A | B | C | * +---+---+---+ * | D | E | F | * +---+---+---+ * * then for each monitor you would call it like this * * var w = 1920; * var h = 1080; * var fullWidth = w * 3; * var fullHeight = h * 2; * * --A-- * camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h ); * --B-- * camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h ); * --C-- * camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h ); * --D-- * camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h ); * --E-- * camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h ); * --F-- * camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h ); * * Note there is no reason monitors have to be the same size or in a grid. */ setViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) { this.aspect = fullWidth / fullHeight; if ( this.view === null ) { this.view = { enabled: true, fullWidth: 1, fullHeight: 1, offsetX: 0, offsetY: 0, width: 1, height: 1 }; } this.view.enabled = true; this.view.fullWidth = fullWidth; this.view.fullHeight = fullHeight; this.view.offsetX = x; this.view.offsetY = y; this.view.width = width; this.view.height = height; this.updateProjectionMatrix(); }, clearViewOffset: function () { if ( this.view !== null ) { this.view.enabled = false; } this.updateProjectionMatrix(); }, updateProjectionMatrix: function () { var near = this.near, top = near * Math.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom, height = 2 * top, width = this.aspect * height, left = - 0.5 * width, view = this.view; if ( this.view !== null && this.view.enabled ) { var fullWidth = view.fullWidth, fullHeight = view.fullHeight; left += view.offsetX * width / fullWidth; top -= view.offsetY * height / fullHeight; width *= view.width / fullWidth; height *= view.height / fullHeight; } var skew = this.filmOffset; if ( skew !== 0 ) left += near * skew / this.getFilmWidth(); this.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far ); this.projectionMatrixInverse.getInverse( this.projectionMatrix ); }, toJSON: function ( meta ) { var data = Object3D.prototype.toJSON.call( this, meta ); data.object.fov = this.fov; data.object.zoom = this.zoom; data.object.near = this.near; data.object.far = this.far; data.object.focus = this.focus; data.object.aspect = this.aspect; if ( this.view !== null ) data.object.view = Object.assign( {}, this.view ); data.object.filmGauge = this.filmGauge; data.object.filmOffset = this.filmOffset; return data; } } ); /** * @author mrdoob / http://mrdoob.com/ */ function ArrayCamera( array ) { PerspectiveCamera.call( this ); this.cameras = array || []; } ArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), { constructor: ArrayCamera, isArrayCamera: true } ); /** * @author jsantell / https://www.jsantell.com/ * @author mrdoob / http://mrdoob.com/ */ var cameraLPos = new Vector3(); var cameraRPos = new Vector3(); /** * Assumes 2 cameras that are parallel and share an X-axis, and that * the cameras' projection and world matrices have already been set. * And that near and far planes are identical for both cameras. * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765 */ function setProjectionFromUnion( camera, cameraL, cameraR ) { cameraLPos.setFromMatrixPosition( cameraL.matrixWorld ); cameraRPos.setFromMatrixPosition( cameraR.matrixWorld ); var ipd = cameraLPos.distanceTo( cameraRPos ); var projL = cameraL.projectionMatrix.elements; var projR = cameraR.projectionMatrix.elements; // VR systems will have identical far and near planes, and // most likely identical top and bottom frustum extents. // Use the left camera for these values. var near = projL[ 14 ] / ( projL[ 10 ] - 1 ); var far = projL[ 14 ] / ( projL[ 10 ] + 1 ); var topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ]; var bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ]; var leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ]; var rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ]; var left = near * leftFov; var right = near * rightFov; // Calculate the new camera's position offset from the // left camera. xOffset should be roughly half `ipd`. var zOffset = ipd / ( - leftFov + rightFov ); var xOffset = zOffset * - leftFov; // TODO: Better way to apply this offset? cameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale ); camera.translateX( xOffset ); camera.translateZ( zOffset ); camera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale ); camera.matrixWorldInverse.getInverse( camera.matrixWorld ); // Find the union of the frustum values of the cameras and scale // the values so that the near plane's position does not change in world space, // although must now be relative to the new union camera. var near2 = near + zOffset; var far2 = far + zOffset; var left2 = left - xOffset; var right2 = right + ( ipd - xOffset ); var top2 = topFov * far / far2 * near2; var bottom2 = bottomFov * far / far2 * near2; camera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 ); } /** * @author mrdoob / http://mrdoob.com/ */ function WebVRManager( renderer ) { var scope = this; var device = null; var frameData = null; var poseTarget = null; var controllers = []; var standingMatrix = new Matrix4(); var standingMatrixInverse = new Matrix4(); var framebufferScaleFactor = 1.0; var frameOfReferenceType = 'stage'; if ( typeof window !== 'undefined' && 'VRFrameData' in window ) { frameData = new window.VRFrameData(); window.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false ); } var matrixWorldInverse = new Matrix4(); var tempQuaternion = new Quaternion(); var tempPosition = new Vector3(); var cameraL = new PerspectiveCamera(); cameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 ); cameraL.layers.enable( 1 ); var cameraR = new PerspectiveCamera(); cameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 ); cameraR.layers.enable( 2 ); var cameraVR = new ArrayCamera( [ cameraL, cameraR ] ); cameraVR.layers.enable( 1 ); cameraVR.layers.enable( 2 ); // function isPresenting() { return device !== null && device.isPresenting === true; } var currentSize = new Vector2(), currentPixelRatio; function onVRDisplayPresentChange() { updateDrawingBufferSize(); if ( isPresenting() ) { animation.start(); } else { animation.stop(); } } // var triggers = []; function findGamepad( id ) { var gamepads = navigator.getGamepads && navigator.getGamepads(); for ( var i = 0, j = 0, l = gamepads.length; i < l; i ++ ) { var gamepad = gamepads[ i ]; if ( gamepad && ( gamepad.id === 'Daydream Controller' || gamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' || gamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) || gamepad.id.startsWith( 'Spatial Controller' ) ) ) { if ( j === id ) return gamepad; j ++; } } } function updateDrawingBufferSize() { if ( isPresenting() ) { var eyeParameters = device.getEyeParameters( 'left' ); var renderWidth = eyeParameters.renderWidth * framebufferScaleFactor; var renderHeight = eyeParameters.renderHeight * framebufferScaleFactor; renderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 ); } else { if ( scope.enabled ) { currentPixelRatio = renderer.getPixelRatio(); renderer.getSize( currentSize ); renderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio ); } } } function updateControllers() { for ( var i = 0; i < controllers.length; i ++ ) { var controller = controllers[ i ]; var gamepad = findGamepad( i ); if ( gamepad !== undefined && gamepad.pose !== undefined ) { if ( gamepad.pose === null ) return; // Pose var pose = gamepad.pose; if ( pose.hasPosition === false ) controller.position.set( 0.2, - 0.6, - 0.05 ); if ( pose.position !== null ) controller.position.fromArray( pose.position ); if ( pose.orientation !== null ) controller.quaternion.fromArray( pose.orientation ); controller.matrix.compose( controller.position, controller.quaternion, controller.scale ); controller.matrix.premultiply( standingMatrix ); controller.matrix.decompose( controller.position, controller.quaternion, controller.scale ); controller.matrixWorldNeedsUpdate = true; controller.visible = true; // Trigger var buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1; if ( triggers[ i ] !== gamepad.buttons[ buttonId ].pressed ) { triggers[ i ] = gamepad.buttons[ buttonId ].pressed; if ( triggers[ i ] === true ) { controller.dispatchEvent( { type: 'selectstart' } ); } else { controller.dispatchEvent( { type: 'selectend' } ); controller.dispatchEvent( { type: 'select' } ); } } } else { controller.visible = false; } } } // this.enabled = false; this.getController = function ( id ) { var controller = controllers[ id ]; if ( controller === undefined ) { controller = new Group(); controller.matrixAutoUpdate = false; controller.visible = false; controllers[ id ] = controller; } return controller; }; this.getDevice = function () { return device; }; this.setDevice = function ( value ) { if ( value !== undefined ) device = value; animation.setContext( value ); updateDrawingBufferSize(); if ( isPresenting() ) animation.start(); }; this.setFramebufferScaleFactor = function ( value ) { framebufferScaleFactor = value; }; this.setFrameOfReferenceType = function ( value ) { frameOfReferenceType = value; }; this.setPoseTarget = function ( object ) { if ( object !== undefined ) poseTarget = object; }; this.getCamera = function ( camera ) { var userHeight = frameOfReferenceType === 'stage' ? 1.6 : 0; if ( isPresenting() === false ) { camera.position.set( 0, userHeight, 0 ); camera.rotation.set( 0, 0, 0 ); return camera; } device.depthNear = camera.near; device.depthFar = camera.far; device.getFrameData( frameData ); // if ( frameOfReferenceType === 'stage' ) { var stageParameters = device.stageParameters; if ( stageParameters ) { standingMatrix.fromArray( stageParameters.sittingToStandingTransform ); } else { standingMatrix.makeTranslation( 0, userHeight, 0 ); } } var pose = frameData.pose; var poseObject = poseTarget !== null ? poseTarget : camera; // We want to manipulate poseObject by its position and quaternion components since users may rely on them. poseObject.matrix.copy( standingMatrix ); poseObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale ); if ( pose.orientation !== null ) { tempQuaternion.fromArray( pose.orientation ); poseObject.quaternion.multiply( tempQuaternion ); } if ( pose.position !== null ) { tempQuaternion.setFromRotationMatrix( standingMatrix ); tempPosition.fromArray( pose.position ); tempPosition.applyQuaternion( tempQuaternion ); poseObject.position.add( tempPosition ); } poseObject.updateMatrixWorld(); // cameraL.near = camera.near; cameraR.near = camera.near; cameraL.far = camera.far; cameraR.far = camera.far; cameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix ); cameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix ); // TODO (mrdoob) Double check this code standingMatrixInverse.getInverse( standingMatrix ); if ( frameOfReferenceType === 'stage' ) { cameraL.matrixWorldInverse.multiply( standingMatrixInverse ); cameraR.matrixWorldInverse.multiply( standingMatrixInverse ); } var parent = poseObject.parent; if ( parent !== null ) { matrixWorldInverse.getInverse( parent.matrixWorld ); cameraL.matrixWorldInverse.multiply( matrixWorldInverse ); cameraR.matrixWorldInverse.multiply( matrixWorldInverse ); } // envMap and Mirror needs camera.matrixWorld cameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse ); cameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse ); cameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix ); cameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix ); setProjectionFromUnion( cameraVR, cameraL, cameraR ); // var layers = device.getLayers(); if ( layers.length ) { var layer = layers[ 0 ]; if ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) { cameraL.bounds.fromArray( layer.leftBounds ); } if ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) { cameraR.bounds.fromArray( layer.rightBounds ); } } updateControllers(); return cameraVR; }; this.getStandingMatrix = function () { return standingMatrix; }; this.isPresenting = isPresenting; // Animation Loop var animation = new WebGLAnimation(); this.setAnimationLoop = function ( callback ) { animation.setAnimationLoop( callback ); if ( isPresenting() ) animation.start(); }; this.submitFrame = function () { if ( isPresenting() ) device.submitFrame(); }; this.dispose = function () { if ( typeof window !== 'undefined' ) { window.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange ); } }; } /** * @author mrdoob / http://mrdoob.com/ */ function WebXRManager( renderer ) { var gl = renderer.context; var device = null; var session = null; var framebufferScaleFactor = 1.0; var frameOfReference = null; var frameOfReferenceType = 'stage'; var pose = null; var poseTarget = null; var controllers = []; var inputSources = []; function isPresenting() { return session !== null && frameOfReference !== null; } // var cameraL = new PerspectiveCamera(); cameraL.layers.enable( 1 ); cameraL.viewport = new Vector4(); var cameraR = new PerspectiveCamera(); cameraR.layers.enable( 2 ); cameraR.viewport = new Vector4(); var cameraVR = new ArrayCamera( [ cameraL, cameraR ] ); cameraVR.layers.enable( 1 ); cameraVR.layers.enable( 2 ); // this.enabled = false; this.getController = function ( id ) { var controller = controllers[ id ]; if ( controller === undefined ) { controller = new Group(); controller.matrixAutoUpdate = false; controller.visible = false; controllers[ id ] = controller; } return controller; }; this.getDevice = function () { return device; }; this.setDevice = function ( value ) { if ( value !== undefined ) device = value; if ( value instanceof XRDevice ) gl.setCompatibleXRDevice( value ); }; // function onSessionEvent( event ) { var controller = controllers[ inputSources.indexOf( event.inputSource ) ]; if ( controller ) controller.dispatchEvent( { type: event.type } ); } function onSessionEnd() { renderer.setFramebuffer( null ); renderer.setRenderTarget( renderer.getRenderTarget() ); // Hack #15830 animation.stop(); } this.setFramebufferScaleFactor = function ( value ) { framebufferScaleFactor = value; }; this.setFrameOfReferenceType = function ( value ) { frameOfReferenceType = value; }; this.setSession = function ( value ) { session = value; if ( session !== null ) { session.addEventListener( 'select', onSessionEvent ); session.addEventListener( 'selectstart', onSessionEvent ); session.addEventListener( 'selectend', onSessionEvent ); session.addEventListener( 'end', onSessionEnd ); session.baseLayer = new XRWebGLLayer( session, gl, { framebufferScaleFactor: framebufferScaleFactor } ); session.requestFrameOfReference( frameOfReferenceType ).then( function ( value ) { frameOfReference = value; renderer.setFramebuffer( session.baseLayer.framebuffer ); animation.setContext( session ); animation.start(); } ); // inputSources = session.getInputSources(); session.addEventListener( 'inputsourceschange', function () { inputSources = session.getInputSources(); console.log( inputSources ); for ( var i = 0; i < controllers.length; i ++ ) { var controller = controllers[ i ]; controller.userData.inputSource = inputSources[ i ]; } } ); } }; function updateCamera( camera, parent ) { if ( parent === null ) { camera.matrixWorld.copy( camera.matrix ); } else { camera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix ); } camera.matrixWorldInverse.getInverse( camera.matrixWorld ); } this.setPoseTarget = function ( object ) { if ( object !== undefined ) poseTarget = object; }; this.getCamera = function ( camera ) { if ( isPresenting() ) { var parent = camera.parent; var cameras = cameraVR.cameras; var object = poseTarget || camera; updateCamera( cameraVR, parent ); for ( var i = 0; i < cameras.length; i ++ ) { updateCamera( cameras[ i ], parent ); } // update camera and its children object.matrixWorld.copy( cameraVR.matrixWorld ); var children = object.children; for ( var i = 0, l = children.length; i < l; i ++ ) { children[ i ].updateMatrixWorld( true ); } setProjectionFromUnion( cameraVR, cameraL, cameraR ); return cameraVR; } return camera; }; this.getCameraPose = function ( ) { return pose; }; this.isPresenting = isPresenting; // Animation Loop var onAnimationFrameCallback = null; function onAnimationFrame( time, frame ) { pose = frame.getDevicePose( frameOfReference ); if ( pose !== null ) { var layer = session.baseLayer; var views = frame.views; for ( var i = 0; i < views.length; i ++ ) { var view = views[ i ]; var viewport = layer.getViewport( view ); var viewMatrix = pose.getViewMatrix( view ); var camera = cameraVR.cameras[ i ]; camera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix ); camera.projectionMatrix.fromArray( view.projectionMatrix ); camera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height ); if ( i === 0 ) { cameraVR.matrix.copy( camera.matrix ); } } } // for ( var i = 0; i < controllers.length; i ++ ) { var controller = controllers[ i ]; var inputSource = inputSources[ i ]; if ( inputSource ) { var inputPose = frame.getInputPose( inputSource, frameOfReference ); if ( inputPose !== null ) { if ( 'targetRay' in inputPose ) { controller.matrix.elements = inputPose.targetRay.transformMatrix; } else if ( 'pointerMatrix' in inputPose ) { // DEPRECATED controller.matrix.elements = inputPose.pointerMatrix; } controller.matrix.decompose( controller.position, controller.rotation, controller.scale ); controller.visible = true; continue; } } controller.visible = false; } if ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame ); } var animation = new WebGLAnimation(); animation.setAnimationLoop( onAnimationFrame ); this.setAnimationLoop = function ( callback ) { onAnimationFrameCallback = callback; }; this.dispose = function () {}; // DEPRECATED this.getStandingMatrix = function () { console.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' ); return new Matrix4(); }; this.submitFrame = function () {}; } /** * @author supereggbert / http://www.paulbrunt.co.uk/ * @author mrdoob / http://mrdoob.com/ * @author alteredq / http://alteredqualia.com/ * @author szimek / https://github.com/szimek/ * @author tschw */ function WebGLRenderer( parameters ) { console.log( 'THREE.WebGLRenderer', REVISION ); parameters = parameters || {}; var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ), _context = parameters.context !== undefined ? parameters.context : null, _alpha = parameters.alpha !== undefined ? parameters.alpha : false, _depth = parameters.depth !== undefined ? parameters.depth : true, _stencil = parameters.stencil !== undefined ? parameters.stencil : true, _antialias = parameters.antialias !== undefined ? parameters.antialias : false, _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true, _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false, _powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default'; var currentRenderList = null; var currentRenderState = null; // public properties this.domElement = _canvas; this.context = null; // clearing this.autoClear = true; this.autoClearColor = true; this.autoClearDepth = true; this.autoClearStencil = true; // scene graph this.sortObjects = true; // user-defined clipping this.clippingPlanes = []; this.localClippingEnabled = false; // physically based shading this.gammaFactor = 2.0; // for backwards compatibility this.gammaInput = false; this.gammaOutput = false; // physical lights this.physicallyCorrectLights = false; // tone mapping this.toneMapping = LinearToneMapping; this.toneMappingExposure = 1.0; this.toneMappingWhitePoint = 1.0; // morphs this.maxMorphTargets = 8; this.maxMorphNormals = 4; // internal properties var _this = this, _isContextLost = false, // internal state cache _framebuffer = null, _currentRenderTarget = null, _currentFramebuffer = null, _currentMaterialId = - 1, // geometry and program caching _currentGeometryProgram = { geometry: null, program: null, wireframe: false }, _currentCamera = null, _currentArrayCamera = null, _currentViewport = new Vector4(), _currentScissor = new Vector4(), _currentScissorTest = null, // _usedTextureUnits = 0, // _width = _canvas.width, _height = _canvas.height, _pixelRatio = 1, _viewport = new Vector4( 0, 0, _width, _height ), _scissor = new Vector4( 0, 0, _width, _height ), _scissorTest = false, // frustum _frustum = new Frustum(), // clipping _clipping = new WebGLClipping(), _clippingEnabled = false, _localClippingEnabled = false, // camera matrices cache _projScreenMatrix = new Matrix4(), _vector3 = new Vector3(); function getTargetPixelRatio() { return _currentRenderTarget === null ? _pixelRatio : 1; } // initialize var _gl; try { var contextAttributes = { alpha: _alpha, depth: _depth, stencil: _stencil, antialias: _antialias, premultipliedAlpha: _premultipliedAlpha, preserveDrawingBuffer: _preserveDrawingBuffer, powerPreference: _powerPreference }; // event listeners must be registered before WebGL context is created, see #12753 _canvas.addEventListener( 'webglcontextlost', onContextLost, false ); _canvas.addEventListener( 'webglcontextrestored', onContextRestore, false ); _gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes ); if ( _gl === null ) { if ( _canvas.getContext( 'webgl' ) !== null ) { throw new Error( 'Error creating WebGL context with your selected attributes.' ); } else { throw new Error( 'Error creating WebGL context.' ); } } // Some experimental-webgl implementations do not have getShaderPrecisionFormat if ( _gl.getShaderPrecisionFormat === undefined ) { _gl.getShaderPrecisionFormat = function () { return { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 }; }; } } catch ( error ) { console.error( 'THREE.WebGLRenderer: ' + error.message ); throw error; } var extensions, capabilities, state, info; var properties, textures, attributes, geometries, objects; var programCache, renderLists, renderStates; var background, morphtargets, bufferRenderer, indexedBufferRenderer; var utils; function initGLContext() { extensions = new WebGLExtensions( _gl ); capabilities = new WebGLCapabilities( _gl, extensions, parameters ); if ( ! capabilities.isWebGL2 ) { extensions.get( 'WEBGL_depth_texture' ); extensions.get( 'OES_texture_float' ); extensions.get( 'OES_texture_half_float' ); extensions.get( 'OES_texture_half_float_linear' ); extensions.get( 'OES_standard_derivatives' ); extensions.get( 'OES_element_index_uint' ); extensions.get( 'ANGLE_instanced_arrays' ); } extensions.get( 'OES_texture_float_linear' ); utils = new WebGLUtils( _gl, extensions, capabilities ); state = new WebGLState( _gl, extensions, utils, capabilities ); state.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) ); state.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) ); info = new WebGLInfo( _gl ); properties = new WebGLProperties(); textures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ); attributes = new WebGLAttributes( _gl ); geometries = new WebGLGeometries( _gl, attributes, info ); objects = new WebGLObjects( geometries, info ); morphtargets = new WebGLMorphtargets( _gl ); programCache = new WebGLPrograms( _this, extensions, capabilities ); renderLists = new WebGLRenderLists(); renderStates = new WebGLRenderStates(); background = new WebGLBackground( _this, state, objects, _premultipliedAlpha ); bufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities ); indexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities ); info.programs = programCache.programs; _this.context = _gl; _this.capabilities = capabilities; _this.extensions = extensions; _this.properties = properties; _this.renderLists = renderLists; _this.state = state; _this.info = info; } initGLContext(); // vr var vr = null; if ( typeof navigator !== 'undefined' ) { vr = ( 'xr' in navigator ) ? new WebXRManager( _this ) : new WebVRManager( _this ); } this.vr = vr; // shadow map var shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize ); this.shadowMap = shadowMap; // API this.getContext = function () { return _gl; }; this.getContextAttributes = function () { return _gl.getContextAttributes(); }; this.forceContextLoss = function () { var extension = extensions.get( 'WEBGL_lose_context' ); if ( extension ) extension.loseContext(); }; this.forceContextRestore = function () { var extension = extensions.get( 'WEBGL_lose_context' ); if ( extension ) extension.restoreContext(); }; this.getPixelRatio = function () { return _pixelRatio; }; this.setPixelRatio = function ( value ) { if ( value === undefined ) return; _pixelRatio = value; this.setSize( _width, _height, false ); }; this.getSize = function ( target ) { if ( target === undefined ) { console.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' ); target = new Vector2(); } return target.set( _width, _height ); }; this.setSize = function ( width, height, updateStyle ) { if ( vr.isPresenting() ) { console.warn( 'THREE.WebGLRenderer: Can\'t change size while VR device is presenting.' ); return; } _width = width; _height = height; _canvas.width = width * _pixelRatio; _canvas.height = height * _pixelRatio; if ( updateStyle !== false ) { _canvas.style.width = width + 'px'; _canvas.style.height = height + 'px'; } this.setViewport( 0, 0, width, height ); }; this.getDrawingBufferSize = function ( target ) { if ( target === undefined ) { console.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' ); target = new Vector2(); } return target.set( _width * _pixelRatio, _height * _pixelRatio ); }; this.setDrawingBufferSize = function ( width, height, pixelRatio ) { _width = width; _height = height; _pixelRatio = pixelRatio; _canvas.width = width * pixelRatio; _canvas.height = height * pixelRatio; this.setViewport( 0, 0, width, height ); }; this.getCurrentViewport = function ( target ) { if ( target === undefined ) { console.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' ); target = new Vector4(); } return target.copy( _currentViewport ); }; this.getViewport = function ( target ) { return target.copy( _viewport ); }; this.setViewport = function ( x, y, width, height ) { if ( x.isVector4 ) { _viewport.set( x.x, x.y, x.z, x.w ); } else { _viewport.set( x, y, width, height ); } state.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) ); }; this.getScissor = function ( target ) { return target.copy( _scissor ); }; this.setScissor = function ( x, y, width, height ) { if ( x.isVector4 ) { _scissor.set( x.x, x.y, x.z, x.w ); } else { _scissor.set( x, y, width, height ); } state.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) ); }; this.getScissorTest = function () { return _scissorTest; }; this.setScissorTest = function ( boolean ) { state.setScissorTest( _scissorTest = boolean ); }; // Clearing this.getClearColor = function () { return background.getClearColor(); }; this.setClearColor = function () { background.setClearColor.apply( background, arguments ); }; this.getClearAlpha = function () { return background.getClearAlpha(); }; this.setClearAlpha = function () { background.setClearAlpha.apply( background, arguments ); }; this.clear = function ( color, depth, stencil ) { var bits = 0; if ( color === undefined || color ) bits |= 16384; if ( depth === undefined || depth ) bits |= 256; if ( stencil === undefined || stencil ) bits |= 1024; _gl.clear( bits ); }; this.clearColor = function () { this.clear( true, false, false ); }; this.clearDepth = function () { this.clear( false, true, false ); }; this.clearStencil = function () { this.clear( false, false, true ); }; // this.dispose = function () { _canvas.removeEventListener( 'webglcontextlost', onContextLost, false ); _canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false ); renderLists.dispose(); renderStates.dispose(); properties.dispose(); objects.dispose(); vr.dispose(); animation.stop(); }; // Events function onContextLost( event ) { event.preventDefault(); console.log( 'THREE.WebGLRenderer: Context Lost.' ); _isContextLost = true; } function onContextRestore( /* event */ ) { console.log( 'THREE.WebGLRenderer: Context Restored.' ); _isContextLost = false; initGLContext(); } function onMaterialDispose( event ) { var material = event.target; material.removeEventListener( 'dispose', onMaterialDispose ); deallocateMaterial( material ); } // Buffer deallocation function deallocateMaterial( material ) { releaseMaterialProgramReference( material ); properties.remove( material ); } function releaseMaterialProgramReference( material ) { var programInfo = properties.get( material ).program; material.program = undefined; if ( programInfo !== undefined ) { programCache.releaseProgram( programInfo ); } } // Buffer rendering function renderObjectImmediate( object, program ) { object.render( function ( object ) { _this.renderBufferImmediate( object, program ); } ); } this.renderBufferImmediate = function ( object, program ) { state.initAttributes(); var buffers = properties.get( object ); if ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer(); if ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer(); if ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer(); if ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer(); var programAttributes = program.getAttributes(); if ( object.hasPositions ) { _gl.bindBuffer( 34962, buffers.position ); _gl.bufferData( 34962, object.positionArray, 35048 ); state.enableAttribute( programAttributes.position ); _gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 ); } if ( object.hasNormals ) { _gl.bindBuffer( 34962, buffers.normal ); _gl.bufferData( 34962, object.normalArray, 35048 ); state.enableAttribute( programAttributes.normal ); _gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 ); } if ( object.hasUvs ) { _gl.bindBuffer( 34962, buffers.uv ); _gl.bufferData( 34962, object.uvArray, 35048 ); state.enableAttribute( programAttributes.uv ); _gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 ); } if ( object.hasColors ) { _gl.bindBuffer( 34962, buffers.color ); _gl.bufferData( 34962, object.colorArray, 35048 ); state.enableAttribute( programAttributes.color ); _gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 ); } state.disableUnusedAttributes(); _gl.drawArrays( 4, 0, object.count ); object.count = 0; }; this.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) { var frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 ); state.setMaterial( material, frontFaceCW ); var program = setProgram( camera, fog, material, object ); var updateBuffers = false; if ( _currentGeometryProgram.geometry !== geometry.id || _currentGeometryProgram.program !== program.id || _currentGeometryProgram.wireframe !== ( material.wireframe === true ) ) { _currentGeometryProgram.geometry = geometry.id; _currentGeometryProgram.program = program.id; _currentGeometryProgram.wireframe = material.wireframe === true; updateBuffers = true; } if ( object.morphTargetInfluences ) { morphtargets.update( object, geometry, material, program ); updateBuffers = true; } // var index = geometry.index; var position = geometry.attributes.position; var rangeFactor = 1; if ( material.wireframe === true ) { index = geometries.getWireframeAttribute( geometry ); rangeFactor = 2; } var attribute; var renderer = bufferRenderer; if ( index !== null ) { attribute = attributes.get( index ); renderer = indexedBufferRenderer; renderer.setIndex( attribute ); } if ( updateBuffers ) { setupVertexAttributes( material, program, geometry ); if ( index !== null ) { _gl.bindBuffer( 34963, attribute.buffer ); } } // var dataCount = Infinity; if ( index !== null ) { dataCount = index.count; } else if ( position !== undefined ) { dataCount = position.count; } var rangeStart = geometry.drawRange.start * rangeFactor; var rangeCount = geometry.drawRange.count * rangeFactor; var groupStart = group !== null ? group.start * rangeFactor : 0; var groupCount = group !== null ? group.count * rangeFactor : Infinity; var drawStart = Math.max( rangeStart, groupStart ); var drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1; var drawCount = Math.max( 0, drawEnd - drawStart + 1 ); if ( drawCount === 0 ) return; // if ( object.isMesh ) { if ( material.wireframe === true ) { state.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() ); renderer.setMode( 1 ); } else { switch ( object.drawMode ) { case TrianglesDrawMode: renderer.setMode( 4 ); break; case TriangleStripDrawMode: renderer.setMode( 5 ); break; case TriangleFanDrawMode: renderer.setMode( 6 ); break; } } } else if ( object.isLine ) { var lineWidth = material.linewidth; if ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material state.setLineWidth( lineWidth * getTargetPixelRatio() ); if ( object.isLineSegments ) { renderer.setMode( 1 ); } else if ( object.isLineLoop ) { renderer.setMode( 2 ); } else { renderer.setMode( 3 ); } } else if ( object.isPoints ) { renderer.setMode( 0 ); } else if ( object.isSprite ) { renderer.setMode( 4 ); } if ( geometry && geometry.isInstancedBufferGeometry ) { if ( geometry.maxInstancedCount > 0 ) { renderer.renderInstances( geometry, drawStart, drawCount ); } } else { renderer.render( drawStart, drawCount ); } }; function setupVertexAttributes( material, program, geometry ) { if ( geometry && geometry.isInstancedBufferGeometry && ! capabilities.isWebGL2 ) { if ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) { console.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' ); return; } } state.initAttributes(); var geometryAttributes = geometry.attributes; var programAttributes = program.getAttributes(); var materialDefaultAttributeValues = material.defaultAttributeValues; for ( var name in programAttributes ) { var programAttribute = programAttributes[ name ]; if ( programAttribute >= 0 ) { var geometryAttribute = geometryAttributes[ name ]; if ( geometryAttribute !== undefined ) { var normalized = geometryAttribute.normalized; var size = geometryAttribute.itemSize; var attribute = attributes.get( geometryAttribute ); // TODO Attribute may not be available on context restore if ( attribute === undefined ) continue; var buffer = attribute.buffer; var type = attribute.type; var bytesPerElement = attribute.bytesPerElement; if ( geometryAttribute.isInterleavedBufferAttribute ) { var data = geometryAttribute.data; var stride = data.stride; var offset = geometryAttribute.offset; if ( data && data.isInstancedInterleavedBuffer ) { state.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute ); if ( geometry.maxInstancedCount === undefined ) { geometry.maxInstancedCount = data.meshPerAttribute * data.count; } } else { state.enableAttribute( programAttribute ); } _gl.bindBuffer( 34962, buffer ); _gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement ); } else { if ( geometryAttribute.isInstancedBufferAttribute ) { state.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute ); if ( geometry.maxInstancedCount === undefined ) { geometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count; } } else { state.enableAttribute( programAttribute ); } _gl.bindBuffer( 34962, buffer ); _gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 ); } } else if ( materialDefaultAttributeValues !== undefined ) { var value = materialDefaultAttributeValues[ name ]; if ( value !== undefined ) { switch ( value.length ) { case 2: _gl.vertexAttrib2fv( programAttribute, value ); break; case 3: _gl.vertexAttrib3fv( programAttribute, value ); break; case 4: _gl.vertexAttrib4fv( programAttribute, value ); break; default: _gl.vertexAttrib1fv( programAttribute, value ); } } } } } state.disableUnusedAttributes(); } // Compile this.compile = function ( scene, camera ) { currentRenderState = renderStates.get( scene, camera ); currentRenderState.init(); scene.traverse( function ( object ) { if ( object.isLight ) { currentRenderState.pushLight( object ); if ( object.castShadow ) { currentRenderState.pushShadow( object ); } } } ); currentRenderState.setupLights( camera ); scene.traverse( function ( object ) { if ( object.material ) { if ( Array.isArray( object.material ) ) { for ( var i = 0; i < object.material.length; i ++ ) { initMaterial( object.material[ i ], scene.fog, object ); } } else { initMaterial( object.material, scene.fog, object ); } } } ); }; // Animation Loop var onAnimationFrameCallback = null; function onAnimationFrame( time ) { if ( vr.isPresenting() ) return; if ( onAnimationFrameCallback ) onAnimationFrameCallback( time ); } var animation = new WebGLAnimation(); animation.setAnimationLoop( onAnimationFrame ); if ( typeof window !== 'undefined' ) animation.setContext( window ); this.setAnimationLoop = function ( callback ) { onAnimationFrameCallback = callback; vr.setAnimationLoop( callback ); animation.start(); }; // Rendering this.render = function ( scene, camera ) { var renderTarget, forceClear; if ( arguments[ 2 ] !== undefined ) { console.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' ); renderTarget = arguments[ 2 ]; } if ( arguments[ 3 ] !== undefined ) { console.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' ); forceClear = arguments[ 3 ]; } if ( ! ( camera && camera.isCamera ) ) { console.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' ); return; } if ( _isContextLost ) return; // reset caching for this frame _currentGeometryProgram.geometry = null; _currentGeometryProgram.program = null; _currentGeometryProgram.wireframe = false; _currentMaterialId = - 1; _currentCamera = null; // update scene graph if ( scene.autoUpdate === true ) scene.updateMatrixWorld(); // update camera matrices and frustum if ( camera.parent === null ) camera.updateMatrixWorld(); if ( vr.enabled ) { camera = vr.getCamera( camera ); } // currentRenderState = renderStates.get( scene, camera ); currentRenderState.init(); scene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget ); _projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse ); _frustum.setFromMatrix( _projScreenMatrix ); _localClippingEnabled = this.localClippingEnabled; _clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera ); currentRenderList = renderLists.get( scene, camera ); currentRenderList.init(); projectObject( scene, camera, 0, _this.sortObjects ); if ( _this.sortObjects === true ) { currentRenderList.sort(); } // if ( _clippingEnabled ) _clipping.beginShadows(); var shadowsArray = currentRenderState.state.shadowsArray; shadowMap.render( shadowsArray, scene, camera ); currentRenderState.setupLights( camera ); if ( _clippingEnabled ) _clipping.endShadows(); // if ( this.info.autoReset ) this.info.reset(); if ( renderTarget !== undefined ) { this.setRenderTarget( renderTarget ); } // background.render( currentRenderList, scene, camera, forceClear ); // render scene var opaqueObjects = currentRenderList.opaque; var transparentObjects = currentRenderList.transparent; if ( scene.overrideMaterial ) { var overrideMaterial = scene.overrideMaterial; if ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial ); if ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial ); } else { // opaque pass (front-to-back order) if ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera ); // transparent pass (back-to-front order) if ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera ); } // scene.onAfterRender( _this, scene, camera ); // if ( _currentRenderTarget !== null ) { // Generate mipmap if we're using any kind of mipmap filtering textures.updateRenderTargetMipmap( _currentRenderTarget ); // resolve multisample renderbuffers to a single-sample texture if necessary textures.updateMultisampleRenderTarget( _currentRenderTarget ); } // Ensure depth buffer writing is enabled so it can be cleared on next render state.buffers.depth.setTest( true ); state.buffers.depth.setMask( true ); state.buffers.color.setMask( true ); state.setPolygonOffset( false ); if ( vr.enabled ) { vr.submitFrame(); } // _gl.finish(); currentRenderList = null; currentRenderState = null; }; function projectObject( object, camera, groupOrder, sortObjects ) { if ( object.visible === false ) return; var visible = object.layers.test( camera.layers ); if ( visible ) { if ( object.isGroup ) { groupOrder = object.renderOrder; } else if ( object.isLight ) { currentRenderState.pushLight( object ); if ( object.castShadow ) { currentRenderState.pushShadow( object ); } } else if ( object.isSprite ) { if ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) { if ( sortObjects ) { _vector3.setFromMatrixPosition( object.matrixWorld ) .applyMatrix4( _projScreenMatrix ); } var geometry = objects.update( object ); var material = object.material; if ( material.visible ) { currentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null ); } } } else if ( object.isImmediateRenderObject ) { if ( sortObjects ) { _vector3.setFromMatrixPosition( object.matrixWorld ) .applyMatrix4( _projScreenMatrix ); } currentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null ); } else if ( object.isMesh || object.isLine || object.isPoints ) { if ( object.isSkinnedMesh ) { object.skeleton.update(); } if ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) { if ( sortObjects ) { _vector3.setFromMatrixPosition( object.matrixWorld ) .applyMatrix4( _projScreenMatrix ); } var geometry = objects.update( object ); var material = object.material; if ( Array.isArray( material ) ) { var groups = geometry.groups; for ( var i = 0, l = groups.length; i < l; i ++ ) { var group = groups[ i ]; var groupMaterial = material[ group.materialIndex ]; if ( groupMaterial && groupMaterial.visible ) { currentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group ); } } } else if ( material.visible ) { currentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null ); } } } } var children = object.children; for ( var i = 0, l = children.length; i < l; i ++ ) { projectObject( children[ i ], camera, groupOrder, sortObjects ); } } function renderObjects( renderList, scene, camera, overrideMaterial ) { for ( var i = 0, l = renderList.length; i < l; i ++ ) { var renderItem = renderList[ i ]; var object = renderItem.object; var geometry = renderItem.geometry; var material = overrideMaterial === undefined ? renderItem.material : overrideMaterial; var group = renderItem.group; if ( camera.isArrayCamera ) { _currentArrayCamera = camera; var cameras = camera.cameras; for ( var j = 0, jl = cameras.length; j < jl; j ++ ) { var camera2 = cameras[ j ]; if ( object.layers.test( camera2.layers ) ) { if ( 'viewport' in camera2 ) { // XR state.viewport( _currentViewport.copy( camera2.viewport ) ); } else { var bounds = camera2.bounds; var x = bounds.x * _width; var y = bounds.y * _height; var width = bounds.z * _width; var height = bounds.w * _height; state.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) ); } currentRenderState.setupLights( camera2 ); renderObject( object, scene, camera2, geometry, material, group ); } } } else { _currentArrayCamera = null; renderObject( object, scene, camera, geometry, material, group ); } } } function renderObject( object, scene, camera, geometry, material, group ) { object.onBeforeRender( _this, scene, camera, geometry, material, group ); currentRenderState = renderStates.get( scene, _currentArrayCamera || camera ); object.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld ); object.normalMatrix.getNormalMatrix( object.modelViewMatrix ); if ( object.isImmediateRenderObject ) { state.setMaterial( material ); var program = setProgram( camera, scene.fog, material, object ); _currentGeometryProgram.geometry = null; _currentGeometryProgram.program = null; _currentGeometryProgram.wireframe = false; renderObjectImmediate( object, program ); } else { _this.renderBufferDirect( camera, scene.fog, geometry, material, object, group ); } object.onAfterRender( _this, scene, camera, geometry, material, group ); currentRenderState = renderStates.get( scene, _currentArrayCamera || camera ); } function initMaterial( material, fog, object ) { var materialProperties = properties.get( material ); var lights = currentRenderState.state.lights; var shadowsArray = currentRenderState.state.shadowsArray; var lightsHash = materialProperties.lightsHash; var lightsStateHash = lights.state.hash; var parameters = programCache.getParameters( material, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object ); var code = programCache.getProgramCode( material, parameters ); var program = materialProperties.program; var programChange = true; if ( program === undefined ) { // new material material.addEventListener( 'dispose', onMaterialDispose ); } else if ( program.code !== code ) { // changed glsl or parameters releaseMaterialProgramReference( material ); } else if ( lightsHash.stateID !== lightsStateHash.stateID || lightsHash.directionalLength !== lightsStateHash.directionalLength || lightsHash.pointLength !== lightsStateHash.pointLength || lightsHash.spotLength !== lightsStateHash.spotLength || lightsHash.rectAreaLength !== lightsStateHash.rectAreaLength || lightsHash.hemiLength !== lightsStateHash.hemiLength || lightsHash.shadowsLength !== lightsStateHash.shadowsLength ) { lightsHash.stateID = lightsStateHash.stateID; lightsHash.directionalLength = lightsStateHash.directionalLength; lightsHash.pointLength = lightsStateHash.pointLength; lightsHash.spotLength = lightsStateHash.spotLength; lightsHash.rectAreaLength = lightsStateHash.rectAreaLength; lightsHash.hemiLength = lightsStateHash.hemiLength; lightsHash.shadowsLength = lightsStateHash.shadowsLength; programChange = false; } else if ( parameters.shaderID !== undefined ) { // same glsl and uniform list return; } else { // only rebuild uniform list programChange = false; } if ( programChange ) { if ( parameters.shaderID ) { var shader = ShaderLib[ parameters.shaderID ]; materialProperties.shader = { name: material.type, uniforms: cloneUniforms( shader.uniforms ), vertexShader: shader.vertexShader, fragmentShader: shader.fragmentShader }; } else { materialProperties.shader = { name: material.type, uniforms: material.uniforms, vertexShader: material.vertexShader, fragmentShader: material.fragmentShader }; } material.onBeforeCompile( materialProperties.shader, _this ); // Computing code again as onBeforeCompile may have changed the shaders code = programCache.getProgramCode( material, parameters ); program = programCache.acquireProgram( material, materialProperties.shader, parameters, code ); materialProperties.program = program; material.program = program; } var programAttributes = program.getAttributes(); if ( material.morphTargets ) { material.numSupportedMorphTargets = 0; for ( var i = 0; i < _this.maxMorphTargets; i ++ ) { if ( programAttributes[ 'morphTarget' + i ] >= 0 ) { material.numSupportedMorphTargets ++; } } } if ( material.morphNormals ) { material.numSupportedMorphNormals = 0; for ( var i = 0; i < _this.maxMorphNormals; i ++ ) { if ( programAttributes[ 'morphNormal' + i ] >= 0 ) { material.numSupportedMorphNormals ++; } } } var uniforms = materialProperties.shader.uniforms; if ( ! material.isShaderMaterial && ! material.isRawShaderMaterial || material.clipping === true ) { materialProperties.numClippingPlanes = _clipping.numPlanes; materialProperties.numIntersection = _clipping.numIntersection; uniforms.clippingPlanes = _clipping.uniform; } materialProperties.fog = fog; // store the light setup it was created for if ( lightsHash === undefined ) { materialProperties.lightsHash = lightsHash = {}; } lightsHash.stateID = lightsStateHash.stateID; lightsHash.directionalLength = lightsStateHash.directionalLength; lightsHash.pointLength = lightsStateHash.pointLength; lightsHash.spotLength = lightsStateHash.spotLength; lightsHash.rectAreaLength = lightsStateHash.rectAreaLength; lightsHash.hemiLength = lightsStateHash.hemiLength; lightsHash.shadowsLength = lightsStateHash.shadowsLength; if ( material.lights ) { // wire up the material to this renderer's lighting state uniforms.ambientLightColor.value = lights.state.ambient; uniforms.directionalLights.value = lights.state.directional; uniforms.spotLights.value = lights.state.spot; uniforms.rectAreaLights.value = lights.state.rectArea; uniforms.pointLights.value = lights.state.point; uniforms.hemisphereLights.value = lights.state.hemi; uniforms.directionalShadowMap.value = lights.state.directionalShadowMap; uniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix; uniforms.spotShadowMap.value = lights.state.spotShadowMap; uniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix; uniforms.pointShadowMap.value = lights.state.pointShadowMap; uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix; // TODO (abelnation): add area lights shadow info to uniforms } var progUniforms = materialProperties.program.getUniforms(), uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms ); materialProperties.uniformsList = uniformsList; } function setProgram( camera, fog, material, object ) { _usedTextureUnits = 0; var materialProperties = properties.get( material ); var lights = currentRenderState.state.lights; var lightsHash = materialProperties.lightsHash; var lightsStateHash = lights.state.hash; if ( _clippingEnabled ) { if ( _localClippingEnabled || camera !== _currentCamera ) { var useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup // object instead of the material, once it becomes feasible // (#8465, #8379) _clipping.setState( material.clippingPlanes, material.clipIntersection, material.clipShadows, camera, materialProperties, useCache ); } } if ( material.needsUpdate === false ) { if ( materialProperties.program === undefined ) { material.needsUpdate = true; } else if ( material.fog && materialProperties.fog !== fog ) { material.needsUpdate = true; } else if ( material.lights && ( lightsHash.stateID !== lightsStateHash.stateID || lightsHash.directionalLength !== lightsStateHash.directionalLength || lightsHash.pointLength !== lightsStateHash.pointLength || lightsHash.spotLength !== lightsStateHash.spotLength || lightsHash.rectAreaLength !== lightsStateHash.rectAreaLength || lightsHash.hemiLength !== lightsStateHash.hemiLength || lightsHash.shadowsLength !== lightsStateHash.shadowsLength ) ) { material.needsUpdate = true; } else if ( materialProperties.numClippingPlanes !== undefined && ( materialProperties.numClippingPlanes !== _clipping.numPlanes || materialProperties.numIntersection !== _clipping.numIntersection ) ) { material.needsUpdate = true; } } if ( material.needsUpdate ) { initMaterial( material, fog, object ); material.needsUpdate = false; } var refreshProgram = false; var refreshMaterial = false; var refreshLights = false; var program = materialProperties.program, p_uniforms = program.getUniforms(), m_uniforms = materialProperties.shader.uniforms; if ( state.useProgram( program.program ) ) { refreshProgram = true; refreshMaterial = true; refreshLights = true; } if ( material.id !== _currentMaterialId ) { _currentMaterialId = material.id; refreshMaterial = true; } if ( refreshProgram || _currentCamera !== camera ) { p_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix ); if ( capabilities.logarithmicDepthBuffer ) { p_uniforms.setValue( _gl, 'logDepthBufFC', 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) ); } if ( _currentCamera !== camera ) { _currentCamera = camera; // lighting uniforms depend on the camera so enforce an update // now, in case this material supports lights - or later, when // the next material that does gets activated: refreshMaterial = true; // set to true on material change refreshLights = true; // remains set until update done } // load material specific uniforms // (shader material also gets them for the sake of genericity) if ( material.isShaderMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.envMap ) { var uCamPos = p_uniforms.map.cameraPosition; if ( uCamPos !== undefined ) { uCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) ); } } if ( material.isMeshPhongMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial || material.skinning ) { p_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse ); } } // skinning uniforms must be set even if material didn't change // auto-setting of texture unit for bone texture must go before other textures // not sure why, but otherwise weird things happen if ( material.skinning ) { p_uniforms.setOptional( _gl, object, 'bindMatrix' ); p_uniforms.setOptional( _gl, object, 'bindMatrixInverse' ); var skeleton = object.skeleton; if ( skeleton ) { var bones = skeleton.bones; if ( capabilities.floatVertexTextures ) { if ( skeleton.boneTexture === undefined ) { // layout (1 matrix = 4 pixels) // RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4) // with 8x8 pixel texture max 16 bones * 4 pixels = (8 * 8) // 16x16 pixel texture max 64 bones * 4 pixels = (16 * 16) // 32x32 pixel texture max 256 bones * 4 pixels = (32 * 32) // 64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64) var size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix size = _Math.ceilPowerOfTwo( size ); size = Math.max( size, 4 ); var boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel boneMatrices.set( skeleton.boneMatrices ); // copy current values var boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType ); boneTexture.needsUpdate = true; skeleton.boneMatrices = boneMatrices; skeleton.boneTexture = boneTexture; skeleton.boneTextureSize = size; } p_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture ); p_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize ); } else { p_uniforms.setOptional( _gl, skeleton, 'boneMatrices' ); } } } if ( refreshMaterial ) { p_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure ); p_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint ); if ( material.lights ) { // the current material requires lighting info // note: all lighting uniforms are always set correctly // they simply reference the renderer's state for their // values // // use the current material's .needsUpdate flags to set // the GL state when required markUniformsLightsNeedsUpdate( m_uniforms, refreshLights ); } // refresh uniforms common to several materials if ( fog && material.fog ) { refreshUniformsFog( m_uniforms, fog ); } if ( material.isMeshBasicMaterial ) { refreshUniformsCommon( m_uniforms, material ); } else if ( material.isMeshLambertMaterial ) { refreshUniformsCommon( m_uniforms, material ); refreshUniformsLambert( m_uniforms, material ); } else if ( material.isMeshPhongMaterial ) { refreshUniformsCommon( m_uniforms, material ); if ( material.isMeshToonMaterial ) { refreshUniformsToon( m_uniforms, material ); } else { refreshUniformsPhong( m_uniforms, material ); } } else if ( material.isMeshStandardMaterial ) { refreshUniformsCommon( m_uniforms, material ); if ( material.isMeshPhysicalMaterial ) { refreshUniformsPhysical( m_uniforms, material ); } else { refreshUniformsStandard( m_uniforms, material ); } } else if ( material.isMeshMatcapMaterial ) { refreshUniformsCommon( m_uniforms, material ); refreshUniformsMatcap( m_uniforms, material ); } else if ( material.isMeshDepthMaterial ) { refreshUniformsCommon( m_uniforms, material ); refreshUniformsDepth( m_uniforms, material ); } else if ( material.isMeshDistanceMaterial ) { refreshUniformsCommon( m_uniforms, material ); refreshUniformsDistance( m_uniforms, material ); } else if ( material.isMeshNormalMaterial ) { refreshUniformsCommon( m_uniforms, material ); refreshUniformsNormal( m_uniforms, material ); } else if ( material.isLineBasicMaterial ) { refreshUniformsLine( m_uniforms, material ); if ( material.isLineDashedMaterial ) { refreshUniformsDash( m_uniforms, material ); } } else if ( material.isPointsMaterial ) { refreshUniformsPoints( m_uniforms, material ); } else if ( material.isSpriteMaterial ) { refreshUniformsSprites( m_uniforms, material ); } else if ( material.isShadowMaterial ) { m_uniforms.color.value = material.color; m_uniforms.opacity.value = material.opacity; } // RectAreaLight Texture // TODO (mrdoob): Find a nicer implementation if ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1; if ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2; WebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this ); } if ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) { WebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this ); material.uniformsNeedUpdate = false; } if ( material.isSpriteMaterial ) { p_uniforms.setValue( _gl, 'center', object.center ); } // common matrices p_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix ); p_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix ); p_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld ); return program; } // Uniforms (refresh uniforms objects) function refreshUniformsCommon( uniforms, material ) { uniforms.opacity.value = material.opacity; if ( material.color ) { uniforms.diffuse.value = material.color; } if ( material.emissive ) { uniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity ); } if ( material.map ) { uniforms.map.value = material.map; } if ( material.alphaMap ) { uniforms.alphaMap.value = material.alphaMap; } if ( material.specularMap ) { uniforms.specularMap.value = material.specularMap; } if ( material.envMap ) { uniforms.envMap.value = material.envMap; // don't flip CubeTexture envMaps, flip everything else: // WebGLRenderTargetCube will be flipped for backwards compatibility // WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture // this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future uniforms.flipEnvMap.value = material.envMap.isCubeTexture ? - 1 : 1; uniforms.reflectivity.value = material.reflectivity; uniforms.refractionRatio.value = material.refractionRatio; uniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel; } if ( material.lightMap ) { uniforms.lightMap.value = material.lightMap; uniforms.lightMapIntensity.value = material.lightMapIntensity; } if ( material.aoMap ) { uniforms.aoMap.value = material.aoMap; uniforms.aoMapIntensity.value = material.aoMapIntensity; } // uv repeat and offset setting priorities // 1. color map // 2. specular map // 3. normal map // 4. bump map // 5. alpha map // 6. emissive map var uvScaleMap; if ( material.map ) { uvScaleMap = material.map; } else if ( material.specularMap ) { uvScaleMap = material.specularMap; } else if ( material.displacementMap ) { uvScaleMap = material.displacementMap; } else if ( material.normalMap ) { uvScaleMap = material.normalMap; } else if ( material.bumpMap ) { uvScaleMap = material.bumpMap; } else if ( material.roughnessMap ) { uvScaleMap = material.roughnessMap; } else if ( material.metalnessMap ) { uvScaleMap = material.metalnessMap; } else if ( material.alphaMap ) { uvScaleMap = material.alphaMap; } else if ( material.emissiveMap ) { uvScaleMap = material.emissiveMap; } if ( uvScaleMap !== undefined ) { // backwards compatibility if ( uvScaleMap.isWebGLRenderTarget ) { uvScaleMap = uvScaleMap.texture; } if ( uvScaleMap.matrixAutoUpdate === true ) { uvScaleMap.updateMatrix(); } uniforms.uvTransform.value.copy( uvScaleMap.matrix ); } } function refreshUniformsLine( uniforms, material ) { uniforms.diffuse.value = material.color; uniforms.opacity.value = material.opacity; } function refreshUniformsDash( uniforms, material ) { uniforms.dashSize.value = material.dashSize; uniforms.totalSize.value = material.dashSize + material.gapSize; uniforms.scale.value = material.scale; } function refreshUniformsPoints( uniforms, material ) { uniforms.diffuse.value = material.color; uniforms.opacity.value = material.opacity; uniforms.size.value = material.size * _pixelRatio; uniforms.scale.value = _height * 0.5; uniforms.map.value = material.map; if ( material.map !== null ) { if ( material.map.matrixAutoUpdate === true ) { material.map.updateMatrix(); } uniforms.uvTransform.value.copy( material.map.matrix ); } } function refreshUniformsSprites( uniforms, material ) { uniforms.diffuse.value = material.color; uniforms.opacity.value = material.opacity; uniforms.rotation.value = material.rotation; uniforms.map.value = material.map; if ( material.map !== null ) { if ( material.map.matrixAutoUpdate === true ) { material.map.updateMatrix(); } uniforms.uvTransform.value.copy( material.map.matrix ); } } function refreshUniformsFog( uniforms, fog ) { uniforms.fogColor.value = fog.color; if ( fog.isFog ) { uniforms.fogNear.value = fog.near; uniforms.fogFar.value = fog.far; } else if ( fog.isFogExp2 ) { uniforms.fogDensity.value = fog.density; } } function refreshUniformsLambert( uniforms, material ) { if ( material.emissiveMap ) { uniforms.emissiveMap.value = material.emissiveMap; } } function refreshUniformsPhong( uniforms, material ) { uniforms.specular.value = material.specular; uniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 ) if ( material.emissiveMap ) { uniforms.emissiveMap.value = material.emissiveMap; } if ( material.bumpMap ) { uniforms.bumpMap.value = material.bumpMap; uniforms.bumpScale.value = material.bumpScale; if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1; } if ( material.normalMap ) { uniforms.normalMap.value = material.normalMap; uniforms.normalScale.value.copy( material.normalScale ); if ( material.side === BackSide ) uniforms.normalScale.value.negate(); } if ( material.displacementMap ) { uniforms.displacementMap.value = material.displacementMap; uniforms.displacementScale.value = material.displacementScale; uniforms.displacementBias.value = material.displacementBias; } } function refreshUniformsToon( uniforms, material ) { refreshUniformsPhong( uniforms, material ); if ( material.gradientMap ) { uniforms.gradientMap.value = material.gradientMap; } } function refreshUniformsStandard( uniforms, material ) { uniforms.roughness.value = material.roughness; uniforms.metalness.value = material.metalness; if ( material.roughnessMap ) { uniforms.roughnessMap.value = material.roughnessMap; } if ( material.metalnessMap ) { uniforms.metalnessMap.value = material.metalnessMap; } if ( material.emissiveMap ) { uniforms.emissiveMap.value = material.emissiveMap; } if ( material.bumpMap ) { uniforms.bumpMap.value = material.bumpMap; uniforms.bumpScale.value = material.bumpScale; if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1; } if ( material.normalMap ) { uniforms.normalMap.value = material.normalMap; uniforms.normalScale.value.copy( material.normalScale ); if ( material.side === BackSide ) uniforms.normalScale.value.negate(); } if ( material.displacementMap ) { uniforms.displacementMap.value = material.displacementMap; uniforms.displacementScale.value = material.displacementScale; uniforms.displacementBias.value = material.displacementBias; } if ( material.envMap ) { //uniforms.envMap.value = material.envMap; // part of uniforms common uniforms.envMapIntensity.value = material.envMapIntensity; } } function refreshUniformsPhysical( uniforms, material ) { refreshUniformsStandard( uniforms, material ); uniforms.reflectivity.value = material.reflectivity; // also part of uniforms common uniforms.clearCoat.value = material.clearCoat; uniforms.clearCoatRoughness.value = material.clearCoatRoughness; } function refreshUniformsMatcap( uniforms, material ) { if ( material.matcap ) { uniforms.matcap.value = material.matcap; } if ( material.bumpMap ) { uniforms.bumpMap.value = material.bumpMap; uniforms.bumpScale.value = material.bumpScale; if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1; } if ( material.normalMap ) { uniforms.normalMap.value = material.normalMap; uniforms.normalScale.value.copy( material.normalScale ); if ( material.side === BackSide ) uniforms.normalScale.value.negate(); } if ( material.displacementMap ) { uniforms.displacementMap.value = material.displacementMap; uniforms.displacementScale.value = material.displacementScale; uniforms.displacementBias.value = material.displacementBias; } } function refreshUniformsDepth( uniforms, material ) { if ( material.displacementMap ) { uniforms.displacementMap.value = material.displacementMap; uniforms.displacementScale.value = material.displacementScale; uniforms.displacementBias.value = material.displacementBias; } } function refreshUniformsDistance( uniforms, material ) { if ( material.displacementMap ) { uniforms.displacementMap.value = material.displacementMap; uniforms.displacementScale.value = material.displacementScale; uniforms.displacementBias.value = material.displacementBias; } uniforms.referencePosition.value.copy( material.referencePosition ); uniforms.nearDistance.value = material.nearDistance; uniforms.farDistance.value = material.farDistance; } function refreshUniformsNormal( uniforms, material ) { if ( material.bumpMap ) { uniforms.bumpMap.value = material.bumpMap; uniforms.bumpScale.value = material.bumpScale; if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1; } if ( material.normalMap ) { uniforms.normalMap.value = material.normalMap; uniforms.normalScale.value.copy( material.normalScale ); if ( material.side === BackSide ) uniforms.normalScale.value.negate(); } if ( material.displacementMap ) { uniforms.displacementMap.value = material.displacementMap; uniforms.displacementScale.value = material.displacementScale; uniforms.displacementBias.value = material.displacementBias; } } // If uniforms are marked as clean, they don't need to be loaded to the GPU. function markUniformsLightsNeedsUpdate( uniforms, value ) { uniforms.ambientLightColor.needsUpdate = value; uniforms.directionalLights.needsUpdate = value; uniforms.pointLights.needsUpdate = value; uniforms.spotLights.needsUpdate = value; uniforms.rectAreaLights.needsUpdate = value; uniforms.hemisphereLights.needsUpdate = value; } // Textures function allocTextureUnit() { var textureUnit = _usedTextureUnits; if ( textureUnit >= capabilities.maxTextures ) { console.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures ); } _usedTextureUnits += 1; return textureUnit; } this.allocTextureUnit = allocTextureUnit; // this.setTexture2D = setTexture2D; this.setTexture2D = ( function () { var warned = false; // backwards compatibility: peel texture.texture return function setTexture2D( texture, slot ) { if ( texture && texture.isWebGLRenderTarget ) { if ( ! warned ) { console.warn( "THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead." ); warned = true; } texture = texture.texture; } textures.setTexture2D( texture, slot ); }; }() ); this.setTexture2DArray = function ( texture, slot ) { textures.setTexture2DArray( texture, slot ); }; this.setTexture3D = function ( texture, slot ) { textures.setTexture3D( texture, slot ); }; this.setTexture = ( function () { var warned = false; return function setTexture( texture, slot ) { if ( ! warned ) { console.warn( "THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead." ); warned = true; } textures.setTexture2D( texture, slot ); }; }() ); this.setTextureCube = ( function () { var warned = false; return function setTextureCube( texture, slot ) { // backwards compatibility: peel texture.texture if ( texture && texture.isWebGLRenderTargetCube ) { if ( ! warned ) { console.warn( "THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead." ); warned = true; } texture = texture.texture; } // currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture // TODO: unify these code paths if ( ( texture && texture.isCubeTexture ) || ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) { // CompressedTexture can have Array in image :/ // this function alone should take care of cube textures textures.setTextureCube( texture, slot ); } else { // assumed: texture property of THREE.WebGLRenderTargetCube textures.setTextureCubeDynamic( texture, slot ); } }; }() ); // this.setFramebuffer = function ( value ) { _framebuffer = value; }; this.getRenderTarget = function () { return _currentRenderTarget; }; this.setRenderTarget = function ( renderTarget, activeCubeFace, activeMipMapLevel ) { _currentRenderTarget = renderTarget; if ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) { textures.setupRenderTarget( renderTarget ); } var framebuffer = _framebuffer; var isCube = false; if ( renderTarget ) { var __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer; if ( renderTarget.isWebGLRenderTargetCube ) { framebuffer = __webglFramebuffer[ activeCubeFace || 0 ]; isCube = true; } else if ( renderTarget.isWebGLMultisampleRenderTarget ) { framebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer; } else { framebuffer = __webglFramebuffer; } _currentViewport.copy( renderTarget.viewport ); _currentScissor.copy( renderTarget.scissor ); _currentScissorTest = renderTarget.scissorTest; } else { _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ); _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ); _currentScissorTest = _scissorTest; } if ( _currentFramebuffer !== framebuffer ) { _gl.bindFramebuffer( 36160, framebuffer ); _currentFramebuffer = framebuffer; } state.viewport( _currentViewport ); state.scissor( _currentScissor ); state.setScissorTest( _currentScissorTest ); if ( isCube ) { var textureProperties = properties.get( renderTarget.texture ); _gl.framebufferTexture2D( 36160, 36064, 34069 + ( activeCubeFace || 0 ), textureProperties.__webglTexture, activeMipMapLevel || 0 ); } }; this.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) { if ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) { console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' ); return; } var framebuffer = properties.get( renderTarget ).__webglFramebuffer; if ( framebuffer ) { var restore = false; if ( framebuffer !== _currentFramebuffer ) { _gl.bindFramebuffer( 36160, framebuffer ); restore = true; } try { var texture = renderTarget.texture; var textureFormat = texture.format; var textureType = texture.type; if ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) { console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' ); return; } if ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // IE11, Edge and Chrome Mac < 52 (#9513) ! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox ! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) { console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' ); return; } if ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) { // the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604) if ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) { _gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer ); } } else { console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' ); } } finally { if ( restore ) { _gl.bindFramebuffer( 36160, _currentFramebuffer ); } } } }; this.copyFramebufferToTexture = function ( position, texture, level ) { var width = texture.image.width; var height = texture.image.height; var glFormat = utils.convert( texture.format ); this.setTexture2D( texture, 0 ); _gl.copyTexImage2D( 3553, level || 0, glFormat, position.x, position.y, width, height, 0 ); }; this.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) { var width = srcTexture.image.width; var height = srcTexture.image.height; var glFormat = utils.convert( dstTexture.format ); var glType = utils.convert( dstTexture.type ); this.setTexture2D( dstTexture, 0 ); if ( srcTexture.isDataTexture ) { _gl.texSubImage2D( 3553, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data ); } else { _gl.texSubImage2D( 3553, level || 0, position.x, position.y, glFormat, glType, srcTexture.image ); } }; } /** * @author mrdoob / http://mrdoob.com/ * @author alteredq / http://alteredqualia.com/ */ function FogExp2( color, density ) { this.name = ''; this.color = new Color( color ); this.density = ( density !== undefined ) ? density : 0.00025; } Object.assign( FogExp2.prototype, { isFogExp2: true, clone: function () { return new FogExp2( this.color, this.density ); }, toJSON: function ( /* meta */ ) { return { type: 'FogExp2', color: this.color.getHex(), density: this.density }; } } ); /** * @author mrdoob / http://mrdoob.com/ * @author alteredq / http://alteredqualia.com/ */ function Fog( color, near, far ) { this.name = ''; this.color = new Color( color ); this.near = ( near !== undefined ) ? near : 1; this.far = ( far !== undefined ) ? far : 1000; } Object.assign( Fog.prototype, { isFog: true, clone: function () { return new Fog( this.color, this.near, this.far ); }, toJSON: function ( /* meta */ ) { return { type: 'Fog', color: this.color.getHex(), near: this.near, far: this.far }; } } ); /** * @author mrdoob / http://mrdoob.com/ */ function Scene() { Object3D.call( this ); this.type = 'Scene'; this.background = null; this.fog = null; this.overrideMaterial = null; this.autoUpdate = true; // checked by the renderer } Scene.prototype = Object.assign( Object.create( Object3D.prototype ), { constructor: Scene, isScene: true, copy: function ( source, recursive ) { Object3D.prototype.copy.call( this, source, recursive ); if ( source.background !== null ) this.background = source.background.clone(); if ( source.fog !== null ) this.fog = source.fog.clone(); if ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone(); this.autoUpdate = source.autoUpdate; this.matrixAutoUpdate = source.matrixAutoUpdate; return this; }, toJSON: function ( meta ) { var data = Object3D.prototype.toJSON.call( this, meta ); if ( this.background !== null ) data.object.background = this.background.toJSON( meta ); if ( this.fog !== null ) data.object.fog = this.fog.toJSON(); return data; }, dispose: function () { this.dispatchEvent( { type: 'dispose' } ); } } ); /** * @author benaadams / https://twitter.com/ben_a_adams */ function InterleavedBuffer( array, stride ) { this.array = array; this.stride = stride; this.count = array !== undefined ? array.length / stride : 0; this.dynamic = false; this.updateRange = { offset: 0, count: - 1 }; this.version = 0; } Object.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', { set: function ( value ) { if ( value === true ) this.version ++; } } ); Object.assign( InterleavedBuffer.prototype, { isInterleavedBuffer: true, onUploadCallback: function () {}, setArray: function ( array ) { if ( Array.isArray( array ) ) { throw new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' ); } this.count = array !== undefined ? array.length / this.stride : 0; this.array = array; return this; }, setDynamic: function ( value ) { this.dynamic = value; return this; }, copy: function ( source ) { this.array = new source.array.constructor( source.array ); this.count = source.count; this.stride = source.stride; this.dynamic = source.dynamic; return this; }, copyAt: function ( index1, attribute, index2 ) { index1 *= this.stride; index2 *= attribute.stride; for ( var i = 0, l = this.stride; i < l; i ++ ) { this.array[ index1 + i ] = attribute.array[ index2 + i ]; } return this; }, set: function ( value, offset ) { if ( offset === undefined ) offset = 0; this.array.set( value, offset ); return this; }, clone: function () { return new this.constructor().copy( this ); }, onUpload: function ( callback ) { this.onUploadCallback = callback; return this; } } ); /** * @author benaadams / https://twitter.com/ben_a_adams */ function InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) { this.data = interleavedBuffer; this.itemSize = itemSize; this.offset = offset; this.normalized = normalized === true; } Object.defineProperties( InterleavedBufferAttribute.prototype, { count: { get: function () { return this.data.count; } }, array: { get: function () { return this.data.array; } } } ); Object.assign( InterleavedBufferAttribute.prototype, { isInterleavedBufferAttribute: true, setX: function ( index, x ) { this.data.array[ index * this.data.stride + this.offset ] = x; return this; }, setY: function ( index, y ) { this.data.array[ index * this.data.stride + this.offset + 1 ] = y; return this; }, setZ: function ( index, z ) { this.data.array[ index * this.data.stride + this.offset + 2 ] = z; return this; }, setW: function ( index, w ) { this.data.array[ index * this.data.stride + this.offset + 3 ] = w; return this; }, getX: function ( index ) { return this.data.array[ index * this.data.stride + this.offset ]; }, getY: function ( index ) { return this.data.array[ index * this.data.stride + this.offset + 1 ]; }, getZ: function ( index ) { return this.data.array[ index * this.data.stride + this.offset + 2 ]; }, getW: function ( index ) { return this.data.array[ index * this.data.stride + this.offset + 3 ]; }, setXY: function ( index, x, y ) { index = index * this.data.stride + this.offset; this.data.array[ index + 0 ] = x; this.data.array[ index + 1 ] = y; return this; }, setXYZ: function ( index, x, y, z ) { index = index * this.data.stride + this.offset; this.data.array[ index + 0 ] = x; this.data.array[ index + 1 ] = y; this.data.array[ index + 2 ] = z; return this; }, setXYZW: function ( index, x, y, z, w ) { index = index * this.data.stride + this.offset; this.data.array[ index + 0 ] = x; this.data.array[ index + 1 ] = y; this.data.array[ index + 2 ] = z; this.data.array[ index + 3 ] = w; return this; } } ); /** * @author alteredq / http://alteredqualia.com/ * * parameters = { * color: <hex>, * map: new THREE.Texture( <Image> ), * rotation: <float>, * sizeAttenuation: <bool> * } */ function SpriteMaterial( parameters ) { Material.call( this ); this.type = 'SpriteMaterial'; this.color = new Color( 0xffffff ); this.map = null; this.rotation = 0; this.sizeAttenuation = true; this.lights = false; this.transparent = true; this.setValues( parameters ); } SpriteMaterial.prototype = Object.create( Material.prototype ); SpriteMaterial.prototype.constructor = SpriteMaterial; SpriteMaterial.prototype.isSpriteMaterial = true; SpriteMaterial.prototype.copy = function ( source ) { Material.prototype.copy.call( this, source ); this.color.copy( source.color ); this.map = source.map; this.rotation = source.rotation; this.sizeAttenuation = source.sizeAttenuation; return this; }; /** * @author mikael emtinger / http://gomo.se/ * @author alteredq / http://alteredqualia.com/ */ var geometry; function Sprite( material ) { Object3D.call( this ); this.type = 'Sprite'; if ( geometry === undefined ) { geometry = new BufferGeometry(); var float32Array = new Float32Array( [ - 0.5, - 0.5, 0, 0, 0, 0.5, - 0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, - 0.5, 0.5, 0, 0, 1 ] ); var interleavedBuffer = new InterleavedBuffer( float32Array, 5 ); geometry.setIndex( [ 0, 1, 2, 0, 2, 3 ] ); geometry.addAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) ); geometry.addAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) ); } this.geometry = geometry; this.material = ( material !== undefined ) ? material : new SpriteMaterial(); this.center = new Vector2( 0.5, 0.5 ); } Sprite.prototype = Object.assign( Object.create( Object3D.prototype ), { constructor: Sprite, isSprite: true, raycast: ( function () { var intersectPoint = new Vector3(); var worldScale = new Vector3(); var mvPosition = new Vector3(); var alignedPosition = new Vector2(); var rotatedPosition = new Vector2(); var viewWorldMatrix = new Matrix4(); var vA = new Vector3(); var vB = new Vector3(); var vC = new Vector3(); var uvA = new Vector2(); var uvB = new Vector2(); var uvC = new Vector2(); function transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) { // compute position in camera space alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale ); // to check if rotation is not zero if ( sin !== undefined ) { rotatedPosition.x = ( cos * alignedPosition.x ) - ( sin * alignedPosition.y ); rotatedPosition.y = ( sin * alignedPosition.x ) + ( cos * alignedPosition.y ); } else { rotatedPosition.copy( alignedPosition ); } vertexPosition.copy( mvPosition ); vertexPosition.x += rotatedPosition.x; vertexPosition.y += rotatedPosition.y; // transform to world space vertexPosition.applyMatrix4( viewWorldMatrix ); } return function raycast( raycaster, intersects ) { worldScale.setFromMatrixScale( this.matrixWorld ); viewWorldMatrix.getInverse( this.modelViewMatrix ).premultiply( this.matrixWorld ); mvPosition.setFromMatrixPosition( this.modelViewMatrix ); var rotation = this.material.rotation; var sin, cos; if ( rotation !== 0 ) { cos = Math.cos( rotation ); sin = Math.sin( rotation ); } var center = this.center; transformVertex( vA.set( - 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos ); transformVertex( vB.set( 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos ); transformVertex( vC.set( 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos ); uvA.set( 0, 0 ); uvB.set( 1, 0 ); uvC.set( 1, 1 ); // check first triangle var intersect = raycaster.ray.intersectTriangle( vA, vB, vC, false, intersectPoint ); if ( intersect === null ) { // check second triangle transformVertex( vB.set( - 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos ); uvB.set( 0, 1 ); intersect = raycaster.ray.intersectTriangle( vA, vC, vB, false, intersectPoint ); if ( intersect === null ) { return; } } var distance = raycaster.ray.origin.distanceTo( intersectPoint ); if ( distance < raycaster.near || distance > raycaster.far ) return; intersects.push( { distance: distance, point: intersectPoint.clone(), uv: Triangle.getUV( intersectPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() ), face: null, object: this } ); }; }() ), clone: function () { return new this.constructor( this.material ).copy( this ); }, copy: function ( source ) { Object3D.prototype.copy.call( this, source ); if ( source.center !== undefined ) this.center.copy( source.center ); return this; } } ); /** * @author mikael emtinger / http://gomo.se/ * @author alteredq / http://alteredqualia.com/ * @author mrdoob / http://mrdoob.com/ */ function LOD() { Object3D.call( this ); this.type = 'LOD'; Object.defineProperties( this, { levels: { enumerable: true, value: [] } } ); } LOD.prototype = Object.assign( Object.create( Object3D.prototype ), { constructor: LOD, copy: function ( source ) { Object3D.prototype.copy.call( this, source, false ); var levels = source.levels; for ( var i = 0, l = levels.length; i < l; i ++ ) { var level = levels[ i ]; this.addLevel( level.object.clone(), level.distance ); } return this; }, addLevel: function ( object, distance ) { if ( distance === undefined ) distance = 0; distance = Math.abs( distance ); var levels = this.levels; for ( var l = 0; l < levels.length; l ++ ) { if ( distance < levels[ l ].distance ) { break; } } levels.splice( l, 0, { distance: distance, object: object } ); this.add( object ); }, getObjectForDistance: function ( distance ) { var levels = this.levels; for ( var i = 1, l = levels.length; i < l; i ++ ) { if ( distance < levels[ i ].distance ) { break; } } return levels[ i - 1 ].object; }, raycast: ( function () { var matrixPosition = new Vector3(); return function raycast( raycaster, intersects ) { matrixPosition.setFromMatrixPosition( this.matrixWorld ); var distance = raycaster.ray.origin.distanceTo( matrixPosition ); this.getObjectForDistance( distance ).raycast( raycaster, intersects ); }; }() ), update: function () { var v1 = new Vector3(); var v2 = new Vector3(); return function update( camera ) { var levels = this.levels; if ( levels.length > 1 ) { v1.setFromMatrixPosition( camera.matrixWorld ); v2.setFromMatrixPosition( this.matrixWorld ); var distance = v1.distanceTo( v2 ); levels[ 0 ].object.visible = true; for ( var i = 1, l = levels.length; i < l; i ++ ) { if ( distance >= levels[ i ].distance ) { levels[ i - 1 ].object.visible = false; levels[ i ].object.visible = true; } else { break; } } for ( ; i < l; i ++ ) { levels[ i ].object.visible = false; } } }; }(), toJSON: function ( meta ) { var data = Object3D.prototype.toJSON.call( this, meta ); data.object.levels = []; var levels = this.levels; for ( var i = 0, l = levels.length; i < l; i ++ ) { var level = levels[ i ]; data.object.levels.push( { object: level.object.uuid, distance: level.distance } ); } return data; } } ); /** * @author mikael emtinger / http://gomo.se/ * @author alteredq / http://alteredqualia.com/ * @author ikerr / http://verold.com */ function SkinnedMesh( geometry, material ) { if ( geometry && geometry.isGeometry ) { console.error( 'THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' ); } Mesh.call( this, geometry, material ); this.type = 'SkinnedMesh'; this.bindMode = 'attached'; this.bindMatrix = new Matrix4(); this.bindMatrixInverse = new Matrix4(); } SkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), { constructor: SkinnedMesh, isSkinnedMesh: true, bind: function ( skeleton, bindMatrix ) { this.skeleton = skeleton; if ( bindMatrix === undefined ) { this.updateMatrixWorld( true ); this.skeleton.calculateInverses(); bindMatrix = this.matrixWorld; } this.bindMatrix.copy( bindMatrix ); this.bindMatrixInverse.getInverse( bindMatrix ); }, pose: function () { this.skeleton.pose(); }, normalizeSkinWeights: function () { var vector = new Vector4(); var skinWeight = this.geometry.attributes.skinWeight; for ( var i = 0, l = skinWeight.count; i < l; i ++ ) { vector.x = skinWeight.getX( i ); vector.y = skinWeight.getY( i ); vector.z = skinWeight.getZ( i ); vector.w = skinWeight.getW( i ); var scale = 1.0 / vector.manhattanLength(); if ( scale !== Infinity ) { vector.multiplyScalar( scale ); } else { vector.set( 1, 0, 0, 0 ); // do something reasonable } skinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w ); } }, updateMatrixWorld: function ( force ) { Mesh.prototype.updateMatrixWorld.call( this, force ); if ( this.bindMode === 'attached' ) { this.bindMatrixInverse.getInverse( this.matrixWorld ); } else if ( this.bindMode === 'detached' ) { this.bindMatrixInverse.getInverse( this.bindMatrix ); } else { console.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode ); } }, clone: function () { return new this.constructor( this.geometry, this.material ).copy( this ); } } ); /** * @author mikael emtinger / http://gomo.se/ * @author alteredq / http://alteredqualia.com/ * @author michael guerrero / http://realitymeltdown.com * @author ikerr / http://verold.com */ function Skeleton( bones, boneInverses ) { // copy the bone array bones = bones || []; this.bones = bones.slice( 0 ); this.boneMatrices = new Float32Array( this.bones.length * 16 ); // use the supplied bone inverses or calculate the inverses if ( boneInverses === undefined ) { this.calculateInverses(); } else { if ( this.bones.length === boneInverses.length ) { this.boneInverses = boneInverses.slice( 0 ); } else { console.warn( 'THREE.Skeleton boneInverses is the wrong length.' ); this.boneInverses = []; for ( var i = 0, il = this.bones.length; i < il; i ++ ) { this.boneInverses.push( new Matrix4() ); } } } } Object.assign( Skeleton.prototype, { calculateInverses: function () { this.boneInverses = []; for ( var i = 0, il = this.bones.length; i < il; i ++ ) { var inverse = new Matrix4(); if ( this.bones[ i ] ) { inverse.getInverse( this.bones[ i ].matrixWorld ); } this.boneInverses.push( inverse ); } }, pose: function () { var bone, i, il; // recover the bind-time world matrices for ( i = 0, il = this.bones.length; i < il; i ++ ) { bone = this.bones[ i ]; if ( bone ) { bone.matrixWorld.getInverse( this.boneInverses[ i ] ); } } // compute the local matrices, positions, rotations and scales for ( i = 0, il = this.bones.length; i < il; i ++ ) { bone = this.bones[ i ]; if ( bone ) { if ( bone.parent && bone.parent.isBone ) { bone.matrix.getInverse( bone.parent.matrixWorld ); bone.matrix.multiply( bone.matrixWorld ); } else { bone.matrix.copy( bone.matrixWorld ); } bone.matrix.decompose( bone.position, bone.quaternion, bone.scale ); } } }, update: ( function () { var offsetMatrix = new Matrix4(); var identityMatrix = new Matrix4(); return function update() { var bones = this.bones; var boneInverses = this.boneInverses; var boneMatrices = this.boneMatrices; var boneTexture = this.boneTexture; // flatten bone matrices to array for ( var i = 0, il = bones.length; i < il; i ++ ) { // compute the offset between the current and the original transform var matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix; offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] ); offsetMatrix.toArray( boneMatrices, i * 16 ); } if ( boneTexture !== undefined ) { boneTexture.needsUpdate = true; } }; } )(), clone: function () { return new Skeleton( this.bones, this.boneInverses ); }, getBoneByName: function ( name ) { for ( var i = 0, il = this.bones.length; i < il; i ++ ) { var bone = this.bones[ i ]; if ( bone.name === name ) { return bone; } } return undefined; } } ); /** * @author mikael emtinger / http://gomo.se/ * @author alteredq / http://alteredqualia.com/ * @author ikerr / http://verold.com */ function Bone() { Object3D.call( this ); this.type = 'Bone'; } Bone.prototype = Object.assign( Object.create( Object3D.prototype ), { constructor: Bone, isBone: true } ); /** * @author mrdoob / http://mrdoob.com/ * @author alteredq / http://alteredqualia.com/ * * parameters = { * color: <hex>, * opacity: <float>, * * linewidth: <float>, * linecap: "round", * linejoin: "round" * } */ function LineBasicMaterial( parameters ) { Material.call( this ); this.type = 'LineBasicMaterial'; this.color = new Color( 0xffffff ); this.linewidth = 1; this.linecap = 'round'; this.linejoin = 'round'; this.lights = false; this.setValues( parameters ); } LineBasicMaterial.prototype = Object.create( Material.prototype ); LineBasicMaterial.prototype.constructor = LineBasicMaterial; LineBasicMaterial.prototype.isLineBasicMaterial = true; LineBasicMaterial.prototype.copy = function ( source ) { Material.prototype.copy.call( this, source ); this.color.copy( source.color ); this.linewidth = source.linewidth; this.linecap = source.linecap; this.linejoin = source.linejoin; return this; }; /** * @author mrdoob / http://mrdoob.com/ */ function Line( geometry, material, mode ) { if ( mode === 1 ) { console.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' ); } Object3D.call( this ); this.type = 'Line'; this.geometry = geometry !== undefined ? geometry : new BufferGeometry(); this.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } ); } Line.prototype = Object.assign( Object.create( Object3D.prototype ), { constructor: Line, isLine: true, computeLineDistances: ( function () { var start = new Vector3(); var end = new Vector3(); return function computeLineDistances() { var geometry = this.geometry; if ( geometry.isBufferGeometry ) { // we assume non-indexed geometry if ( geometry.index === null ) { var positionAttribute = geometry.attributes.position; var lineDistances = [ 0 ]; for ( var i = 1, l = positionAttribute.count; i < l; i ++ ) { start.fromBufferAttribute( positionAttribute, i - 1 ); end.fromBufferAttribute( positionAttribute, i ); lineDistances[ i ] = lineDistances[ i - 1 ]; lineDistances[ i ] += start.distanceTo( end ); } geometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) ); } else { console.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' ); } } else if ( geometry.isGeometry ) { var vertices = geometry.vertices; var lineDistances = geometry.lineDistances; lineDistances[ 0 ] = 0; for ( var i = 1, l = vertices.length; i < l; i ++ ) { lineDistances[ i ] = lineDistances[ i - 1 ]; lineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] ); } } return this; }; }() ), raycast: ( function () { var inverseMatrix = new Matrix4(); var ray = new Ray(); var sphere = new Sphere(); return function raycast( raycaster, intersects ) { var precision = raycaster.linePrecision; var geometry = this.geometry; var matrixWorld = this.matrixWorld; // Checking boundingSphere distance to ray if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere(); sphere.copy( geometry.boundingSphere ); sphere.applyMatrix4( matrixWorld ); sphere.radius += precision; if ( raycaster.ray.intersectsSphere( sphere ) === false ) return; // inverseMatrix.getInverse( matrixWorld ); ray.copy( raycaster.ray ).applyMatrix4( inverseMatrix ); var localPrecision = precision / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 ); var localPrecisionSq = localPrecision * localPrecision; var vStart = new Vector3(); var vEnd = new Vector3(); var interSegment = new Vector3(); var interRay = new Vector3(); var step = ( this && this.isLineSegments ) ? 2 : 1; if ( geometry.isBufferGeometry ) { var index = geometry.index; var attributes = geometry.attributes; var positions = attributes.position.array; if ( index !== null ) { var indices = index.array; for ( var i = 0, l = indices.length - 1; i < l; i += step ) { var a = indices[ i ]; var b = indices[ i + 1 ]; vStart.fromArray( positions, a * 3 ); vEnd.fromArray( positions, b * 3 ); var distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment ); if ( distSq > localPrecisionSq ) continue; interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation var distance = raycaster.ray.origin.distanceTo( interRay ); if ( distance < raycaster.near || distance > raycaster.far ) continue; intersects.push( { distance: distance, // What do we want? intersection point on the ray or on the segment?? // point: raycaster.ray.at( distance ), point: interSegment.clone().applyMatrix4( this.matrixWorld ), index: i, face: null, faceIndex: null, object: this } ); } } else { for ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) { vStart.fromArray( positions, 3 * i ); vEnd.fromArray( positions, 3 * i + 3 ); var distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment ); if ( distSq > localPrecisionSq ) continue; interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation var distance = raycaster.ray.origin.distanceTo( interRay ); if ( distance < raycaster.near || distance > raycaster.far ) continue; intersects.push( { distance: distance, // What do we want? intersection point on the ray or on the segment?? // point: raycaster.ray.at( distance ), point: interSegment.clone().applyMatrix4( this.matrixWorld ), index: i, face: null, faceIndex: null, object: this } ); } } } else if ( geometry.isGeometry ) { var vertices = geometry.vertices; var nbVertices = vertices.length; for ( var i = 0; i < nbVertices - 1; i += step ) { var distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment ); if ( distSq > localPrecisionSq ) continue; interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation var distance = raycaster.ray.origin.distanceTo( interRay ); if ( distance < raycaster.near || distance > raycaster.far ) continue; intersects.push( { distance: distance, // What do we want? intersection point on the ray or on the segment?? // point: raycaster.ray.at( distance ), point: interSegment.clone().applyMatrix4( this.matrixWorld ), index: i, face: null, faceIndex: null, object: this } ); } } }; }() ), clone: function () { return new this.constructor( this.geometry, this.material ).copy( this ); } } ); /** * @author mrdoob / http://mrdoob.com/ */ function LineSegments( geometry, material ) { Line.call( this, geometry, material ); this.type = 'LineSegments'; } LineSegments.prototype = Object.assign( Object.create( Line.prototype ), { constructor: LineSegments, isLineSegments: true, computeLineDistances: ( function () { var start = new Vector3(); var end = new Vector3(); return function computeLineDistances() { var geometry = this.geometry; if ( geometry.isBufferGeometry ) { // we assume non-indexed geometry if ( geometry.index === null ) { var positionAttribute = geometry.attributes.position; var lineDistances = []; for ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) { start.fromBufferAttribute( positionAttribute, i ); end.fromBufferAttribute( positionAttribute, i + 1 ); lineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ]; lineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end ); } geometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) ); } else { console.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' ); } } else if ( geometry.isGeometry ) { var vertices = geometry.vertices; var lineDistances = geometry.lineDistances; for ( var i = 0, l = vertices.length; i < l; i += 2 ) { start.copy( vertices[ i ] ); end.copy( vertices[ i + 1 ] ); lineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ]; lineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end ); } } return this; }; }() ) } ); /** * @author mgreter / http://github.com/mgreter */ function LineLoop( geometry, material ) { Line.call( this, geometry, material ); this.type = 'LineLoop'; } LineLoop.prototype = Object.assign( Object.create( Line.prototype ), { constructor: LineLoop, isLineLoop: true, } ); /** * @author mrdoob / http://mrdoob.com/ * @author alteredq / http://alteredqualia.com/ * * parameters = { * color: <hex>, * opacity: <float>, * map: new THREE.Texture( <Image> ), * * size: <float>, * sizeAttenuation: <bool> * * morphTargets: <bool> * } */ function PointsMaterial( parameters ) { Material.call( this ); this.type = 'PointsMaterial'; this.color = new Color( 0xffffff ); this.map = null; this.size = 1; this.sizeAttenuation = true; this.morphTargets = false; this.lights = false; this.setValues( parameters ); } PointsMaterial.prototype = Object.create( Material.prototype ); PointsMaterial.prototype.constructor = PointsMaterial; PointsMaterial.prototype.isPointsMaterial = true; PointsMaterial.prototype.copy = function ( source ) { Material.prototype.copy.call( this, source ); this.color.copy( source.color ); this.map = source.map; this.size = source.size; this.sizeAttenuation = source.sizeAttenuation; this.morphTargets = source.morphTargets; return this; }; /** * @author alteredq / http://alteredqualia.com/ */ function Points( geometry, material ) { Object3D.call( this ); this.type = 'Points'; this.geometry = geometry !== undefined ? geometry : new BufferGeometry(); this.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } ); } Points.prototype = Object.assign( Object.create( Object3D.prototype ), { constructor: Points, isPoints: true, raycast: ( function () { var inverseMatrix = new Matrix4(); var ray = new Ray(); var sphere = new Sphere(); return function raycast( raycaster, intersects ) { var object = this; var geometry = this.geometry; var matrixWorld = this.matrixWorld; var threshold = raycaster.params.Points.threshold; // Checking boundingSphere distance to ray if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere(); sphere.copy( geometry.boundingSphere ); sphere.applyMatrix4( matrixWorld ); sphere.radius += threshold; if ( raycaster.ray.intersectsSphere( sphere ) === false ) return; // inverseMatrix.getInverse( matrixWorld ); ray.copy( raycaster.ray ).applyMatrix4( inverseMatrix ); var localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 ); var localThresholdSq = localThreshold * localThreshold; var position = new Vector3(); var intersectPoint = new Vector3(); function testPoint( point, index ) { var rayPointDistanceSq = ray.distanceSqToPoint( point ); if ( rayPointDistanceSq < localThresholdSq ) { ray.closestPointToPoint( point, intersectPoint ); intersectPoint.applyMatrix4( matrixWorld ); var distance = raycaster.ray.origin.distanceTo( intersectPoint ); if ( distance < raycaster.near || distance > raycaster.far ) return; intersects.push( { distance: distance, distanceToRay: Math.sqrt( rayPointDistanceSq ), point: intersectPoint.clone(), index: index, face: null, object: object } ); } } if ( geometry.isBufferGeometry ) { var index = geometry.index; var attributes = geometry.attributes; var positions = attributes.position.array; if ( index !== null ) { var indices = index.array; for ( var i = 0, il = indices.length; i < il; i ++ ) { var a = indices[ i ]; position.fromArray( positions, a * 3 ); testPoint( position, a ); } } else { for ( var i = 0, l = positions.length / 3; i < l; i ++ ) { position.fromArray( positions, i * 3 ); testPoint( position, i ); } } } else { var vertices = geometry.vertices; for ( var i = 0, l = vertices.length; i < l; i ++ ) { testPoint( vertices[ i ], i ); } } }; }() ), clone: function () { return new this.constructor( this.geometry, this.material ).copy( this ); } } ); /** * @author mrdoob / http://mrdoob.com/ */ function VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) { Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ); this.format = format !== undefined ? format : RGBFormat; this.minFilter = minFilter !== undefined ? minFilter : LinearFilter; this.magFilter = magFilter !== undefined ? magFilter : LinearFilter; this.generateMipmaps = false; } VideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), { constructor: VideoTexture, isVideoTexture: true, update: function () { var video = this.image; if ( video.readyState >= video.HAVE_CURRENT_DATA ) { this.needsUpdate = true; } } } ); /** * @author alteredq / http://alteredqualia.com/ */ function CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) { Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ); this.image = { width: width, height: height }; this.mipmaps = mipmaps; // no flipping for cube textures // (also flipping doesn't work for compressed textures ) this.flipY = false; // can't generate mipmaps for compressed textures // mips must be embedded in DDS files this.generateMipmaps = false; } CompressedTexture.prototype = Object.create( Texture.prototype ); CompressedTexture.prototype.constructor = CompressedTexture; CompressedTexture.prototype.isCompressedTexture = true; /** * @author mrdoob / http://mrdoob.com/ */ function CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) { Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ); this.needsUpdate = true; } CanvasTexture.prototype = Object.create( Texture.prototype ); CanvasTexture.prototype.constructor = CanvasTexture; CanvasTexture.prototype.isCanvasTexture = true; /** * @author Matt DesLauriers / @mattdesl * @author atix / arthursilber.de */ function DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) { format = format !== undefined ? format : DepthFormat; if ( format !== DepthFormat && format !== DepthStencilFormat ) { throw new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' ); } if ( type === undefined && format === DepthFormat ) type = UnsignedShortType; if ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type; Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ); this.image = { width: width, height: height }; this.magFilter = magFilter !== undefined ? magFilter : NearestFilter; this.minFilter = minFilter !== undefined ? minFilter : NearestFilter; this.flipY = false; this.generateMipmaps = false; } DepthTexture.prototype = Object.create( Texture.prototype ); DepthTexture.prototype.constructor = DepthTexture; DepthTexture.prototype.isDepthTexture = true; /** * @author mrdoob / http://mrdoob.com/ * @author Mugen87 / https://github.com/Mugen87 */ function WireframeGeometry( geometry ) { BufferGeometry.call( this ); this.type = 'WireframeGeometry'; // buffer var vertices = []; // helper variables var i, j, l, o, ol; var edge = [ 0, 0 ], edges = {}, e, edge1, edge2; var key, keys = [ 'a', 'b', 'c' ]; var vertex; // different logic for Geometry and BufferGeometry if ( geometry && geometry.isGeometry ) { // create a data structure that contains all edges without duplicates var faces = geometry.faces; for ( i = 0, l = faces.length; i < l; i ++ ) { var face = faces[ i ]; for ( j = 0; j < 3; j ++ ) { edge1 = face[ keys[ j ] ]; edge2 = face[ keys[ ( j + 1 ) % 3 ] ]; edge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates edge[ 1 ] = Math.max( edge1, edge2 ); key = edge[ 0 ] + ',' + edge[ 1 ]; if ( edges[ key ] === undefined ) { edges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] }; } } } // generate vertices for ( key in edges ) { e = edges[ key ]; vertex = geometry.vertices[ e.index1 ]; vertices.push( vertex.x, vertex.y, vertex.z ); vertex = geometry.vertices[ e.index2 ]; vertices.push( vertex.x, vertex.y, vertex.z ); } } else if ( geometry && geometry.isBufferGeometry ) { var position, indices, groups; var group, start, count; var index1, index2; vertex = new Vector3(); if ( geometry.index !== null ) { // indexed BufferGeometry position = geometry.attributes.position; indices = geometry.index; groups = geometry.groups; if ( groups.length === 0 ) { groups = [ { start: 0, count: indices.count, materialIndex: 0 } ]; } // create a data structure that contains all eges without duplicates for ( o = 0, ol = groups.length; o < ol; ++ o ) { group = groups[ o ]; start = group.start; count = group.count; for ( i = start, l = ( start + count ); i < l; i += 3 ) { for ( j = 0; j < 3; j ++ ) { edge1 = indices.getX( i + j ); edge2 = indices.getX( i + ( j + 1 ) % 3 ); edge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates edge[ 1 ] = Math.max( edge1, edge2 ); key = edge[ 0 ] + ',' + edge[ 1 ]; if ( edges[ key ] === undefined ) { edges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] }; } } } } // generate vertices for ( key in edges ) { e = edges[ key ]; vertex.fromBufferAttribute( position, e.index1 ); vertices.push( vertex.x, vertex.y, vertex.z ); vertex.fromBufferAttribute( position, e.index2 ); vertices.push( vertex.x, vertex.y, vertex.z ); } } else { // non-indexed BufferGeometry position = geometry.attributes.position; for ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) { for ( j = 0; j < 3; j ++ ) { // three edges per triangle, an edge is represented as (index1, index2) // e.g. the first triangle has the following edges: (0,1),(1,2),(2,0) index1 = 3 * i + j; vertex.fromBufferAttribute( position, index1 ); vertices.push( vertex.x, vertex.y, vertex.z ); index2 = 3 * i + ( ( j + 1 ) % 3 ); vertex.fromBufferAttribute( position, index2 ); vertices.push( vertex.x, vertex.y, vertex.z ); } } } } // build geometry this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) ); } WireframeGeometry.prototype = Object.create( BufferGeometry.prototype ); WireframeGeometry.prototype.constructor = WireframeGeometry; /** * @author zz85 / https://github.com/zz85 * @author Mugen87 / https://github.com/Mugen87 * * Parametric Surfaces Geometry * based on the brilliant article by @prideout http://prideout.net/blog/?p=44 */ // ParametricGeometry function ParametricGeometry( func, slices, stacks ) { Geometry.call( this ); this.type = 'ParametricGeometry'; this.parameters = { func: func, slices: slices, stacks: stacks }; this.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) ); this.mergeVertices(); } ParametricGeometry.prototype = Object.create( Geometry.prototype ); ParametricGeometry.prototype.constructor = ParametricGeometry; // ParametricBufferGeometry function ParametricBufferGeometry( func, slices, stacks ) { BufferGeometry.call( this ); this.type = 'ParametricBufferGeometry'; this.parameters = { func: func, slices: slices, stacks: stacks }; // buffers var indices = []; var vertices = []; var normals = []; var uvs = []; var EPS = 0.00001; var normal = new Vector3(); var p0 = new Vector3(), p1 = new Vector3(); var pu = new Vector3(), pv = new Vector3(); var i, j; if ( func.length < 3 ) { console.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' ); } // generate vertices, normals and uvs var sliceCount = slices + 1; for ( i = 0; i <= stacks; i ++ ) { var v = i / stacks; for ( j = 0; j <= slices; j ++ ) { var u = j / slices; // vertex func( u, v, p0 ); vertices.push( p0.x, p0.y, p0.z ); // normal // approximate tangent vectors via finite differences if ( u - EPS >= 0 ) { func( u - EPS, v, p1 ); pu.subVectors( p0, p1 ); } else { func( u + EPS, v, p1 ); pu.subVectors( p1, p0 ); } if ( v - EPS >= 0 ) { func( u, v - EPS, p1 ); pv.subVectors( p0, p1 ); } else { func( u, v + EPS, p1 ); pv.subVectors( p1, p0 ); } // cross product of tangent vectors returns surface normal normal.crossVectors( pu, pv ).normalize(); normals.push( normal.x, normal.y, normal.z ); // uv uvs.push( u, v ); } } // generate indices for ( i = 0; i < stacks; i ++ ) { for ( j = 0; j < slices; j ++ ) { var a = i * sliceCount + j; var b = i * sliceCount + j + 1; var c = ( i + 1 ) * sliceCount + j + 1; var d = ( i + 1 ) * sliceCount + j; // faces one and two indices.push( a, b, d ); indices.push( b, c, d ); } } // build geometry this.setIndex( indices ); this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) ); this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) ); this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) ); } ParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype ); ParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry; /** * @author clockworkgeek / https://github.com/clockworkgeek * @author timothypratley / https://github.com/timothypratley * @author WestLangley / http://github.com/WestLangley * @author Mugen87 / https://github.com/Mugen87 */ // PolyhedronGeometry function PolyhedronGeometry( vertices, indices, radius, detail ) { Geometry.call( this ); this.type = 'PolyhedronGeometry'; this.parameters = { vertices: vertices, indices: indices, radius: radius, detail: detail }; this.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) ); this.mergeVertices(); } PolyhedronGeometry.prototype = Object.create( Geometry.prototype ); PolyhedronGeometry.prototype.constructor = PolyhedronGeometry; // PolyhedronBufferGeometry function PolyhedronBufferGeometry( vertices, indices, radius, detail ) { BufferGeometry.call( this ); this.type = 'PolyhedronBufferGeometry'; this.parameters = { vertices: vertices, indices: indices, radius: radius, detail: detail }; radius = radius || 1; detail = detail || 0; // default buffer data var vertexBuffer = []; var uvBuffer = []; // the subdivision creates the vertex buffer data subdivide( detail ); // all vertices should lie on a conceptual sphere with a given radius appplyRadius( radius ); // finally, create the uv data generateUVs(); // build non-indexed geometry this.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) ); this.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) ); this.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) ); if ( detail === 0 ) { this.computeVertexNormals(); // flat normals } else { this.normalizeNormals(); // smooth normals } // helper functions function subdivide( detail ) { var a = new Vector3(); var b = new Vector3(); var c = new Vector3(); // iterate over all faces and apply a subdivison with the given detail value for ( var i = 0; i < indices.length; i += 3 ) { // get the vertices of the face getVertexByIndex( indices[ i + 0 ], a ); getVertexByIndex( indices[ i + 1 ], b ); getVertexByIndex( indices[ i + 2 ], c ); // perform subdivision subdivideFace( a, b, c, detail ); } } function subdivideFace( a, b, c, detail ) { var cols = Math.pow( 2, detail ); // we use this multidimensional array as a data structure for creating the subdivision var v = []; var i, j; // construct all of the vertices for this subdivision for ( i = 0; i <= cols; i ++ ) { v[ i ] = []; var aj = a.clone().lerp( c, i / cols ); var bj = b.clone().lerp( c, i / cols ); var rows = cols - i; for ( j = 0; j <= rows; j ++ ) { if ( j === 0 && i === cols ) { v[ i ][ j ] = aj; } else { v[ i ][ j ] = aj.clone().lerp( bj, j / rows ); } } } // construct all of the faces for ( i = 0; i < cols; i ++ ) { for ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) { var k = Math.floor( j / 2 ); if ( j % 2 === 0 ) { pushVertex( v[ i ][ k + 1 ] ); pushVertex( v[ i + 1 ][ k ] ); pushVertex( v[ i ][ k ] ); } else { pushVertex( v[ i ][ k + 1 ] ); pushVertex( v[ i + 1 ][ k + 1 ] ); pushVertex( v[ i + 1 ][ k ] ); } } } } function appplyRadius( radius ) { var vertex = new Vector3(); // iterate over the entire buffer and apply the radius to each vertex for ( var i = 0; i < vertexBuffer.length; i += 3 ) { vertex.x = vertexBuffer[ i + 0 ]; vertex.y = vertexBuffer[ i + 1 ]; vertex.z = vertexBuffer[ i + 2 ]; vertex.normalize().multiplyScalar( radius ); vertexBuffer[ i + 0 ] = vertex.x; vertexBuffer[ i + 1 ] = vertex.y; vertexBuffer[ i + 2 ] = vertex.z; } } function generateUVs() { var vertex = new Vector3(); for ( var i = 0; i < vertexBuffer.length; i += 3 ) { vertex.x = vertexBuffer[ i + 0 ]; vertex.y = vertexBuffer[ i + 1 ]; vertex.z = vertexBuffer[ i + 2 ]; var u = azimuth( vertex ) / 2 / Math.PI + 0.5; var v = inclination( vertex ) / Math.PI + 0.5; uvBuffer.push( u, 1 - v ); } correctUVs(); correctSeam(); } function correctSeam() { // handle case when face straddles the seam, see #3269 for ( var i = 0; i < uvBuffer.length; i += 6 ) { // uv data of a single face var x0 = uvBuffer[ i + 0 ]; var x1 = uvBuffer[ i + 2 ]; var x2 = uvBuffer[ i + 4 ]; var max = Math.max( x0, x1, x2 ); var min = Math.min( x0, x1, x2 ); // 0.9 is somewhat arbitrary if ( max > 0.9 && min < 0.1 ) { if ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1; if ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1; if ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1; } } } function pushVertex( vertex ) { vertexBuffer.push( vertex.x, vertex.y, vertex.z ); } function getVertexByIndex( index, vertex ) { var stride = index * 3; vertex.x = vertices[ stride + 0 ]; vertex.y = vertices[ stride + 1 ]; vertex.z = vertices[ stride + 2 ]; } function correctUVs() { var a = new Vector3(); var b = new Vector3(); var c = new Vector3(); var centroid = new Vector3(); var uvA = new Vector2(); var uvB = new Vector2(); var uvC = new Vector2(); for ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) { a.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] ); b.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] ); c.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] ); uvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] ); uvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] ); uvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] ); centroid.copy( a ).add( b ).add( c ).divideScalar( 3 ); var azi = azimuth( centroid ); correctUV( uvA, j + 0, a, azi ); correctUV( uvB, j + 2, b, azi ); correctUV( uvC, j + 4, c, azi ); } } function correctUV( uv, stride, vector, azimuth ) { if ( ( azimuth < 0 ) && ( uv.x === 1 ) ) { uvBuffer[ stride ] = uv.x - 1; } if ( ( vector.x === 0 ) && ( vector.z === 0 ) ) { uvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5; } } // Angle around the Y axis, counter-clockwise when looking from above. function azimuth( vector ) { return Math.atan2( vector.z, - vector.x ); } // Angle above the XZ plane. function inclination( vector ) { return Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) ); } } PolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype ); PolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry; /** * @author timothypratley / https://github.com/timothypratley * @author Mugen87 / https://github.com/Mugen87 */ // TetrahedronGeometry function TetrahedronGeometry( radius, detail ) { Geometry.call( this ); this.type = 'TetrahedronGeometry'; this.parameters = { radius: radius, detail: detail }; this.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) ); this.mergeVertices(); } TetrahedronGeometry.prototype = Object.create( Geometry.prototype ); TetrahedronGeometry.prototype.constructor = TetrahedronGeometry; // TetrahedronBufferGeometry function TetrahedronBufferGeometry( radius, detail ) { var vertices = [ 1, 1, 1, - 1, - 1, 1, - 1, 1, - 1, 1, - 1, - 1 ]; var indices = [ 2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1 ]; PolyhedronBufferGeometry.call( this, vertices, indices, radius, detail ); this.type = 'TetrahedronBufferGeometry'; this.parameters = { radius: radius, detail: detail }; } TetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype ); TetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry; /** * @author timothypratley / https://github.com/timothypratley * @author Mugen87 / https://github.com/Mugen87 */ // OctahedronGeometry function OctahedronGeometry( radius, detail ) { Geometry.call( this ); this.type = 'OctahedronGeometry'; this.parameters = { radius: radius, detail: detail }; this.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) ); this.mergeVertices(); } OctahedronGeometry.prototype = Object.create( Geometry.prototype ); OctahedronGeometry.prototype.constructor = OctahedronGeometry; // OctahedronBufferGeometry function OctahedronBufferGeometry( radius, detail ) { var vertices = [ 1, 0, 0, - 1, 0, 0, 0, 1, 0, 0, - 1, 0, 0, 0, 1, 0, 0, - 1 ]; var indices = [ 0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2 ]; PolyhedronBufferGeometry.call( this, vertices, indices, radius, detail ); this.type = 'OctahedronBufferGeometry'; this.parameters = { radius: radius, detail: detail }; } OctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype ); OctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry; /** * @author timothypratley / https://github.com/timothypratley * @author Mugen87 / https://github.com/Mugen87 */ // IcosahedronGeometry function IcosahedronGeometry( radius, detail ) { Geometry.call( this ); this.type = 'IcosahedronGeometry'; this.parameters = { radius: radius, detail: detail }; this.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) ); this.mergeVertices(); } IcosahedronGeometry.prototype = Object.create( Geometry.prototype ); IcosahedronGeometry.prototype.constructor = IcosahedronGeometry; // IcosahedronBufferGeometry function IcosahedronBufferGeometry( radius, detail ) { var t = ( 1 + Math.sqrt( 5 ) ) / 2; var vertices = [ - 1, t, 0, 1, t, 0, - 1, - t, 0, 1, - t, 0, 0, - 1, t, 0, 1, t, 0, - 1, - t, 0, 1, - t, t, 0, - 1, t, 0, 1, - t, 0, - 1, - t, 0, 1 ]; var indices = [ 0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1 ]; PolyhedronBufferGeometry.call( this, vertices, indices, radius, detail ); this.type = 'IcosahedronBufferGeometry'; this.parameters = { radius: radius, detail: detail }; } IcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype ); IcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry; /** * @author Abe Pazos / https://hamoid.com * @author Mugen87 / https://github.com/Mugen87 */ // DodecahedronGeometry function DodecahedronGeometry( radius, detail ) { Geometry.call( this ); this.type = 'DodecahedronGeometry'; this.parameters = { radius: radius, detail: detail }; this.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) ); this.mergeVertices(); } DodecahedronGeometry.prototype = Object.create( Geometry.prototype ); DodecahedronGeometry.prototype.constructor = DodecahedronGeometry; // DodecahedronBufferGeometry function DodecahedronBufferGeometry( radius, detail ) { var t = ( 1 + Math.sqrt( 5 ) ) / 2; var r = 1 / t; var vertices = [ // (±1, ±1, ±1) - 1, - 1, - 1, - 1, - 1, 1, - 1, 1, - 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, 1, 1, 1, - 1, 1, 1, 1, // (0, ±1/φ, ±φ) 0, - r, - t, 0, - r, t, 0, r, - t, 0, r, t, // (±1/φ, ±φ, 0) - r, - t, 0, - r, t, 0, r, - t, 0, r, t, 0, // (±φ, 0, ±1/φ) - t, 0, - r, t, 0, - r, - t, 0, r, t, 0, r ]; var indices = [ 3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9 ]; PolyhedronBufferGeometry.call( this, vertices, indices, radius, detail ); this.type = 'DodecahedronBufferGeometry'; this.parameters = { radius: radius, detail: detail }; } DodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype ); DodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry; /** * @author oosmoxiecode / https://github.com/oosmoxiecode * @author WestLangley / https://github.com/WestLangley * @author zz85 / https://github.com/zz85 * @author miningold / https://github.com/miningold * @author jonobr1 / https://github.com/jonobr1 * @author Mugen87 / https://github.com/Mugen87 * */ // TubeGeometry function TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) { Geometry.call( this ); this.type = 'TubeGeometry'; this.parameters = { path: path, tubularSegments: tubularSegments, radius: radius, radialSegments: radialSegments, closed: closed }; if ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' ); var bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ); // expose internals this.tangents = bufferGeometry.tangents; this.normals = bufferGeometry.normals; this.binormals = bufferGeometry.binormals; // create geometry this.fromBufferGeometry( bufferGeometry ); this.mergeVertices(); } TubeGeometry.prototype = Object.create( Geometry.prototype ); TubeGeometry.prototype.constructor = TubeGeometry; // TubeBufferGeometry function TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) { BufferGeometry.call( this ); this.type = 'TubeBufferGeometry'; this.parameters = { path: path, tubularSegments: tubularSegments, radius: radius, radialSegments: radialSegments, closed: closed }; tubularSegments = tubularSegments || 64; radius = radius || 1; radialSegments = radialSegments || 8; closed = closed || false; var frames = path.computeFrenetFrames( tubularSegments, closed ); // expose internals this.tangents = frames.tangents; this.normals = frames.normals; this.binormals = frames.binormals; // helper variables var vertex = new Vector3(); var normal = new Vector3(); var uv = new Vector2(); var P = new Vector3(); var i, j; // buffer var vertices = []; var normals = []; var uvs = []; var indices = []; // create buffer data generateBufferData(); // build geometry this.setIndex( indices ); this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) ); this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) ); this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) ); // functions function generateBufferData() { for ( i = 0; i < tubularSegments; i ++ ) { generateSegment( i ); } // if the geometry is not closed, generate the last row of vertices and normals // at the regular position on the given path // // if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ) generateSegment( ( closed === false ) ? tubularSegments : 0 ); // uvs are generated in a separate function. // this makes it easy compute correct values for closed geometries generateUVs(); // finally create faces generateIndices(); } function generateSegment( i ) { // we use getPointAt to sample evenly distributed points from the given path P = path.getPointAt( i / tubularSegments, P ); // retrieve corresponding normal and binormal var N = frames.normals[ i ]; var B = frames.binormals[ i ]; // generate normals and vertices for the current segment for ( j = 0; j <= radialSegments; j ++ ) { var v = j / radialSegments * Math.PI * 2; var sin = Math.sin( v ); var cos = - Math.cos( v ); // normal normal.x = ( cos * N.x + sin * B.x ); normal.y = ( cos * N.y + sin * B.y ); normal.z = ( cos * N.z + sin * B.z ); normal.normalize(); normals.push( normal.x, normal.y, normal.z ); // vertex vertex.x = P.x + radius * normal.x; vertex.y = P.y + radius * normal.y; vertex.z = P.z + radius * normal.z; vertices.push( vertex.x, vertex.y, vertex.z ); } } function generateIndices() { for ( j = 1; j <= tubularSegments; j ++ ) { for ( i = 1; i <= radialSegments; i ++ ) { var a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 ); var b = ( radialSegments + 1 ) * j + ( i - 1 ); var c = ( radialSegments + 1 ) * j + i; var d = ( radialSegments + 1 ) * ( j - 1 ) + i; // faces indices.push( a, b, d ); indices.push( b, c, d ); } } } function generateUVs() { for ( i = 0; i <= tubularSegments; i ++ ) { for ( j = 0; j <= radialSegments; j ++ ) { uv.x = i / tubularSegments; uv.y = j / radialSegments; uvs.push( uv.x, uv.y ); } } } } TubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype ); TubeBufferGeometry.prototype.constructor = TubeBufferGeometry; TubeBufferGeometry.prototype.toJSON = function () { var data = BufferGeometry.prototype.toJSON.call( this ); data.path = this.parameters.path.toJSON(); return data; }; /** * @author oosmoxiecode * @author Mugen87 / https://github.com/Mugen87 * * based on http://www.blackpawn.com/texts/pqtorus/ */ // TorusKnotGeometry function TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) { Geometry.call( this ); this.type = 'TorusKnotGeometry'; this.parameters = { radius: radius, tube: tube, tubularSegments: tubularSegments, radialSegments: radialSegments, p: p, q: q }; if ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' ); this.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) ); this.mergeVertices(); } TorusKnotGeometry.prototype = Object.create( Geometry.prototype ); TorusKnotGeometry.prototype.constructor = TorusKnotGeometry; // TorusKnotBufferGeometry function TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) { BufferGeometry.call( this ); this.type = 'TorusKnotBufferGeometry'; this.parameters = { radius: radius, tube: tube, tubularSegments: tubularSegments, radialSegments: radialSegments, p: p, q: q }; radius = radius || 1; tube = tube || 0.4; tubularSegments = Math.floor( tubularSegments ) || 64; radialSegments = Math.floor( radialSegments ) || 8; p = p || 2; q = q || 3; // buffers var indices = []; var vertices = []; var normals = []; var uvs = []; // helper variables var i, j; var vertex = new Vector3(); var normal = new Vector3(); var P1 = new Vector3(); var P2 = new Vector3(); var B = new Vector3(); var T = new Vector3(); var N = new Vector3(); // generate vertices, normals and uvs for ( i = 0; i <= tubularSegments; ++ i ) { // the radian "u" is used to calculate the position on the torus curve of the current tubular segement var u = i / tubularSegments * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead. // these points are used to create a special "coordinate space", which is necessary to calculate the correct vertex positions calculatePositionOnCurve( u, p, q, radius, P1 ); calculatePositionOnCurve( u + 0.01, p, q, radius, P2 ); // calculate orthonormal basis T.subVectors( P2, P1 ); N.addVectors( P2, P1 ); B.crossVectors( T, N ); N.crossVectors( B, T ); // normalize B, N. T can be ignored, we don't use it B.normalize(); N.normalize(); for ( j = 0; j <= radialSegments; ++ j ) { // now calculate the vertices. they are nothing more than an extrusion of the torus curve. // because we extrude a shape in the xy-plane, there is no need to calculate a z-value. var v = j / radialSegments * Math.PI * 2; var cx = - tube * Math.cos( v ); var cy = tube * Math.sin( v ); // now calculate the final vertex position. // first we orient the extrusion with our basis vectos, then we add it to the current position on the curve vertex.x = P1.x + ( cx * N.x + cy * B.x ); vertex.y = P1.y + ( cx * N.y + cy * B.y ); vertex.z = P1.z + ( cx * N.z + cy * B.z ); vertices.push( vertex.x, vertex.y, vertex.z ); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal) normal.subVectors( vertex, P1 ).normalize(); normals.push( normal.x, normal.y, normal.z ); // uv uvs.push( i / tubularSegments ); uvs.push( j / radialSegments ); } } // generate indices for ( j = 1; j <= tubularSegments; j ++ ) { for ( i = 1; i <= radialSegments; i ++ ) { // indices var a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 ); var b = ( radialSegments + 1 ) * j + ( i - 1 ); var c = ( radialSegments + 1 ) * j + i; var d = ( radialSegments + 1 ) * ( j - 1 ) + i; // faces indices.push( a, b, d ); indices.push( b, c, d ); } } // build geometry this.setIndex( indices ); this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) ); this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) ); this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) ); // this function calculates the current position on the torus curve function calculatePositionOnCurve( u, p, q, radius, position ) { var cu = Math.cos( u ); var su = Math.sin( u ); var quOverP = q / p * u; var cs = Math.cos( quOverP ); position.x = radius * ( 2 + cs ) * 0.5 * cu; position.y = radius * ( 2 + cs ) * su * 0.5; position.z = radius * Math.sin( quOverP ) * 0.5; } } TorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype ); TorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry; /** * @author oosmoxiecode * @author mrdoob / http://mrdoob.com/ * @author Mugen87 / https://github.com/Mugen87 */ // TorusGeometry function TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) { Geometry.call( this ); this.type = 'TorusGeometry'; this.parameters = { radius: radius, tube: tube, radialSegments: radialSegments, tubularSegments: tubularSegments, arc: arc }; this.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) ); this.mergeVertices(); } TorusGeometry.prototype = Object.create( Geometry.prototype ); TorusGeometry.prototype.constructor = TorusGeometry; // TorusBufferGeometry function TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) { BufferGeometry.call( this ); this.type = 'TorusBufferGeometry'; this.parameters = { radius: radius, tube: tube, radialSegments: radialSegments, tubularSegments: tubularSegments, arc: arc }; radius = radius || 1; tube = tube || 0.4; radialSegments = Math.floor( radialSegments ) || 8; tubularSegments = Math.floor( tubularSegments ) || 6; arc = arc || Math.PI * 2; // buffers var indices = []; var vertices = []; var normals = []; var uvs = []; // helper variables var center = new Vector3(); var vertex = new Vector3(); var normal = new Vector3(); var j, i; // generate vertices, normals and uvs for ( j = 0; j <= radialSegments; j ++ ) { for ( i = 0; i <= tubularSegments; i ++ ) { var u = i / tubularSegments * arc; var v = j / radialSegments * Math.PI * 2; // vertex vertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u ); vertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u ); vertex.z = tube * Math.sin( v ); vertices.push( vertex.x, vertex.y, vertex.z ); // normal center.x = radius * Math.cos( u ); center.y = radius * Math.sin( u ); normal.subVectors( vertex, center ).normalize(); normals.push( normal.x, normal.y, normal.z ); // uv uvs.push( i / tubularSegments ); uvs.push( j / radialSegments ); } } // generate indices for ( j = 1; j <= radialSegments; j ++ ) { for ( i = 1; i <= tubularSegments; i ++ ) { // indices var a = ( tubularSegments + 1 ) * j + i - 1; var b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1; var c = ( tubularSegments + 1 ) * ( j - 1 ) + i; var d = ( tubularSegments + 1 ) * j + i; // faces indices.push( a, b, d ); indices.push( b, c, d ); } } // build geometry this.setIndex( indices ); this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) ); this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) ); this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) ); } TorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype ); TorusBufferGeometry.prototype.constructor = TorusBufferGeometry; /** * @author Mugen87 / https://github.com/Mugen87 * Port from https://github.com/mapbox/earcut (v2.1.2) */ var Earcut = { triangulate: function ( data, holeIndices, dim ) { dim = dim || 2; var hasHoles = holeIndices && holeIndices.length, outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length, outerNode = linkedList( data, 0, outerLen, dim, true ), triangles = []; if ( ! outerNode ) return triangles; var minX, minY, maxX, maxY, x, y, invSize; if ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim ); // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox if ( data.length > 80 * dim ) { minX = maxX = data[ 0 ]; minY = maxY = data[ 1 ]; for ( var i = dim; i < outerLen; i += dim ) { x = data[ i ]; y = data[ i + 1 ]; if ( x < minX ) minX = x; if ( y < minY ) minY = y; if ( x > maxX ) maxX = x; if ( y > maxY ) maxY = y; } // minX, minY and invSize are later used to transform coords into integers for z-order calculation invSize = Math.max( maxX - minX, maxY - minY ); invSize = invSize !== 0 ? 1 / invSize : 0; } earcutLinked( outerNode, triangles, dim, minX, minY, invSize ); return triangles; } }; // create a circular doubly linked list from polygon points in the specified winding order function linkedList( data, start, end, dim, clockwise ) { var i, last; if ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) { for ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last ); } else { for ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last ); } if ( last && equals( last, last.next ) ) { removeNode( last ); last = last.next; } return last; } // eliminate colinear or duplicate points function filterPoints( start, end ) { if ( ! start ) return start; if ( ! end ) end = start; var p = start, again; do { again = false; if ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) { removeNode( p ); p = end = p.prev; if ( p === p.next ) break; again = true; } else { p = p.next; } } while ( again || p !== end ); return end; } // main ear slicing loop which triangulates a polygon (given as a linked list) function earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) { if ( ! ear ) return; // interlink polygon nodes in z-order if ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize ); var stop = ear, prev, next; // iterate through ears, slicing them one by one while ( ear.prev !== ear.next ) { prev = ear.prev; next = ear.next; if ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) { // cut off the triangle triangles.push( prev.i / dim ); triangles.push( ear.i / dim ); triangles.push( next.i / dim ); removeNode( ear ); // skipping the next vertice leads to less sliver triangles ear = next.next; stop = next.next; continue; } ear = next; // if we looped through the whole remaining polygon and can't find any more ears if ( ear === stop ) { // try filtering points and slicing again if ( ! pass ) { earcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 ); // if this didn't work, try curing all small self-intersections locally } else if ( pass === 1 ) { ear = cureLocalIntersections( ear, triangles, dim ); earcutLinked( ear, triangles, dim, minX, minY, invSize, 2 ); // as a last resort, try splitting the remaining polygon into two } else if ( pass === 2 ) { splitEarcut( ear, triangles, dim, minX, minY, invSize ); } break; } } } // check whether a polygon node forms a valid ear with adjacent nodes function isEar( ear ) { var a = ear.prev, b = ear, c = ear.next; if ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear // now make sure we don't have other points inside the potential ear var p = ear.next.next; while ( p !== ear.prev ) { if ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) { return false; } p = p.next; } return true; } function isEarHashed( ear, minX, minY, invSize ) { var a = ear.prev, b = ear, c = ear.next; if ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear // triangle bbox; min & max are calculated like this for speed var minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ), minTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ), maxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ), maxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y ); // z-order range for the current triangle bbox; var minZ = zOrder( minTX, minTY, minX, minY, invSize ), maxZ = zOrder( maxTX, maxTY, minX, minY, invSize ); // first look for points inside the triangle in increasing z-order var p = ear.nextZ; while ( p && p.z <= maxZ ) { if ( p !== ear.prev && p !== ear.next && pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false; p = p.nextZ; } // then look for points in decreasing z-order p = ear.prevZ; while ( p && p.z >= minZ ) { if ( p !== ear.prev && p !== ear.next && pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false; p = p.prevZ; } return true; } // go through all polygon nodes and cure small local self-intersections function cureLocalIntersections( start, triangles, dim ) { var p = start; do { var a = p.prev, b = p.next.next; if ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) { triangles.push( a.i / dim ); triangles.push( p.i / dim ); triangles.push( b.i / dim ); // remove two nodes involved removeNode( p ); removeNode( p.next ); p = start = b; } p = p.next; } while ( p !== start ); return p; } // try splitting polygon into two and triangulate them independently function splitEarcut( start, triangles, dim, minX, minY, invSize ) { // look for a valid diagonal that divides the polygon into two var a = start; do { var b = a.next.next; while ( b !== a.prev ) { if ( a.i !== b.i && isValidDiagonal( a, b ) ) { // split the polygon in two by the diagonal var c = splitPolygon( a, b ); // filter colinear points around the cuts a = filterPoints( a, a.next ); c = filterPoints( c, c.next ); // run earcut on each half earcutLinked( a, triangles, dim, minX, minY, invSize ); earcutLinked( c, triangles, dim, minX, minY, invSize ); return; } b = b.next; } a = a.next; } while ( a !== start ); } // link every hole into the outer loop, producing a single-ring polygon without holes function eliminateHoles( data, holeIndices, outerNode, dim ) { var queue = [], i, len, start, end, list; for ( i = 0, len = holeIndices.length; i < len; i ++ ) { start = holeIndices[ i ] * dim; end = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length; list = linkedList( data, start, end, dim, false ); if ( list === list.next ) list.steiner = true; queue.push( getLeftmost( list ) ); } queue.sort( compareX ); // process holes from left to right for ( i = 0; i < queue.length; i ++ ) { eliminateHole( queue[ i ], outerNode ); outerNode = filterPoints( outerNode, outerNode.next ); } return outerNode; } function compareX( a, b ) { return a.x - b.x; } // find a bridge between vertices that connects hole with an outer ring and and link it function eliminateHole( hole, outerNode ) { outerNode = findHoleBridge( hole, outerNode ); if ( outerNode ) { var b = splitPolygon( outerNode, hole ); filterPoints( b, b.next ); } } // David Eberly's algorithm for finding a bridge between hole and outer polygon function findHoleBridge( hole, outerNode ) { var p = outerNode, hx = hole.x, hy = hole.y, qx = - Infinity, m; // find a segment intersected by a ray from the hole's leftmost point to the left; // segment's endpoint with lesser x will be potential connection point do { if ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) { var x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y ); if ( x <= hx && x > qx ) { qx = x; if ( x === hx ) { if ( hy === p.y ) return p; if ( hy === p.next.y ) return p.next; } m = p.x < p.next.x ? p : p.next; } } p = p.next; } while ( p !== outerNode ); if ( ! m ) return null; if ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint // look for points inside the triangle of hole point, segment intersection and endpoint; // if there are no points found, we have a valid connection; // otherwise choose the point of the minimum angle with the ray as connection point var stop = m, mx = m.x, my = m.y, tanMin = Infinity, tan; p = m.next; while ( p !== stop ) { if ( hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) { tan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential if ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) { m = p; tanMin = tan; } } p = p.next; } return m; } // interlink polygon nodes in z-order function indexCurve( start, minX, minY, invSize ) { var p = start; do { if ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize ); p.prevZ = p.prev; p.nextZ = p.next; p = p.next; } while ( p !== start ); p.prevZ.nextZ = null; p.prevZ = null; sortLinked( p ); } // Simon Tatham's linked list merge sort algorithm // http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html function sortLinked( list ) { var i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1; do { p = list; list = null; tail = null; numMerges = 0; while ( p ) { numMerges ++; q = p; pSize = 0; for ( i = 0; i < inSize; i ++ ) { pSize ++; q = q.nextZ; if ( ! q ) break; } qSize = inSize; while ( pSize > 0 || ( qSize > 0 && q ) ) { if ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) { e = p; p = p.nextZ; pSize --; } else { e = q; q = q.nextZ; qSize --; } if ( tail ) tail.nextZ = e; else list = e; e.prevZ = tail; tail = e; } p = q; } tail.nextZ = null; inSize *= 2; } while ( numMerges > 1 ); return list; } // z-order of a point given coords and inverse of the longer side of data bbox function zOrder( x, y, minX, minY, invSize ) { // coords are transformed into non-negative 15-bit integer range x = 32767 * ( x - minX ) * invSize; y = 32767 * ( y - minY ) * invSize; x = ( x | ( x << 8 ) ) & 0x00FF00FF; x = ( x | ( x << 4 ) ) & 0x0F0F0F0F; x = ( x | ( x << 2 ) ) & 0x33333333; x = ( x | ( x << 1 ) ) & 0x55555555; y = ( y | ( y << 8 ) ) & 0x00FF00FF; y = ( y | ( y << 4 ) ) & 0x0F0F0F0F; y = ( y | ( y << 2 ) ) & 0x33333333; y = ( y | ( y << 1 ) ) & 0x55555555; return x | ( y << 1 ); } // find the leftmost node of a polygon ring function getLeftmost( start ) { var p = start, leftmost = start; do { if ( p.x < leftmost.x ) leftmost = p; p = p.next; } while ( p !== start ); return leftmost; } // check if a point lies within a convex triangle function pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) { return ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 && ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 && ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0; } // check if a diagonal between two polygon nodes is valid (lies in polygon interior) function isValidDiagonal( a, b ) { return a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ); } // signed area of a triangle function area( p, q, r ) { return ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y ); } // check if two points are equal function equals( p1, p2 ) { return p1.x === p2.x && p1.y === p2.y; } // check if two segments intersect function intersects( p1, q1, p2, q2 ) { if ( ( equals( p1, q1 ) && equals( p2, q2 ) ) || ( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true; return area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 && area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0; } // check if a polygon diagonal intersects any polygon segments function intersectsPolygon( a, b ) { var p = a; do { if ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects( p, p.next, a, b ) ) { return true; } p = p.next; } while ( p !== a ); return false; } // check if a polygon diagonal is locally inside the polygon function locallyInside( a, b ) { return area( a.prev, a, a.next ) < 0 ? area( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 : area( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0; } // check if the middle point of a polygon diagonal is inside the polygon function middleInside( a, b ) { var p = a, inside = false, px = ( a.x + b.x ) / 2, py = ( a.y + b.y ) / 2; do { if ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y && ( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) { inside = ! inside; } p = p.next; } while ( p !== a ); return inside; } // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two; // if one belongs to the outer ring and another to a hole, it merges it into a single ring function splitPolygon( a, b ) { var a2 = new Node( a.i, a.x, a.y ), b2 = new Node( b.i, b.x, b.y ), an = a.next, bp = b.prev; a.next = b; b.prev = a; a2.next = an; an.prev = a2; b2.next = a2; a2.prev = b2; bp.next = b2; b2.prev = bp; return b2; } // create a node and optionally link it with previous one (in a circular doubly linked list) function insertNode( i, x, y, last ) { var p = new Node( i, x, y ); if ( ! last ) { p.prev = p; p.next = p; } else { p.next = last.next; p.prev = last; last.next.prev = p; last.next = p; } return p; } function removeNode( p ) { p.next.prev = p.prev; p.prev.next = p.next; if ( p.prevZ ) p.prevZ.nextZ = p.nextZ; if ( p.nextZ ) p.nextZ.prevZ = p.prevZ; } function Node( i, x, y ) { // vertice index in coordinates array this.i = i; // vertex coordinates this.x = x; this.y = y; // previous and next vertice nodes in a polygon ring this.prev = null; this.next = null; // z-order curve value this.z = null; // previous and next nodes in z-order this.prevZ = null; this.nextZ = null; // indicates whether this is a steiner point this.steiner = false; } function signedArea( data, start, end, dim ) { var sum = 0; for ( var i = start, j = end - dim; i < end; i += dim ) { sum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] ); j = i; } return sum; } /** * @author zz85 / http://www.lab4games.net/zz85/blog */ var ShapeUtils = { // calculate area of the contour polygon area: function ( contour ) { var n = contour.length; var a = 0.0; for ( var p = n - 1, q = 0; q < n; p = q ++ ) { a += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y; } return a * 0.5; }, isClockWise: function ( pts ) { return ShapeUtils.area( pts ) < 0; }, triangulateShape: function ( contour, holes ) { var vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ] var holeIndices = []; // array of hole indices var faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ] removeDupEndPts( contour ); addContour( vertices, contour ); // var holeIndex = contour.length; holes.forEach( removeDupEndPts ); for ( var i = 0; i < holes.length; i ++ ) { holeIndices.push( holeIndex ); holeIndex += holes[ i ].length; addContour( vertices, holes[ i ] ); } // var triangles = Earcut.triangulate( vertices, holeIndices ); // for ( var i = 0; i < triangles.length; i += 3 ) { faces.push( triangles.slice( i, i + 3 ) ); } return faces; } }; function removeDupEndPts( points ) { var l = points.length; if ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) { points.pop(); } } function addContour( vertices, contour ) { for ( var i = 0; i < contour.length; i ++ ) { vertices.push( contour[ i ].x ); vertices.push( contour[ i ].y ); } } /** * @author zz85 / http://www.lab4games.net/zz85/blog * * Creates extruded geometry from a path shape. * * parameters = { * * curveSegments: <int>, // number of points on the curves * steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too * depth: <float>, // Depth to extrude the shape * * bevelEnabled: <bool>, // turn on bevel * bevelThickness: <float>, // how deep into the original shape bevel goes * bevelSize: <float>, // how far from shape outline is bevel * bevelSegments: <int>, // number of bevel layers * * extrudePath: <THREE.Curve> // curve to extrude shape along * * UVGenerator: <Object> // object that provides UV generator functions * * } */ // ExtrudeGeometry function ExtrudeGeometry( shapes, options ) { Geometry.call( this ); this.type = 'ExtrudeGeometry'; this.parameters = { shapes: shapes, options: options }; this.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) ); this.mergeVertices(); } ExtrudeGeometry.prototype = Object.create( Geometry.prototype ); ExtrudeGeometry.prototype.constructor = ExtrudeGeometry; ExtrudeGeometry.prototype.toJSON = function () { var data = Geometry.prototype.toJSON.call( this ); var shapes = this.parameters.shapes; var options = this.parameters.options; return toJSON( shapes, options, data ); }; // ExtrudeBufferGeometry function ExtrudeBufferGeometry( shapes, options ) { BufferGeometry.call( this ); this.type = 'ExtrudeBufferGeometry'; this.parameters = { shapes: shapes, options: options }; shapes = Array.isArray( shapes ) ? shapes : [ shapes ]; var scope = this; var verticesArray = []; var uvArray = []; for ( var i = 0, l = shapes.length; i < l; i ++ ) { var shape = shapes[ i ]; addShape( shape ); } // build geometry this.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) ); this.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) ); this.computeVertexNormals(); // functions function addShape( shape ) { var placeholder = []; // options var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12; var steps = options.steps !== undefined ? options.steps : 1; var depth = options.depth !== undefined ? options.depth : 100; var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3; var extrudePath = options.extrudePath; var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator; // deprecated options if ( options.amount !== undefined ) { console.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' ); depth = options.amount; } // var extrudePts, extrudeByPath = false; var splineTube, binormal, normal, position2; if ( extrudePath ) { extrudePts = extrudePath.getSpacedPoints( steps ); extrudeByPath = true; bevelEnabled = false; // bevels not supported for path extrusion // SETUP TNB variables // TODO1 - have a .isClosed in spline? splineTube = extrudePath.computeFrenetFrames( steps, false ); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length); binormal = new Vector3(); normal = new Vector3(); position2 = new Vector3(); } // Safeguards if bevels are not enabled if ( ! bevelEnabled ) { bevelSegments = 0; bevelThickness = 0; bevelSize = 0; } // Variables initialization var ahole, h, hl; // looping of holes var shapePoints = shape.extractPoints( curveSegments ); var vertices = shapePoints.shape; var holes = shapePoints.holes; var reverse = ! ShapeUtils.isClockWise( vertices ); if ( reverse ) { vertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ... for ( h = 0, hl = holes.length; h < hl; h ++ ) { ahole = holes[ h ]; if ( ShapeUtils.isClockWise( ahole ) ) { holes[ h ] = ahole.reverse(); } } } var faces = ShapeUtils.triangulateShape( vertices, holes ); /* Vertices */ var contour = vertices; // vertices has all points but contour has only points of circumference for ( h = 0, hl = holes.length; h < hl; h ++ ) { ahole = holes[ h ]; vertices = vertices.concat( ahole ); } function scalePt2( pt, vec, size ) { if ( ! vec ) console.error( "THREE.ExtrudeGeometry: vec does not exist" ); return vec.clone().multiplyScalar( size ).add( pt ); } var b, bs, t, z, vert, vlen = vertices.length, face, flen = faces.length; // Find directions for point movement function getBevelVec( inPt, inPrev, inNext ) { // computes for inPt the corresponding point inPt' on a new contour // shifted by 1 unit (length of normalized vector) to the left // if we walk along contour clockwise, this new contour is outside the old one // // inPt' is the intersection of the two lines parallel to the two // adjacent edges of inPt at a distance of 1 unit on the left side. var v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt // good reading for geometry algorithms (here: line-line intersection) // http://geomalgorithms.com/a05-_intersect-1.html var v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y; var v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y; var v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y ); // check for collinear edges var collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x ); if ( Math.abs( collinear0 ) > Number.EPSILON ) { // not collinear // length of vectors for normalizing var v_prev_len = Math.sqrt( v_prev_lensq ); var v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y ); // shift adjacent points by unit vectors to the left var ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len ); var ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len ); var ptNextShift_x = ( inNext.x - v_next_y / v_next_len ); var ptNextShift_y = ( inNext.y + v_next_x / v_next_len ); // scaling factor for v_prev to intersection point var sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y - ( ptNextShift_y - ptPrevShift_y ) * v_next_x ) / ( v_prev_x * v_next_y - v_prev_y * v_next_x ); // vector from inPt to intersection point v_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x ); v_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y ); // Don't normalize!, otherwise sharp corners become ugly // but prevent crazy spikes var v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y ); if ( v_trans_lensq <= 2 ) { return new Vector2( v_trans_x, v_trans_y ); } else { shrink_by = Math.sqrt( v_trans_lensq / 2 ); } } else { // handle special case of collinear edges var direction_eq = false; // assumes: opposite if ( v_prev_x > Number.EPSILON ) { if ( v_next_x > Number.EPSILON ) { direction_eq = true; } } else { if ( v_prev_x < - Number.EPSILON ) { if ( v_next_x < - Number.EPSILON ) { direction_eq = true; } } else { if ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) { direction_eq = true; } } } if ( direction_eq ) { // console.log("Warning: lines are a straight sequence"); v_trans_x = - v_prev_y; v_trans_y = v_prev_x; shrink_by = Math.sqrt( v_prev_lensq ); } else { // console.log("Warning: lines are a straight spike"); v_trans_x = v_prev_x; v_trans_y = v_prev_y; shrink_by = Math.sqrt( v_prev_lensq / 2 ); } } return new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by ); } var contourMovements = []; for ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) { if ( j === il ) j = 0; if ( k === il ) k = 0; // (j)---(i)---(k) // console.log('i,j,k', i, j , k) contourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] ); } var holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat(); for ( h = 0, hl = holes.length; h < hl; h ++ ) { ahole = holes[ h ]; oneHoleMovements = []; for ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) { if ( j === il ) j = 0; if ( k === il ) k = 0; // (j)---(i)---(k) oneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] ); } holesMovements.push( oneHoleMovements ); verticesMovements = verticesMovements.concat( oneHoleMovements ); } // Loop bevelSegments, 1 for the front, 1 for the back for ( b = 0; b < bevelSegments; b ++ ) { //for ( b = bevelSegments; b > 0; b -- ) { t = b / bevelSegments; z = bevelThickness * Math.cos( t * Math.PI / 2 ); bs = bevelSize * Math.sin( t * Math.PI / 2 ); // contract shape for ( i = 0, il = contour.length; i < il; i ++ ) { vert = scalePt2( contour[ i ], contourMovements[ i ], bs ); v( vert.x, vert.y, - z ); } // expand holes for ( h = 0, hl = holes.length; h < hl; h ++ ) { ahole = holes[ h ]; oneHoleMovements = holesMovements[ h ]; for ( i = 0, il = ahole.length; i < il; i ++ ) { vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs ); v( vert.x, vert.y, - z ); } } } bs = bevelSize; // Back facing vertices for ( i = 0; i < vlen; i ++ ) { vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ]; if ( ! extrudeByPath ) { v( vert.x, vert.y, 0 ); } else { // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x ); normal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x ); binormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y ); position2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal ); v( position2.x, position2.y, position2.z ); } } // Add stepped vertices... // Including front facing vertices var s; for ( s = 1; s <= steps; s ++ ) { for ( i = 0; i < vlen; i ++ ) { vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ]; if ( ! extrudeByPath ) { v( vert.x, vert.y, depth / steps * s ); } else { // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x ); normal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x ); binormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y ); position2.copy( extrudePts[ s ] ).add( normal ).add( binormal ); v( position2.x, position2.y, position2.z ); } } } // Add bevel segments planes //for ( b = 1; b <= bevelSegments; b ++ ) { for ( b = bevelSegments - 1; b >= 0; b -- ) { t = b / bevelSegments; z = bevelThickness * Math.cos( t * Math.PI / 2 ); bs = bevelSize * Math.sin( t * Math.PI / 2 ); // contract shape for ( i = 0, il = contour.length; i < il; i ++ ) { vert = scalePt2( contour[ i ], contourMovements[ i ], bs ); v( vert.x, vert.y, depth + z ); } // expand holes for ( h = 0, hl = holes.length; h < hl; h ++ ) { ahole = holes[ h ]; oneHoleMovements = holesMovements[ h ]; for ( i = 0, il = ahole.length; i < il; i ++ ) { vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs ); if ( ! extrudeByPath ) { v( vert.x, vert.y, depth + z ); } else { v( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z ); } } } } /* Faces */ // Top and bottom faces buildLidFaces(); // Sides faces buildSideFaces(); ///// Internal functions function buildLidFaces() { var start = verticesArray.length / 3; if ( bevelEnabled ) { var layer = 0; // steps + 1 var offset = vlen * layer; // Bottom faces for ( i = 0; i < flen; i ++ ) { face = faces[ i ]; f3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset ); } layer = steps + bevelSegments * 2; offset = vlen * layer; // Top faces for ( i = 0; i < flen; i ++ ) { face = faces[ i ]; f3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset ); } } else { // Bottom faces for ( i = 0; i < flen; i ++ ) { face = faces[ i ]; f3( face[ 2 ], face[ 1 ], face[ 0 ] ); } // Top faces for ( i = 0; i < flen; i ++ ) { face = faces[ i ]; f3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps ); } } scope.addGroup( start, verticesArray.length / 3 - start, 0 ); } // Create faces for the z-sides of the shape function buildSideFaces() { var start = verticesArray.length / 3; var layeroffset = 0; sidewalls( contour, layeroffset ); layeroffset += contour.length; for ( h = 0, hl = holes.length; h < hl; h ++ ) { ahole = holes[ h ]; sidewalls( ahole, layeroffset ); //, true layeroffset += ahole.length; } scope.addGroup( start, verticesArray.length / 3 - start, 1 ); } function sidewalls( contour, layeroffset ) { var j, k; i = contour.length; while ( -- i >= 0 ) { j = i; k = i - 1; if ( k < 0 ) k = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length); var s = 0, sl = steps + bevelSegments * 2; for ( s = 0; s < sl; s ++ ) { var slen1 = vlen * s; var slen2 = vlen * ( s + 1 ); var a = layeroffset + j + slen1, b = layeroffset + k + slen1, c = layeroffset + k + slen2, d = layeroffset + j + slen2; f4( a, b, c, d ); } } } function v( x, y, z ) { placeholder.push( x ); placeholder.push( y ); placeholder.push( z ); } function f3( a, b, c ) { addVertex( a ); addVertex( b ); addVertex( c ); var nextIndex = verticesArray.length / 3; var uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 ); addUV( uvs[ 0 ] ); addUV( uvs[ 1 ] ); addUV( uvs[ 2 ] ); } function f4( a, b, c, d ) { addVertex( a ); addVertex( b ); addVertex( d ); addVertex( b ); addVertex( c ); addVertex( d ); var nextIndex = verticesArray.length / 3; var uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 ); addUV( uvs[ 0 ] ); addUV( uvs[ 1 ] ); addUV( uvs[ 3 ] ); addUV( uvs[ 1 ] ); addUV( uvs[ 2 ] ); addUV( uvs[ 3 ] ); } function addVertex( index ) { verticesArray.push( placeholder[ index * 3 + 0 ] ); verticesArray.push( placeholder[ index * 3 + 1 ] ); verticesArray.push( placeholder[ index * 3 + 2 ] ); } function addUV( vector2 ) { uvArray.push( vector2.x ); uvArray.push( vector2.y ); } } } ExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype ); ExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry; ExtrudeBufferGeometry.prototype.toJSON = function () { var data = BufferGeometry.prototype.toJSON.call( this ); var shapes = this.parameters.shapes; var options = this.parameters.options; return toJSON( shapes, options, data ); }; // var WorldUVGenerator = { generateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) { var a_x = vertices[ indexA * 3 ]; var a_y = vertices[ indexA * 3 + 1 ]; var b_x = vertices[ indexB * 3 ]; var b_y = vertices[ indexB * 3 + 1 ]; var c_x = vertices[ indexC * 3 ]; var c_y = vertices[ indexC * 3 + 1 ]; return [ new Vector2( a_x, a_y ), new Vector2( b_x, b_y ), new Vector2( c_x, c_y ) ]; }, generateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) { var a_x = vertices[ indexA * 3 ]; var a_y = vertices[ indexA * 3 + 1 ]; var a_z = vertices[ indexA * 3 + 2 ]; var b_x = vertices[ indexB * 3 ]; var b_y = vertices[ indexB * 3 + 1 ]; var b_z = vertices[ indexB * 3 + 2 ]; var c_x = vertices[ indexC * 3 ]; var c_y = vertices[ indexC * 3 + 1 ]; var c_z = vertices[ indexC * 3 + 2 ]; var d_x = vertices[ indexD * 3 ]; var d_y = vertices[ indexD * 3 + 1 ]; var d_z = vertices[ indexD * 3 + 2 ]; if ( Math.abs( a_y - b_y ) < 0.01 ) { return [ new Vector2( a_x, 1 - a_z ), new Vector2( b_x, 1 - b_z ), new Vector2( c_x, 1 - c_z ), new Vector2( d_x, 1 - d_z ) ]; } else { return [ new Vector2( a_y, 1 - a_z ), new Vector2( b_y, 1 - b_z ), new Vector2( c_y, 1 - c_z ), new Vector2( d_y, 1 - d_z ) ]; } } }; function toJSON( shapes, options, data ) { // data.shapes = []; if ( Array.isArray( shapes ) ) { for ( var i = 0, l = shapes.length; i < l; i ++ ) { var shape = shapes[ i ]; data.shapes.push( shape.uuid ); } } else { data.shapes.push( shapes.uuid ); } // if ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON(); return data; } /** * @author zz85 / http://www.lab4games.net/zz85/blog * @author alteredq / http://alteredqualia.com/ * * Text = 3D Text * * parameters = { * font: <THREE.Font>, // font * * size: <float>, // size of the text * height: <float>, // thickness to extrude text * curveSegments: <int>, // number of points on the curves * * bevelEnabled: <bool>, // turn on bevel * bevelThickness: <float>, // how deep into text bevel goes * bevelSize: <float> // how far from text outline is bevel * } */ // TextGeometry function TextGeometry( text, parameters ) { Geometry.call( this ); this.type = 'TextGeometry'; this.parameters = { text: text, parameters: parameters }; this.fromBufferGeometry( new TextBufferGeometry( text, parameters ) ); this.mergeVertices(); } TextGeometry.prototype = Object.create( Geometry.prototype ); TextGeometry.prototype.constructor = TextGeometry; // TextBufferGeometry function TextBufferGeometry( text, parameters ) { parameters = parameters || {}; var font = parameters.font; if ( ! ( font && font.isFont ) ) { console.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' ); return new Geometry(); } var shapes = font.generateShapes( text, parameters.size ); // translate parameters to ExtrudeGeometry API parameters.depth = parameters.height !== undefined ? parameters.height : 50; // defaults if ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10; if ( parameters.bevelSize === undefined ) parameters.bevelSize = 8; if ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false; ExtrudeBufferGeometry.call( this, shapes, parameters ); this.type = 'TextBufferGeometry'; } TextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype ); TextBufferGeometry.prototype.constructor = TextBufferGeometry; /** * @author mrdoob / http://mrdoob.com/ * @author benaadams / https://twitter.com/ben_a_adams * @author Mugen87 / https://github.com/Mugen87 */ // SphereGeometry function SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) { Geometry.call( this ); this.type = 'SphereGeometry'; this.parameters = { radius: radius, widthSegments: widthSegments, heightSegments: heightSegments, phiStart: phiStart, phiLength: phiLength, thetaStart: thetaStart, thetaLength: thetaLength }; this.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) ); this.mergeVertices(); } SphereGeometry.prototype = Object.create( Geometry.prototype ); SphereGeometry.prototype.constructor = SphereGeometry; // SphereBufferGeometry function SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) { BufferGeometry.call( this ); this.type = 'SphereBufferGeometry'; this.parameters = { radius: radius, widthSegments: widthSegments, heightSegments: heightSegments, phiStart: phiStart, phiLength: phiLength, thetaStart: thetaStart, thetaLength: thetaLength }; radius = radius || 1; widthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 ); heightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 ); phiStart = phiStart !== undefined ? phiStart : 0; phiLength = phiLength !== undefined ? phiLength : Math.PI * 2; thetaStart = thetaStart !== undefined ? thetaStart : 0; thetaLength = thetaLength !== undefined ? thetaLength : Math.PI; var thetaEnd = thetaStart + thetaLength; var ix, iy; var index = 0; var grid = []; var vertex = new Vector3(); var normal = new Vector3(); // buffers var indices = []; var vertices = []; var normals = []; var uvs = []; // generate vertices, normals and uvs for ( iy = 0; iy <= heightSegments; iy ++ ) { var verticesRow = []; var v = iy / heightSegments; for ( ix = 0; ix <= widthSegments; ix ++ ) { var u = ix / widthSegments; // vertex vertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength ); vertex.y = radius * Math.cos( thetaStart + v * thetaLength ); vertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength ); vertices.push( vertex.x, vertex.y, vertex.z ); // normal normal.set( vertex.x, vertex.y, vertex.z ).normalize(); normals.push( normal.x, normal.y, normal.z ); // uv uvs.push( u, 1 - v ); verticesRow.push( index ++ ); } grid.push( verticesRow ); } // indices for ( iy = 0; iy < heightSegments; iy ++ ) { for ( ix = 0; ix < widthSegments; ix ++ ) { var a = grid[ iy ][ ix + 1 ]; var b = grid[ iy ][ ix ]; var c = grid[ iy + 1 ][ ix ]; var d = grid[ iy + 1 ][ ix + 1 ]; if ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d ); if ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d ); } } // build geometry this.setIndex( indices ); this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) ); this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) ); this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) ); } SphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype ); SphereBufferGeometry.prototype.constructor = SphereBufferGeometry; /** * @author Kaleb Murphy * @author Mugen87 / https://github.com/Mugen87 */ // RingGeometry function RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) { Geometry.call( this ); this.type = 'RingGeometry'; this.parameters = { innerRadius: innerRadius, outerRadius: outerRadius, thetaSegments: thetaSegments, phiSegments: phiSegments, thetaStart: thetaStart, thetaLength: thetaLength }; this.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) ); this.mergeVertices(); } RingGeometry.prototype = Object.create( Geometry.prototype ); RingGeometry.prototype.constructor = RingGeometry; // RingBufferGeometry function RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) { BufferGeometry.call( this ); this.type = 'RingBufferGeometry'; this.parameters = { innerRadius: innerRadius, outerRadius: outerRadius, thetaSegments: thetaSegments, phiSegments: phiSegments, thetaStart: thetaStart, thetaLength: thetaLength }; innerRadius = innerRadius || 0.5; outerRadius = outerRadius || 1; thetaStart = thetaStart !== undefined ? thetaStart : 0; thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2; thetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8; phiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1; // buffers var indices = []; var vertices = []; var normals = []; var uvs = []; // some helper variables var segment; var radius = innerRadius; var radiusStep = ( ( outerRadius - innerRadius ) / phiSegments ); var vertex = new Vector3(); var uv = new Vector2(); var j, i; // generate vertices, normals and uvs for ( j = 0; j <= phiSegments; j ++ ) { for ( i = 0; i <= thetaSegments; i ++ ) { // values are generate from the inside of the ring to the outside segment = thetaStart + i / thetaSegments * thetaLength; // vertex vertex.x = radius * Math.cos( segment ); vertex.y = radius * Math.sin( segment ); vertices.push( vertex.x, vertex.y, vertex.z ); // normal normals.push( 0, 0, 1 ); // uv uv.x = ( vertex.x / outerRadius + 1 ) / 2; uv.y = ( vertex.y / outerRadius + 1 ) / 2; uvs.push( uv.x, uv.y ); } // increase the radius for next row of vertices radius += radiusStep; } // indices for ( j = 0; j < phiSegments; j ++ ) { var thetaSegmentLevel = j * ( thetaSegments + 1 ); for ( i = 0; i < thetaSegments; i ++ ) { segment = i + thetaSegmentLevel; var a = segment; var b = segment + thetaSegments + 1; var c = segment + thetaSegments + 2; var d = segment + 1; // faces indices.push( a, b, d ); indices.push( b, c, d ); } } // build geometry this.setIndex( indices ); this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) ); this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) ); this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) ); } RingBufferGeometry.prototype = Object.create( BufferGeometry.prototype ); RingBufferGeometry.prototype.constructor = RingBufferGeometry; /** * @author zz85 / https://github.com/zz85 * @author bhouston / http://clara.io * @author Mugen87 / https://github.com/Mugen87 */ // LatheGeometry function LatheGeometry( points, segments, phiStart, phiLength ) { Geometry.call( this ); this.type = 'LatheGeometry'; this.parameters = { points: points, segments: segments, phiStart: phiStart, phiLength: phiLength }; this.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) ); this.mergeVertices(); } LatheGeometry.prototype = Object.create( Geometry.prototype ); LatheGeometry.prototype.constructor = LatheGeometry; // LatheBufferGeometry function LatheBufferGeometry( points, segments, phiStart, phiLength ) { BufferGeometry.call( this ); this.type = 'LatheBufferGeometry'; this.parameters = { points: points, segments: segments, phiStart: phiStart, phiLength: phiLength }; segments = Math.floor( segments ) || 12; phiStart = phiStart || 0; phiLength = phiLength || Math.PI * 2; // clamp phiLength so it's in range of [ 0, 2PI ] phiLength = _Math.clamp( phiLength, 0, Math.PI * 2 ); // buffers var indices = []; var vertices = []; var uvs = []; // helper variables var base; var inverseSegments = 1.0 / segments; var vertex = new Vector3(); var uv = new Vector2(); var i, j; // generate vertices and uvs for ( i = 0; i <= segments; i ++ ) { var phi = phiStart + i * inverseSegments * phiLength; var sin = Math.sin( phi ); var cos = Math.cos( phi ); for ( j = 0; j <= ( points.length - 1 ); j ++ ) { // vertex vertex.x = points[ j ].x * sin; vertex.y = points[ j ].y; vertex.z = points[ j ].x * cos; vertices.push( vertex.x, vertex.y, vertex.z ); // uv uv.x = i / segments; uv.y = j / ( points.length - 1 ); uvs.push( uv.x, uv.y ); } } // indices for ( i = 0; i < segments; i ++ ) { for ( j = 0; j < ( points.length - 1 ); j ++ ) { base = j + i * points.length; var a = base; var b = base + points.length; var c = base + points.length + 1; var d = base + 1; // faces indices.push( a, b, d ); indices.push( b, c, d ); } } // build geometry this.setIndex( indices ); this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) ); this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) ); // generate normals this.computeVertexNormals(); // if the geometry is closed, we need to average the normals along the seam. // because the corresponding vertices are identical (but still have different UVs). if ( phiLength === Math.PI * 2 ) { var normals = this.attributes.normal.array; var n1 = new Vector3(); var n2 = new Vector3(); var n = new Vector3(); // this is the buffer offset for the last line of vertices base = segments * points.length * 3; for ( i = 0, j = 0; i < points.length; i ++, j += 3 ) { // select the normal of the vertex in the first line n1.x = normals[ j + 0 ]; n1.y = normals[ j + 1 ]; n1.z = normals[ j + 2 ]; // select the normal of the vertex in the last line n2.x = normals[ base + j + 0 ]; n2.y = normals[ base + j + 1 ]; n2.z = normals[ base + j + 2 ]; // average normals n.addVectors( n1, n2 ).normalize(); // assign the new values to both normals normals[ j + 0 ] = normals[ base + j + 0 ] = n.x; normals[ j + 1 ] = normals[ base + j + 1 ] = n.y; normals[ j + 2 ] = normals[ base + j + 2 ] = n.z; } } } LatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype ); LatheBufferGeometry.prototype.constructor = LatheBufferGeometry; /** * @author jonobr1 / http://jonobr1.com * @author Mugen87 / https://github.com/Mugen87 */ // ShapeGeometry function ShapeGeometry( shapes, curveSegments ) { Geometry.call( this ); this.type = 'ShapeGeometry'; if ( typeof curveSegments === 'object' ) { console.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' ); curveSegments = curveSegments.curveSegments; } this.parameters = { shapes: shapes, curveSegments: curveSegments }; this.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) ); this.mergeVertices(); } ShapeGeometry.prototype = Object.create( Geometry.prototype ); ShapeGeometry.prototype.constructor = ShapeGeometry; ShapeGeometry.prototype.toJSON = function () { var data = Geometry.prototype.toJSON.call( this ); var shapes = this.parameters.shapes; return toJSON$1( shapes, data ); }; // ShapeBufferGeometry function ShapeBufferGeometry( shapes, curveSegments ) { BufferGeometry.call( this ); this.type = 'ShapeBufferGeometry'; this.parameters = { shapes: shapes, curveSegments: curveSegments }; curveSegments = curveSegments || 12; // buffers var indices = []; var vertices = []; var normals = []; var uvs = []; // helper variables var groupStart = 0; var groupCount = 0; // allow single and array values for "shapes" parameter if ( Array.isArray( shapes ) === false ) { addShape( shapes ); } else { for ( var i = 0; i < shapes.length; i ++ ) { addShape( shapes[ i ] ); this.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support groupStart += groupCount; groupCount = 0; } } // build geometry this.setIndex( indices ); this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) ); this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) ); this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) ); // helper functions function addShape( shape ) { var i, l, shapeHole; var indexOffset = vertices.length / 3; var points = shape.extractPoints( curveSegments ); var shapeVertices = points.shape; var shapeHoles = points.holes; // check direction of vertices if ( ShapeUtils.isClockWise( shapeVertices ) === false ) { shapeVertices = shapeVertices.reverse(); } for ( i = 0, l = shapeHoles.length; i < l; i ++ ) { shapeHole = shapeHoles[ i ]; if ( ShapeUtils.isClockWise( shapeHole ) === true ) { shapeHoles[ i ] = shapeHole.reverse(); } } var faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles ); // join vertices of inner and outer paths to a single array for ( i = 0, l = shapeHoles.length; i < l; i ++ ) { shapeHole = shapeHoles[ i ]; shapeVertices = shapeVertices.concat( shapeHole ); } // vertices, normals, uvs for ( i = 0, l = shapeVertices.length; i < l; i ++ ) { var vertex = shapeVertices[ i ]; vertices.push( vertex.x, vertex.y, 0 ); normals.push( 0, 0, 1 ); uvs.push( vertex.x, vertex.y ); // world uvs } // incides for ( i = 0, l = faces.length; i < l; i ++ ) { var face = faces[ i ]; var a = face[ 0 ] + indexOffset; var b = face[ 1 ] + indexOffset; var c = face[ 2 ] + indexOffset; indices.push( a, b, c ); groupCount += 3; } } } ShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype ); ShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry; ShapeBufferGeometry.prototype.toJSON = function () { var data = BufferGeometry.prototype.toJSON.call( this ); var shapes = this.parameters.shapes; return toJSON$1( shapes, data ); }; // function toJSON$1( shapes, data ) { data.shapes = []; if ( Array.isArray( shapes ) ) { for ( var i = 0, l = shapes.length; i < l; i ++ ) { var shape = shapes[ i ]; data.shapes.push( shape.uuid ); } } else { data.shapes.push( shapes.uuid ); } return data; } /** * @author WestLangley / http://github.com/WestLangley * @author Mugen87 / https://github.com/Mugen87 */ function EdgesGeometry( geometry, thresholdAngle ) { BufferGeometry.call( this ); this.type = 'EdgesGeometry'; this.parameters = { thresholdAngle: thresholdAngle }; thresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1; // buffer var vertices = []; // helper variables var thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle ); var edge = [ 0, 0 ], edges = {}, edge1, edge2; var key, keys = [ 'a', 'b', 'c' ]; // prepare source geometry var geometry2; if ( geometry.isBufferGeometry ) { geometry2 = new Geometry(); geometry2.fromBufferGeometry( geometry ); } else { geometry2 = geometry.clone(); } geometry2.mergeVertices(); geometry2.computeFaceNormals(); var sourceVertices = geometry2.vertices; var faces = geometry2.faces; // now create a data structure where each entry represents an edge with its adjoining faces for ( var i = 0, l = faces.length; i < l; i ++ ) { var face = faces[ i ]; for ( var j = 0; j < 3; j ++ ) { edge1 = face[ keys[ j ] ]; edge2 = face[ keys[ ( j + 1 ) % 3 ] ]; edge[ 0 ] = Math.min( edge1, edge2 ); edge[ 1 ] = Math.max( edge1, edge2 ); key = edge[ 0 ] + ',' + edge[ 1 ]; if ( edges[ key ] === undefined ) { edges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined }; } else { edges[ key ].face2 = i; } } } // generate vertices for ( key in edges ) { var e = edges[ key ]; // an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree. if ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) { var vertex = sourceVertices[ e.index1 ]; vertices.push( vertex.x, vertex.y, vertex.z ); vertex = sourceVertices[ e.index2 ]; vertices.push( vertex.x, vertex.y, vertex.z ); } } // build geometry this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) ); } EdgesGeometry.prototype = Object.create( BufferGeometry.prototype ); EdgesGeometry.prototype.constructor = EdgesGeometry; /** * @author mrdoob / http://mrdoob.com/ * @author Mugen87 / https://github.com/Mugen87 */ // CylinderGeometry function CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) { Geometry.call( this ); this.type = 'CylinderGeometry'; this.parameters = { radiusTop: radiusTop, radiusBottom: radiusBottom, height: height, radialSegments: radialSegments, heightSegments: heightSegments, openEnded: openEnded, thetaStart: thetaStart, thetaLength: thetaLength }; this.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) ); this.mergeVertices(); } CylinderGeometry.prototype = Object.create( Geometry.prototype ); CylinderGeometry.prototype.constructor = CylinderGeometry; // CylinderBufferGeometry function CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) { BufferGeometry.call( this ); this.type = 'CylinderBufferGeometry'; this.parameters = { radiusTop: radiusTop, radiusBottom: radiusBottom, height: height, radialSegments: radialSegments, heightSegments: heightSegments, openEnded: openEnded, thetaStart: thetaStart, thetaLength: thetaLength }; var scope = this; radiusTop = radiusTop !== undefined ? radiusTop : 1; radiusBottom = radiusBottom !== undefined ? radiusBottom : 1; height = height || 1; radialSegments = Math.floor( radialSegments ) || 8; heightSegments = Math.floor( heightSegments ) || 1; openEnded = openEnded !== undefined ? openEnded : false; thetaStart = thetaStart !== undefined ? thetaStart : 0.0; thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2; // buffers var indices = []; var vertices = []; var normals = []; var uvs = []; // helper variables var index = 0; var indexArray = []; var halfHeight = height / 2; var groupStart = 0; // generate geometry generateTorso(); if ( openEnded === false ) { if ( radiusTop > 0 ) generateCap( true ); if ( radiusBottom > 0 ) generateCap( false ); } // build geometry this.setIndex( indices ); this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) ); this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) ); this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) ); function generateTorso() { var x, y; var normal = new Vector3(); var vertex = new Vector3(); var groupCount = 0; // this will be used to calculate the normal var slope = ( radiusBottom - radiusTop ) / height; // generate vertices, normals and uvs for ( y = 0; y <= heightSegments; y ++ ) { var indexRow = []; var v = y / heightSegments; // calculate the radius of the current row var radius = v * ( radiusBottom - radiusTop ) + radiusTop; for ( x = 0; x <= radialSegments; x ++ ) { var u = x / radialSegments; var theta = u * thetaLength + thetaStart; var sinTheta = Math.sin( theta ); var cosTheta = Math.cos( theta ); // vertex vertex.x = radius * sinTheta; vertex.y = - v * height + halfHeight; vertex.z = radius * cosTheta; vertices.push( vertex.x, vertex.y, vertex.z ); // normal normal.set( sinTheta, slope, cosTheta ).normalize(); normals.push( normal.x, normal.y, normal.z ); // uv uvs.push( u, 1 - v ); // save index of vertex in respective row indexRow.push( index ++ ); } // now save vertices of the row in our index array indexArray.push( indexRow ); } // generate indices for ( x = 0; x < radialSegments; x ++ ) { for ( y = 0; y < heightSegments; y ++ ) { // we use the index array to access the correct indices var a = indexArray[ y ][ x ]; var b = indexArray[ y + 1 ][ x ]; var c = indexArray[ y + 1 ][ x + 1 ]; var d = indexArray[ y ][ x + 1 ]; // faces indices.push( a, b, d ); indices.push( b, c, d ); // update group counter groupCount += 6; } } // add a group to the geometry. this will ensure multi material support scope.addGroup( groupStart, groupCount, 0 ); // calculate new start value for groups groupStart += groupCount; } function generateCap( top ) { var x, centerIndexStart, centerIndexEnd; var uv = new Vector2(); var vertex = new Vector3(); var groupCount = 0; var radius = ( top === true ) ? radiusTop : radiusBottom; var sign = ( top === true ) ? 1 : - 1; // save the index of the first center vertex centerIndexStart = index; // first we generate the center vertex data of the cap. // because the geometry needs one set of uvs per face, // we must generate a center vertex per face/segment for ( x = 1; x <= radialSegments; x ++ ) { // vertex vertices.push( 0, halfHeight * sign, 0 ); // normal normals.push( 0, sign, 0 ); // uv uvs.push( 0.5, 0.5 ); // increase index index ++; } // save the index of the last center vertex centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs for ( x = 0; x <= radialSegments; x ++ ) { var u = x / radialSegments; var theta = u * thetaLength + thetaStart; var cosTheta = Math.cos( theta ); var sinTheta = Math.sin( theta ); // vertex vertex.x = radius * sinTheta; vertex.y = halfHeight * sign; vertex.z = radius * cosTheta; vertices.push( vertex.x, vertex.y, vertex.z ); // normal normals.push( 0, sign, 0 ); // uv uv.x = ( cosTheta * 0.5 ) + 0.5; uv.y = ( sinTheta * 0.5 * sign ) + 0.5; uvs.push( uv.x, uv.y ); // increase index index ++; } // generate indices for ( x = 0; x < radialSegments; x ++ ) { var c = centerIndexStart + x; var i = centerIndexEnd + x; if ( top === true ) { // face top indices.push( i, i + 1, c ); } else { // face bottom indices.push( i + 1, i, c ); } groupCount += 3; } // add a group to the geometry. this will ensure multi material support scope.addGroup( groupStart, groupCount, top === true ? 1 : 2 ); // calculate new start value for groups groupStart += groupCount; } } CylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype ); CylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry; /** * @author abelnation / http://github.com/abelnation */ // ConeGeometry function ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) { CylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ); this.type = 'ConeGeometry'; this.parameters = { radius: radius, height: height, radialSegments: radialSegments, heightSegments: heightSegments, openEnded: openEnded, thetaStart: thetaStart, thetaLength: thetaLength }; } ConeGeometry.prototype = Object.create( CylinderGeometry.prototype ); ConeGeometry.prototype.constructor = ConeGeometry; // ConeBufferGeometry function ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) { CylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ); this.type = 'ConeBufferGeometry'; this.parameters = { radius: radius, height: height, radialSegments: radialSegments, heightSegments: heightSegments, openEnded: openEnded, thetaStart: thetaStart, thetaLength: thetaLength }; } ConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype ); ConeBufferGeometry.prototype.constructor = ConeBufferGeometry; /** * @author benaadams / https://twitter.com/ben_a_adams * @author Mugen87 / https://github.com/Mugen87 * @author hughes */ // CircleGeometry function CircleGeometry( radius, segments, thetaStart, thetaLength ) { Geometry.call( this ); this.type = 'CircleGeometry'; this.parameters = { radius: radius, segments: segments, thetaStart: thetaStart, thetaLength: thetaLength }; this.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) ); this.mergeVertices(); } CircleGeometry.prototype = Object.create( Geometry.prototype ); CircleGeometry.prototype.constructor = CircleGeometry; // CircleBufferGeometry function CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) { BufferGeometry.call( this ); this.type = 'CircleBufferGeometry'; this.parameters = { radius: radius, segments: segments, thetaStart: thetaStart, thetaLength: thetaLength }; radius = radius || 1; segments = segments !== undefined ? Math.max( 3, segments ) : 8; thetaStart = thetaStart !== undefined ? thetaStart : 0; thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2; // buffers var indices = []; var vertices = []; var normals = []; var uvs = []; // helper variables var i, s; var vertex = new Vector3(); var uv = new Vector2(); // center point vertices.push( 0, 0, 0 ); normals.push( 0, 0, 1 ); uvs.push( 0.5, 0.5 ); for ( s = 0, i = 3; s <= segments; s ++, i += 3 ) { var segment = thetaStart + s / segments * thetaLength; // vertex vertex.x = radius * Math.cos( segment ); vertex.y = radius * Math.sin( segment ); vertices.push( vertex.x, vertex.y, vertex.z ); // normal normals.push( 0, 0, 1 ); // uvs uv.x = ( vertices[ i ] / radius + 1 ) / 2; uv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2; uvs.push( uv.x, uv.y ); } // indices for ( i = 1; i <= segments; i ++ ) { indices.push( i, i + 1, 0 ); } // build geometry this.setIndex( indices ); this.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) ); this.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) ); this.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) ); } CircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype ); CircleBufferGeometry.prototype.constructor = CircleBufferGeometry; var Geometries = /*#__PURE__*/Object.freeze({ WireframeGeometry: WireframeGeometry, ParametricGeometry: ParametricGeometry, ParametricBufferGeometry: ParametricBufferGeometry, TetrahedronGeometry: TetrahedronGeometry, TetrahedronBufferGeometry: TetrahedronBufferGeometry, OctahedronGeometry: OctahedronGeometry, OctahedronBufferGeometry: OctahedronBufferGeometry, IcosahedronGeometry: IcosahedronGeometry, IcosahedronBufferGeometry: IcosahedronBufferGeometry, DodecahedronGeometry: DodecahedronGeometry, DodecahedronBufferGeometry: DodecahedronBufferGeometry, PolyhedronGeometry: PolyhedronGeometry, PolyhedronBufferGeometry: PolyhedronBufferGeometry, TubeGeometry: TubeGeometry, TubeBufferGeometry: TubeBufferGeometry, TorusKnotGeometry: TorusKnotGeometry, TorusKnotBufferGeometry: TorusKnotBufferGeometry, TorusGeometry: TorusGeometry, TorusBufferGeometry: TorusBufferGeometry, TextGeometry: TextGeometry, TextBufferGeometry: TextBufferGeometry, SphereGeometry: SphereGeometry, SphereBufferGeometry: SphereBufferGeometry, RingGeometry: RingGeometry, RingBufferGeometry: RingBufferGeometry, PlaneGeometry: PlaneGeometry, PlaneBufferGeometry: PlaneBufferGeometry, LatheGeometry: LatheGeometry, LatheBufferGeometry: LatheBufferGeometry, ShapeGeometry: ShapeGeometry, ShapeBufferGeometry: ShapeBufferGeometry, ExtrudeGeometry: ExtrudeGeometry, ExtrudeBufferGeometry: ExtrudeBufferGeometry, EdgesGeometry: EdgesGeometry, ConeGeometry: ConeGeometry, ConeBufferGeometry: ConeBufferGeometry, CylinderGeometry: CylinderGeometry, CylinderBufferGeometry: CylinderBufferGeometry, CircleGeometry: CircleGeometry, CircleBufferGeometry: CircleBufferGeometry, BoxGeometry: BoxGeometry, BoxBufferGeometry: BoxBufferGeometry }); /** * @author mrdoob / http://mrdoob.com/ * * parameters = { * color: <THREE.Color> * } */ function ShadowMaterial( parameters ) { Material.call( this ); this.type = 'ShadowMaterial'; this.color = new Color( 0x000000 ); this.transparent = true; this.setValues( parameters ); } ShadowMaterial.prototype = Object.create( Material.prototype ); ShadowMaterial.prototype.constructor = ShadowMaterial; ShadowMaterial.prototype.isShadowMaterial = true; ShadowMaterial.prototype.copy = function ( source ) { Material.prototype.copy.call( this, source ); this.color.copy( source.color ); return this; }; /** * @author mrdoob / http://mrdoob.com/ */ function RawShaderMaterial( parameters ) { ShaderMaterial.call( this, parameters ); this.type = 'RawShaderMaterial'; } RawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype ); RawShaderMaterial.prototype.constructor = RawShaderMaterial; RawShaderMaterial.prototype.isRawShaderMaterial = true; /** * @author WestLangley / http://github.com/WestLangley * * parameters = { * color: <hex>, * roughness: <float>, * metalness: <float>, * opacity: <float>, * * map: new THREE.Texture( <Image> ), * * lightMap: new THREE.Texture( <Image> ), * lightMapIntensity: <float> * * aoMap: new THREE.Texture( <Image> ), * aoMapIntensity: <float> * * emissive: <hex>, * emissiveIntensity: <float> * emissiveMap: new THREE.Texture( <Image> ), * * bumpMap: new THREE.Texture( <Image> ), * bumpScale: <float>, * * normalMap: new THREE.Texture( <Image> ), * normalMapType: THREE.TangentSpaceNormalMap, * normalScale: <Vector2>, * * displacementMap: new THREE.Texture( <Image> ), * displacementScale: <float>, * displacementBias: <float>, * * roughnessMap: new THREE.Texture( <Image> ), * * metalnessMap: new THREE.Texture( <Image> ), * * alphaMap: new THREE.Texture( <Image> ), * * envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ), * envMapIntensity: <float> * * refractionRatio: <float>, * * wireframe: <boolean>, * wireframeLinewidth: <float>, * * skinning: <bool>, * morphTargets: <bool>, * morphNormals: <bool> * } */ function MeshStandardMaterial( parameters ) { Material.call( this ); this.defines = { 'STANDARD': '' }; this.type = 'MeshStandardMaterial'; this.color = new Color( 0xffffff ); // diffuse this.roughness = 0.5; this.metalness = 0.5; this.map = null; this.lightMap = null; this.lightMapIntensity = 1.0; this.aoMap = null; this.aoMapIntensity = 1.0; this.emissive = new Color( 0x000000 ); this.emissiveIntensity = 1.0; this.emissiveMap = null; this.bumpMap = null; this.bumpScale = 1; this.normalMap = null; this.normalMapType = TangentSpaceNormalMap; this.normalScale = new Vector2( 1, 1 ); this.displacementMap = null; this.displacementScale = 1; this.displacementBias = 0; this.roughnessMap = null; this.metalnessMap = null; this.alphaMap = null; this.envMap = null; this.envMapIntensity = 1.0; this.refractionRatio = 0.98; this.wireframe = false; this.wireframeLinewidth = 1; this.wireframeLinecap = 'round'; this.wireframeLinejoin = 'round'; this.skinning = false; this.morphTargets = false; this.morphNormals = false; this.setValues( parameters ); } MeshStandardMaterial.prototype = Object.create( Material.prototype ); MeshStandardMaterial.prototype.constructor = MeshStandardMaterial; MeshStandardMaterial.prototype.isMeshStandardMaterial = true; MeshStandardMaterial.prototype.copy = function ( source ) { Material.prototype.copy.call( this, source ); this.defines = { 'STANDARD': '' }; this.color.copy( source.color ); this.roughness = source.roughness; this.metalness = source.metalness; this.map = source.map; this.lightMap = source.lightMap; this.lightMapIntensity = source.lightMapIntensity; this.aoMap = source.aoMap; this.aoMapIntensity = source.aoMapIntensity; this.emissive.copy( source.emissive ); this.emissiveMap = source.emissiveMap; this.emissiveIntensity = source.emissiveIntensity; this.bumpMap = source.bumpMap; this.bumpScale = source.bumpScale; this.normalMap = source.normalMap; this.normalMapType = source.normalMapType; this.normalScale.copy( source.normalScale ); this.displacementMap = source.displacementMap; this.displacementScale = source.displacementScale; this.displacementBias = source.displacementBias; this.roughnessMap = source.roughnessMap; this.metalnessMap = source.metalnessMap; this.alphaMap = source.alphaMap; this.envMap = source.envMap; this.envMapIntensity = source.envMapIntensity; this.refractionRatio = source.refractionRatio; this.wireframe = source.wireframe; this.wireframeLinewidth = source.wireframeLinewidth; this.wireframeLinecap = source.wireframeLinecap; this.wireframeLinejoin = source.wireframeLinejoin; this.skinning = source.skinning; this.morphTargets = source.morphTargets; this.morphNormals = source.morphNormals; return this; }; /** * @author WestLangley / http://github.com/WestLangley * * parameters = { * reflectivity: <float> * clearCoat: <float> * clearCoatRoughness: <float> * } */ function MeshPhysicalMaterial( parameters ) { MeshStandardMaterial.call( this ); this.defines = { 'PHYSICAL': '' }; this.type = 'MeshPhysicalMaterial'; this.reflectivity = 0.5; // maps to F0 = 0.04 this.clearCoat = 0.0; this.clearCoatRoughness = 0.0; this.setValues( parameters ); } MeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype ); MeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial; MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true; MeshPhysicalMaterial.prototype.copy = function ( source ) { MeshStandardMaterial.prototype.copy.call( this, source ); this.defines = { 'PHYSICAL': '' }; this.reflectivity = source.reflectivity; this.clearCoat = source.clearCoat; this.clearCoatRoughness = source.clearCoatRoughness; return this; }; /** * @author mrdoob / http://mrdoob.com/ * @author alteredq / http://alteredqualia.com/ * * parameters = { * color: <hex>, * specular: <hex>, * shininess: <float>, * opacity: <float>, * * map: new THREE.Texture( <Image> ), * * lightMap: new THREE.Texture( <Image> ), * lightMapIntensity: <float> * * aoMap: new THREE.Texture( <Image> ), * aoMapIntensity: <float> * * emissive: <hex>, * emissiveIntensity: <float> * emissiveMap: new THREE.Texture( <Image> ), * * bumpMap: new THREE.Texture( <Image> ), * bumpScale: <float>, * * normalMap: new THREE.Texture( <Image> ), * normalMapType: THREE.TangentSpaceNormalMap, * normalScale: <Vector2>, * * displacementMap: new THREE.Texture( <Image> ), * displacementScale: <float>, * displacementBias: <float>, * * specularMap: new THREE.Texture( <Image> ), * * alphaMap: new THREE.Texture( <Image> ), * * envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ), * combine: THREE.Multiply, * reflectivity: <float>, * refractionRatio: <float>, * * wireframe: <boolean>, * wireframeLinewidth: <float>, * * skinning: <bool>, * morphTargets: <bool>, * morphNormals: <bool> * } */ function MeshPhongMaterial( parameters ) { Material.call( this ); this.type = 'MeshPhongMaterial'; this.color = new Color( 0xffffff ); // diffuse this.specular = new Color( 0x111111 ); this.shininess = 30; this.map = null; this.lightMap = null; this.lightMapIntensity = 1.0; this.aoMap = null; this.aoMapIntensity = 1.0; this.emissive = new Color( 0x000000 ); this.emissiveIntensity = 1.0; this.emissiveMap = null; this.bumpMap = null; this.bumpScale = 1; this.normalMap = null; this.normalMapType = TangentSpaceNormalMap; this.normalScale = new Vector2( 1, 1 ); this.displacementMap = null; this.displacementScale = 1; this.displacementBias = 0; this.specularMap = null; this.alphaMap = null; this.envMap = null; this.combine = MultiplyOperation; this.reflectivity = 1; this.refractionRatio = 0.98; this.wireframe = false; this.wireframeLinewidth = 1; this.wireframeLinecap = 'round'; this.wireframeLinejoin = 'round'; this.skinning = false; this.morphTargets = false; this.morphNormals = false; this.setValues( parameters ); } MeshPhongMaterial.prototype = Object.create( Material.prototype ); MeshPhongMaterial.prototype.constructor = MeshPhongMaterial; MeshPhongMaterial.prototype.isMeshPhongMaterial = true; MeshPhongMaterial.prototype.copy = function ( source ) { Material.prototype.copy.call( this, source ); this.color.copy( source.color ); this.specular.copy( source.specular ); this.shininess = source.shininess; this.map = source.map; this.lightMap = source.lightMap; this.lightMapIntensity = source.lightMapIntensity; this.aoMap = source.aoMap; this.aoMapIntensity = source.aoMapIntensity; this.emissive.copy( source.emissive ); this.emissiveMap = source.emissiveMap; this.emissiveIntensity = source.emissiveIntensity; this.bumpMap = source.bumpMap; this.bumpScale = source.bumpScale; this.normalMap = source.normalMap; this.normalMapType = source.normalMapType; this.normalScale.copy( source.normalScale ); this.displacementMap = source.displacementMap; this.displacementScale = source.displacementScale; this.displacementBias = source.displacementBias; this.specularMap = source.specularMap; this.alphaMap = source.alphaMap; this.envMap = source.envMap; this.combine = source.combine; this.reflectivity = source.reflectivity; this.refractionRatio = source.refractionRatio; this.wireframe = source.wireframe; this.wireframeLinewidth = source.wireframeLinewidth; this.wireframeLinecap = source.wireframeLinecap; this.wireframeLinejoin = source.wireframeLinejoin; this.skinning = source.skinning; this.morphTargets = source.morphTargets; this.morphNormals = source.morphNormals; return this; }; /** * @author takahirox / http://github.com/takahirox * * parameters = { * gradientMap: new THREE.Texture( <Image> ) * } */ function MeshToonMaterial( parameters ) { MeshPhongMaterial.call( this ); this.defines = { 'TOON': '' }; this.type = 'MeshToonMaterial'; this.gradientMap = null; this.setValues( parameters ); } MeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype ); MeshToonMaterial.prototype.constructor = MeshToonMaterial; MeshToonMaterial.prototype.isMeshToonMaterial = true; MeshToonMaterial.prototype.copy = function ( source ) { MeshPhongMaterial.prototype.copy.call( this, source ); this.gradientMap = source.gradientMap; return this; }; /** * @author mrdoob / http://mrdoob.com/ * @author WestLangley / http://github.com/WestLangley * * parameters = { * opacity: <float>, * * bumpMap: new THREE.Texture( <Image> ), * bumpScale: <float>, * * normalMap: new THREE.Texture( <Image> ), * normalMapType: THREE.TangentSpaceNormalMap, * normalScale: <Vector2>, * * displacementMap: new THREE.Texture( <Image> ), * displacementScale: <float>, * displacementBias: <float>, * * wireframe: <boolean>, * wireframeLinewidth: <float> * * skinning: <bool>, * morphTargets: <bool>, * morphNormals: <bool> * } */ function MeshNormalMaterial( parameters ) { Material.call( this ); this.type = 'MeshNormalMaterial'; this.bumpMap = null; this.bumpScale = 1; this.normalMap = null; this.normalMapType = TangentSpaceNormalMap; this.normalScale = new Vector2( 1, 1 ); this.displacementMap = null; this.displacementScale = 1; this.displacementBias = 0; this.wireframe = false; this.wireframeLinewidth = 1; this.fog = false; this.lights = false; this.skinning = false; this.morphTargets = false; this.morphNormals = false; this.setValues( parameters ); } MeshNormalMaterial.prototype = Object.create( Material.prototype ); MeshNormalMaterial.prototype.constructor = MeshNormalMaterial; MeshNormalMaterial.prototype.isMeshNormalMaterial = true; MeshNormalMaterial.prototype.copy = function ( source ) { Material.prototype.copy.call( this, source ); this.bumpMap = source.bumpMap; this.bumpScale = source.bumpScale; this.normalMap = source.normalMap; this.normalMapType = source.normalMapType; this.normalScale.copy( source.normalScale ); this.displacementMap = source.displacementMap; this.displacementScale = source.displacementScale; this.displacementBias = source.displacementBias; this.wireframe = source.wireframe; this.wireframeLinewidth = source.wireframeLinewidth; this.skinning = source.skinning; this.morphTargets = source.morphTargets; this.morphNormals = source.morphNormals; return this; }; /** * @author mrdoob / http://mrdoob.com/ * @author alteredq / http://alteredqualia.com/ * * parameters = { * color: <hex>, * opacity: <float>, * * map: new THREE.Texture( <Image> ), * * lightMap: new THREE.Texture( <Image> ), * lightMapIntensity: <float> * * aoMap: new THREE.Texture( <Image> ), * aoMapIntensity: <float> * * emissive: <hex>, * emissiveIntensity: <float> * emissiveMap: new THREE.Texture( <Image> ), * * specularMap: new THREE.Texture( <Image> ), * * alphaMap: new THREE.Texture( <Image> ), * * envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ), * combine: THREE.Multiply, * reflectivity: <float>, * refractionRatio: <float>, * * wireframe: <boolean>, * wireframeLinewidth: <float>, * * skinning: <bool>, * morphTargets: <bool>, * morphNormals: <bool> * } */ function MeshLambertMaterial( parameters ) { Material.call( this ); this.type = 'MeshLambertMaterial'; this.color = new Color( 0xffffff ); // diffuse this.map = null; this.lightMap = null; this.lightMapIntensity = 1.0; this.aoMap = null; this.aoMapIntensity = 1.0; this.emissive = new Color( 0x000000 ); this.emissiveIntensity = 1.0; this.emissiveMap = null; this.specularMap = null; this.alphaMap = null; this.envMap = null; this.combine = MultiplyOperation; this.reflectivity = 1; this.refractionRatio = 0.98; this.wireframe = false; this.wireframeLinewidth = 1; this.wireframeLinecap = 'round'; this.wireframeLinejoin = 'round'; this.skinning = false; this.morphTargets = false; this.morphNormals = false; this.setValues( parameters ); } MeshLambertMaterial.prototype = Object.create( Material.prototype ); MeshLambertMaterial.prototype.constructor = MeshLambertMaterial; MeshLambertMaterial.prototype.isMeshLambertMaterial = true; MeshLambertMaterial.prototype.copy = function ( source ) { Material.prototype.copy.call( this, source ); this.color.copy( source.color ); this.map = source.map; this.lightMap = source.lightMap; this.lightMapIntensity = source.lightMapIntensity; this.aoMap = source.aoMap; this.aoMapIntensity = source.aoMapIntensity; this.emissive.copy( source.emissive ); this.emissiveMap = source.emissiveMap; this.emissiveIntensity = source.emissiveIntensity; this.specularMap = source.specularMap; this.alphaMap = source.alphaMap; this.envMap = source.envMap; this.combine = source.combine; this.reflectivity = source.reflectivity; this.refractionRatio = source.refractionRatio; this.wireframe = source.wireframe; this.wireframeLinewidth = source.wireframeLinewidth; this.wireframeLinecap = source.wireframeLinecap; this.wireframeLinejoin = source.wireframeLinejoin; this.skinning = source.skinning; this.morphTargets = source.morphTargets; this.morphNormals = source.morphNormals; return this; }; /** * @author WestLangley / http://github.com/WestLangley * * parameters = { * color: <hex>, * opacity: <float>, * * matcap: new THREE.Texture( <Image> ), * * map: new THREE.Texture( <Image> ), * * bumpMap: new THREE.Texture( <Image> ), * bumpScale: <float>, * * normalMap: new THREE.Texture( <Image> ), * normalMapType: THREE.TangentSpaceNormalMap, * normalScale: <Vector2>, * * displacementMap: new THREE.Texture( <Image> ), * displacementScale: <float>, * displacementBias: <float>, * * alphaMap: new THREE.Texture( <Image> ), * * skinning: <bool>, * morphTargets: <bool>, * morphNormals: <bool> * } */ function MeshMatcapMaterial( parameters ) { Material.call( this ); this.defines = { 'MATCAP': '' }; this.type = 'MeshMatcapMaterial'; this.color = new Color( 0xffffff ); // diffuse this.matcap = null; this.map = null; this.bumpMap = null; this.bumpScale = 1; this.normalMap = null; this.normalMapType = TangentSpaceNormalMap; this.normalScale = new Vector2( 1, 1 ); this.displacementMap = null; this.displacementScale = 1; this.displacementBias = 0; this.alphaMap = null; this.skinning = false; this.morphTargets = false; this.morphNormals = false; this.lights = false; this.setValues( parameters ); } MeshMatcapMaterial.prototype = Object.create( Material.prototype ); MeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial; MeshMatcapMaterial.prototype.isMeshMatcapMaterial = true; MeshMatcapMaterial.prototype.copy = function ( source ) { Material.prototype.copy.call( this, source ); this.defines = { 'MATCAP': '' }; this.color.copy( source.color ); this.matcap = source.matcap; this.map = source.map; this.bumpMap = source.bumpMap; this.bumpScale = source.bumpScale; this.normalMap = source.normalMap; this.normalMapType = source.normalMapType; this.normalScale.copy( source.normalScale ); this.displacementMap = source.displacementMap; this.displacementScale = source.displacementScale; this.displacementBias = source.displacementBias; this.alphaMap = source.alphaMap; this.skinning = source.skinning; this.morphTargets = source.morphTargets; this.morphNormals = source.morphNormals; return this; }; /** * @author alteredq / http://alteredqualia.com/ * * parameters = { * color: <hex>, * opacity: <float>, * * linewidth: <float>, * * scale: <float>, * dashSize: <float>, * gapSize: <float> * } */ function LineDashedMaterial( parameters ) { LineBasicMaterial.call( this ); this.type = 'LineDashedMaterial'; this.scale = 1; this.dashSize = 3; this.gapSize = 1; this.setValues( parameters ); } LineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype ); LineDashedMaterial.prototype.constructor = LineDashedMaterial; LineDashedMaterial.prototype.isLineDashedMaterial = true; LineDashedMaterial.prototype.copy = function ( source ) { LineBasicMaterial.prototype.copy.call( this, source ); this.scale = source.scale; this.dashSize = source.dashSize; this.gapSize = source.gapSize; return this; }; var Materials = /*#__PURE__*/Object.freeze({ ShadowMaterial: ShadowMaterial, SpriteMaterial: SpriteMaterial, RawShaderMaterial: RawShaderMaterial, ShaderMaterial: ShaderMaterial, PointsMaterial: PointsMaterial, MeshPhysicalMaterial: MeshPhysicalMaterial, MeshStandardMaterial: MeshStandardMaterial, MeshPhongMaterial: MeshPhongMaterial, MeshToonMaterial: MeshToonMaterial, MeshNormalMaterial: MeshNormalMaterial, MeshLambertMaterial: MeshLambertMaterial, MeshDepthMaterial: MeshDepthMaterial, MeshDistanceMaterial: MeshDistanceMaterial, MeshBasicMaterial: MeshBasicMaterial, MeshMatcapMaterial: MeshMatcapMaterial, LineDashedMaterial: LineDashedMaterial, LineBasicMaterial: LineBasicMaterial, Material: Material }); /** * @author tschw * @author Ben Houston / http://clara.io/ * @author David Sarno / http://lighthaus.us/ */ var AnimationUtils = { // same as Array.prototype.slice, but also works on typed arrays arraySlice: function ( array, from, to ) { if ( AnimationUtils.isTypedArray( array ) ) { // in ios9 array.subarray(from, undefined) will return empty array // but array.subarray(from) or array.subarray(from, len) is correct return new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) ); } return array.slice( from, to ); }, // converts an array to a specific type convertArray: function ( array, type, forceClone ) { if ( ! array || // let 'undefined' and 'null' pass ! forceClone && array.constructor === type ) return array; if ( typeof type.BYTES_PER_ELEMENT === 'number' ) { return new type( array ); // create typed array } return Array.prototype.slice.call( array ); // create Array }, isTypedArray: function ( object ) { return ArrayBuffer.isView( object ) && ! ( object instanceof DataView ); }, // returns an array by which times and values can be sorted getKeyframeOrder: function ( times ) { function compareTime( i, j ) { return times[ i ] - times[ j ]; } var n = times.length; var result = new Array( n ); for ( var i = 0; i !== n; ++ i ) result[ i ] = i; result.sort( compareTime ); return result; }, // uses the array previously returned by 'getKeyframeOrder' to sort data sortedArray: function ( values, stride, order ) { var nValues = values.length; var result = new values.constructor( nValues ); for ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) { var srcOffset = order[ i ] * stride; for ( var j = 0; j !== stride; ++ j ) { result[ dstOffset ++ ] = values[ srcOffset + j ]; } } return result; }, // function for parsing AOS keyframe formats flattenJSON: function ( jsonKeys, times, values, valuePropertyName ) { var i = 1, key = jsonKeys[ 0 ]; while ( key !== undefined && key[ valuePropertyName ] === undefined ) { key = jsonKeys[ i ++ ]; } if ( key === undefined ) return; // no data var value = key[ valuePropertyName ]; if ( value === undefined ) return; // no data if ( Array.isArray( value ) ) { do { value = key[ valuePropertyName ]; if ( value !== undefined ) { times.push( key.time ); values.push.apply( values, value ); // push all elements } key = jsonKeys[ i ++ ]; } while ( key !== undefined ); } else if ( value.toArray !== undefined ) { // ...assume THREE.Math-ish do { value = key[ valuePropertyName ]; if ( value !== undefined ) { times.push( key.time ); value.toArray( values, values.length ); } key = jsonKeys[ i ++ ]; } while ( key !== undefined ); } else { // otherwise push as-is do { value = key[ valuePropertyName ]; if ( value !== undefined ) { times.push( key.time ); values.push( value ); } key = jsonKeys[ i ++ ]; } while ( key !== undefined ); } } }; /** * Abstract base class of interpolants over parametric samples. * * The parameter domain is one dimensional, typically the time or a path * along a curve defined by the data. * * The sample values can have any dimensionality and derived classes may * apply special interpretations to the data. * * This class provides the interval seek in a Template Method, deferring * the actual interpolation to derived classes. * * Time complexity is O(1) for linear access crossing at most two points * and O(log N) for random access, where N is the number of positions. * * References: * * http://www.oodesign.com/template-method-pattern.html * * @author tschw */ function Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) { this.parameterPositions = parameterPositions; this._cachedIndex = 0; this.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor( sampleSize ); this.sampleValues = sampleValues; this.valueSize = sampleSize; } Object.assign( Interpolant.prototype, { evaluate: function ( t ) { var pp = this.parameterPositions, i1 = this._cachedIndex, t1 = pp[ i1 ], t0 = pp[ i1 - 1 ]; validate_interval: { seek: { var right; linear_scan: { //- See http://jsperf.com/comparison-to-undefined/3 //- slower code: //- //- if ( t >= t1 || t1 === undefined ) { forward_scan: if ( ! ( t < t1 ) ) { for ( var giveUpAt = i1 + 2; ; ) { if ( t1 === undefined ) { if ( t < t0 ) break forward_scan; // after end i1 = pp.length; this._cachedIndex = i1; return this.afterEnd_( i1 - 1, t, t0 ); } if ( i1 === giveUpAt ) break; // this loop t0 = t1; t1 = pp[ ++ i1 ]; if ( t < t1 ) { // we have arrived at the sought interval break seek; } } // prepare binary search on the right side of the index right = pp.length; break linear_scan; } //- slower code: //- if ( t < t0 || t0 === undefined ) { if ( ! ( t >= t0 ) ) { // looping? var t1global = pp[ 1 ]; if ( t < t1global ) { i1 = 2; // + 1, using the scan for the details t0 = t1global; } // linear reverse scan for ( var giveUpAt = i1 - 2; ; ) { if ( t0 === undefined ) { // before start this._cachedIndex = 0; return this.beforeStart_( 0, t, t1 ); } if ( i1 === giveUpAt ) break; // this loop t1 = t0; t0 = pp[ -- i1 - 1 ]; if ( t >= t0 ) { // we have arrived at the sought interval break seek; } } // prepare binary search on the left side of the index right = i1; i1 = 0; break linear_scan; } // the interval is valid break validate_interval; } // linear scan // binary search while ( i1 < right ) { var mid = ( i1 + right ) >>> 1; if ( t < pp[ mid ] ) { right = mid; } else { i1 = mid + 1; } } t1 = pp[ i1 ]; t0 = pp[ i1 - 1 ]; // check boundary cases, again if ( t0 === undefined ) { this._cachedIndex = 0; return this.beforeStart_( 0, t, t1 ); } if ( t1 === undefined ) { i1 = pp.length; this._cachedIndex = i1; return this.afterEnd_( i1 - 1, t0, t ); } } // seek this._cachedIndex = i1; this.intervalChanged_( i1, t0, t1 ); } // validate_interval return this.interpolate_( i1, t0, t, t1 ); }, settings: null, // optional, subclass-specific settings structure // Note: The indirection allows central control of many interpolants. // --- Protected interface DefaultSettings_: {}, getSettings_: function () { return this.settings || this.DefaultSettings_; }, copySampleValue_: function ( index ) { // copies a sample value to the result buffer var result = this.resultBuffer, values = this.sampleValues, stride = this.valueSize, offset = index * stride; for ( var i = 0; i !== stride; ++ i ) { result[ i ] = values[ offset + i ]; } return result; }, // Template methods for derived classes: interpolate_: function ( /* i1, t0, t, t1 */ ) { throw new Error( 'call to abstract method' ); // implementations shall return this.resultBuffer }, intervalChanged_: function ( /* i1, t0, t1 */ ) { // empty } } ); //!\ DECLARE ALIAS AFTER assign prototype ! Object.assign( Interpolant.prototype, { //( 0, t, t0 ), returns this.resultBuffer beforeStart_: Interpolant.prototype.copySampleValue_, //( N-1, tN-1, t ), returns this.resultBuffer afterEnd_: Interpolant.prototype.copySampleValue_, } ); /** * Fast and simple cubic spline interpolant. * * It was derived from a Hermitian construction setting the first derivative * at each sample position to the linear slope between neighboring positions * over their parameter interval. * * @author tschw */ function CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) { Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer ); this._weightPrev = - 0; this._offsetPrev = - 0; this._weightNext = - 0; this._offsetNext = - 0; } CubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), { constructor: CubicInterpolant, DefaultSettings_: { endingStart: ZeroCurvatureEnding, endingEnd: ZeroCurvatureEnding }, intervalChanged_: function ( i1, t0, t1 ) { var pp = this.parameterPositions, iPrev = i1 - 2, iNext = i1 + 1, tPrev = pp[ iPrev ], tNext = pp[ iNext ]; if ( tPrev === undefined ) { switch ( this.getSettings_().endingStart ) { case ZeroSlopeEnding: // f'(t0) = 0 iPrev = i1; tPrev = 2 * t0 - t1; break; case WrapAroundEnding: // use the other end of the curve iPrev = pp.length - 2; tPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ]; break; default: // ZeroCurvatureEnding // f''(t0) = 0 a.k.a. Natural Spline iPrev = i1; tPrev = t1; } } if ( tNext === undefined ) { switch ( this.getSettings_().endingEnd ) { case ZeroSlopeEnding: // f'(tN) = 0 iNext = i1; tNext = 2 * t1 - t0; break; case WrapAroundEnding: // use the other end of the curve iNext = 1; tNext = t1 + pp[ 1 ] - pp[ 0 ]; break; default: // ZeroCurvatureEnding // f''(tN) = 0, a.k.a. Natural Spline iNext = i1 - 1; tNext = t0; } } var halfDt = ( t1 - t0 ) * 0.5, stride = this.valueSize; this._weightPrev = halfDt / ( t0 - tPrev ); this._weightNext = halfDt / ( tNext - t1 ); this._offsetPrev = iPrev * stride; this._offsetNext = iNext * stride; }, interpolate_: function ( i1, t0, t, t1 ) { var result = this.resultBuffer, values = this.sampleValues, stride = this.valueSize, o1 = i1 * stride, o0 = o1 - stride, oP = this._offsetPrev, oN = this._offsetNext, wP = this._weightPrev, wN = this._weightNext, p = ( t - t0 ) / ( t1 - t0 ), pp = p * p, ppp = pp * p; // evaluate polynomials var sP = - wP * ppp + 2 * wP * pp - wP * p; var s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1; var s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p; var sN = wN * ppp - wN * pp; // combine data linearly for ( var i = 0; i !== stride; ++ i ) { result[ i ] = sP * values[ oP + i ] + s0 * values[ o0 + i ] + s1 * values[ o1 + i ] + sN * values[ oN + i ]; } return result; } } ); /** * @author tschw */ function LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) { Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer ); } LinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), { constructor: LinearInterpolant, interpolate_: function ( i1, t0, t, t1 ) { var result = this.resultBuffer, values = this.sampleValues, stride = this.valueSize, offset1 = i1 * stride, offset0 = offset1 - stride, weight1 = ( t - t0 ) / ( t1 - t0 ), weight0 = 1 - weight1; for ( var i = 0; i !== stride; ++ i ) { result[ i ] = values[ offset0 + i ] * weight0 + values[ offset1 + i ] * weight1; } return result; } } ); /** * * Interpolant that evaluates to the sample value at the position preceeding * the parameter. * * @author tschw */ function DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) { Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer ); } DiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), { constructor: DiscreteInterpolant, interpolate_: function ( i1 /*, t0, t, t1 */ ) { return this.copySampleValue_( i1 - 1 ); } } ); /** * * A timed sequence of keyframes for a specific property. * * * @author Ben Houston / http://clara.io/ * @author David Sarno / http://lighthaus.us/ * @author tschw */ function KeyframeTrack( name, times, values, interpolation ) { if ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' ); if ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name ); this.name = name; this.times = AnimationUtils.convertArray( times, this.TimeBufferType ); this.values = AnimationUtils.convertArray( values, this.ValueBufferType ); this.setInterpolation( interpolation || this.DefaultInterpolation ); } // Static methods Object.assign( KeyframeTrack, { // Serialization (in static context, because of constructor invocation // and automatic invocation of .toJSON): toJSON: function ( track ) { var trackType = track.constructor; var json; // derived classes can define a static toJSON method if ( trackType.toJSON !== undefined ) { json = trackType.toJSON( track ); } else { // by default, we assume the data can be serialized as-is json = { 'name': track.name, 'times': AnimationUtils.convertArray( track.times, Array ), 'values': AnimationUtils.convertArray( track.values, Array ) }; var interpolation = track.getInterpolation(); if ( interpolation !== track.DefaultInterpolation ) { json.interpolation = interpolation; } } json.type = track.ValueTypeName; // mandatory return json; } } ); Object.assign( KeyframeTrack.prototype, { constructor: KeyframeTrack, TimeBufferType: Float32Array, ValueBufferType: Float32Array, DefaultInterpolation: InterpolateLinear, InterpolantFactoryMethodDiscrete: function ( result ) { return new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result ); }, InterpolantFactoryMethodLinear: function ( result ) { return new LinearInterpolant( this.times, this.values, this.getValueSize(), result ); }, InterpolantFactoryMethodSmooth: function ( result ) { return new CubicInterpolant( this.times, this.values, this.getValueSize(), result ); }, setInterpolation: function ( interpolation ) { var factoryMethod; switch ( interpolation ) { case InterpolateDiscrete: factoryMethod = this.InterpolantFactoryMethodDiscrete; break; case InterpolateLinear: factoryMethod = this.InterpolantFactoryMethodLinear; break; case InterpolateSmooth: factoryMethod = this.InterpolantFactoryMethodSmooth; break; } if ( factoryMethod === undefined ) { var message = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name; if ( this.createInterpolant === undefined ) { // fall back to default, unless the default itself is messed up if ( interpolation !== this.DefaultInterpolation ) { this.setInterpolation( this.DefaultInterpolation ); } else { throw new Error( message ); // fatal, in this case } } console.warn( 'THREE.KeyframeTrack:', message ); return this; } this.createInterpolant = factoryMethod; return this; }, getInterpolation: function () { switch ( this.createInterpolant ) { case this.InterpolantFactoryMethodDiscrete: return InterpolateDiscrete; case this.InterpolantFactoryMethodLinear: return InterpolateLinear; case this.InterpolantFactoryMethodSmooth: return InterpolateSmooth; } }, getValueSize: function () { return this.values.length / this.times.length; }, // move all keyframes either forwards or backwards in time shift: function ( timeOffset ) { if ( timeOffset !== 0.0 ) { var times = this.times; for ( var i = 0, n = times.length; i !== n; ++ i ) { times[ i ] += timeOffset; } } return this; }, // scale all keyframe times by a factor (useful for frame <-> seconds conversions) scale: function ( timeScale ) { if ( timeScale !== 1.0 ) { var times = this.times; for ( var i = 0, n = times.length; i !== n; ++ i ) { times[ i ] *= timeScale; } } return this; }, // removes keyframes before and after animation without changing any values within the range [startTime, endTime]. // IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values trim: function ( startTime, endTime ) { var times = this.times, nKeys = times.length, from = 0, to = nKeys - 1; while ( from !== nKeys && times[ from ] < startTime ) { ++ from; } while ( to !== - 1 && times[ to ] > endTime ) { -- to; } ++ to; // inclusive -> exclusive bound if ( from !== 0 || to !== nKeys ) { // empty tracks are forbidden, so keep at least one keyframe if ( from >= to ) to = Math.max( to, 1 ), from = to - 1; var stride = this.getValueSize(); this.times = AnimationUtils.arraySlice( times, from, to ); this.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride ); } return this; }, // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable validate: function () { var valid = true; var valueSize = this.getValueSize(); if ( valueSize - Math.floor( valueSize ) !== 0 ) { console.error( 'THREE.KeyframeTrack: Invalid value size in track.', this ); valid = false; } var times = this.times, values = this.values, nKeys = times.length; if ( nKeys === 0 ) { console.error( 'THREE.KeyframeTrack: Track is empty.', this ); valid = false; } var prevTime = null; for ( var i = 0; i !== nKeys; i ++ ) { var currTime = times[ i ]; if ( typeof currTime === 'number' && isNaN( currTime ) ) { console.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime ); valid = false; break; } if ( prevTime !== null && prevTime > currTime ) { console.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime ); valid = false; break; } prevTime = currTime; } if ( values !== undefined ) { if ( AnimationUtils.isTypedArray( values ) ) { for ( var i = 0, n = values.length; i !== n; ++ i ) { var value = values[ i ]; if ( isNaN( value ) ) { console.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value ); valid = false; break; } } } } return valid; }, // removes equivalent sequential keys as common in morph target sequences // (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0) optimize: function () { var times = this.times, values = this.values, stride = this.getValueSize(), smoothInterpolation = this.getInterpolation() === InterpolateSmooth, writeIndex = 1, lastIndex = times.length - 1; for ( var i = 1; i < lastIndex; ++ i ) { var keep = false; var time = times[ i ]; var timeNext = times[ i + 1 ]; // remove adjacent keyframes scheduled at the same time if ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) { if ( ! smoothInterpolation ) { // remove unnecessary keyframes same as their neighbors var offset = i * stride, offsetP = offset - stride, offsetN = offset + stride; for ( var j = 0; j !== stride; ++ j ) { var value = values[ offset + j ]; if ( value !== values[ offsetP + j ] || value !== values[ offsetN + j ] ) { keep = true; break; } } } else { keep = true; } } // in-place compaction if ( keep ) { if ( i !== writeIndex ) { times[ writeIndex ] = times[ i ]; var readOffset = i * stride, writeOffset = writeIndex * stride; for ( var j = 0; j !== stride; ++ j ) { values[ writeOffset + j ] = values[ readOffset + j ]; } } ++ writeIndex; } } // flush last keyframe (compaction looks ahead) if ( lastIndex > 0 ) { times[ writeIndex ] = times[ lastIndex ]; for ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) { values[ writeOffset + j ] = values[ readOffset + j ]; } ++ writeIndex; } if ( writeIndex !== times.length ) { this.times = AnimationUtils.arraySlice( times, 0, writeIndex ); this.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride ); } return this; }, clone: function () { var times = AnimationUtils.arraySlice( this.times, 0 ); var values = AnimationUtils.arraySlice( this.values, 0 ); var TypedKeyframeTrack = this.constructor; var track = new TypedKeyframeTrack( this.name, times, values ); // Interpolant argument to constructor is not saved, so copy the factory method directly. track.createInterpolant = this.createInterpolant; return track; } } ); /** * * A Track of Boolean keyframe values. * * * @author Ben Houston / http://clara.io/ * @author David Sarno / http://lighthaus.us/ * @author tschw */ function BooleanKeyframeTrack( name, times, values ) { KeyframeTrack.call( this, name, times, values ); } BooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), { constructor: BooleanKeyframeTrack, ValueTypeName: 'bool', ValueBufferType: Array, DefaultInterpolation: InterpolateDiscrete, InterpolantFactoryMethodLinear: undefined, InterpolantFactoryMethodSmooth: undefined // Note: Actually this track could have a optimized / compressed // representation of a single value and a custom interpolant that // computes "firstValue ^ isOdd( index )". } ); /** * * A Track of keyframe values that represent color. * * * @author Ben Houston / http://clara.io/ * @author David Sarno / http://lighthaus.us/ * @author tschw */ function ColorKeyframeTrack( name, times, values, interpolation ) { KeyframeTrack.call( this, name, times, values, interpolation ); } ColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), { constructor: ColorKeyframeTrack, ValueTypeName: 'color' // ValueBufferType is inherited // DefaultInterpolation is inherited // Note: Very basic implementation and nothing special yet. // However, this is the place for color space parameterization. } ); /** * * A Track of numeric keyframe values. * * @author Ben Houston / http://clara.io/ * @author David Sarno / http://lighthaus.us/ * @author tschw */ function NumberKeyframeTrack( name, times, values, interpolation ) { KeyframeTrack.call( this, name, times, values, interpolation ); } NumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), { constructor: NumberKeyframeTrack, ValueTypeName: 'number' // ValueBufferType is inherited // DefaultInterpolation is inherited } ); /** * Spherical linear unit quaternion interpolant. * * @author tschw */ function QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) { Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer ); } QuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), { constructor: QuaternionLinearInterpolant, interpolate_: function ( i1, t0, t, t1 ) { var result = this.resultBuffer, values = this.sampleValues, stride = this.valueSize, offset = i1 * stride, alpha = ( t - t0 ) / ( t1 - t0 ); for ( var end = offset + stride; offset !== end; offset += 4 ) { Quaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha ); } return result; } } ); /** * * A Track of quaternion keyframe values. * * @author Ben Houston / http://clara.io/ * @author David Sarno / http://lighthaus.us/ * @author tschw */ function QuaternionKeyframeTrack( name, times, values, interpolation ) { KeyframeTrack.call( this, name, times, values, interpolation ); } QuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), { constructor: QuaternionKeyframeTrack, ValueTypeName: 'quaternion', // ValueBufferType is inherited DefaultInterpolation: InterpolateLinear, InterpolantFactoryMethodLinear: function ( result ) { return new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result ); }, InterpolantFactoryMethodSmooth: undefined // not yet implemented } ); /** * * A Track that interpolates Strings * * * @author Ben Houston / http://clara.io/ * @author David Sarno / http://lighthaus.us/ * @author tschw */ function StringKeyframeTrack( name, times, values, interpolation ) { KeyframeTrack.call( this, name, times, values, interpolation ); } StringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), { constructor: StringKeyframeTrack, ValueTypeName: 'string', ValueBufferType: Array, DefaultInterpolation: InterpolateDiscrete, InterpolantFactoryMethodLinear: undefined, InterpolantFactoryMethodSmooth: undefined } ); /** * * A Track of vectored keyframe values. * * * @author Ben Houston / http://clara.io/ * @author David Sarno / http://lighthaus.us/ * @author tschw */ function VectorKeyframeTrack( name, times, values, interpolation ) { KeyframeTrack.call( this, name, times, values, interpolation ); } VectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), { constructor: VectorKeyframeTrack, ValueTypeName: 'vector' // ValueBufferType is inherited // DefaultInterpolation is inherited } ); /** * * Reusable set of Tracks that represent an animation. * * @author Ben Houston / http://clara.io/ * @author David Sarno / http://lighthaus.us/ */ function AnimationClip( name, duration, tracks ) { this.name = name; this.tracks = tracks; this.duration = ( duration !== undefined ) ? duration : - 1; this.uuid = _Math.generateUUID(); // this means it should figure out its duration by scanning the tracks if ( this.duration < 0 ) { this.resetDuration(); } } function getTrackTypeForValueTypeName( typeName ) { switch ( typeName.toLowerCase() ) { case 'scalar': case 'double': case 'float': case 'number': case 'integer': return NumberKeyframeTrack; case 'vector': case 'vector2': case 'vector3': case 'vector4': return VectorKeyframeTrack; case 'color': return ColorKeyframeTrack; case 'quaternion': return QuaternionKeyframeTrack; case 'bool': case 'boolean': return BooleanKeyframeTrack; case 'string': return StringKeyframeTrack; } throw new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName ); } function parseKeyframeTrack( json ) { if ( json.type === undefined ) { throw new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' ); } var trackType = getTrackTypeForValueTypeName( json.type ); if ( json.times === undefined ) { var times = [], values = []; AnimationUtils.flattenJSON( json.keys, times, values, 'value' ); json.times = times; json.values = values; } // derived classes can define a static parse method if ( trackType.parse !== undefined ) { return trackType.parse( json ); } else { // by default, we assume a constructor compatible with the base return new trackType( json.name, json.times, json.values, json.interpolation ); } } Object.assign( AnimationClip, { parse: function ( json ) { var tracks = [], jsonTracks = json.tracks, frameTime = 1.0 / ( json.fps || 1.0 ); for ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) { tracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) ); } return new AnimationClip( json.name, json.duration, tracks ); }, toJSON: function ( clip ) { var tracks = [], clipTracks = clip.tracks; var json = { 'name': clip.name, 'duration': clip.duration, 'tracks': tracks, 'uuid': clip.uuid }; for ( var i = 0, n = clipTracks.length; i !== n; ++ i ) { tracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) ); } return json; }, CreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) { var numMorphTargets = morphTargetSequence.length; var tracks = []; for ( var i = 0; i < numMorphTargets; i ++ ) { var times = []; var values = []; times.push( ( i + numMorphTargets - 1 ) % numMorphTargets, i, ( i + 1 ) % numMorphTargets ); values.push( 0, 1, 0 ); var order = AnimationUtils.getKeyframeOrder( times ); times = AnimationUtils.sortedArray( times, 1, order ); values = AnimationUtils.sortedArray( values, 1, order ); // if there is a key at the first frame, duplicate it as the // last frame as well for perfect loop. if ( ! noLoop && times[ 0 ] === 0 ) { times.push( numMorphTargets ); values.push( values[ 0 ] ); } tracks.push( new NumberKeyframeTrack( '.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']', times, values ).scale( 1.0 / fps ) ); } return new AnimationClip( name, - 1, tracks ); }, findByName: function ( objectOrClipArray, name ) { var clipArray = objectOrClipArray; if ( ! Array.isArray( objectOrClipArray ) ) { var o = objectOrClipArray; clipArray = o.geometry && o.geometry.animations || o.animations; } for ( var i = 0; i < clipArray.length; i ++ ) { if ( clipArray[ i ].name === name ) { return clipArray[ i ]; } } return null; }, CreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) { var animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences // such flamingo_flyA_003, flamingo_run1_003, crdeath0059 var pattern = /^([\w-]*?)([\d]+)$/; // sort morph target names into animation groups based // patterns like Walk_001, Walk_002, Run_001, Run_002 for ( var i = 0, il = morphTargets.length; i < il; i ++ ) { var morphTarget = morphTargets[ i ]; var parts = morphTarget.name.match( pattern ); if ( parts && parts.length > 1 ) { var name = parts[ 1 ]; var animationMorphTargets = animationToMorphTargets[ name ]; if ( ! animationMorphTargets ) { animationToMorphTargets[ name ] = animationMorphTargets = []; } animationMorphTargets.push( morphTarget ); } } var clips = []; for ( var name in animationToMorphTargets ) { clips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) ); } return clips; }, // parse the animation.hierarchy format parseAnimation: function ( animation, bones ) { if ( ! animation ) { console.error( 'THREE.AnimationClip: No animation in JSONLoader data.' ); return null; } var addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) { // only return track if there are actually keys. if ( animationKeys.length !== 0 ) { var times = []; var values = []; AnimationUtils.flattenJSON( animationKeys, times, values, propertyName ); // empty keys are filtered out, so check again if ( times.length !== 0 ) { destTracks.push( new trackType( trackName, times, values ) ); } } }; var tracks = []; var clipName = animation.name || 'default'; // automatic length determination in AnimationClip. var duration = animation.length || - 1; var fps = animation.fps || 30; var hierarchyTracks = animation.hierarchy || []; for ( var h = 0; h < hierarchyTracks.length; h ++ ) { var animationKeys = hierarchyTracks[ h ].keys; // skip empty tracks if ( ! animationKeys || animationKeys.length === 0 ) continue; // process morph targets if ( animationKeys[ 0 ].morphTargets ) { // figure out all morph targets used in this track var morphTargetNames = {}; for ( var k = 0; k < animationKeys.length; k ++ ) { if ( animationKeys[ k ].morphTargets ) { for ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) { morphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1; } } } // create a track for each morph target with all zero // morphTargetInfluences except for the keys in which // the morphTarget is named. for ( var morphTargetName in morphTargetNames ) { var times = []; var values = []; for ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) { var animationKey = animationKeys[ k ]; times.push( animationKey.time ); values.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 ); } tracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) ); } duration = morphTargetNames.length * ( fps || 1.0 ); } else { // ...assume skeletal animation var boneName = '.bones[' + bones[ h ].name + ']'; addNonemptyTrack( VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks ); addNonemptyTrack( QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks ); addNonemptyTrack( VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks ); } } if ( tracks.length === 0 ) { return null; } var clip = new AnimationClip( clipName, duration, tracks ); return clip; } } ); Object.assign( AnimationClip.prototype, { resetDuration: function () { var tracks = this.tracks, duration = 0; for ( var i = 0, n = tracks.length; i !== n; ++ i ) { var track = this.tracks[ i ]; duration = Math.max( duration, track.times[ track.times.length - 1 ] ); } this.duration = duration; return this; }, trim: function () { for ( var i = 0; i < this.tracks.length; i ++ ) { this.tracks[ i ].trim( 0, this.duration ); } return this; }, validate: function () { var valid = true; for ( var i = 0; i < this.tracks.length; i ++ ) { valid = valid && this.tracks[ i ].validate(); } return valid; }, optimize: function () { for ( var i = 0; i < this.tracks.length; i ++ ) { this.tracks[ i ].optimize(); } return this; }, clone: function () { var tracks = []; for ( var i = 0; i < this.tracks.length; i ++ ) { tracks.push( this.tracks[ i ].clone() ); } return new AnimationClip( this.name, this.duration, tracks ); } } ); /** * @author mrdoob / http://mrdoob.com/ */ var Cache = { enabled: false, files: {}, add: function ( key, file ) { if ( this.enabled === false ) return; // console.log( 'THREE.Cache', 'Adding key:', key ); this.files[ key ] = file; }, get: function ( key ) { if ( this.enabled === false ) return; // console.log( 'THREE.Cache', 'Checking key:', key ); return this.files[ key ]; }, remove: function ( key ) { delete this.files[ key ]; }, clear: function () { this.files = {}; } }; /** * @author mrdoob / http://mrdoob.com/ */ function LoadingManager( onLoad, onProgress, onError ) { var scope = this; var isLoading = false; var itemsLoaded = 0; var itemsTotal = 0; var urlModifier = undefined; // Refer to #5689 for the reason why we don't set .onStart // in the constructor this.onStart = undefined; this.onLoad = onLoad; this.onProgress = onProgress; this.onError = onError; this.itemStart = function ( url ) { itemsTotal ++; if ( isLoading === false ) { if ( scope.onStart !== undefined ) { scope.onStart( url, itemsLoaded, itemsTotal ); } } isLoading = true; }; this.itemEnd = function ( url ) { itemsLoaded ++; if ( scope.onProgress !== undefined ) { scope.onProgress( url, itemsLoaded, itemsTotal ); } if ( itemsLoaded === itemsTotal ) { isLoading = false; if ( scope.onLoad !== undefined ) { scope.onLoad(); } } }; this.itemError = function ( url ) { if ( scope.onError !== undefined ) { scope.onError( url ); } }; this.resolveURL = function ( url ) { if ( urlModifier ) { return urlModifier( url ); } return url; }; this.setURLModifier = function ( transform ) { urlModifier = transform; return this; }; } var DefaultLoadingManager = new LoadingManager(); /** * @author mrdoob / http://mrdoob.com/ */ var loading = {}; function FileLoader( manager ) { this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager; } Object.assign( FileLoader.prototype, { load: function ( url, onLoad, onProgress, onError ) { if ( url === undefined ) url = ''; if ( this.path !== undefined ) url = this.path + url; url = this.manager.resolveURL( url ); var scope = this; var cached = Cache.get( url ); if ( cached !== undefined ) { scope.manager.itemStart( url ); setTimeout( function () { if ( onLoad ) onLoad( cached ); scope.manager.itemEnd( url ); }, 0 ); return cached; } // Check if request is duplicate if ( loading[ url ] !== undefined ) { loading[ url ].push( { onLoad: onLoad, onProgress: onProgress, onError: onError } ); return; } // Check for data: URI var dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/; var dataUriRegexResult = url.match( dataUriRegex ); // Safari can not handle Data URIs through XMLHttpRequest so process manually if ( dataUriRegexResult ) { var mimeType = dataUriRegexResult[ 1 ]; var isBase64 = !! dataUriRegexResult[ 2 ]; var data = dataUriRegexResult[ 3 ]; data = decodeURIComponent( data ); if ( isBase64 ) data = atob( data ); try { var response; var responseType = ( this.responseType || '' ).toLowerCase(); switch ( responseType ) { case 'arraybuffer': case 'blob': var view = new Uint8Array( data.length ); for ( var i = 0; i < data.length; i ++ ) { view[ i ] = data.charCodeAt( i ); } if ( responseType === 'blob' ) { response = new Blob( [ view.buffer ], { type: mimeType } ); } else { response = view.buffer; } break; case 'document': var parser = new DOMParser(); response = parser.parseFromString( data, mimeType ); break; case 'json': response = JSON.parse( data ); break; default: // 'text' or other response = data; break; } // Wait for next browser tick like standard XMLHttpRequest event dispatching does setTimeout( function () { if ( onLoad ) onLoad( response ); scope.manager.itemEnd( url ); }, 0 ); } catch ( error ) { // Wait for next browser tick like standard XMLHttpRequest event dispatching does setTimeout( function () { if ( onError ) onError( error ); scope.manager.itemError( url ); scope.manager.itemEnd( url ); }, 0 ); } } else { // Initialise array for duplicate requests loading[ url ] = []; loading[ url ].push( { onLoad: onLoad, onProgress: onProgress, onError: onError } ); var request = new XMLHttpRequest(); request.open( 'GET', url, true ); request.addEventListener( 'load', function ( event ) { var response = this.response; Cache.add( url, response ); var callbacks = loading[ url ]; delete loading[ url ]; if ( this.status === 200 || this.status === 0 ) { // Some browsers return HTTP Status 0 when using non-http protocol // e.g. 'file://' or 'data://'. Handle as success. if ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' ); for ( var i = 0, il = callbacks.length; i < il; i ++ ) { var callback = callbacks[ i ]; if ( callback.onLoad ) callback.onLoad( response ); } scope.manager.itemEnd( url ); } else { for ( var i = 0, il = callbacks.length; i < il; i ++ ) { var callback = callbacks[ i ]; if ( callback.onError ) callback.onError( event ); } scope.manager.itemError( url ); scope.manager.itemEnd( url ); } }, false ); request.addEventListener( 'progress', function ( event ) { var callbacks = loading[ url ]; for ( var i = 0, il = callbacks.length; i < il; i ++ ) { var callback = callbacks[ i ]; if ( callback.onProgress ) callback.onProgress( event ); } }, false ); request.addEventListener( 'error', function ( event ) { var callbacks = loading[ url ]; delete loading[ url ]; for ( var i = 0, il = callbacks.length; i < il; i ++ ) { var callback = callbacks[ i ]; if ( callback.onError ) callback.onError( event ); } scope.manager.itemError( url ); scope.manager.itemEnd( url ); }, false ); request.addEventListener( 'abort', function ( event ) { var callbacks = loading[ url ]; delete loading[ url ]; for ( var i = 0, il = callbacks.length; i < il; i ++ ) { var callback = callbacks[ i ]; if ( callback.onError ) callback.onError( event ); } scope.manager.itemError( url ); scope.manager.itemEnd( url ); }, false ); if ( this.responseType !== undefined ) request.responseType = this.responseType; if ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials; if ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' ); for ( var header in this.requestHeader ) { request.setRequestHeader( header, this.requestHeader[ header ] ); } request.send( null ); } scope.manager.itemStart( url ); return request; }, setPath: function ( value ) { this.path = value; return this; }, setResponseType: function ( value ) { this.responseType = value; return this; }, setWithCredentials: function ( value ) { this.withCredentials = value; return this; }, setMimeType: function ( value ) { this.mimeType = value; return this; }, setRequestHeader: function ( value ) { this.requestHeader = value; return this; } } ); /** * @author bhouston / http://clara.io/ */ function AnimationLoader( manager ) { this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager; } Object.assign( AnimationLoader.prototype, { load: function ( url, onLoad, onProgress, onError ) { var scope = this; var loader = new FileLoader( scope.manager ); loader.setPath( scope.path ); loader.load( url, function ( text ) { onLoad( scope.parse( JSON.parse( text ) ) ); }, onProgress, onError ); }, parse: function ( json ) { var animations = []; for ( var i = 0; i < json.length; i ++ ) { var clip = AnimationClip.parse( json[ i ] ); animations.push( clip ); } return animations; }, setPath: function ( value ) { this.path = value; return this; } } ); /** * @author mrdoob / http://mrdoob.com/ * * Abstract Base class to block based textures loader (dds, pvr, ...) */ function CompressedTextureLoader( manager ) { this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager; // override in sub classes this._parser = null; } Object.assign( CompressedTextureLoader.prototype, { load: function ( url, onLoad, onProgress, onError ) { var scope = this; var images = []; var texture = new CompressedTexture(); texture.image = images; var loader = new FileLoader( this.manager ); loader.setPath( this.path ); loader.setResponseType( 'arraybuffer' ); function loadTexture( i ) { loader.load( url[ i ], function ( buffer ) { var texDatas = scope._parser( buffer, true ); images[ i ] = { width: texDatas.width, height: texDatas.height, format: texDatas.format, mipmaps: texDatas.mipmaps }; loaded += 1; if ( loaded === 6 ) { if ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter; texture.format = texDatas.format; texture.needsUpdate = true; if ( onLoad ) onLoad( texture ); } }, onProgress, onError ); } if ( Array.isArray( url ) ) { var loaded = 0; for ( var i = 0, il = url.length; i < il; ++ i ) { loadTexture( i ); } } else { // compressed cubemap texture stored in a single DDS file loader.load( url, function ( buffer ) { var texDatas = scope._parser( buffer, true ); if ( texDatas.isCubemap ) { var faces = texDatas.mipmaps.length / texDatas.mipmapCount; for ( var f = 0; f < faces; f ++ ) { images[ f ] = { mipmaps: [] }; for ( var i = 0; i < texDatas.mipmapCount; i ++ ) { images[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] ); images[ f ].format = texDatas.format; images[ f ].width = texDatas.width; images[ f ].height = texDatas.height; } } } else { texture.image.width = texDatas.width; texture.image.height = texDatas.height; texture.mipmaps = texDatas.mipmaps; } if ( texDatas.mipmapCount === 1 ) { texture.minFilter = LinearFilter; } texture.format = texDatas.format; texture.needsUpdate = true; if ( onLoad ) onLoad( texture ); }, onProgress, onError ); } return texture; }, setPath: function ( value ) { this.path = value; return this; } } ); /** * @author Nikos M. / https://github.com/foo123/ * * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...) */ function DataTextureLoader( manager ) { this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager; // override in sub classes this._parser = null; } Object.assign( DataTextureLoader.prototype, { load: function ( url, onLoad, onProgress, onError ) { var scope = this; var texture = new DataTexture(); var loader = new FileLoader( this.manager ); loader.setResponseType( 'arraybuffer' ); loader.setPath( this.path ); loader.load( url, function ( buffer ) { var texData = scope._parser( buffer ); if ( ! texData ) return; if ( texData.image !== undefined ) { texture.image = texData.image; } else if ( texData.data !== undefined ) { texture.image.width = texData.width; texture.image.height = texData.height; texture.image.data = texData.data; } texture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping; texture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping; texture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter; texture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearMipMapLinearFilter; texture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1; if ( texData.format !== undefined ) { texture.format = texData.format; } if ( texData.type !== undefined ) { texture.type = texData.type; } if ( texData.mipmaps !== undefined ) { texture.mipmaps = texData.mipmaps; } if ( texData.mipmapCount === 1 ) { texture.minFilter = LinearFilter; } texture.needsUpdate = true; if ( onLoad ) onLoad( texture, texData ); }, onProgress, onError ); return texture; }, setPath: function ( value ) { this.path = value; return this; } } ); /** * @author mrdoob / http://mrdoob.com/ */ function ImageLoader( manager ) { this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager; } Object.assign( ImageLoader.prototype, { crossOrigin: 'anonymous', load: function ( url, onLoad, onProgress, onError ) { if ( url === undefined ) url = ''; if ( this.path !== undefined ) url = this.path + url; url = this.manager.resolveURL( url ); var scope = this; var cached = Cache.get( url ); if ( cached !== undefined ) { scope.manager.itemStart( url ); setTimeout( function () { if ( onLoad ) onLoad( cached ); scope.manager.itemEnd( url ); }, 0 ); return cached; } var image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' ); function onImageLoad() { image.removeEventListener( 'load', onImageLoad, false ); image.removeEventListener( 'error', onImageError, false ); Cache.add( url, this ); if ( onLoad ) onLoad( this ); scope.manager.itemEnd( url ); } function onImageError( event ) { image.removeEventListener( 'load', onImageLoad, false ); image.removeEventListener( 'error', onImageError, false ); if ( onError ) onError( event ); scope.manager.itemError( url ); scope.manager.itemEnd( url ); } image.addEventListener( 'load', onImageLoad, false ); image.addEventListener( 'error', onImageError, false ); if ( url.substr( 0, 5 ) !== 'data:' ) { if ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin; } scope.manager.itemStart( url ); image.src = url; return image; }, setCrossOrigin: function ( value ) { this.crossOrigin = value; return this; }, setPath: function ( value ) { this.path = value; return this; } } ); /** * @author mrdoob / http://mrdoob.com/ */ function CubeTextureLoader( manager ) { this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager; } Object.assign( CubeTextureLoader.prototype, { crossOrigin: 'anonymous', load: function ( urls, onLoad, onProgress, onError ) { var texture = new CubeTexture(); var loader = new ImageLoader( this.manager ); loader.setCrossOrigin( this.crossOrigin ); loader.setPath( this.path ); var loaded = 0; function loadTexture( i ) { loader.load( urls[ i ], function ( image ) { texture.images[ i ] = image; loaded ++; if ( loaded === 6 ) { texture.needsUpdate = true; if ( onLoad ) onLoad( texture ); } }, undefined, onError ); } for ( var i = 0; i < urls.length; ++ i ) { loadTexture( i ); } return texture; }, setCrossOrigin: function ( value ) { this.crossOrigin = value; return this; }, setPath: function ( value ) { this.path = value; return this; } } ); /** * @author mrdoob / http://mrdoob.com/ */ function TextureLoader( manager ) { this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager; } Object.assign( TextureLoader.prototype, { crossOrigin: 'anonymous', load: function ( url, onLoad, onProgress, onError ) { var texture = new Texture(); var loader = new ImageLoader( this.manager ); loader.setCrossOrigin( this.crossOrigin ); loader.setPath( this.path ); loader.load( url, function ( image ) { texture.image = image; // JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB. var isJPEG = url.search( /\.jpe?g($|\?)/i ) > 0 || url.search( /^data\:image\/jpeg/ ) === 0; texture.format = isJPEG ? RGBFormat : RGBAFormat; texture.needsUpdate = true; if ( onLoad !== undefined ) { onLoad( texture ); } }, onProgress, onError ); return texture; }, setCrossOrigin: function ( value ) { this.crossOrigin = value; return this; }, setPath: function ( value ) { this.path = value; return this; } } ); /** * @author zz85 / http://www.lab4games.net/zz85/blog * Extensible curve object * * Some common of curve methods: * .getPoint( t, optionalTarget ), .getTangent( t ) * .getPointAt( u, optionalTarget ), .getTangentAt( u ) * .getPoints(), .getSpacedPoints() * .getLength() * .updateArcLengths() * * This following curves inherit from THREE.Curve: * * -- 2D curves -- * THREE.ArcCurve * THREE.CubicBezierCurve * THREE.EllipseCurve * THREE.LineCurve * THREE.QuadraticBezierCurve * THREE.SplineCurve * * -- 3D curves -- * THREE.CatmullRomCurve3 * THREE.CubicBezierCurve3 * THREE.LineCurve3 * THREE.QuadraticBezierCurve3 * * A series of curves can be represented as a THREE.CurvePath. * **/ /************************************************************** * Abstract Curve base class **************************************************************/ function Curve() { this.type = 'Curve'; this.arcLengthDivisions = 200; } Object.assign( Curve.prototype, { // Virtual base class method to overwrite and implement in subclasses // - t [0 .. 1] getPoint: function ( /* t, optionalTarget */ ) { console.warn( 'THREE.Curve: .getPoint() not implemented.' ); return null; }, // Get point at relative position in curve according to arc length // - u [0 .. 1] getPointAt: function ( u, optionalTarget ) { var t = this.getUtoTmapping( u ); return this.getPoint( t, optionalTarget ); }, // Get sequence of points using getPoint( t ) getPoints: function ( divisions ) { if ( divisions === undefined ) divisions = 5; var points = []; for ( var d = 0; d <= divisions; d ++ ) { points.push( this.getPoint( d / divisions ) ); } return points; }, // Get sequence of points using getPointAt( u ) getSpacedPoints: function ( divisions ) { if ( divisions === undefined ) divisions = 5; var points = []; for ( var d = 0; d <= divisions; d ++ ) { points.push( this.getPointAt( d / divisions ) ); } return points; }, // Get total curve arc length getLength: function () { var lengths = this.getLengths(); return lengths[ lengths.length - 1 ]; }, // Get list of cumulative segment lengths getLengths: function ( divisions ) { if ( divisions === undefined ) divisions = this.arcLengthDivisions; if ( this.cacheArcLengths && ( this.cacheArcLengths.length === divisions + 1 ) && ! this.needsUpdate ) { return this.cacheArcLengths; } this.needsUpdate = false; var cache = []; var current, last = this.getPoint( 0 ); var p, sum = 0; cache.push( 0 ); for ( p = 1; p <= divisions; p ++ ) { current = this.getPoint( p / divisions ); sum += current.distanceTo( last ); cache.push( sum ); last = current; } this.cacheArcLengths = cache; return cache; // { sums: cache, sum: sum }; Sum is in the last element. }, updateArcLengths: function () { this.needsUpdate = true; this.getLengths(); }, // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant getUtoTmapping: function ( u, distance ) { var arcLengths = this.getLengths(); var i = 0, il = arcLengths.length; var targetArcLength; // The targeted u distance value to get if ( distance ) { targetArcLength = distance; } else { targetArcLength = u * arcLengths[ il - 1 ]; } // binary search for the index with largest value smaller than target u distance var low = 0, high = il - 1, comparison; while ( low <= high ) { i = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats comparison = arcLengths[ i ] - targetArcLength; if ( comparison < 0 ) { low = i + 1; } else if ( comparison > 0 ) { high = i - 1; } else { high = i; break; // DONE } } i = high; if ( arcLengths[ i ] === targetArcLength ) { return i / ( il - 1 ); } // we could get finer grain at lengths, or use simple interpolation between two points var lengthBefore = arcLengths[ i ]; var lengthAfter = arcLengths[ i + 1 ]; var segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points var segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength; // add that fractional amount to t var t = ( i + segmentFraction ) / ( il - 1 ); return t; }, // Returns a unit vector tangent at t // In case any sub curve does not implement its tangent derivation, // 2 points a small delta apart will be used to find its gradient // which seems to give a reasonable approximation getTangent: function ( t ) { var delta = 0.0001; var t1 = t - delta; var t2 = t + delta; // Capping in case of danger if ( t1 < 0 ) t1 = 0; if ( t2 > 1 ) t2 = 1; var pt1 = this.getPoint( t1 ); var pt2 = this.getPoint( t2 ); var vec = pt2.clone().sub( pt1 ); return vec.normalize(); }, getTangentAt: function ( u ) { var t = this.getUtoTmapping( u ); return this.getTangent( t ); }, computeFrenetFrames: function ( segments, closed ) { // see http://www.cs.indiana.edu/pub/techreports/TR425.pdf var normal = new Vector3(); var tangents = []; var normals = []; var binormals = []; var vec = new Vector3(); var mat = new Matrix4(); var i, u, theta; // compute the tangent vectors for each segment on the curve for ( i = 0; i <= segments; i ++ ) { u = i / segments; tangents[ i ] = this.getTangentAt( u ); tangents[ i ].normalize(); } // select an initial normal vector perpendicular to the first tangent vector, // and in the direction of the minimum tangent xyz component normals[ 0 ] = new Vector3(); binormals[ 0 ] = new Vector3(); var min = Number.MAX_VALUE; var tx = Math.abs( tangents[ 0 ].x ); var ty = Math.abs( tangents[ 0 ].y ); var tz = Math.abs( tangents[ 0 ].z ); if ( tx <= min ) { min = tx; normal.set( 1, 0, 0 ); } if ( ty <= min ) { min = ty; normal.set( 0, 1, 0 ); } if ( tz <= min ) { normal.set( 0, 0, 1 ); } vec.crossVectors( tangents[ 0 ], normal ).normalize(); normals[ 0 ].crossVectors( tangents[ 0 ], vec ); binormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ); // compute the slowly-varying normal and binormal vectors for each segment on the curve for ( i = 1; i <= segments; i ++ ) { normals[ i ] = normals[ i - 1 ].clone(); binormals[ i ] = binormals[ i - 1 ].clone(); vec.crossVectors( tangents[ i - 1 ], tangents[ i ] ); if ( vec.length() > Number.EPSILON ) { vec.normalize(); theta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors normals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) ); } binormals[ i ].crossVectors( tangents[ i ], normals[ i ] ); } // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same if ( closed === true ) { theta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) ); theta /= segments; if ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) { theta = - theta; } for ( i = 1; i <= segments; i ++ ) { // twist a little... normals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) ); binormals[ i ].crossVectors( tangents[ i ], normals[ i ] ); } } return { tangents: tangents, normals: normals, binormals: binormals }; }, clone: function () { return new this.constructor().copy( this ); }, copy: function ( source ) { this.arcLengthDivisions = source.arcLengthDivisions; return this; }, toJSON: function () { var data = { metadata: { version: 4.5, type: 'Curve', generator: 'Curve.toJSON' } }; data.arcLengthDivisions = this.arcLengthDivisions; data.type = this.type; return data; }, fromJSON: function ( json ) { this.arcLengthDivisions = json.arcLengthDivisions; return this; } } ); function EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) { Curve.call( this ); this.type = 'EllipseCurve'; this.aX = aX || 0; this.aY = aY || 0; this.xRadius = xRadius || 1; this.yRadius = yRadius || 1; this.aStartAngle = aStartAngle || 0; this.aEndAngle = aEndAngle || 2 * Math.PI; this.aClockwise = aClockwise || false; this.aRotation = aRotation || 0; } EllipseCurve.prototype = Object.create( Curve.prototype ); EllipseCurve.prototype.constructor = EllipseCurve; EllipseCurve.prototype.isEllipseCurve = true; EllipseCurve.prototype.getPoint = function ( t, optionalTarget ) { var point = optionalTarget || new Vector2(); var twoPi = Math.PI * 2; var deltaAngle = this.aEndAngle - this.aStartAngle; var samePoints = Math.abs( deltaAngle ) < Number.EPSILON; // ensures that deltaAngle is 0 .. 2 PI while ( deltaAngle < 0 ) deltaAngle += twoPi; while ( deltaAngle > twoPi ) deltaAngle -= twoPi; if ( deltaAngle < Number.EPSILON ) { if ( samePoints ) { deltaAngle = 0; } else { deltaAngle = twoPi; } } if ( this.aClockwise === true && ! samePoints ) { if ( deltaAngle === twoPi ) { deltaAngle = - twoPi; } else { deltaAngle = deltaAngle - twoPi; } } var angle = this.aStartAngle + t * deltaAngle; var x = this.aX + this.xRadius * Math.cos( angle ); var y = this.aY + this.yRadius * Math.sin( angle ); if ( this.aRotation !== 0 ) { var cos = Math.cos( this.aRotation ); var sin = Math.sin( this.aRotation ); var tx = x - this.aX; var ty = y - this.aY; // Rotate the point about the center of the ellipse. x = tx * cos - ty * sin + this.aX; y = tx * sin + ty * cos + this.aY; } return point.set( x, y ); }; EllipseCurve.prototype.copy = function ( source ) { Curve.prototype.copy.call( this, source ); this.aX = source.aX; this.aY = source.aY; this.xRadius = source.xRadius; this.yRadius = source.yRadius; this.aStartAngle = source.aStartAngle; this.aEndAngle = source.aEndAngle; this.aClockwise = source.aClockwise; this.aRotation = source.aRotation; return this; }; EllipseCurve.prototype.toJSON = function () { var data = Curve.prototype.toJSON.call( this ); data.aX = this.aX; data.aY = this.aY; data.xRadius = this.xRadius; data.yRadius = this.yRadius; data.aStartAngle = this.aStartAngle; data.aEndAngle = this.aEndAngle; data.aClockwise = this.aClockwise; data.aRotation = this.aRotation; return data; }; EllipseCurve.prototype.fromJSON = function ( json ) { Curve.prototype.fromJSON.call( this, json ); this.aX = json.aX; this.aY = json.aY; this.xRadius = json.xRadius; this.yRadius = json.yRadius; this.aStartAngle = json.aStartAngle; this.aEndAngle = json.aEndAngle; this.aClockwise = json.aClockwise; this.aRotation = json.aRotation; return this; }; function ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) { EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise ); this.type = 'ArcCurve'; } ArcCurve.prototype = Object.create( EllipseCurve.prototype ); ArcCurve.prototype.constructor = ArcCurve; ArcCurve.prototype.isArcCurve = true; /** * @author zz85 https://github.com/zz85 * * Centripetal CatmullRom Curve - which is useful for avoiding * cusps and self-intersections in non-uniform catmull rom curves. * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf * * curve.type accepts centripetal(default), chordal and catmullrom * curve.tension is used for catmullrom which defaults to 0.5 */ /* Based on an optimized c++ solution in - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/ - http://ideone.com/NoEbVM This CubicPoly class could be used for reusing some variables and calculations, but for three.js curve use, it could be possible inlined and flatten into a single function call which can be placed in CurveUtils. */ function CubicPoly() { var c0 = 0, c1 = 0, c2 = 0, c3 = 0; /* * Compute coefficients for a cubic polynomial * p(s) = c0 + c1*s + c2*s^2 + c3*s^3 * such that * p(0) = x0, p(1) = x1 * and * p'(0) = t0, p'(1) = t1. */ function init( x0, x1, t0, t1 ) { c0 = x0; c1 = t0; c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1; c3 = 2 * x0 - 2 * x1 + t0 + t1; } return { initCatmullRom: function ( x0, x1, x2, x3, tension ) { init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) ); }, initNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) { // compute tangents when parameterized in [t1,t2] var t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1; var t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2; // rescale tangents for parametrization in [0,1] t1 *= dt1; t2 *= dt1; init( x1, x2, t1, t2 ); }, calc: function ( t ) { var t2 = t * t; var t3 = t2 * t; return c0 + c1 * t + c2 * t2 + c3 * t3; } }; } // var tmp = new Vector3(); var px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly(); function CatmullRomCurve3( points, closed, curveType, tension ) { Curve.call( this ); this.type = 'CatmullRomCurve3'; this.points = points || []; this.closed = closed || false; this.curveType = curveType || 'centripetal'; this.tension = tension || 0.5; } CatmullRomCurve3.prototype = Object.create( Curve.prototype ); CatmullRomCurve3.prototype.constructor = CatmullRomCurve3; CatmullRomCurve3.prototype.isCatmullRomCurve3 = true; CatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) { var point = optionalTarget || new Vector3(); var points = this.points; var l = points.length; var p = ( l - ( this.closed ? 0 : 1 ) ) * t; var intPoint = Math.floor( p ); var weight = p - intPoint; if ( this.closed ) { intPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l; } else if ( weight === 0 && intPoint === l - 1 ) { intPoint = l - 2; weight = 1; } var p0, p1, p2, p3; // 4 points if ( this.closed || intPoint > 0 ) { p0 = points[ ( intPoint - 1 ) % l ]; } else { // extrapolate first point tmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] ); p0 = tmp; } p1 = points[ intPoint % l ]; p2 = points[ ( intPoint + 1 ) % l ]; if ( this.closed || intPoint + 2 < l ) { p3 = points[ ( intPoint + 2 ) % l ]; } else { // extrapolate last point tmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] ); p3 = tmp; } if ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) { // init Centripetal / Chordal Catmull-Rom var pow = this.curveType === 'chordal' ? 0.5 : 0.25; var dt0 = Math.pow( p0.distanceToSquared( p1 ), pow ); var dt1 = Math.pow( p1.distanceToSquared( p2 ), pow ); var dt2 = Math.pow( p2.distanceToSquared( p3 ), pow ); // safety check for repeated points if ( dt1 < 1e-4 ) dt1 = 1.0; if ( dt0 < 1e-4 ) dt0 = dt1; if ( dt2 < 1e-4 ) dt2 = dt1; px.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 ); py.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 ); pz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 ); } else if ( this.curveType === 'catmullrom' ) { px.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension ); py.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension ); pz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension ); } point.set( px.calc( weight ), py.calc( weight ), pz.calc( weight ) ); return point; }; CatmullRomCurve3.prototype.copy = function ( source ) { Curve.prototype.copy.call( this, source ); this.points = []; for ( var i = 0, l = source.points.length; i < l; i ++ ) { var point = source.points[ i ]; this.points.push( point.clone() ); } this.closed = source.closed; this.curveType = source.curveType; this.tension = source.tension; return this; }; CatmullRomCurve3.prototype.toJSON = function () { var data = Curve.prototype.toJSON.call( this ); data.points = []; for ( var i = 0, l = this.points.length; i < l; i ++ ) { var point = this.points[ i ]; data.points.push( point.toArray() ); } data.closed = this.closed; data.curveType = this.curveType; data.tension = this.tension; return data; }; CatmullRomCurve3.prototype.fromJSON = function ( json ) { Curve.prototype.fromJSON.call( this, json ); this.points = []; for ( var i = 0, l = json.points.length; i < l; i ++ ) { var point = json.points[ i ]; this.points.push( new Vector3().fromArray( point ) ); } this.closed = json.closed; this.curveType = json.curveType; this.tension = json.tension; return this; }; /** * @author zz85 / http://www.lab4games.net/zz85/blog * * Bezier Curves formulas obtained from * http://en.wikipedia.org/wiki/Bézier_curve */ function CatmullRom( t, p0, p1, p2, p3 ) { var v0 = ( p2 - p0 ) * 0.5; var v1 = ( p3 - p1 ) * 0.5; var t2 = t * t; var t3 = t * t2; return ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1; } // function QuadraticBezierP0( t, p ) { var k = 1 - t; return k * k * p; } function QuadraticBezierP1( t, p ) { return 2 * ( 1 - t ) * t * p; } function QuadraticBezierP2( t, p ) { return t * t * p; } function QuadraticBezier( t, p0, p1, p2 ) { return QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) + QuadraticBezierP2( t, p2 ); } // function CubicBezierP0( t, p ) { var k = 1 - t; return k * k * k * p; } function CubicBezierP1( t, p ) { var k = 1 - t; return 3 * k * k * t * p; } function CubicBezierP2( t, p ) { return 3 * ( 1 - t ) * t * t * p; } function CubicBezierP3( t, p ) { return t * t * t * p; } function CubicBezier( t, p0, p1, p2, p3 ) { return CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) + CubicBezierP3( t, p3 ); } function CubicBezierCurve( v0, v1, v2, v3 ) { Curve.call( this ); this.type = 'CubicBezierCurve'; this.v0 = v0 || new Vector2(); this.v1 = v1 || new Vector2(); this.v2 = v2 || new Vector2(); this.v3 = v3 || new Vector2(); } CubicBezierCurve.prototype = Object.create( Curve.prototype ); CubicBezierCurve.prototype.constructor = CubicBezierCurve; CubicBezierCurve.prototype.isCubicBezierCurve = true; CubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) { var point = optionalTarget || new Vector2(); var v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3; point.set( CubicBezier( t, v0.x, v1.x, v2.x, v3.x ), CubicBezier( t, v0.y, v1.y, v2.y, v3.y ) ); return point; }; CubicBezierCurve.prototype.copy = function ( source ) { Curve.prototype.copy.call( this, source ); this.v0.copy( source.v0 ); this.v1.copy( source.v1 ); this.v2.copy( source.v2 ); this.v3.copy( source.v3 ); return this; }; CubicBezierCurve.prototype.toJSON = function () { var data = Curve.prototype.toJSON.call( this ); data.v0 = this.v0.toArray(); data.v1 = this.v1.toArray(); data.v2 = this.v2.toArray(); data.v3 = this.v3.toArray(); return data; }; CubicBezierCurve.prototype.fromJSON = function ( json ) { Curve.prototype.fromJSON.call( this, json ); this.v0.fromArray( json.v0 ); this.v1.fromArray( json.v1 ); this.v2.fromArray( json.v2 ); this.v3.fromArray( json.v3 ); return this; }; function CubicBezierCurve3( v0, v1, v2, v3 ) { Curve.call( this ); this.type = 'CubicBezierCurve3'; this.v0 = v0 || new Vector3(); this.v1 = v1 || new Vector3(); this.v2 = v2 || new Vector3(); this.v3 = v3 || new Vector3(); } CubicBezierCurve3.prototype = Object.create( Curve.prototype ); CubicBezierCurve3.prototype.constructor = CubicBezierCurve3; CubicBezierCurve3.prototype.isCubicBezierCurve3 = true; CubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) { var point = optionalTarget || new Vector3(); var v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3; point.set( CubicBezier( t, v0.x, v1.x, v2.x, v3.x ), CubicBezier( t, v0.y, v1.y, v2.y, v3.y ), CubicBezier( t, v0.z, v1.z, v2.z, v3.z ) ); return point; }; CubicBezierCurve3.prototype.copy = function ( source ) { Curve.prototype.copy.call( this, source ); this.v0.copy( source.v0 ); this.v1.copy( source.v1 ); this.v2.copy( source.v2 ); this.v3.copy( source.v3 ); return this; }; CubicBezierCurve3.prototype.toJSON = function () { var data = Curve.prototype.toJSON.call( this ); data.v0 = this.v0.toArray(); data.v1 = this.v1.toArray(); data.v2 = this.v2.toArray(); data.v3 = this.v3.toArray(); return data; }; CubicBezierCurve3.prototype.fromJSON = function ( json ) { Curve.prototype.fromJSON.call( this, json ); this.v0.fromArray( json.v0 ); this.v1.fromArray( json.v1 ); this.v2.fromArray( json.v2 ); this.v3.fromArray( json.v3 ); return this; }; function LineCurve( v1, v2 ) { Curve.call( this ); this.type = 'LineCurve'; this.v1 = v1 || new Vector2(); this.v2 = v2 || new Vector2(); } LineCurve.prototype = Object.create( Curve.prototype ); LineCurve.prototype.constructor = LineCurve; LineCurve.prototype.isLineCurve = true; LineCurve.prototype.getPoint = function ( t, optionalTarget ) { var point = optionalTarget || new Vector2(); if ( t === 1 ) { point.copy( this.v2 ); } else { point.copy( this.v2 ).sub( this.v1 ); point.multiplyScalar( t ).add( this.v1 ); } return point; }; // Line curve is linear, so we can overwrite default getPointAt LineCurve.prototype.getPointAt = function ( u, optionalTarget ) { return this.getPoint( u, optionalTarget ); }; LineCurve.prototype.getTangent = function ( /* t */ ) { var tangent = this.v2.clone().sub( this.v1 ); return tangent.normalize(); }; LineCurve.prototype.copy = function ( source ) { Curve.prototype.copy.call( this, source ); this.v1.copy( source.v1 ); this.v2.copy( source.v2 ); return this; }; LineCurve.prototype.toJSON = function () { var data = Curve.prototype.toJSON.call( this ); data.v1 = this.v1.toArray(); data.v2 = this.v2.toArray(); return data; }; LineCurve.prototype.fromJSON = function ( json ) { Curve.prototype.fromJSON.call( this, json ); this.v1.fromArray( json.v1 ); this.v2.fromArray( json.v2 ); return this; }; function LineCurve3( v1, v2 ) { Curve.call( this ); this.type = 'LineCurve3'; this.v1 = v1 || new Vector3(); this.v2 = v2 || new Vector3(); } LineCurve3.prototype = Object.create( Curve.prototype ); LineCurve3.prototype.constructor = LineCurve3; LineCurve3.prototype.isLineCurve3 = true; LineCurve3.prototype.getPoint = function ( t, optionalTarget ) { var point = optionalTarget || new Vector3(); if ( t === 1 ) { point.copy( this.v2 ); } else { point.copy( this.v2 ).sub( this.v1 ); point.multiplyScalar( t ).add( this.v1 ); } return point; }; // Line curve is linear, so we can overwrite default getPointAt LineCurve3.prototype.getPointAt = function ( u, optionalTarget ) { return this.getPoint( u, optionalTarget ); }; LineCurve3.prototype.copy = function ( source ) { Curve.prototype.copy.call( this, source ); this.v1.copy( source.v1 ); this.v2.copy( source.v2 ); return this; }; LineCurve3.prototype.toJSON = function () { var data = Curve.prototype.toJSON.call( this ); data.v1 = this.v1.toArray(); data.v2 = this.v2.toArray(); return data; }; LineCurve3.prototype.fromJSON = function ( json ) { Curve.prototype.fromJSON.call( this, json ); this.v1.fromArray( json.v1 ); this.v2.fromArray( json.v2 ); return this; }; function QuadraticBezierCurve( v0, v1, v2 ) { Curve.call( this ); this.type = 'QuadraticBezierCurve'; this.v0 = v0 || new Vector2(); this.v1 = v1 || new Vector2(); this.v2 = v2 || new Vector2(); } QuadraticBezierCurve.prototype = Object.create( Curve.prototype ); QuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve; QuadraticBezierCurve.prototype.isQuadraticBezierCurve = true; QuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) { var point = optionalTarget || new Vector2(); var v0 = this.v0, v1 = this.v1, v2 = this.v2; point.set( QuadraticBezier( t, v0.x, v1.x, v2.x ), QuadraticBezier( t, v0.y, v1.y, v2.y ) ); return point; }; QuadraticBezierCurve.prototype.copy = function ( source ) { Curve.prototype.copy.call( this, source ); this.v0.copy( source.v0 ); this.v1.copy( source.v1 ); this.v2.copy( source.v2 ); return this; }; QuadraticBezierCurve.prototype.toJSON = function () { var data = Curve.prototype.toJSON.call( this ); data.v0 = this.v0.toArray(); data.v1 = this.v1.toArray(); data.v2 = this.v2.toArray(); return data; }; QuadraticBezierCurve.prototype.fromJSON = function ( json ) { Curve.prototype.fromJSON.call( this, json ); this.v0.fromArray( json.v0 ); this.v1.fromArray( json.v1 ); this.v2.fromArray( json.v2 ); return this; }; function QuadraticBezierCurve3( v0, v1, v2 ) { Curve.call( this ); this.type = 'QuadraticBezierCurve3'; this.v0 = v0 || new Vector3(); this.v1 = v1 || new Vector3(); this.v2 = v2 || new Vector3(); } QuadraticBezierCurve3.prototype = Object.create( Curve.prototype ); QuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3; QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true; QuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) { var point = optionalTarget || new Vector3(); var v0 = this.v0, v1 = this.v1, v2 = this.v2; point.set( QuadraticBezier( t, v0.x, v1.x, v2.x ), QuadraticBezier( t, v0.y, v1.y, v2.y ), QuadraticBezier( t, v0.z, v1.z, v2.z ) ); return point; }; QuadraticBezierCurve3.prototype.copy = function ( source ) { Curve.prototype.copy.call( this, source ); this.v0.copy( source.v0 ); this.v1.copy( source.v1 ); this.v2.copy( source.v2 ); return this; }; QuadraticBezierCurve3.prototype.toJSON = function () { var data = Curve.prototype.toJSON.call( this ); data.v0 = this.v0.toArray(); data.v1 = this.v1.toArray(); data.v2 = this.v2.toArray(); return data; }; QuadraticBezierCurve3.prototype.fromJSON = function ( json ) { Curve.prototype.fromJSON.call( this, json ); this.v0.fromArray( json.v0 ); this.v1.fromArray( json.v1 ); this.v2.fromArray( json.v2 ); return this; }; function SplineCurve( points /* array of Vector2 */ ) { Curve.call( this ); this.type = 'SplineCurve'; this.points = points || []; } SplineCurve.prototype = Object.create( Curve.prototype ); SplineCurve.prototype.constructor = SplineCurve; SplineCurve.prototype.isSplineCurve = true; SplineCurve.prototype.getPoint = function ( t, optionalTarget ) { var point = optionalTarget || new Vector2(); var points = this.points; var p = ( points.length - 1 ) * t; var intPoint = Math.floor( p ); var weight = p - intPoint; var p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ]; var p1 = points[ intPoint ]; var p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ]; var p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ]; point.set( CatmullRom( weight, p0.x, p1.x, p2.x, p3.x ), CatmullRom( weight, p0.y, p1.y, p2.y, p3.y ) ); return point; }; SplineCurve.prototype.copy = function ( source ) { Curve.prototype.copy.call( this, source ); this.points = []; for ( var i = 0, l = source.points.length; i < l; i ++ ) { var point = source.points[ i ]; this.points.push( point.clone() ); } return this; }; SplineCurve.prototype.toJSON = function () { var data = Curve.prototype.toJSON.call( this ); data.points = []; for ( var i = 0, l = this.points.length; i < l; i ++ ) { var point = this.points[ i ]; data.points.push( point.toArray() ); } return data; }; SplineCurve.prototype.fromJSON = function ( json ) { Curve.prototype.fromJSON.call( this, json ); this.points = []; for ( var i = 0, l = json.points.length; i < l; i ++ ) { var point = json.points[ i ]; this.points.push( new Vector2().fromArray( point ) ); } return this; }; var Curves = /*#__PURE__*/Object.freeze({ ArcCurve: ArcCurve, CatmullRomCurve3: CatmullRomCurve3, CubicBezierCurve: CubicBezierCurve, CubicBezierCurve3: CubicBezierCurve3, EllipseCurve: EllipseCurve, LineCurve: LineCurve, LineCurve3: LineCurve3, QuadraticBezierCurve: QuadraticBezierCurve, QuadraticBezierCurve3: QuadraticBezierCurve3, SplineCurve: SplineCurve }); /** * @author zz85 / http://www.lab4games.net/zz85/blog * **/ /************************************************************** * Curved Path - a curve path is simply a array of connected * curves, but retains the api of a curve **************************************************************/ function CurvePath() { Curve.call( this ); this.type = 'CurvePath'; this.curves = []; this.autoClose = false; // Automatically closes the path } CurvePath.prototype = Object.assign( Object.create( Curve.prototype ), { constructor: CurvePath, add: function ( curve ) { this.curves.push( curve ); }, closePath: function () { // Add a line curve if start and end of lines are not connected var startPoint = this.curves[ 0 ].getPoint( 0 ); var endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 ); if ( ! startPoint.equals( endPoint ) ) { this.curves.push( new LineCurve( endPoint, startPoint ) ); } }, // To get accurate point with reference to // entire path distance at time t, // following has to be done: // 1. Length of each sub path have to be known // 2. Locate and identify type of curve // 3. Get t for the curve // 4. Return curve.getPointAt(t') getPoint: function ( t ) { var d = t * this.getLength(); var curveLengths = this.getCurveLengths(); var i = 0; // To think about boundaries points. while ( i < curveLengths.length ) { if ( curveLengths[ i ] >= d ) { var diff = curveLengths[ i ] - d; var curve = this.curves[ i ]; var segmentLength = curve.getLength(); var u = segmentLength === 0 ? 0 : 1 - diff / segmentLength; return curve.getPointAt( u ); } i ++; } return null; // loop where sum != 0, sum > d , sum+1 <d }, // We cannot use the default THREE.Curve getPoint() with getLength() because in // THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath // getPoint() depends on getLength getLength: function () { var lens = this.getCurveLengths(); return lens[ lens.length - 1 ]; }, // cacheLengths must be recalculated. updateArcLengths: function () { this.needsUpdate = true; this.cacheLengths = null; this.getCurveLengths(); }, // Compute lengths and cache them // We cannot overwrite getLengths() because UtoT mapping uses it. getCurveLengths: function () { // We use cache values if curves and cache array are same length if ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) { return this.cacheLengths; } // Get length of sub-curve // Push sums into cached array var lengths = [], sums = 0; for ( var i = 0, l = this.curves.length; i < l; i ++ ) { sums += this.curves[ i ].getLength(); lengths.push( sums ); } this.cacheLengths = lengths; return lengths; }, getSpacedPoints: function ( divisions ) { if ( divisions === undefined ) divisions = 40; var points = []; for ( var i = 0; i <= divisions; i ++ ) { points.push( this.getPoint( i / divisions ) ); } if ( this.autoClose ) { points.push( points[ 0 ] ); } return points; }, getPoints: function ( divisions ) { divisions = divisions || 12; var points = [], last; for ( var i = 0, curves = this.curves; i < curves.length; i ++ ) { var curve = curves[ i ]; var resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2 : ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1 : ( curve && curve.isSplineCurve ) ? divisions * curve.points.length : divisions; var pts = curve.getPoints( resolution ); for ( var j = 0; j < pts.length; j ++ ) { var point = pts[ j ]; if ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates points.push( point ); last = point; } } if ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) { points.push( points[ 0 ] ); } return points; }, copy: function ( source ) { Curve.prototype.copy.call( this, source ); this.curves = []; for ( var i = 0, l = source.curves.length; i < l; i ++ ) { var curve = source.curves[ i ]; this.curves.push( curve.clone() ); } this.autoClose = source.autoClose; return this; }, toJSON: function () { var data = Curve.prototype.toJSON.call( this ); data.autoClose = this.autoClose; data.curves = []; for ( var i = 0, l = this.curves.length; i < l; i ++ ) { var curve = this.curves[ i ]; data.curves.push( curve.toJSON() ); } return data; }, fromJSON: function ( json ) { Curve.prototype.fromJSON.call( this, json ); this.autoClose = json.autoClose; this.curves = []; for ( var i = 0, l = json.curves.length; i < l; i ++ ) { var curve = json.curves[ i ]; this.curves.push( new Curves[ curve.type ]().fromJSON( curve ) ); } return this; } } ); /** * @author zz85 / http://www.lab4games.net/zz85/blog * Creates free form 2d path using series of points, lines or curves. **/ function Path( points ) { CurvePath.call( this ); this.type = 'Path'; this.currentPoint = new Vector2(); if ( points ) { this.setFromPoints( points ); } } Path.prototype = Object.assign( Object.create( CurvePath.prototype ), { constructor: Path, setFromPoints: function ( points ) { this.moveTo( points[ 0 ].x, points[ 0 ].y ); for ( var i = 1, l = points.length; i < l; i ++ ) { this.lineTo( points[ i ].x, points[ i ].y ); } }, moveTo: function ( x, y ) { this.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying? }, lineTo: function ( x, y ) { var curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) ); this.curves.push( curve ); this.currentPoint.set( x, y ); }, quadraticCurveTo: function ( aCPx, aCPy, aX, aY ) { var curve = new QuadraticBezierCurve( this.currentPoint.clone(), new Vector2( aCPx, aCPy ), new Vector2( aX, aY ) ); this.curves.push( curve ); this.currentPoint.set( aX, aY ); }, bezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) { var curve = new CubicBezierCurve( this.currentPoint.clone(), new Vector2( aCP1x, aCP1y ), new Vector2( aCP2x, aCP2y ), new Vector2( aX, aY ) ); this.curves.push( curve ); this.currentPoint.set( aX, aY ); }, splineThru: function ( pts /*Array of Vector*/ ) { var npts = [ this.currentPoint.clone() ].concat( pts ); var curve = new SplineCurve( npts ); this.curves.push( curve ); this.currentPoint.copy( pts[ pts.length - 1 ] ); }, arc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) { var x0 = this.currentPoint.x; var y0 = this.currentPoint.y; this.absarc( aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise ); }, absarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) { this.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise ); }, ellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) { var x0 = this.currentPoint.x; var y0 = this.currentPoint.y; this.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ); }, absellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) { var curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ); if ( this.curves.length > 0 ) { // if a previous curve is present, attempt to join var firstPoint = curve.getPoint( 0 ); if ( ! firstPoint.equals( this.currentPoint ) ) { this.lineTo( firstPoint.x, firstPoint.y ); } } this.curves.push( curve ); var lastPoint = curve.getPoint( 1 ); this.currentPoint.copy( lastPoint ); }, copy: function ( source ) { CurvePath.prototype.copy.call( this, source ); this.currentPoint.copy( source.currentPoint ); return this; }, toJSON: function () { var data = CurvePath.prototype.toJSON.call( this ); data.currentPoint = this.currentPoint.toArray(); return data; }, fromJSON: function ( json ) { CurvePath.prototype.fromJSON.call( this, json ); this.currentPoint.fromArray( json.currentPoint ); return this; } } ); /** * @author zz85 / http://www.lab4games.net/zz85/blog * Defines a 2d shape plane using paths. **/ // STEP 1 Create a path. // STEP 2 Turn path into shape. // STEP 3 ExtrudeGeometry takes in Shape/Shapes // STEP 3a - Extract points from each shape, turn to vertices // STEP 3b - Triangulate each shape, add faces. function Shape( points ) { Path.call( this, points ); this.uuid = _Math.generateUUID(); this.type = 'Shape'; this.holes = []; } Shape.prototype = Object.assign( Object.create( Path.prototype ), { constructor: Shape, getPointsHoles: function ( divisions ) { var holesPts = []; for ( var i = 0, l = this.holes.length; i < l; i ++ ) { holesPts[ i ] = this.holes[ i ].getPoints( divisions ); } return holesPts; }, // get points of shape and holes (keypoints based on segments parameter) extractPoints: function ( divisions ) { return { shape: this.getPoints( divisions ), holes: this.getPointsHoles( divisions ) }; }, copy: function ( source ) { Path.prototype.copy.call( this, source ); this.holes = []; for ( var i = 0, l = source.holes.length; i < l; i ++ ) { var hole = source.holes[ i ]; this.holes.push( hole.clone() ); } return this; }, toJSON: function () { var data = Path.prototype.toJSON.call( this ); data.uuid = this.uuid; data.holes = []; for ( var i = 0, l = this.holes.length; i < l; i ++ ) { var hole = this.holes[ i ]; data.holes.push( hole.toJSON() ); } return data; }, fromJSON: function ( json ) { Path.prototype.fromJSON.call( this, json ); this.uuid = json.uuid; this.holes = []; for ( var i = 0, l = json.holes.length; i < l; i ++ ) { var hole = json.holes[ i ]; this.holes.push( new Path().fromJSON( hole ) ); } return this; } } ); /** * @author mrdoob / http://mrdoob.com/ * @author alteredq / http://alteredqualia.com/ */ function Light( color, intensity ) { Object3D.call( this ); this.type = 'Light'; this.color = new Color( color ); this.intensity = intensity !== undefined ? intensity : 1; this.receiveShadow = undefined; } Light.prototype = Object.assign( Object.create( Object3D.prototype ), { constructor: Light, isLight: true, copy: function ( source ) { Object3D.prototype.copy.call( this, source ); this.color.copy( source.color ); this.intensity = source.intensity; return this; }, toJSON: function ( meta ) { var data = Object3D.prototype.toJSON.call( this, meta ); data.object.color = this.color.getHex(); data.object.intensity = this.intensity; if ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex(); if ( this.distance !== undefined ) data.object.distance = this.distance; if ( this.angle !== undefined ) data.object.angle = this.angle; if ( this.decay !== undefined ) data.object.decay = this.decay; if ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra; if ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON(); return data; } } ); /** * @author alteredq / http://alteredqualia.com/ */ function HemisphereLight( skyColor, groundColor, intensity ) { Light.call( this, skyColor, intensity ); this.type = 'HemisphereLight'; this.castShadow = undefined; this.position.copy( Object3D.DefaultUp ); this.updateMatrix(); this.groundColor = new Color( groundColor ); } HemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), { constructor: HemisphereLight, isHemisphereLight: true, copy: function ( source ) { Light.prototype.copy.call( this, source ); this.groundColor.copy( source.groundColor ); return this; } } ); /** * @author mrdoob / http://mrdoob.com/ */ function LightShadow( camera ) { this.camera = camera; this.bias = 0; this.radius = 1; this.mapSize = new Vector2( 512, 512 ); this.map = null; this.matrix = new Matrix4(); } Object.assign( LightShadow.prototype, { copy: function ( source ) { this.camera = source.camera.clone(); this.bias = source.bias; this.radius = source.radius; this.mapSize.copy( source.mapSize ); return this; }, clone: function () { return new this.constructor().copy( this ); }, toJSON: function () { var object = {}; if ( this.bias !== 0 ) object.bias = this.bias; if ( this.radius !== 1 ) object.radius = this.radius; if ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray(); object.camera = this.camera.toJSON( false ).object; delete object.camera.matrix; return object; } } ); /** * @author mrdoob / http://mrdoob.com/ */ function SpotLightShadow() { LightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) ); } SpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), { constructor: SpotLightShadow, isSpotLightShadow: true, update: function ( light ) { var camera = this.camera; var fov = _Math.RAD2DEG * 2 * light.angle; var aspect = this.mapSize.width / this.mapSize.height; var far = light.distance || camera.far; if ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) { camera.fov = fov; camera.aspect = aspect; camera.far = far; camera.updateProjectionMatrix(); } } } ); /** * @author alteredq / http://alteredqualia.com/ */ function SpotLight( color, intensity, distance, angle, penumbra, decay ) { Light.call( this, color, intensity ); this.type = 'SpotLight'; this.position.copy( Object3D.DefaultUp ); this.updateMatrix(); this.target = new Object3D(); Object.defineProperty( this, 'power', { get: function () { // intensity = power per solid angle. // ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf return this.intensity * Math.PI; }, set: function ( power ) { // intensity = power per solid angle. // ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf this.intensity = power / Math.PI; } } ); this.distance = ( distance !== undefined ) ? distance : 0; this.angle = ( angle !== undefined ) ? angle : Math.PI / 3; this.penumbra = ( penumbra !== undefined ) ? penumbra : 0; this.decay = ( decay !== undefined ) ? decay : 1; // for physically correct lights, should be 2. this.shadow = new SpotLightShadow(); } SpotLight.prototype = Object.assign( Object.create( Light.prototype ), { constructor: SpotLight, isSpotLight: true, copy: function ( source ) { Light.prototype.copy.call( this, source ); this.distance = source.distance; this.angle = source.angle; this.penumbra = source.penumbra; this.decay = source.decay; this.target = source.target.clone(); this.shadow = source.shadow.clone(); return this; } } ); /** * @author mrdoob / http://mrdoob.com/ */ function PointLight( color, intensity, distance, decay ) { Light.call( this, color, intensity ); this.type = 'PointLight'; Object.defineProperty( this, 'power', { get: function () { // intensity = power per solid angle. // ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf return this.intensity * 4 * Math.PI; }, set: function ( power ) { // intensity = power per solid angle. // ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf this.intensity = power / ( 4 * Math.PI ); } } ); this.distance = ( distance !== undefined ) ? distance : 0; this.decay = ( decay !== undefined ) ? decay : 1; // for physically correct lights, should be 2. this.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) ); } PointLight.prototype = Object.assign( Object.create( Light.prototype ), { constructor: PointLight, isPointLight: true, copy: function ( source ) { Light.prototype.copy.call( this, source ); this.distance = source.distance; this.decay = source.decay; this.shadow = source.shadow.clone(); return this; } } ); /** * @author alteredq / http://alteredqualia.com/ * @author arose / http://github.com/arose */ function OrthographicCamera( left, right, top, bottom, near, far ) { Camera.call( this ); this.type = 'OrthographicCamera'; this.zoom = 1; this.view = null; this.left = ( left !== undefined ) ? left : - 1; this.right = ( right !== undefined ) ? right : 1; this.top = ( top !== undefined ) ? top : 1; this.bottom = ( bottom !== undefined ) ? bottom : - 1; this.near = ( near !== undefined ) ? near : 0.1; this.far = ( far !== undefined ) ? far : 2000; this.updateProjectionMatrix(); } OrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), { constructor: OrthographicCamera, isOrthographicCamera: true, copy: function ( source, recursive ) { Camera.prototype.copy.call( this, source, recursive ); this.left = source.left; this.right = source.right; this.top = source.top; this.bottom = source.bottom; this.near = source.near; this.far = source.far; this.zoom = source.zoom; this.view = source.view === null ? null : Object.assign( {}, source.view ); return this; }, setViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) { if ( this.view === null ) { this.view = { enabled: true, fullWidth: 1, fullHeight: 1, offsetX: 0, offsetY: 0, width: 1, height: 1 }; } this.view.enabled = true; this.view.fullWidth = fullWidth; this.view.fullHeight = fullHeight; this.view.offsetX = x; this.view.offsetY = y; this.view.width = width; this.view.height = height; this.updateProjectionMatrix(); }, clearViewOffset: function () { if ( this.view !== null ) { this.view.enabled = false; } this.updateProjectionMatrix(); }, updateProjectionMatrix: function () { var dx = ( this.right - this.left ) / ( 2 * this.zoom ); var dy = ( this.top - this.bottom ) / ( 2 * this.zoom ); var cx = ( this.right + this.left ) / 2; var cy = ( this.top + this.bottom ) / 2; var left = cx - dx; var right = cx + dx; var top = cy + dy; var bottom = cy - dy; if ( this.view !== null && this.view.enabled ) { var zoomW = this.zoom / ( this.view.width / this.view.fullWidth ); var zoomH = this.zoom / ( this.view.height / this.view.fullHeight ); var scaleW = ( this.right - this.left ) / this.view.width; var scaleH = ( this.top - this.bottom ) / this.view.height; left += scaleW * ( this.view.offsetX / zoomW ); right = left + scaleW * ( this.view.width / zoomW ); top -= scaleH * ( this.view.offsetY / zoomH ); bottom = top - scaleH * ( this.view.height / zoomH ); } this.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far ); this.projectionMatrixInverse.getInverse( this.projectionMatrix ); }, toJSON: function ( meta ) { var data = Object3D.prototype.toJSON.call( this, meta ); data.object.zoom = this.zoom; data.object.left = this.left; data.object.right = this.right; data.object.top = this.top; data.object.bottom = this.bottom; data.object.near = this.near; data.object.far = this.far; if ( this.view !== null ) data.object.view = Object.assign( {}, this.view ); return data; } } ); /** * @author mrdoob / http://mrdoob.com/ */ function DirectionalLightShadow( ) { LightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) ); } DirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), { constructor: DirectionalLightShadow } ); /** * @author mrdoob / http://mrdoob.com/ * @author alteredq / http://alteredqualia.com/ */ function DirectionalLight( color, intensity ) { Light.call( this, color, intensity ); this.type = 'DirectionalLight'; this.position.copy( Object3D.DefaultUp ); this.updateMatrix(); this.target = new Object3D(); this.shadow = new DirectionalLightShadow(); } DirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), { constructor: DirectionalLight, isDirectionalLight: true, copy: function ( source ) { Light.prototype.copy.call( this, source ); this.target = source.target.clone(); this.shadow = source.shadow.clone(); return this; } } ); /** * @author mrdoob / http://mrdoob.com/ */ function AmbientLight( color, intensity ) { Light.call( this, color, intensity ); this.type = 'AmbientLight'; this.castShadow = undefined; } AmbientLight.prototype = Object.assign( Object.create( Light.prototype ), { constructor: AmbientLight, isAmbientLight: true } ); /** * @author abelnation / http://github.com/abelnation */ function RectAreaLight( color, intensity, width, height ) { Light.call( this, color, intensity ); this.type = 'RectAreaLight'; this.width = ( width !== undefined ) ? width : 10; this.height = ( height !== undefined ) ? height : 10; } RectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), { constructor: RectAreaLight, isRectAreaLight: true, copy: function ( source ) { Light.prototype.copy.call( this, source ); this.width = source.width; this.height = source.height; return this; }, toJSON: function ( meta ) { var data = Light.prototype.toJSON.call( this, meta ); data.object.width = this.width; data.object.height = this.height; return data; } } ); /** * @author mrdoob / http://mrdoob.com/ */ function MaterialLoader( manager ) { this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager; this.textures = {}; } Object.assign( MaterialLoader.prototype, { load: function ( url, onLoad, onProgress, onError ) { var scope = this; var loader = new FileLoader( scope.manager ); loader.setPath( scope.path ); loader.load( url, function ( text ) { onLoad( scope.parse( JSON.parse( text ) ) ); }, onProgress, onError ); }, parse: function ( json ) { var textures = this.textures; function getTexture( name ) { if ( textures[ name ] === undefined ) { console.warn( 'THREE.MaterialLoader: Undefined texture', name ); } return textures[ name ]; } var material = new Materials[ json.type ](); if ( json.uuid !== undefined ) material.uuid = json.uuid; if ( json.name !== undefined ) material.name = json.name; if ( json.color !== undefined ) material.color.setHex( json.color ); if ( json.roughness !== undefined ) material.roughness = json.roughness; if ( json.metalness !== undefined ) material.metalness = json.metalness; if ( json.emissive !== undefined ) material.emissive.setHex( json.emissive ); if ( json.specular !== undefined ) material.specular.setHex( json.specular ); if ( json.shininess !== undefined ) material.shininess = json.shininess; if ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat; if ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness; if ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors; if ( json.fog !== undefined ) material.fog = json.fog; if ( json.flatShading !== undefined ) material.flatShading = json.flatShading; if ( json.blending !== undefined ) material.blending = json.blending; if ( json.combine !== undefined ) material.combine = json.combine; if ( json.side !== undefined ) material.side = json.side; if ( json.opacity !== undefined ) material.opacity = json.opacity; if ( json.transparent !== undefined ) material.transparent = json.transparent; if ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest; if ( json.depthTest !== undefined ) material.depthTest = json.depthTest; if ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite; if ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite; if ( json.wireframe !== undefined ) material.wireframe = json.wireframe; if ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth; if ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap; if ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin; if ( json.rotation !== undefined ) material.rotation = json.rotation; if ( json.linewidth !== 1 ) material.linewidth = json.linewidth; if ( json.dashSize !== undefined ) material.dashSize = json.dashSize; if ( json.gapSize !== undefined ) material.gapSize = json.gapSize; if ( json.scale !== undefined ) material.scale = json.scale; if ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset; if ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor; if ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits; if ( json.skinning !== undefined ) material.skinning = json.skinning; if ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets; if ( json.dithering !== undefined ) material.dithering = json.dithering; if ( json.visible !== undefined ) material.visible = json.visible; if ( json.userData !== undefined ) material.userData = json.userData; // Shader Material if ( json.uniforms !== undefined ) { for ( var name in json.uniforms ) { var uniform = json.uniforms[ name ]; material.uniforms[ name ] = {}; switch ( uniform.type ) { case 't': material.uniforms[ name ].value = getTexture( uniform.value ); break; case 'c': material.uniforms[ name ].value = new Color().setHex( uniform.value ); break; case 'v2': material.uniforms[ name ].value = new Vector2().fromArray( uniform.value ); break; case 'v3': material.uniforms[ name ].value = new Vector3().fromArray( uniform.value ); break; case 'v4': material.uniforms[ name ].value = new Vector4().fromArray( uniform.value ); break; case 'm3': material.uniforms[ name ].value = new Matrix3().fromArray( uniform.value ); case 'm4': material.uniforms[ name ].value = new Matrix4().fromArray( uniform.value ); break; default: material.uniforms[ name ].value = uniform.value; } } } if ( json.defines !== undefined ) material.defines = json.defines; if ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader; if ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader; if ( json.extensions !== undefined ) { for ( var key in json.extensions ) { material.extensions[ key ] = json.extensions[ key ]; } } // Deprecated if ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading // for PointsMaterial if ( json.size !== undefined ) material.size = json.size; if ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation; // maps if ( json.map !== undefined ) material.map = getTexture( json.map ); if ( json.alphaMap !== undefined ) { material.alphaMap = getTexture( json.alphaMap ); material.transparent = true; } if ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap ); if ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale; if ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap ); if ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType; if ( json.normalScale !== undefined ) { var normalScale = json.normalScale; if ( Array.isArray( normalScale ) === false ) { // Blender exporter used to export a scalar. See #7459 normalScale = [ normalScale, normalScale ]; } material.normalScale = new Vector2().fromArray( normalScale ); } if ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap ); if ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale; if ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias; if ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap ); if ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap ); if ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap ); if ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity; if ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap ); if ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap ); if ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity; if ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity; if ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap ); if ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity; if ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap ); if ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity; if ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap ); return material; }, setPath: function ( value ) { this.path = value; return this; }, setTextures: function ( value ) { this.textures = value; return this; } } ); /** * @author Don McCurdy / https://www.donmccurdy.com */ var LoaderUtils = { decodeText: function ( array ) { if ( typeof TextDecoder !== 'undefined' ) { return new TextDecoder().decode( array ); } // Avoid the String.fromCharCode.apply(null, array) shortcut, which // throws a "maximum call stack size exceeded" error for large arrays. var s = ''; for ( var i = 0, il = array.length; i < il; i ++ ) { // Implicitly assumes little-endian. s += String.fromCharCode( array[ i ] ); } // Merges multi-byte utf-8 characters. return decodeURIComponent( escape( s ) ); }, extractUrlBase: function ( url ) { var index = url.lastIndexOf( '/' ); if ( index === - 1 ) return './'; return url.substr( 0, index + 1 ); } }; /** * @author mrdoob / http://mrdoob.com/ */ function BufferGeometryLoader( manager ) { this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager; } Object.assign( BufferGeometryLoader.prototype, { load: function ( url, onLoad, onProgress, onError ) { var scope = this; var loader = new FileLoader( scope.manager ); loader.setPath( scope.path ); loader.load( url, function ( text ) { onLoad( scope.parse( JSON.parse( text ) ) ); }, onProgress, onError ); }, parse: function ( json ) { var geometry = new BufferGeometry(); var index = json.data.index; if ( index !== undefined ) { var typedArray = new TYPED_ARRAYS[ index.type ]( index.array ); geometry.setIndex( new BufferAttribute( typedArray, 1 ) ); } var attributes = json.data.attributes; for ( var key in attributes ) { var attribute = attributes[ key ]; var typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array ); var bufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ); if ( attribute.name !== undefined ) bufferAttribute.name = attribute.name; geometry.addAttribute( key, bufferAttribute ); } var morphAttributes = json.data.morphAttributes; if ( morphAttributes ) { for ( var key in morphAttributes ) { var attributeArray = morphAttributes[ key ]; var array = []; for ( var i = 0, il = attributeArray.length; i < il; i ++ ) { var attribute = attributeArray[ i ]; var typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array ); var bufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ); if ( attribute.name !== undefined ) bufferAttribute.name = attribute.name; array.push( bufferAttribute ); } geometry.morphAttributes[ key ] = array; } } var groups = json.data.groups || json.data.drawcalls || json.data.offsets; if ( groups !== undefined ) { for ( var i = 0, n = groups.length; i !== n; ++ i ) { var group = groups[ i ]; geometry.addGroup( group.start, group.count, group.materialIndex ); } } var boundingSphere = json.data.boundingSphere; if ( boundingSphere !== undefined ) { var center = new Vector3(); if ( boundingSphere.center !== undefined ) { center.fromArray( boundingSphere.center ); } geometry.boundingSphere = new Sphere( center, boundingSphere.radius ); } if ( json.name ) geometry.name = json.name; if ( json.userData ) geometry.userData = json.userData; return geometry; }, setPath: function ( value ) { this.path = value; return this; } } ); var TYPED_ARRAYS = { Int8Array: Int8Array, Uint8Array: Uint8Array, // Workaround for IE11 pre KB2929437. See #11440 Uint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array, Int16Array: Int16Array, Uint16Array: Uint16Array, Int32Array: Int32Array, Uint32Array: Uint32Array, Float32Array: Float32Array, Float64Array: Float64Array }; /** * @author mrdoob / http://mrdoob.com/ */ function ObjectLoader( manager ) { this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager; this.resourcePath = ''; } Object.assign( ObjectLoader.prototype, { crossOrigin: 'anonymous', load: function ( url, onLoad, onProgress, onError ) { var scope = this; var path = ( this.path === undefined ) ? LoaderUtils.extractUrlBase( url ) : this.path; this.resourcePath = this.resourcePath || path; var loader = new FileLoader( scope.manager ); loader.setPath( this.path ); loader.load( url, function ( text ) { var json = null; try { json = JSON.parse( text ); } catch ( error ) { if ( onError !== undefined ) onError( error ); console.error( 'THREE:ObjectLoader: Can\'t parse ' + url + '.', error.message ); return; } var metadata = json.metadata; if ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) { console.error( 'THREE.ObjectLoader: Can\'t load ' + url ); return; } scope.parse( json, onLoad ); }, onProgress, onError ); }, setPath: function ( value ) { this.path = value; return this; }, setResourcePath: function ( value ) { this.resourcePath = value; return this; }, setCrossOrigin: function ( value ) { this.crossOrigin = value; return this; }, parse: function ( json, onLoad ) { var shapes = this.parseShape( json.shapes ); var geometries = this.parseGeometries( json.geometries, shapes ); var images = this.parseImages( json.images, function () { if ( onLoad !== undefined ) onLoad( object ); } ); var textures = this.parseTextures( json.textures, images ); var materials = this.parseMaterials( json.materials, textures ); var object = this.parseObject( json.object, geometries, materials ); if ( json.animations ) { object.animations = this.parseAnimations( json.animations ); } if ( json.images === undefined || json.images.length === 0 ) { if ( onLoad !== undefined ) onLoad( object ); } return object; }, parseShape: function ( json ) { var shapes = {}; if ( json !== undefined ) { for ( var i = 0, l = json.length; i < l; i ++ ) { var shape = new Shape().fromJSON( json[ i ] ); shapes[ shape.uuid ] = shape; } } return shapes; }, parseGeometries: function ( json, shapes ) { var geometries = {}; if ( json !== undefined ) { var bufferGeometryLoader = new BufferGeometryLoader(); for ( var i = 0, l = json.length; i < l; i ++ ) { var geometry; var data = json[ i ]; switch ( data.type ) { case 'PlaneGeometry': case 'PlaneBufferGeometry': geometry = new Geometries[ data.type ]( data.width, data.height, data.widthSegments, data.heightSegments ); break; case 'BoxGeometry': case 'BoxBufferGeometry': case 'CubeGeometry': // backwards compatible geometry = new Geometries[ data.type ]( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments ); break; case 'CircleGeometry': case 'CircleBufferGeometry': geometry = new Geometries[ data.type ]( data.radius, data.segments, data.thetaStart, data.thetaLength ); break; case 'CylinderGeometry': case 'CylinderBufferGeometry': geometry = new Geometries[ data.type ]( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength ); break; case 'ConeGeometry': case 'ConeBufferGeometry': geometry = new Geometries[ data.type ]( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength ); break; case 'SphereGeometry': case 'SphereBufferGeometry': geometry = new Geometries[ data.type ]( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength ); break; case 'DodecahedronGeometry': case 'DodecahedronBufferGeometry': case 'IcosahedronGeometry': case 'IcosahedronBufferGeometry': case 'OctahedronGeometry': case 'OctahedronBufferGeometry': case 'TetrahedronGeometry': case 'TetrahedronBufferGeometry': geometry = new Geometries[ data.type ]( data.radius, data.detail ); break; case 'RingGeometry': case 'RingBufferGeometry': geometry = new Geometries[ data.type ]( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength ); break; case 'TorusGeometry': case 'TorusBufferGeometry': geometry = new Geometries[ data.type ]( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc ); break; case 'TorusKnotGeometry': case 'TorusKnotBufferGeometry': geometry = new Geometries[ data.type ]( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q ); break; case 'TubeGeometry': case 'TubeBufferGeometry': // This only works for built-in curves (e.g. CatmullRomCurve3). // User defined curves or instances of CurvePath will not be deserialized. geometry = new Geometries[ data.type ]( new Curves[ data.path.type ]().fromJSON( data.path ), data.tubularSegments, data.radius, data.radialSegments, data.closed ); break; case 'LatheGeometry': case 'LatheBufferGeometry': geometry = new Geometries[ data.type ]( data.points, data.segments, data.phiStart, data.phiLength ); break; case 'PolyhedronGeometry': case 'PolyhedronBufferGeometry': geometry = new Geometries[ data.type ]( data.vertices, data.indices, data.radius, data.details ); break; case 'ShapeGeometry': case 'ShapeBufferGeometry': var geometryShapes = []; for ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) { var shape = shapes[ data.shapes[ j ] ]; geometryShapes.push( shape ); } geometry = new Geometries[ data.type ]( geometryShapes, data.curveSegments ); break; case 'ExtrudeGeometry': case 'ExtrudeBufferGeometry': var geometryShapes = []; for ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) { var shape = shapes[ data.shapes[ j ] ]; geometryShapes.push( shape ); } var extrudePath = data.options.extrudePath; if ( extrudePath !== undefined ) { data.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath ); } geometry = new Geometries[ data.type ]( geometryShapes, data.options ); break; case 'BufferGeometry': geometry = bufferGeometryLoader.parse( data ); break; case 'Geometry': if ( 'THREE' in window && 'LegacyJSONLoader' in THREE ) { var geometryLoader = new THREE.LegacyJSONLoader(); geometry = geometryLoader.parse( data, this.resourcePath ).geometry; } else { console.error( 'THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type "Geometry".' ); } break; default: console.warn( 'THREE.ObjectLoader: Unsupported geometry type "' + data.type + '"' ); continue; } geometry.uuid = data.uuid; if ( data.name !== undefined ) geometry.name = data.name; if ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData; geometries[ data.uuid ] = geometry; } } return geometries; }, parseMaterials: function ( json, textures ) { var cache = {}; // MultiMaterial var materials = {}; if ( json !== undefined ) { var loader = new MaterialLoader(); loader.setTextures( textures ); for ( var i = 0, l = json.length; i < l; i ++ ) { var data = json[ i ]; if ( data.type === 'MultiMaterial' ) { // Deprecated var array = []; for ( var j = 0; j < data.materials.length; j ++ ) { var material = data.materials[ j ]; if ( cache[ material.uuid ] === undefined ) { cache[ material.uuid ] = loader.parse( material ); } array.push( cache[ material.uuid ] ); } materials[ data.uuid ] = array; } else { if ( cache[ data.uuid ] === undefined ) { cache[ data.uuid ] = loader.parse( data ); } materials[ data.uuid ] = cache[ data.uuid ]; } } } return materials; }, parseAnimations: function ( json ) { var animations = []; for ( var i = 0; i < json.length; i ++ ) { var data = json[ i ]; var clip = AnimationClip.parse( data ); if ( data.uuid !== undefined ) clip.uuid = data.uuid; animations.push( clip ); } return animations; }, parseImages: function ( json, onLoad ) { var scope = this; var images = {}; function loadImage( url ) { scope.manager.itemStart( url ); return loader.load( url, function () { scope.manager.itemEnd( url ); }, undefined, function () { scope.manager.itemError( url ); scope.manager.itemEnd( url ); } ); } if ( json !== undefined && json.length > 0 ) { var manager = new LoadingManager( onLoad ); var loader = new ImageLoader( manager ); loader.setCrossOrigin( this.crossOrigin ); for ( var i = 0, il = json.length; i < il; i ++ ) { var image = json[ i ]; var url = image.url; if ( Array.isArray( url ) ) { // load array of images e.g CubeTexture images[ image.uuid ] = []; for ( var j = 0, jl = url.length; j < jl; j ++ ) { var currentUrl = url[ j ]; var path = /^(\/\/)|([a-z]+:(\/\/)?)/i.test( currentUrl ) ? currentUrl : scope.resourcePath + currentUrl; images[ image.uuid ].push( loadImage( path ) ); } } else { // load single image var path = /^(\/\/)|([a-z]+:(\/\/)?)/i.test( image.url ) ? image.url : scope.resourcePath + image.url; images[ image.uuid ] = loadImage( path ); } } } return images; }, parseTextures: function ( json, images ) { function parseConstant( value, type ) { if ( typeof value === 'number' ) return value; console.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value ); return type[ value ]; } var textures = {}; if ( json !== undefined ) { for ( var i = 0, l = json.length; i < l; i ++ ) { var data = json[ i ]; if ( data.image === undefined ) { console.warn( 'THREE.ObjectLoader: No "image" specified for', data.uuid ); } if ( images[ data.image ] === undefined ) { console.warn( 'THREE.ObjectLoader: Undefined image', data.image ); } var texture; if ( Array.isArray( images[ data.image ] ) ) { texture = new CubeTexture( images[ data.image ] ); } else { texture = new Texture( images[ data.image ] ); } texture.needsUpdate = true; texture.uuid = data.uuid; if ( data.name !== undefined ) texture.name = data.name; if ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING ); if ( data.offset !== undefined ) texture.offset.fromArray( data.offset ); if ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat ); if ( data.center !== undefined ) texture.center.fromArray( data.center ); if ( data.rotation !== undefined ) texture.rotation = data.rotation; if ( data.wrap !== undefined ) { texture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING ); texture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING ); } if ( data.format !== undefined ) texture.format = data.format; if ( data.type !== undefined ) texture.type = data.type; if ( data.encoding !== undefined ) texture.encoding = data.encoding; if ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER ); if ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER ); if ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy; if ( data.flipY !== undefined ) texture.flipY = data.flipY; if ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha; if ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment; textures[ data.uuid ] = texture; } } return textures; }, parseObject: function ( data, geometries, materials ) { var object; function getGeometry( name ) { if ( geometries[ name ] === undefined ) { console.warn( 'THREE.ObjectLoader: Undefined geometry', name ); } return geometries[ name ]; } function getMaterial( name ) { if ( name === undefined ) return undefined; if ( Array.isArray( name ) ) { var array = []; for ( var i = 0, l = name.length; i < l; i ++ ) { var uuid = name[ i ]; if ( materials[ uuid ] === undefined ) { console.warn( 'THREE.ObjectLoader: Undefined material', uuid ); } array.push( materials[ uuid ] ); } return array; } if ( materials[ name ] === undefined ) { console.warn( 'THREE.ObjectLoader: Undefined material', name ); } return materials[ name ]; } switch ( data.type ) { case 'Scene': object = new Scene(); if ( data.background !== undefined ) { if ( Number.isInteger( data.background ) ) { object.background = new Color( data.background ); } } if ( data.fog !== undefined ) { if ( data.fog.type === 'Fog' ) { object.fog = new Fog( data.fog.color, data.fog.near, data.fog.far ); } else if ( data.fog.type === 'FogExp2' ) { object.fog = new FogExp2( data.fog.color, data.fog.density ); } } break; case 'PerspectiveCamera': object = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far ); if ( data.focus !== undefined ) object.focus = data.focus; if ( data.zoom !== undefined ) object.zoom = data.zoom; if ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge; if ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset; if ( data.view !== undefined ) object.view = Object.assign( {}, data.view ); break; case 'OrthographicCamera': object = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far ); if ( data.zoom !== undefined ) object.zoom = data.zoom; if ( data.view !== undefined ) object.view = Object.assign( {}, data.view ); break; case 'AmbientLight': object = new AmbientLight( data.color, data.intensity ); break; case 'DirectionalLight': object = new DirectionalLight( data.color, data.intensity ); break; case 'PointLight': object = new PointLight( data.color, data.intensity, data.distance, data.decay ); break; case 'RectAreaLight': object = new RectAreaLight( data.color, data.intensity, data.width, data.height ); break; case 'SpotLight': object = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay ); break; case 'HemisphereLight': object = new HemisphereLight( data.color, data.groundColor, data.intensity ); break; case 'SkinnedMesh': console.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' ); case 'Mesh': var geometry = getGeometry( data.geometry ); var material = getMaterial( data.material ); if ( geometry.bones && geometry.bones.length > 0 ) { object = new SkinnedMesh( geometry, material ); } else { object = new Mesh( geometry, material ); } if ( data.drawMode !== undefined ) object.setDrawMode( data.drawMode ); break; case 'LOD': object = new LOD(); break; case 'Line': object = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode ); break; case 'LineLoop': object = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) ); break; case 'LineSegments': object = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) ); break; case 'PointCloud': case 'Points': object = new Points( getGeometry( data.geometry ), getMaterial( data.material ) ); break; case 'Sprite': object = new Sprite( getMaterial( data.material ) ); break; case 'Group': object = new Group(); break; default: object = new Object3D(); } object.uuid = data.uuid; if ( data.name !== undefined ) object.name = data.name; if ( data.matrix !== undefined ) { object.matrix.fromArray( data.matrix ); if ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate; if ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale ); } else { if ( data.position !== undefined ) object.position.fromArray( data.position ); if ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation ); if ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion ); if ( data.scale !== undefined ) object.scale.fromArray( data.scale ); } if ( data.castShadow !== undefined ) object.castShadow = data.castShadow; if ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow; if ( data.shadow ) { if ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias; if ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius; if ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize ); if ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera ); } if ( data.visible !== undefined ) object.visible = data.visible; if ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled; if ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder; if ( data.userData !== undefined ) object.userData = data.userData; if ( data.layers !== undefined ) object.layers.mask = data.layers; if ( data.children !== undefined ) { var children = data.children; for ( var i = 0; i < children.length; i ++ ) { object.add( this.parseObject( children[ i ], geometries, materials ) ); } } if ( data.type === 'LOD' ) { var levels = data.levels; for ( var l = 0; l < levels.length; l ++ ) { var level = levels[ l ]; var child = object.getObjectByProperty( 'uuid', level.object ); if ( child !== undefined ) { object.addLevel( child, level.distance ); } } } return object; } } ); var TEXTURE_MAPPING = { UVMapping: UVMapping, CubeReflectionMapping: CubeReflectionMapping, CubeRefractionMapping: CubeRefractionMapping, EquirectangularReflectionMapping: EquirectangularReflectionMapping, EquirectangularRefractionMapping: EquirectangularRefractionMapping, SphericalReflectionMapping: SphericalReflectionMapping, CubeUVReflectionMapping: CubeUVReflectionMapping, CubeUVRefractionMapping: CubeUVRefractionMapping }; var TEXTURE_WRAPPING = { RepeatWrapping: RepeatWrapping, ClampToEdgeWrapping: ClampToEdgeWrapping, MirroredRepeatWrapping: MirroredRepeatWrapping }; var TEXTURE_FILTER = { NearestFilter: NearestFilter, NearestMipMapNearestFilter: NearestMipMapNearestFilter, NearestMipMapLinearFilter: NearestMipMapLinearFilter, LinearFilter: LinearFilter, LinearMipMapNearestFilter: LinearMipMapNearestFilter, LinearMipMapLinearFilter: LinearMipMapLinearFilter }; /** * @author thespite / http://clicktorelease.com/ */ function ImageBitmapLoader( manager ) { if ( typeof createImageBitmap === 'undefined' ) { console.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' ); } if ( typeof fetch === 'undefined' ) { console.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' ); } this.manager = manager !== undefined ? manager : DefaultLoadingManager; this.options = undefined; } ImageBitmapLoader.prototype = { constructor: ImageBitmapLoader, setOptions: function setOptions( options ) { this.options = options; return this; }, load: function ( url, onLoad, onProgress, onError ) { if ( url === undefined ) url = ''; if ( this.path !== undefined ) url = this.path + url; url = this.manager.resolveURL( url ); var scope = this; var cached = Cache.get( url ); if ( cached !== undefined ) { scope.manager.itemStart( url ); setTimeout( function () { if ( onLoad ) onLoad( cached ); scope.manager.itemEnd( url ); }, 0 ); return cached; } fetch( url ).then( function ( res ) { return res.blob(); } ).then( function ( blob ) { if ( scope.options === undefined ) { // Workaround for FireFox. It causes an error if you pass options. return createImageBitmap( blob ); } else { return createImageBitmap( blob, scope.options ); } } ).then( function ( imageBitmap ) { Cache.add( url, imageBitmap ); if ( onLoad ) onLoad( imageBitmap ); scope.manager.itemEnd( url ); } ).catch( function ( e ) { if ( onError ) onError( e ); scope.manager.itemError( url ); scope.manager.itemEnd( url ); } ); scope.manager.itemStart( url ); }, setCrossOrigin: function ( /* value */ ) { return this; }, setPath: function ( value ) { this.path = value; return this; } }; /** * @author zz85 / http://www.lab4games.net/zz85/blog * minimal class for proxing functions to Path. Replaces old "extractSubpaths()" **/ function ShapePath() { this.type = 'ShapePath'; this.color = new Color(); this.subPaths = []; this.currentPath = null; } Object.assign( ShapePath.prototype, { moveTo: function ( x, y ) { this.currentPath = new Path(); this.subPaths.push( this.currentPath ); this.currentPath.moveTo( x, y ); }, lineTo: function ( x, y ) { this.currentPath.lineTo( x, y ); }, quadraticCurveTo: function ( aCPx, aCPy, aX, aY ) { this.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY ); }, bezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) { this.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ); }, splineThru: function ( pts ) { this.currentPath.splineThru( pts ); }, toShapes: function ( isCCW, noHoles ) { function toShapesNoHoles( inSubpaths ) { var shapes = []; for ( var i = 0, l = inSubpaths.length; i < l; i ++ ) { var tmpPath = inSubpaths[ i ]; var tmpShape = new Shape(); tmpShape.curves = tmpPath.curves; shapes.push( tmpShape ); } return shapes; } function isPointInsidePolygon( inPt, inPolygon ) { var polyLen = inPolygon.length; // inPt on polygon contour => immediate success or // toggling of inside/outside at every single! intersection point of an edge // with the horizontal line through inPt, left of inPt // not counting lowerY endpoints of edges and whole edges on that line var inside = false; for ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) { var edgeLowPt = inPolygon[ p ]; var edgeHighPt = inPolygon[ q ]; var edgeDx = edgeHighPt.x - edgeLowPt.x; var edgeDy = edgeHighPt.y - edgeLowPt.y; if ( Math.abs( edgeDy ) > Number.EPSILON ) { // not parallel if ( edgeDy < 0 ) { edgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx; edgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy; } if ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) continue; if ( inPt.y === edgeLowPt.y ) { if ( inPt.x === edgeLowPt.x ) return true; // inPt is on contour ? // continue; // no intersection or edgeLowPt => doesn't count !!! } else { var perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y ); if ( perpEdge === 0 ) return true; // inPt is on contour ? if ( perpEdge < 0 ) continue; inside = ! inside; // true intersection left of inPt } } else { // parallel or collinear if ( inPt.y !== edgeLowPt.y ) continue; // parallel // edge lies on the same horizontal line as inPt if ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) || ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) ) return true; // inPt: Point on contour ! // continue; } } return inside; } var isClockWise = ShapeUtils.isClockWise; var subPaths = this.subPaths; if ( subPaths.length === 0 ) return []; if ( noHoles === true ) return toShapesNoHoles( subPaths ); var solid, tmpPath, tmpShape, shapes = []; if ( subPaths.length === 1 ) { tmpPath = subPaths[ 0 ]; tmpShape = new Shape(); tmpShape.curves = tmpPath.curves; shapes.push( tmpShape ); return shapes; } var holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() ); holesFirst = isCCW ? ! holesFirst : holesFirst; // console.log("Holes first", holesFirst); var betterShapeHoles = []; var newShapes = []; var newShapeHoles = []; var mainIdx = 0; var tmpPoints; newShapes[ mainIdx ] = undefined; newShapeHoles[ mainIdx ] = []; for ( var i = 0, l = subPaths.length; i < l; i ++ ) { tmpPath = subPaths[ i ]; tmpPoints = tmpPath.getPoints(); solid = isClockWise( tmpPoints ); solid = isCCW ? ! solid : solid; if ( solid ) { if ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) ) mainIdx ++; newShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints }; newShapes[ mainIdx ].s.curves = tmpPath.curves; if ( holesFirst ) mainIdx ++; newShapeHoles[ mainIdx ] = []; //console.log('cw', i); } else { newShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } ); //console.log('ccw', i); } } // only Holes? -> probably all Shapes with wrong orientation if ( ! newShapes[ 0 ] ) return toShapesNoHoles( subPaths ); if ( newShapes.length > 1 ) { var ambiguous = false; var toChange = []; for ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) { betterShapeHoles[ sIdx ] = []; } for ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) { var sho = newShapeHoles[ sIdx ]; for ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) { var ho = sho[ hIdx ]; var hole_unassigned = true; for ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) { if ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) { if ( sIdx !== s2Idx ) toChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } ); if ( hole_unassigned ) { hole_unassigned = false; betterShapeHoles[ s2Idx ].push( ho ); } else { ambiguous = true; } } } if ( hole_unassigned ) { betterShapeHoles[ sIdx ].push( ho ); } } } // console.log("ambiguous: ", ambiguous); if ( toChange.length > 0 ) { // console.log("to change: ", toChange); if ( ! ambiguous ) newShapeHoles = betterShapeHoles; } } var tmpHoles; for ( var i = 0, il = newShapes.length; i < il; i ++ ) { tmpShape = newShapes[ i ].s; shapes.push( tmpShape ); tmpHoles = newShapeHoles[ i ]; for ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) { tmpShape.holes.push( tmpHoles[ j ].h ); } } //console.log("shape", shapes); return shapes; } } ); /** * @author zz85 / http://www.lab4games.net/zz85/blog * @author mrdoob / http://mrdoob.com/ */ function Font( data ) { this.type = 'Font'; this.data = data; } Object.assign( Font.prototype, { isFont: true, generateShapes: function ( text, size ) { if ( size === undefined ) size = 100; var shapes = []; var paths = createPaths( text, size, this.data ); for ( var p = 0, pl = paths.length; p < pl; p ++ ) { Array.prototype.push.apply( shapes, paths[ p ].toShapes() ); } return shapes; } } ); function createPaths( text, size, data ) { var chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988 var scale = size / data.resolution; var line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale; var paths = []; var offsetX = 0, offsetY = 0; for ( var i = 0; i < chars.length; i ++ ) { var char = chars[ i ]; if ( char === '\n' ) { offsetX = 0; offsetY -= line_height; } else { var ret = createPath( char, scale, offsetX, offsetY, data ); offsetX += ret.offsetX; paths.push( ret.path ); } } return paths; } function createPath( char, scale, offsetX, offsetY, data ) { var glyph = data.glyphs[ char ] || data.glyphs[ '?' ]; if ( ! glyph ) return; var path = new ShapePath(); var x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2; if ( glyph.o ) { var outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) ); for ( var i = 0, l = outline.length; i < l; ) { var action = outline[ i ++ ]; switch ( action ) { case 'm': // moveTo x = outline[ i ++ ] * scale + offsetX; y = outline[ i ++ ] * scale + offsetY; path.moveTo( x, y ); break; case 'l': // lineTo x = outline[ i ++ ] * scale + offsetX; y = outline[ i ++ ] * scale + offsetY; path.lineTo( x, y ); break; case 'q': // quadraticCurveTo cpx = outline[ i ++ ] * scale + offsetX; cpy = outline[ i ++ ] * scale + offsetY; cpx1 = outline[ i ++ ] * scale + offsetX; cpy1 = outline[ i ++ ] * scale + offsetY; path.quadraticCurveTo( cpx1, cpy1, cpx, cpy ); break; case 'b': // bezierCurveTo cpx = outline[ i ++ ] * scale + offsetX; cpy = outline[ i ++ ] * scale + offsetY; cpx1 = outline[ i ++ ] * scale + offsetX; cpy1 = outline[ i ++ ] * scale + offsetY; cpx2 = outline[ i ++ ] * scale + offsetX; cpy2 = outline[ i ++ ] * scale + offsetY; path.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy ); break; } } } return { offsetX: glyph.ha * scale, path: path }; } /** * @author mrdoob / http://mrdoob.com/ */ function FontLoader( manager ) { this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager; } Object.assign( FontLoader.prototype, { load: function ( url, onLoad, onProgress, onError ) { var scope = this; var loader = new FileLoader( this.manager ); loader.setPath( this.path ); loader.load( url, function ( text ) { var json; try { json = JSON.parse( text ); } catch ( e ) { console.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' ); json = JSON.parse( text.substring( 65, text.length - 2 ) ); } var font = scope.parse( json ); if ( onLoad ) onLoad( font ); }, onProgress, onError ); }, parse: function ( json ) { return new Font( json ); }, setPath: function ( value ) { this.path = value; return this; } } ); /** * @author alteredq / http://alteredqualia.com/ */ function Loader() {} Loader.Handlers = { handlers: [], add: function ( regex, loader ) { this.handlers.push( regex, loader ); }, get: function ( file ) { var handlers = this.handlers; for ( var i = 0, l = handlers.length; i < l; i += 2 ) { var regex = handlers[ i ]; var loader = handlers[ i + 1 ]; if ( regex.test( file ) ) { return loader; } } return null; } }; Object.assign( Loader.prototype, { crossOrigin: 'anonymous', onLoadStart: function () {}, onLoadProgress: function () {}, onLoadComplete: function () {}, initMaterials: function ( materials, texturePath, crossOrigin ) { var array = []; for ( var i = 0; i < materials.length; ++ i ) { array[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin ); } return array; }, createMaterial: ( function () { var BlendingMode = { NoBlending: NoBlending, NormalBlending: NormalBlending, AdditiveBlending: AdditiveBlending, SubtractiveBlending: SubtractiveBlending, MultiplyBlending: MultiplyBlending, CustomBlending: CustomBlending }; var color = new Color(); var textureLoader = new TextureLoader(); var materialLoader = new MaterialLoader(); return function createMaterial( m, texturePath, crossOrigin ) { // convert from old material format var textures = {}; function loadTexture( path, repeat, offset, wrap, anisotropy ) { var fullPath = texturePath + path; var loader = Loader.Handlers.get( fullPath ); var texture; if ( loader !== null ) { texture = loader.load( fullPath ); } else { textureLoader.setCrossOrigin( crossOrigin ); texture = textureLoader.load( fullPath ); } if ( repeat !== undefined ) { texture.repeat.fromArray( repeat ); if ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping; if ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping; } if ( offset !== undefined ) { texture.offset.fromArray( offset ); } if ( wrap !== undefined ) { if ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping; if ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping; if ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping; if ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping; } if ( anisotropy !== undefined ) { texture.anisotropy = anisotropy; } var uuid = _Math.generateUUID(); textures[ uuid ] = texture; return uuid; } // var json = { uuid: _Math.generateUUID(), type: 'MeshLambertMaterial' }; for ( var name in m ) { var value = m[ name ]; switch ( name ) { case 'DbgColor': case 'DbgIndex': case 'opticalDensity': case 'illumination': break; case 'DbgName': json.name = value; break; case 'blending': json.blending = BlendingMode[ value ]; break; case 'colorAmbient': case 'mapAmbient': console.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' ); break; case 'colorDiffuse': json.color = color.fromArray( value ).getHex(); break; case 'colorSpecular': json.specular = color.fromArray( value ).getHex(); break; case 'colorEmissive': json.emissive = color.fromArray( value ).getHex(); break; case 'specularCoef': json.shininess = value; break; case 'shading': if ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial'; if ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial'; if ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial'; break; case 'mapDiffuse': json.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy ); break; case 'mapDiffuseRepeat': case 'mapDiffuseOffset': case 'mapDiffuseWrap': case 'mapDiffuseAnisotropy': break; case 'mapEmissive': json.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy ); break; case 'mapEmissiveRepeat': case 'mapEmissiveOffset': case 'mapEmissiveWrap': case 'mapEmissiveAnisotropy': break; case 'mapLight': json.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy ); break; case 'mapLightRepeat': case 'mapLightOffset': case 'mapLightWrap': case 'mapLightAnisotropy': break; case 'mapAO': json.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy ); break; case 'mapAORepeat': case 'mapAOOffset': case 'mapAOWrap': case 'mapAOAnisotropy': break; case 'mapBump': json.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy ); break; case 'mapBumpScale': json.bumpScale = value; break; case 'mapBumpRepeat': case 'mapBumpOffset': case 'mapBumpWrap': case 'mapBumpAnisotropy': break; case 'mapNormal': json.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy ); break; case 'mapNormalFactor': json.normalScale = value; break; case 'mapNormalRepeat': case 'mapNormalOffset': case 'mapNormalWrap': case 'mapNormalAnisotropy': break; case 'mapSpecular': json.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy ); break; case 'mapSpecularRepeat': case 'mapSpecularOffset': case 'mapSpecularWrap': case 'mapSpecularAnisotropy': break; case 'mapMetalness': json.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy ); break; case 'mapMetalnessRepeat': case 'mapMetalnessOffset': case 'mapMetalnessWrap': case 'mapMetalnessAnisotropy': break; case 'mapRoughness': json.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy ); break; case 'mapRoughnessRepeat': case 'mapRoughnessOffset': case 'mapRoughnessWrap': case 'mapRoughnessAnisotropy': break; case 'mapAlpha': json.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy ); break; case 'mapAlphaRepeat': case 'mapAlphaOffset': case 'mapAlphaWrap': case 'mapAlphaAnisotropy': break; case 'flipSided': json.side = BackSide; break; case 'doubleSided': json.side = DoubleSide; break; case 'transparency': console.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' ); json.opacity = value; break; case 'depthTest': case 'depthWrite': case 'colorWrite': case 'opacity': case 'reflectivity': case 'transparent': case 'visible': case 'wireframe': json[ name ] = value; break; case 'vertexColors': if ( value === true ) json.vertexColors = VertexColors; if ( value === 'face' ) json.vertexColors = FaceColors; break; default: console.error( 'THREE.Loader.createMaterial: Unsupported', name, value ); break; } } if ( json.type === 'MeshBasicMaterial' ) delete json.emissive; if ( json.type !== 'MeshPhongMaterial' ) delete json.specular; if ( json.opacity < 1 ) json.transparent = true; materialLoader.setTextures( textures ); return materialLoader.parse( json ); }; } )() } ); /** * @author mrdoob / http://mrdoob.com/ */ var context; var AudioContext = { getContext: function () { if ( context === undefined ) { context = new ( window.AudioContext || window.webkitAudioContext )(); } return context; }, setContext: function ( value ) { context = value; } }; /** * @author Reece Aaron Lecrivain / http://reecenotes.com/ */ function AudioLoader( manager ) { this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager; } Object.assign( AudioLoader.prototype, { load: function ( url, onLoad, onProgress, onError ) { var loader = new FileLoader( this.manager ); loader.setResponseType( 'arraybuffer' ); loader.setPath( this.path ); loader.load( url, function ( buffer ) { // Create a copy of the buffer. The `decodeAudioData` method // detaches the buffer when complete, preventing reuse. var bufferCopy = buffer.slice( 0 ); var context = AudioContext.getContext(); context.decodeAudioData( bufferCopy, function ( audioBuffer ) { onLoad( audioBuffer ); } ); }, onProgress, onError ); }, setPath: function ( value ) { this.path = value; return this; } } ); /** * @author mrdoob / http://mrdoob.com/ */ function StereoCamera() { this.type = 'StereoCamera'; this.aspect = 1; this.eyeSep = 0.064; this.cameraL = new PerspectiveCamera(); this.cameraL.layers.enable( 1 ); this.cameraL.matrixAutoUpdate = false; this.cameraR = new PerspectiveCamera(); this.cameraR.layers.enable( 2 ); this.cameraR.matrixAutoUpdate = false; } Object.assign( StereoCamera.prototype, { update: ( function () { var instance, focus, fov, aspect, near, far, zoom, eyeSep; var eyeRight = new Matrix4(); var eyeLeft = new Matrix4(); return function update( camera ) { var needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov || aspect !== camera.aspect * this.aspect || near !== camera.near || far !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep; if ( needsUpdate ) { instance = this; focus = camera.focus; fov = camera.fov; aspect = camera.aspect * this.aspect; near = camera.near; far = camera.far; zoom = camera.zoom; // Off-axis stereoscopic effect based on // http://paulbourke.net/stereographics/stereorender/ var projectionMatrix = camera.projectionMatrix.clone(); eyeSep = this.eyeSep / 2; var eyeSepOnProjection = eyeSep * near / focus; var ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom; var xmin, xmax; // translate xOffset eyeLeft.elements[ 12 ] = - eyeSep; eyeRight.elements[ 12 ] = eyeSep; // for left eye xmin = - ymax * aspect + eyeSepOnProjection; xmax = ymax * aspect + eyeSepOnProjection; projectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin ); projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin ); this.cameraL.projectionMatrix.copy( projectionMatrix ); // for right eye xmin = - ymax * aspect - eyeSepOnProjection; xmax = ymax * aspect - eyeSepOnProjection; projectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin ); projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin ); this.cameraR.projectionMatrix.copy( projectionMatrix ); } this.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft ); this.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight ); }; } )() } ); /** * Camera for rendering cube maps * - renders scene into axis-aligned cube * * @author alteredq / http://alteredqualia.com/ */ function CubeCamera( near, far, cubeResolution, options ) { Object3D.call( this ); this.type = 'CubeCamera'; var fov = 90, aspect = 1; var cameraPX = new PerspectiveCamera( fov, aspect, near, far ); cameraPX.up.set( 0, - 1, 0 ); cameraPX.lookAt( new Vector3( 1, 0, 0 ) ); this.add( cameraPX ); var cameraNX = new PerspectiveCamera( fov, aspect, near, far ); cameraNX.up.set( 0, - 1, 0 ); cameraNX.lookAt( new Vector3( - 1, 0, 0 ) ); this.add( cameraNX ); var cameraPY = new PerspectiveCamera( fov, aspect, near, far ); cameraPY.up.set( 0, 0, 1 ); cameraPY.lookAt( new Vector3( 0, 1, 0 ) ); this.add( cameraPY ); var cameraNY = new PerspectiveCamera( fov, aspect, near, far ); cameraNY.up.set( 0, 0, - 1 ); cameraNY.lookAt( new Vector3( 0, - 1, 0 ) ); this.add( cameraNY ); var cameraPZ = new PerspectiveCamera( fov, aspect, near, far ); cameraPZ.up.set( 0, - 1, 0 ); cameraPZ.lookAt( new Vector3( 0, 0, 1 ) ); this.add( cameraPZ ); var cameraNZ = new PerspectiveCamera( fov, aspect, near, far ); cameraNZ.up.set( 0, - 1, 0 ); cameraNZ.lookAt( new Vector3( 0, 0, - 1 ) ); this.add( cameraNZ ); options = options || { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter }; this.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options ); this.renderTarget.texture.name = "CubeCamera"; this.update = function ( renderer, scene ) { if ( this.parent === null ) this.updateMatrixWorld(); var currentRenderTarget = renderer.getRenderTarget(); var renderTarget = this.renderTarget; var generateMipmaps = renderTarget.texture.generateMipmaps; renderTarget.texture.generateMipmaps = false; renderer.setRenderTarget( renderTarget, 0 ); renderer.render( scene, cameraPX ); renderer.setRenderTarget( renderTarget, 1 ); renderer.render( scene, cameraNX ); renderer.setRenderTarget( renderTarget, 2 ); renderer.render( scene, cameraPY ); renderer.setRenderTarget( renderTarget, 3 ); renderer.render( scene, cameraNY ); renderer.setRenderTarget( renderTarget, 4 ); renderer.render( scene, cameraPZ ); renderTarget.texture.generateMipmaps = generateMipmaps; renderer.setRenderTarget( renderTarget, 5 ); renderer.render( scene, cameraNZ ); renderer.setRenderTarget( currentRenderTarget ); }; this.clear = function ( renderer, color, depth, stencil ) { var currentRenderTarget = renderer.getRenderTarget(); var renderTarget = this.renderTarget; for ( var i = 0; i < 6; i ++ ) { renderer.setRenderTarget( renderTarget, i ); renderer.clear( color, depth, stencil ); } renderer.setRenderTarget( currentRenderTarget ); }; } CubeCamera.prototype = Object.create( Object3D.prototype ); CubeCamera.prototype.constructor = CubeCamera; /** * @author alteredq / http://alteredqualia.com/ */ function Clock( autoStart ) { this.autoStart = ( autoStart !== undefined ) ? autoStart : true; this.startTime = 0; this.oldTime = 0; this.elapsedTime = 0; this.running = false; } Object.assign( Clock.prototype, { start: function () { this.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732 this.oldTime = this.startTime; this.elapsedTime = 0; this.running = true; }, stop: function () { this.getElapsedTime(); this.running = false; this.autoStart = false; }, getElapsedTime: function () { this.getDelta(); return this.elapsedTime; }, getDelta: function () { var diff = 0; if ( this.autoStart && ! this.running ) { this.start(); return 0; } if ( this.running ) { var newTime = ( typeof performance === 'undefined' ? Date : performance ).now(); diff = ( newTime - this.oldTime ) / 1000; this.oldTime = newTime; this.elapsedTime += diff; } return diff; } } ); /** * @author mrdoob / http://mrdoob.com/ */ function AudioListener() { Object3D.call( this ); this.type = 'AudioListener'; this.context = AudioContext.getContext(); this.gain = this.context.createGain(); this.gain.connect( this.context.destination ); this.filter = null; this.timeDelta = 0; } AudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), { constructor: AudioListener, getInput: function () { return this.gain; }, removeFilter: function ( ) { if ( this.filter !== null ) { this.gain.disconnect( this.filter ); this.filter.disconnect( this.context.destination ); this.gain.connect( this.context.destination ); this.filter = null; } return this; }, getFilter: function () { return this.filter; }, setFilter: function ( value ) { if ( this.filter !== null ) { this.gain.disconnect( this.filter ); this.filter.disconnect( this.context.destination ); } else { this.gain.disconnect( this.context.destination ); } this.filter = value; this.gain.connect( this.filter ); this.filter.connect( this.context.destination ); return this; }, getMasterVolume: function () { return this.gain.gain.value; }, setMasterVolume: function ( value ) { this.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 ); return this; }, updateMatrixWorld: ( function () { var position = new Vector3(); var quaternion = new Quaternion(); var scale = new Vector3(); var orientation = new Vector3(); var clock = new Clock(); return function updateMatrixWorld( force ) { Object3D.prototype.updateMatrixWorld.call( this, force ); var listener = this.context.listener; var up = this.up; this.timeDelta = clock.getDelta(); this.matrixWorld.decompose( position, quaternion, scale ); orientation.set( 0, 0, - 1 ).applyQuaternion( quaternion ); if ( listener.positionX ) { // code path for Chrome (see #14393) var endTime = this.context.currentTime + this.timeDelta; listener.positionX.linearRampToValueAtTime( position.x, endTime ); listener.positionY.linearRampToValueAtTime( position.y, endTime ); listener.positionZ.linearRampToValueAtTime( position.z, endTime ); listener.forwardX.linearRampToValueAtTime( orientation.x, endTime ); listener.forwardY.linearRampToValueAtTime( orientation.y, endTime ); listener.forwardZ.linearRampToValueAtTime( orientation.z, endTime ); listener.upX.linearRampToValueAtTime( up.x, endTime ); listener.upY.linearRampToValueAtTime( up.y, endTime ); listener.upZ.linearRampToValueAtTime( up.z, endTime ); } else { listener.setPosition( position.x, position.y, position.z ); listener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z ); } }; } )() } ); /** * @author mrdoob / http://mrdoob.com/ * @author Reece Aaron Lecrivain / http://reecenotes.com/ */ function Audio( listener ) { Object3D.call( this ); this.type = 'Audio'; this.listener = listener; this.context = listener.context; this.gain = this.context.createGain(); this.gain.connect( listener.getInput() ); this.autoplay = false; this.buffer = null; this.detune = 0; this.loop = false; this.startTime = 0; this.offset = 0; this.playbackRate = 1; this.isPlaying = false; this.hasPlaybackControl = true; this.sourceType = 'empty'; this.filters = []; } Audio.prototype = Object.assign( Object.create( Object3D.prototype ), { constructor: Audio, getOutput: function () { return this.gain; }, setNodeSource: function ( audioNode ) { this.hasPlaybackControl = false; this.sourceType = 'audioNode'; this.source = audioNode; this.connect(); return this; }, setMediaElementSource: function ( mediaElement ) { this.hasPlaybackControl = false; this.sourceType = 'mediaNode'; this.source = this.context.createMediaElementSource( mediaElement ); this.connect(); return this; }, setBuffer: function ( audioBuffer ) { this.buffer = audioBuffer; this.sourceType = 'buffer'; if ( this.autoplay ) this.play(); return this; }, play: function () { if ( this.isPlaying === true ) { console.warn( 'THREE.Audio: Audio is already playing.' ); return; } if ( this.hasPlaybackControl === false ) { console.warn( 'THREE.Audio: this Audio has no playback control.' ); return; } var source = this.context.createBufferSource(); source.buffer = this.buffer; source.loop = this.loop; source.onended = this.onEnded.bind( this ); this.startTime = this.context.currentTime; source.start( this.startTime, this.offset ); this.isPlaying = true; this.source = source; this.setDetune( this.detune ); this.setPlaybackRate( this.playbackRate ); return this.connect(); }, pause: function () { if ( this.hasPlaybackControl === false ) { console.warn( 'THREE.Audio: this Audio has no playback control.' ); return; } if ( this.isPlaying === true ) { this.source.stop(); this.source.onended = null; this.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate; this.isPlaying = false; } return this; }, stop: function () { if ( this.hasPlaybackControl === false ) { console.warn( 'THREE.Audio: this Audio has no playback control.' ); return; } this.source.stop(); this.source.onended = null; this.offset = 0; this.isPlaying = false; return this; }, connect: function () { if ( this.filters.length > 0 ) { this.source.connect( this.filters[ 0 ] ); for ( var i = 1, l = this.filters.length; i < l; i ++ ) { this.filters[ i - 1 ].connect( this.filters[ i ] ); } this.filters[ this.filters.length - 1 ].connect( this.getOutput() ); } else { this.source.connect( this.getOutput() ); } return this; }, disconnect: function () { if ( this.filters.length > 0 ) { this.source.disconnect( this.filters[ 0 ] ); for ( var i = 1, l = this.filters.length; i < l; i ++ ) { this.filters[ i - 1 ].disconnect( this.filters[ i ] ); } this.filters[ this.filters.length - 1 ].disconnect( this.getOutput() ); } else { this.source.disconnect( this.getOutput() ); } return this; }, getFilters: function () { return this.filters; }, setFilters: function ( value ) { if ( ! value ) value = []; if ( this.isPlaying === true ) { this.disconnect(); this.filters = value; this.connect(); } else { this.filters = value; } return this; }, setDetune: function ( value ) { this.detune = value; if ( this.source.detune === undefined ) return; // only set detune when available if ( this.isPlaying === true ) { this.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 ); } return this; }, getDetune: function () { return this.detune; }, getFilter: function () { return this.getFilters()[ 0 ]; }, setFilter: function ( filter ) { return this.setFilters( filter ? [ filter ] : [] ); }, setPlaybackRate: function ( value ) { if ( this.hasPlaybackControl === false ) { console.warn( 'THREE.Audio: this Audio has no playback control.' ); return; } this.playbackRate = value; if ( this.isPlaying === true ) { this.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 ); } return this; }, getPlaybackRate: function () { return this.playbackRate; }, onEnded: function () { this.isPlaying = false; }, getLoop: function () { if ( this.hasPlaybackControl === false ) { console.warn( 'THREE.Audio: this Audio has no playback control.' ); return false; } return this.loop; }, setLoop: function ( value ) { if ( this.hasPlaybackControl === false ) { console.warn( 'THREE.Audio: this Audio has no playback control.' ); return; } this.loop = value; if ( this.isPlaying === true ) { this.source.loop = this.loop; } return this; }, getVolume: function () { return this.gain.gain.value; }, setVolume: function ( value ) { this.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 ); return this; } } ); /** * @author mrdoob / http://mrdoob.com/ */ function PositionalAudio( listener ) { Audio.call( this, listener ); this.panner = this.context.createPanner(); this.panner.connect( this.gain ); } PositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), { constructor: PositionalAudio, getOutput: function () { return this.panner; }, getRefDistance: function () { return this.panner.refDistance; }, setRefDistance: function ( value ) { this.panner.refDistance = value; return this; }, getRolloffFactor: function () { return this.panner.rolloffFactor; }, setRolloffFactor: function ( value ) { this.panner.rolloffFactor = value; return this; }, getDistanceModel: function () { return this.panner.distanceModel; }, setDistanceModel: function ( value ) { this.panner.distanceModel = value; return this; }, getMaxDistance: function () { return this.panner.maxDistance; }, setMaxDistance: function ( value ) { this.panner.maxDistance = value; return this; }, setDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) { this.panner.coneInnerAngle = coneInnerAngle; this.panner.coneOuterAngle = coneOuterAngle; this.panner.coneOuterGain = coneOuterGain; return this; }, updateMatrixWorld: ( function () { var position = new Vector3(); var quaternion = new Quaternion(); var scale = new Vector3(); var orientation = new Vector3(); return function updateMatrixWorld( force ) { Object3D.prototype.updateMatrixWorld.call( this, force ); if ( this.hasPlaybackControl === true && this.isPlaying === false ) return; this.matrixWorld.decompose( position, quaternion, scale ); orientation.set( 0, 0, 1 ).applyQuaternion( quaternion ); var panner = this.panner; if ( panner.positionX ) { // code path for Chrome and Firefox (see #14393) var endTime = this.context.currentTime + this.listener.timeDelta; panner.positionX.linearRampToValueAtTime( position.x, endTime ); panner.positionY.linearRampToValueAtTime( position.y, endTime ); panner.positionZ.linearRampToValueAtTime( position.z, endTime ); panner.orientationX.linearRampToValueAtTime( orientation.x, endTime ); panner.orientationY.linearRampToValueAtTime( orientation.y, endTime ); panner.orientationZ.linearRampToValueAtTime( orientation.z, endTime ); } else { panner.setPosition( position.x, position.y, position.z ); panner.setOrientation( orientation.x, orientation.y, orientation.z ); } }; } )() } ); /** * @author mrdoob / http://mrdoob.com/ */ function AudioAnalyser( audio, fftSize ) { this.analyser = audio.context.createAnalyser(); this.analyser.fftSize = fftSize !== undefined ? fftSize : 2048; this.data = new Uint8Array( this.analyser.frequencyBinCount ); audio.getOutput().connect( this.analyser ); } Object.assign( AudioAnalyser.prototype, { getFrequencyData: function () { this.analyser.getByteFrequencyData( this.data ); return this.data; }, getAverageFrequency: function () { var value = 0, data = this.getFrequencyData(); for ( var i = 0; i < data.length; i ++ ) { value += data[ i ]; } return value / data.length; } } ); /** * * Buffered scene graph property that allows weighted accumulation. * * * @author Ben Houston / http://clara.io/ * @author David Sarno / http://lighthaus.us/ * @author tschw */ function PropertyMixer( binding, typeName, valueSize ) { this.binding = binding; this.valueSize = valueSize; var bufferType = Float64Array, mixFunction; switch ( typeName ) { case 'quaternion': mixFunction = this._slerp; break; case 'string': case 'bool': bufferType = Array; mixFunction = this._select; break; default: mixFunction = this._lerp; } this.buffer = new bufferType( valueSize * 4 ); // layout: [ incoming | accu0 | accu1 | orig ] // // interpolators can use .buffer as their .result // the data then goes to 'incoming' // // 'accu0' and 'accu1' are used frame-interleaved for // the cumulative result and are compared to detect // changes // // 'orig' stores the original state of the property this._mixBufferRegion = mixFunction; this.cumulativeWeight = 0; this.useCount = 0; this.referenceCount = 0; } Object.assign( PropertyMixer.prototype, { // accumulate data in the 'incoming' region into 'accu<i>' accumulate: function ( accuIndex, weight ) { // note: happily accumulating nothing when weight = 0, the caller knows // the weight and shouldn't have made the call in the first place var buffer = this.buffer, stride = this.valueSize, offset = accuIndex * stride + stride, currentWeight = this.cumulativeWeight; if ( currentWeight === 0 ) { // accuN := incoming * weight for ( var i = 0; i !== stride; ++ i ) { buffer[ offset + i ] = buffer[ i ]; } currentWeight = weight; } else { // accuN := accuN + incoming * weight currentWeight += weight; var mix = weight / currentWeight; this._mixBufferRegion( buffer, offset, 0, mix, stride ); } this.cumulativeWeight = currentWeight; }, // apply the state of 'accu<i>' to the binding when accus differ apply: function ( accuIndex ) { var stride = this.valueSize, buffer = this.buffer, offset = accuIndex * stride + stride, weight = this.cumulativeWeight, binding = this.binding; this.cumulativeWeight = 0; if ( weight < 1 ) { // accuN := accuN + original * ( 1 - cumulativeWeight ) var originalValueOffset = stride * 3; this._mixBufferRegion( buffer, offset, originalValueOffset, 1 - weight, stride ); } for ( var i = stride, e = stride + stride; i !== e; ++ i ) { if ( buffer[ i ] !== buffer[ i + stride ] ) { // value has changed -> update scene graph binding.setValue( buffer, offset ); break; } } }, // remember the state of the bound property and copy it to both accus saveOriginalState: function () { var binding = this.binding; var buffer = this.buffer, stride = this.valueSize, originalValueOffset = stride * 3; binding.getValue( buffer, originalValueOffset ); // accu[0..1] := orig -- initially detect changes against the original for ( var i = stride, e = originalValueOffset; i !== e; ++ i ) { buffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ]; } this.cumulativeWeight = 0; }, // apply the state previously taken via 'saveOriginalState' to the binding restoreOriginalState: function () { var originalValueOffset = this.valueSize * 3; this.binding.setValue( this.buffer, originalValueOffset ); }, // mix functions _select: function ( buffer, dstOffset, srcOffset, t, stride ) { if ( t >= 0.5 ) { for ( var i = 0; i !== stride; ++ i ) { buffer[ dstOffset + i ] = buffer[ srcOffset + i ]; } } }, _slerp: function ( buffer, dstOffset, srcOffset, t ) { Quaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t ); }, _lerp: function ( buffer, dstOffset, srcOffset, t, stride ) { var s = 1 - t; for ( var i = 0; i !== stride; ++ i ) { var j = dstOffset + i; buffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t; } } } ); /** * * A reference to a real property in the scene graph. * * * @author Ben Houston / http://clara.io/ * @author David Sarno / http://lighthaus.us/ * @author tschw */ // Characters [].:/ are reserved for track binding syntax. var RESERVED_CHARS_RE = '\\[\\]\\.:\\/'; function Composite( targetGroup, path, optionalParsedPath ) { var parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path ); this._targetGroup = targetGroup; this._bindings = targetGroup.subscribe_( path, parsedPath ); } Object.assign( Composite.prototype, { getValue: function ( array, offset ) { this.bind(); // bind all binding var firstValidIndex = this._targetGroup.nCachedObjects_, binding = this._bindings[ firstValidIndex ]; // and only call .getValue on the first if ( binding !== undefined ) binding.getValue( array, offset ); }, setValue: function ( array, offset ) { var bindings = this._bindings; for ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) { bindings[ i ].setValue( array, offset ); } }, bind: function () { var bindings = this._bindings; for ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) { bindings[ i ].bind(); } }, unbind: function () { var bindings = this._bindings; for ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) { bindings[ i ].unbind(); } } } ); function PropertyBinding( rootNode, path, parsedPath ) { this.path = path; this.parsedPath = parsedPath || PropertyBinding.parseTrackName( path ); this.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode; this.rootNode = rootNode; } Object.assign( PropertyBinding, { Composite: Composite, create: function ( root, path, parsedPath ) { if ( ! ( root && root.isAnimationObjectGroup ) ) { return new PropertyBinding( root, path, parsedPath ); } else { return new PropertyBinding.Composite( root, path, parsedPath ); } }, /** * Replaces spaces with underscores and removes unsupported characters from * node names, to ensure compatibility with parseTrackName(). * * @param {string} name Node name to be sanitized. * @return {string} */ sanitizeNodeName: ( function () { var reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' ); return function sanitizeNodeName( name ) { return name.replace( /\s/g, '_' ).replace( reservedRe, '' ); }; }() ), parseTrackName: function () { // Attempts to allow node names from any language. ES5's `\w` regexp matches // only latin characters, and the unicode \p{L} is not yet supported. So // instead, we exclude reserved characters and match everything else. var wordChar = '[^' + RESERVED_CHARS_RE + ']'; var wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\.', '' ) + ']'; // Parent directories, delimited by '/' or ':'. Currently unused, but must // be matched to parse the rest of the track name. var directoryRe = /((?:WC+[\/:])*)/.source.replace( 'WC', wordChar ); // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'. var nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot ); // Object on target node, and accessor. May not contain reserved // characters. Accessor may contain any character except closing bracket. var objectRe = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace( 'WC', wordChar ); // Property and accessor. May not contain reserved characters. Accessor may // contain any non-bracket characters. var propertyRe = /\.(WC+)(?:\[(.+)\])?/.source.replace( 'WC', wordChar ); var trackRe = new RegExp( '' + '^' + directoryRe + nodeRe + objectRe + propertyRe + '$' ); var supportedObjectNames = [ 'material', 'materials', 'bones' ]; return function parseTrackName( trackName ) { var matches = trackRe.exec( trackName ); if ( ! matches ) { throw new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName ); } var results = { // directoryName: matches[ 1 ], // (tschw) currently unused nodeName: matches[ 2 ], objectName: matches[ 3 ], objectIndex: matches[ 4 ], propertyName: matches[ 5 ], // required propertyIndex: matches[ 6 ] }; var lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' ); if ( lastDot !== undefined && lastDot !== - 1 ) { var objectName = results.nodeName.substring( lastDot + 1 ); // Object names must be checked against a whitelist. Otherwise, there // is no way to parse 'foo.bar.baz': 'baz' must be a property, but // 'bar' could be the objectName, or part of a nodeName (which can // include '.' characters). if ( supportedObjectNames.indexOf( objectName ) !== - 1 ) { results.nodeName = results.nodeName.substring( 0, lastDot ); results.objectName = objectName; } } if ( results.propertyName === null || results.propertyName.length === 0 ) { throw new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName ); } return results; }; }(), findNode: function ( root, nodeName ) { if ( ! nodeName || nodeName === "" || nodeName === "root" || nodeName === "." || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) { return root; } // search into skeleton bones. if ( root.skeleton ) { var bone = root.skeleton.getBoneByName( nodeName ); if ( bone !== undefined ) { return bone; } } // search into node subtree. if ( root.children ) { var searchNodeSubtree = function ( children ) { for ( var i = 0; i < children.length; i ++ ) { var childNode = children[ i ]; if ( childNode.name === nodeName || childNode.uuid === nodeName ) { return childNode; } var result = searchNodeSubtree( childNode.children ); if ( result ) return result; } return null; }; var subTreeNode = searchNodeSubtree( root.children ); if ( subTreeNode ) { return subTreeNode; } } return null; } } ); Object.assign( PropertyBinding.prototype, { // prototype, continued // these are used to "bind" a nonexistent property _getValue_unavailable: function () {}, _setValue_unavailable: function () {}, BindingType: { Direct: 0, EntireArray: 1, ArrayElement: 2, HasFromToArray: 3 }, Versioning: { None: 0, NeedsUpdate: 1, MatrixWorldNeedsUpdate: 2 }, GetterByBindingType: [ function getValue_direct( buffer, offset ) { buffer[ offset ] = this.node[ this.propertyName ]; }, function getValue_array( buffer, offset ) { var source = this.resolvedProperty; for ( var i = 0, n = source.length; i !== n; ++ i ) { buffer[ offset ++ ] = source[ i ]; } }, function getValue_arrayElement( buffer, offset ) { buffer[ offset ] = this.resolvedProperty[ this.propertyIndex ]; }, function getValue_toArray( buffer, offset ) { this.resolvedProperty.toArray( buffer, offset ); } ], SetterByBindingTypeAndVersioning: [ [ // Direct function setValue_direct( buffer, offset ) { this.targetObject[ this.propertyName ] = buffer[ offset ]; }, function setValue_direct_setNeedsUpdate( buffer, offset ) { this.targetObject[ this.propertyName ] = buffer[ offset ]; this.targetObject.needsUpdate = true; }, function setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) { this.targetObject[ this.propertyName ] = buffer[ offset ]; this.targetObject.matrixWorldNeedsUpdate = true; } ], [ // EntireArray function setValue_array( buffer, offset ) { var dest = this.resolvedProperty; for ( var i = 0, n = dest.length; i !== n; ++ i ) { dest[ i ] = buffer[ offset ++ ]; } }, function setValue_array_setNeedsUpdate( buffer, offset ) { var dest = this.resolvedProperty; for ( var i = 0, n = dest.length; i !== n; ++ i ) { dest[ i ] = buffer[ offset ++ ]; } this.targetObject.needsUpdate = true; }, function setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) { var dest = this.resolvedProperty; for ( var i = 0, n = dest.length; i !== n; ++ i ) { dest[ i ] = buffer[ offset ++ ]; } this.targetObject.matrixWorldNeedsUpdate = true; } ], [ // ArrayElement function setValue_arrayElement( buffer, offset ) { this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ]; }, function setValue_arrayElement_setNeedsUpdate( buffer, offset ) { this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ]; this.targetObject.needsUpdate = true; }, function setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) { this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ]; this.targetObject.matrixWorldNeedsUpdate = true; } ], [ // HasToFromArray function setValue_fromArray( buffer, offset ) { this.resolvedProperty.fromArray( buffer, offset ); }, function setValue_fromArray_setNeedsUpdate( buffer, offset ) { this.resolvedProperty.fromArray( buffer, offset ); this.targetObject.needsUpdate = true; }, function setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) { this.resolvedProperty.fromArray( buffer, offset ); this.targetObject.matrixWorldNeedsUpdate = true; } ] ], getValue: function getValue_unbound( targetArray, offset ) { this.bind(); this.getValue( targetArray, offset ); // Note: This class uses a State pattern on a per-method basis: // 'bind' sets 'this.getValue' / 'setValue' and shadows the // prototype version of these methods with one that represents // the bound state. When the property is not found, the methods // become no-ops. }, setValue: function getValue_unbound( sourceArray, offset ) { this.bind(); this.setValue( sourceArray, offset ); }, // create getter / setter pair for a property in the scene graph bind: function () { var targetObject = this.node, parsedPath = this.parsedPath, objectName = parsedPath.objectName, propertyName = parsedPath.propertyName, propertyIndex = parsedPath.propertyIndex; if ( ! targetObject ) { targetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode; this.node = targetObject; } // set fail state so we can just 'return' on error this.getValue = this._getValue_unavailable; this.setValue = this._setValue_unavailable; // ensure there is a value node if ( ! targetObject ) { console.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\'t found.' ); return; } if ( objectName ) { var objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials.... switch ( objectName ) { case 'materials': if ( ! targetObject.material ) { console.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this ); return; } if ( ! targetObject.material.materials ) { console.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this ); return; } targetObject = targetObject.material.materials; break; case 'bones': if ( ! targetObject.skeleton ) { console.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this ); return; } // potential future optimization: skip this if propertyIndex is already an integer // and convert the integer string to a true integer. targetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices. for ( var i = 0; i < targetObject.length; i ++ ) { if ( targetObject[ i ].name === objectIndex ) { objectIndex = i; break; } } break; default: if ( targetObject[ objectName ] === undefined ) { console.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this ); return; } targetObject = targetObject[ objectName ]; } if ( objectIndex !== undefined ) { if ( targetObject[ objectIndex ] === undefined ) { console.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject ); return; } targetObject = targetObject[ objectIndex ]; } } // resolve property var nodeProperty = targetObject[ propertyName ]; if ( nodeProperty === undefined ) { var nodeName = parsedPath.nodeName; console.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName + '.' + propertyName + ' but it wasn\'t found.', targetObject ); return; } // determine versioning scheme var versioning = this.Versioning.None; this.targetObject = targetObject; if ( targetObject.needsUpdate !== undefined ) { // material versioning = this.Versioning.NeedsUpdate; } else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform versioning = this.Versioning.MatrixWorldNeedsUpdate; } // determine how the property gets bound var bindingType = this.BindingType.Direct; if ( propertyIndex !== undefined ) { // access a sub element of the property array (only primitives are supported right now) if ( propertyName === "morphTargetInfluences" ) { // potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer. // support resolving morphTarget names into indices. if ( ! targetObject.geometry ) { console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this ); return; } if ( targetObject.geometry.isBufferGeometry ) { if ( ! targetObject.geometry.morphAttributes ) { console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this ); return; } for ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) { if ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) { propertyIndex = i; break; } } } else { if ( ! targetObject.geometry.morphTargets ) { console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this ); return; } for ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) { if ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) { propertyIndex = i; break; } } } } bindingType = this.BindingType.ArrayElement; this.resolvedProperty = nodeProperty; this.propertyIndex = propertyIndex; } else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) { // must use copy for Object3D.Euler/Quaternion bindingType = this.BindingType.HasFromToArray; this.resolvedProperty = nodeProperty; } else if ( Array.isArray( nodeProperty ) ) { bindingType = this.BindingType.EntireArray; this.resolvedProperty = nodeProperty; } else { this.propertyName = propertyName; } // select getter / setter this.getValue = this.GetterByBindingType[ bindingType ]; this.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ]; }, unbind: function () { this.node = null; // back to the prototype version of getValue / setValue // note: avoiding to mutate the shape of 'this' via 'delete' this.getValue = this._getValue_unbound; this.setValue = this._setValue_unbound; } } ); //!\ DECLARE ALIAS AFTER assign prototype ! Object.assign( PropertyBinding.prototype, { // initial state of these methods that calls 'bind' _getValue_unbound: PropertyBinding.prototype.getValue, _setValue_unbound: PropertyBinding.prototype.setValue, } ); /** * * A group of objects that receives a shared animation state. * * Usage: * * - Add objects you would otherwise pass as 'root' to the * constructor or the .clipAction method of AnimationMixer. * * - Instead pass this object as 'root'. * * - You can also add and remove objects later when the mixer * is running. * * Note: * * Objects of this class appear as one object to the mixer, * so cache control of the individual objects must be done * on the group. * * Limitation: * * - The animated properties must be compatible among the * all objects in the group. * * - A single property can either be controlled through a * target group or directly, but not both. * * @author tschw */ function AnimationObjectGroup() { this.uuid = _Math.generateUUID(); // cached objects followed by the active ones this._objects = Array.prototype.slice.call( arguments ); this.nCachedObjects_ = 0; // threshold // note: read by PropertyBinding.Composite var indices = {}; this._indicesByUUID = indices; // for bookkeeping for ( var i = 0, n = arguments.length; i !== n; ++ i ) { indices[ arguments[ i ].uuid ] = i; } this._paths = []; // inside: string this._parsedPaths = []; // inside: { we don't care, here } this._bindings = []; // inside: Array< PropertyBinding > this._bindingsIndicesByPath = {}; // inside: indices in these arrays var scope = this; this.stats = { objects: { get total() { return scope._objects.length; }, get inUse() { return this.total - scope.nCachedObjects_; } }, get bindingsPerObject() { return scope._bindings.length; } }; } Object.assign( AnimationObjectGroup.prototype, { isAnimationObjectGroup: true, add: function () { var objects = this._objects, nObjects = objects.length, nCachedObjects = this.nCachedObjects_, indicesByUUID = this._indicesByUUID, paths = this._paths, parsedPaths = this._parsedPaths, bindings = this._bindings, nBindings = bindings.length, knownObject = undefined; for ( var i = 0, n = arguments.length; i !== n; ++ i ) { var object = arguments[ i ], uuid = object.uuid, index = indicesByUUID[ uuid ]; if ( index === undefined ) { // unknown object -> add it to the ACTIVE region index = nObjects ++; indicesByUUID[ uuid ] = index; objects.push( object ); // accounting is done, now do the same for all bindings for ( var j = 0, m = nBindings; j !== m; ++ j ) { bindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) ); } } else if ( index < nCachedObjects ) { knownObject = objects[ index ]; // move existing object to the ACTIVE region var firstActiveIndex = -- nCachedObjects, lastCachedObject = objects[ firstActiveIndex ]; indicesByUUID[ lastCachedObject.uuid ] = index; objects[ index ] = lastCachedObject; indicesByUUID[ uuid ] = firstActiveIndex; objects[ firstActiveIndex ] = object; // accounting is done, now do the same for all bindings for ( var j = 0, m = nBindings; j !== m; ++ j ) { var bindingsForPath = bindings[ j ], lastCached = bindingsForPath[ firstActiveIndex ], binding = bindingsForPath[ index ]; bindingsForPath[ index ] = lastCached; if ( binding === undefined ) { // since we do not bother to create new bindings // for objects that are cached, the binding may // or may not exist binding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ); } bindingsForPath[ firstActiveIndex ] = binding; } } else if ( objects[ index ] !== knownObject ) { console.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' + 'detected. Clean the caches or recreate your infrastructure when reloading scenes.' ); } // else the object is already where we want it to be } // for arguments this.nCachedObjects_ = nCachedObjects; }, remove: function () { var objects = this._objects, nCachedObjects = this.nCachedObjects_, indicesByUUID = this._indicesByUUID, bindings = this._bindings, nBindings = bindings.length; for ( var i = 0, n = arguments.length; i !== n; ++ i ) { var object = arguments[ i ], uuid = object.uuid, index = indicesByUUID[ uuid ]; if ( index !== undefined && index >= nCachedObjects ) { // move existing object into the CACHED region var lastCachedIndex = nCachedObjects ++, firstActiveObject = objects[ lastCachedIndex ]; indicesByUUID[ firstActiveObject.uuid ] = index; objects[ index ] = firstActiveObject; indicesByUUID[ uuid ] = lastCachedIndex; objects[ lastCachedIndex ] = object; // accounting is done, now do the same for all bindings for ( var j = 0, m = nBindings; j !== m; ++ j ) { var bindingsForPath = bindings[ j ], firstActive = bindingsForPath[ lastCachedIndex ], binding = bindingsForPath[ index ]; bindingsForPath[ index ] = firstActive; bindingsForPath[ lastCachedIndex ] = binding; } } } // for arguments this.nCachedObjects_ = nCachedObjects; }, // remove & forget uncache: function () { var objects = this._objects, nObjects = objects.length, nCachedObjects = this.nCachedObjects_, indicesByUUID = this._indicesByUUID, bindings = this._bindings, nBindings = bindings.length; for ( var i = 0, n = arguments.length; i !== n; ++ i ) { var object = arguments[ i ], uuid = object.uuid, index = indicesByUUID[ uuid ]; if ( index !== undefined ) { delete indicesByUUID[ uuid ]; if ( index < nCachedObjects ) { // object is cached, shrink the CACHED region var firstActiveIndex = -- nCachedObjects, lastCachedObject = objects[ firstActiveIndex ], lastIndex = -- nObjects, lastObject = objects[ lastIndex ]; // last cached object takes this object's place indicesByUUID[ lastCachedObject.uuid ] = index; objects[ index ] = lastCachedObject; // last object goes to the activated slot and pop indicesByUUID[ lastObject.uuid ] = firstActiveIndex; objects[ firstActiveIndex ] = lastObject; objects.pop(); // accounting is done, now do the same for all bindings for ( var j = 0, m = nBindings; j !== m; ++ j ) { var bindingsForPath = bindings[ j ], lastCached = bindingsForPath[ firstActiveIndex ], last = bindingsForPath[ lastIndex ]; bindingsForPath[ index ] = lastCached; bindingsForPath[ firstActiveIndex ] = last; bindingsForPath.pop(); } } else { // object is active, just swap with the last and pop var lastIndex = -- nObjects, lastObject = objects[ lastIndex ]; indicesByUUID[ lastObject.uuid ] = index; objects[ index ] = lastObject; objects.pop(); // accounting is done, now do the same for all bindings for ( var j = 0, m = nBindings; j !== m; ++ j ) { var bindingsForPath = bindings[ j ]; bindingsForPath[ index ] = bindingsForPath[ lastIndex ]; bindingsForPath.pop(); } } // cached or active } // if object is known } // for arguments this.nCachedObjects_ = nCachedObjects; }, // Internal interface used by befriended PropertyBinding.Composite: subscribe_: function ( path, parsedPath ) { // returns an array of bindings for the given path that is changed // according to the contained objects in the group var indicesByPath = this._bindingsIndicesByPath, index = indicesByPath[ path ], bindings = this._bindings; if ( index !== undefined ) return bindings[ index ]; var paths = this._paths, parsedPaths = this._parsedPaths, objects = this._objects, nObjects = objects.length, nCachedObjects = this.nCachedObjects_, bindingsForPath = new Array( nObjects ); index = bindings.length; indicesByPath[ path ] = index; paths.push( path ); parsedPaths.push( parsedPath ); bindings.push( bindingsForPath ); for ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) { var object = objects[ i ]; bindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath ); } return bindingsForPath; }, unsubscribe_: function ( path ) { // tells the group to forget about a property path and no longer // update the array previously obtained with 'subscribe_' var indicesByPath = this._bindingsIndicesByPath, index = indicesByPath[ path ]; if ( index !== undefined ) { var paths = this._paths, parsedPaths = this._parsedPaths, bindings = this._bindings, lastBindingsIndex = bindings.length - 1, lastBindings = bindings[ lastBindingsIndex ], lastBindingsPath = path[ lastBindingsIndex ]; indicesByPath[ lastBindingsPath ] = index; bindings[ index ] = lastBindings; bindings.pop(); parsedPaths[ index ] = parsedPaths[ lastBindingsIndex ]; parsedPaths.pop(); paths[ index ] = paths[ lastBindingsIndex ]; paths.pop(); } } } ); /** * * Action provided by AnimationMixer for scheduling clip playback on specific * objects. * * @author Ben Houston / http://clara.io/ * @author David Sarno / http://lighthaus.us/ * @author tschw * */ function AnimationAction( mixer, clip, localRoot ) { this._mixer = mixer; this._clip = clip; this._localRoot = localRoot || null; var tracks = clip.tracks, nTracks = tracks.length, interpolants = new Array( nTracks ); var interpolantSettings = { endingStart: ZeroCurvatureEnding, endingEnd: ZeroCurvatureEnding }; for ( var i = 0; i !== nTracks; ++ i ) { var interpolant = tracks[ i ].createInterpolant( null ); interpolants[ i ] = interpolant; interpolant.settings = interpolantSettings; } this._interpolantSettings = interpolantSettings; this._interpolants = interpolants; // bound by the mixer // inside: PropertyMixer (managed by the mixer) this._propertyBindings = new Array( nTracks ); this._cacheIndex = null; // for the memory manager this._byClipCacheIndex = null; // for the memory manager this._timeScaleInterpolant = null; this._weightInterpolant = null; this.loop = LoopRepeat; this._loopCount = - 1; // global mixer time when the action is to be started // it's set back to 'null' upon start of the action this._startTime = null; // scaled local time of the action // gets clamped or wrapped to 0..clip.duration according to loop this.time = 0; this.timeScale = 1; this._effectiveTimeScale = 1; this.weight = 1; this._effectiveWeight = 1; this.repetitions = Infinity; // no. of repetitions when looping this.paused = false; // true -> zero effective time scale this.enabled = true; // false -> zero effective weight this.clampWhenFinished = false;// keep feeding the last frame? this.zeroSlopeAtStart = true;// for smooth interpolation w/o separate this.zeroSlopeAtEnd = true;// clips for start, loop and end } Object.assign( AnimationAction.prototype, { // State & Scheduling play: function () { this._mixer._activateAction( this ); return this; }, stop: function () { this._mixer._deactivateAction( this ); return this.reset(); }, reset: function () { this.paused = false; this.enabled = true; this.time = 0; // restart clip this._loopCount = - 1;// forget previous loops this._startTime = null;// forget scheduling return this.stopFading().stopWarping(); }, isRunning: function () { return this.enabled && ! this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction( this ); }, // return true when play has been called isScheduled: function () { return this._mixer._isActiveAction( this ); }, startAt: function ( time ) { this._startTime = time; return this; }, setLoop: function ( mode, repetitions ) { this.loop = mode; this.repetitions = repetitions; return this; }, // Weight // set the weight stopping any scheduled fading // although .enabled = false yields an effective weight of zero, this // method does *not* change .enabled, because it would be confusing setEffectiveWeight: function ( weight ) { this.weight = weight; // note: same logic as when updated at runtime this._effectiveWeight = this.enabled ? weight : 0; return this.stopFading(); }, // return the weight considering fading and .enabled getEffectiveWeight: function () { return this._effectiveWeight; }, fadeIn: function ( duration ) { return this._scheduleFading( duration, 0, 1 ); }, fadeOut: function ( duration ) { return this._scheduleFading( duration, 1, 0 ); }, crossFadeFrom: function ( fadeOutAction, duration, warp ) { fadeOutAction.fadeOut( duration ); this.fadeIn( duration ); if ( warp ) { var fadeInDuration = this._clip.duration, fadeOutDuration = fadeOutAction._clip.duration, startEndRatio = fadeOutDuration / fadeInDuration, endStartRatio = fadeInDuration / fadeOutDuration; fadeOutAction.warp( 1.0, startEndRatio, duration ); this.warp( endStartRatio, 1.0, duration ); } return this; }, crossFadeTo: function ( fadeInAction, duration, warp ) { return fadeInAction.crossFadeFrom( this, duration, warp ); }, stopFading: function () { var weightInterpolant = this._weightInterpolant; if ( weightInterpolant !== null ) { this._weightInterpolant = null; this._mixer._takeBackControlInterpolant( weightInterpolant ); } return this; }, // Time Scale Control // set the time scale stopping any scheduled warping // although .paused = true yields an effective time scale of zero, this // method does *not* change .paused, because it would be confusing setEffectiveTimeScale: function ( timeScale ) { this.timeScale = timeScale; this._effectiveTimeScale = this.paused ? 0 : timeScale; return this.stopWarping(); }, // return the time scale considering warping and .paused getEffectiveTimeScale: function () { return this._effectiveTimeScale; }, setDuration: function ( duration ) { this.timeScale = this._clip.duration / duration; return this.stopWarping(); }, syncWith: function ( action ) { this.time = action.time; this.timeScale = action.timeScale; return this.stopWarping(); }, halt: function ( duration ) { return this.warp( this._effectiveTimeScale, 0, duration ); }, warp: function ( startTimeScale, endTimeScale, duration ) { var mixer = this._mixer, now = mixer.time, interpolant = this._timeScaleInterpolant, timeScale = this.timeScale; if ( interpolant === null ) { interpolant = mixer._lendControlInterpolant(); this._timeScaleInterpolant = interpolant; } var times = interpolant.parameterPositions, values = interpolant.sampleValues; times[ 0 ] = now; times[ 1 ] = now + duration; values[ 0 ] = startTimeScale / timeScale; values[ 1 ] = endTimeScale / timeScale; return this; }, stopWarping: function () { var timeScaleInterpolant = this._timeScaleInterpolant; if ( timeScaleInterpolant !== null ) { this._timeScaleInterpolant = null; this._mixer._takeBackControlInterpolant( timeScaleInterpolant ); } return this; }, // Object Accessors getMixer: function () { return this._mixer; }, getClip: function () { return this._clip; }, getRoot: function () { return this._localRoot || this._mixer._root; }, // Interna _update: function ( time, deltaTime, timeDirection, accuIndex ) { // called by the mixer if ( ! this.enabled ) { // call ._updateWeight() to update ._effectiveWeight this._updateWeight( time ); return; } var startTime = this._startTime; if ( startTime !== null ) { // check for scheduled start of action var timeRunning = ( time - startTime ) * timeDirection; if ( timeRunning < 0 || timeDirection === 0 ) { return; // yet to come / don't decide when delta = 0 } // start this._startTime = null; // unschedule deltaTime = timeDirection * timeRunning; } // apply time scale and advance time deltaTime *= this._updateTimeScale( time ); var clipTime = this._updateTime( deltaTime ); // note: _updateTime may disable the action resulting in // an effective weight of 0 var weight = this._updateWeight( time ); if ( weight > 0 ) { var interpolants = this._interpolants; var propertyMixers = this._propertyBindings; for ( var j = 0, m = interpolants.length; j !== m; ++ j ) { interpolants[ j ].evaluate( clipTime ); propertyMixers[ j ].accumulate( accuIndex, weight ); } } }, _updateWeight: function ( time ) { var weight = 0; if ( this.enabled ) { weight = this.weight; var interpolant = this._weightInterpolant; if ( interpolant !== null ) { var interpolantValue = interpolant.evaluate( time )[ 0 ]; weight *= interpolantValue; if ( time > interpolant.parameterPositions[ 1 ] ) { this.stopFading(); if ( interpolantValue === 0 ) { // faded out, disable this.enabled = false; } } } } this._effectiveWeight = weight; return weight; }, _updateTimeScale: function ( time ) { var timeScale = 0; if ( ! this.paused ) { timeScale = this.timeScale; var interpolant = this._timeScaleInterpolant; if ( interpolant !== null ) { var interpolantValue = interpolant.evaluate( time )[ 0 ]; timeScale *= interpolantValue; if ( time > interpolant.parameterPositions[ 1 ] ) { this.stopWarping(); if ( timeScale === 0 ) { // motion has halted, pause this.paused = true; } else { // warp done - apply final time scale this.timeScale = timeScale; } } } } this._effectiveTimeScale = timeScale; return timeScale; }, _updateTime: function ( deltaTime ) { var time = this.time + deltaTime; var duration = this._clip.duration; var loop = this.loop; var loopCount = this._loopCount; var pingPong = ( loop === LoopPingPong ); if ( deltaTime === 0 ) { if ( loopCount === - 1 ) return time; return ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time; } if ( loop === LoopOnce ) { if ( loopCount === - 1 ) { // just started this._loopCount = 0; this._setEndings( true, true, false ); } handle_stop: { if ( time >= duration ) { time = duration; } else if ( time < 0 ) { time = 0; } else break handle_stop; if ( this.clampWhenFinished ) this.paused = true; else this.enabled = false; this._mixer.dispatchEvent( { type: 'finished', action: this, direction: deltaTime < 0 ? - 1 : 1 } ); } } else { // repetitive Repeat or PingPong if ( loopCount === - 1 ) { // just started if ( deltaTime >= 0 ) { loopCount = 0; this._setEndings( true, this.repetitions === 0, pingPong ); } else { // when looping in reverse direction, the initial // transition through zero counts as a repetition, // so leave loopCount at -1 this._setEndings( this.repetitions === 0, true, pingPong ); } } if ( time >= duration || time < 0 ) { // wrap around var loopDelta = Math.floor( time / duration ); // signed time -= duration * loopDelta; loopCount += Math.abs( loopDelta ); var pending = this.repetitions - loopCount; if ( pending <= 0 ) { // have to stop (switch state, clamp time, fire event) if ( this.clampWhenFinished ) this.paused = true; else this.enabled = false; time = deltaTime > 0 ? duration : 0; this._mixer.dispatchEvent( { type: 'finished', action: this, direction: deltaTime > 0 ? 1 : - 1 } ); } else { // keep running if ( pending === 1 ) { // entering the last round var atStart = deltaTime < 0; this._setEndings( atStart, ! atStart, pingPong ); } else { this._setEndings( false, false, pingPong ); } this._loopCount = loopCount; this._mixer.dispatchEvent( { type: 'loop', action: this, loopDelta: loopDelta } ); } } if ( pingPong && ( loopCount & 1 ) === 1 ) { // invert time for the "pong round" this.time = time; return duration - time; } } this.time = time; return time; }, _setEndings: function ( atStart, atEnd, pingPong ) { var settings = this._interpolantSettings; if ( pingPong ) { settings.endingStart = ZeroSlopeEnding; settings.endingEnd = ZeroSlopeEnding; } else { // assuming for LoopOnce atStart == atEnd == true if ( atStart ) { settings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding; } else { settings.endingStart = WrapAroundEnding; } if ( atEnd ) { settings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding; } else { settings.endingEnd = WrapAroundEnding; } } }, _scheduleFading: function ( duration, weightNow, weightThen ) { var mixer = this._mixer, now = mixer.time, interpolant = this._weightInterpolant; if ( interpolant === null ) { interpolant = mixer._lendControlInterpolant(); this._weightInterpolant = interpolant; } var times = interpolant.parameterPositions, values = interpolant.sampleValues; times[ 0 ] = now; values[ 0 ] = weightNow; times[ 1 ] = now + duration; values[ 1 ] = weightThen; return this; } } ); /** * * Player for AnimationClips. * * * @author Ben Houston / http://clara.io/ * @author David Sarno / http://lighthaus.us/ * @author tschw */ function AnimationMixer( root ) { this._root = root; this._initMemoryManager(); this._accuIndex = 0; this.time = 0; this.timeScale = 1.0; } AnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), { constructor: AnimationMixer, _bindAction: function ( action, prototypeAction ) { var root = action._localRoot || this._root, tracks = action._clip.tracks, nTracks = tracks.length, bindings = action._propertyBindings, interpolants = action._interpolants, rootUuid = root.uuid, bindingsByRoot = this._bindingsByRootAndName, bindingsByName = bindingsByRoot[ rootUuid ]; if ( bindingsByName === undefined ) { bindingsByName = {}; bindingsByRoot[ rootUuid ] = bindingsByName; } for ( var i = 0; i !== nTracks; ++ i ) { var track = tracks[ i ], trackName = track.name, binding = bindingsByName[ trackName ]; if ( binding !== undefined ) { bindings[ i ] = binding; } else { binding = bindings[ i ]; if ( binding !== undefined ) { // existing binding, make sure the cache knows if ( binding._cacheIndex === null ) { ++ binding.referenceCount; this._addInactiveBinding( binding, rootUuid, trackName ); } continue; } var path = prototypeAction && prototypeAction. _propertyBindings[ i ].binding.parsedPath; binding = new PropertyMixer( PropertyBinding.create( root, trackName, path ), track.ValueTypeName, track.getValueSize() ); ++ binding.referenceCount; this._addInactiveBinding( binding, rootUuid, trackName ); bindings[ i ] = binding; } interpolants[ i ].resultBuffer = binding.buffer; } }, _activateAction: function ( action ) { if ( ! this._isActiveAction( action ) ) { if ( action._cacheIndex === null ) { // this action has been forgotten by the cache, but the user // appears to be still using it -> rebind var rootUuid = ( action._localRoot || this._root ).uuid, clipUuid = action._clip.uuid, actionsForClip = this._actionsByClip[ clipUuid ]; this._bindAction( action, actionsForClip && actionsForClip.knownActions[ 0 ] ); this._addInactiveAction( action, clipUuid, rootUuid ); } var bindings = action._propertyBindings; // increment reference counts / sort out state for ( var i = 0, n = bindings.length; i !== n; ++ i ) { var binding = bindings[ i ]; if ( binding.useCount ++ === 0 ) { this._lendBinding( binding ); binding.saveOriginalState(); } } this._lendAction( action ); } }, _deactivateAction: function ( action ) { if ( this._isActiveAction( action ) ) { var bindings = action._propertyBindings; // decrement reference counts / sort out state for ( var i = 0, n = bindings.length; i !== n; ++ i ) { var binding = bindings[ i ]; if ( -- binding.useCount === 0 ) { binding.restoreOriginalState(); this._takeBackBinding( binding ); } } this._takeBackAction( action ); } }, // Memory manager _initMemoryManager: function () { this._actions = []; // 'nActiveActions' followed by inactive ones this._nActiveActions = 0; this._actionsByClip = {}; // inside: // { // knownActions: Array< AnimationAction > - used as prototypes // actionByRoot: AnimationAction - lookup // } this._bindings = []; // 'nActiveBindings' followed by inactive ones this._nActiveBindings = 0; this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer > this._controlInterpolants = []; // same game as above this._nActiveControlInterpolants = 0; var scope = this; this.stats = { actions: { get total() { return scope._actions.length; }, get inUse() { return scope._nActiveActions; } }, bindings: { get total() { return scope._bindings.length; }, get inUse() { return scope._nActiveBindings; } }, controlInterpolants: { get total() { return scope._controlInterpolants.length; }, get inUse() { return scope._nActiveControlInterpolants; } } }; }, // Memory management for AnimationAction objects _isActiveAction: function ( action ) { var index = action._cacheIndex; return index !== null && index < this._nActiveActions; }, _addInactiveAction: function ( action, clipUuid, rootUuid ) { var actions = this._actions, actionsByClip = this._actionsByClip, actionsForClip = actionsByClip[ clipUuid ]; if ( actionsForClip === undefined ) { actionsForClip = { knownActions: [ action ], actionByRoot: {} }; action._byClipCacheIndex = 0; actionsByClip[ clipUuid ] = actionsForClip; } else { var knownActions = actionsForClip.knownActions; action._byClipCacheIndex = knownActions.length; knownActions.push( action ); } action._cacheIndex = actions.length; actions.push( action ); actionsForClip.actionByRoot[ rootUuid ] = action; }, _removeInactiveAction: function ( action ) { var actions = this._actions, lastInactiveAction = actions[ actions.length - 1 ], cacheIndex = action._cacheIndex; lastInactiveAction._cacheIndex = cacheIndex; actions[ cacheIndex ] = lastInactiveAction; actions.pop(); action._cacheIndex = null; var clipUuid = action._clip.uuid, actionsByClip = this._actionsByClip, actionsForClip = actionsByClip[ clipUuid ], knownActionsForClip = actionsForClip.knownActions, lastKnownAction = knownActionsForClip[ knownActionsForClip.length - 1 ], byClipCacheIndex = action._byClipCacheIndex; lastKnownAction._byClipCacheIndex = byClipCacheIndex; knownActionsForClip[ byClipCacheIndex ] = lastKnownAction; knownActionsForClip.pop(); action._byClipCacheIndex = null; var actionByRoot = actionsForClip.actionByRoot, rootUuid = ( action._localRoot || this._root ).uuid; delete actionByRoot[ rootUuid ]; if ( knownActionsForClip.length === 0 ) { delete actionsByClip[ clipUuid ]; } this._removeInactiveBindingsForAction( action ); }, _removeInactiveBindingsForAction: function ( action ) { var bindings = action._propertyBindings; for ( var i = 0, n = bindings.length; i !== n; ++ i ) { var binding = bindings[ i ]; if ( -- binding.referenceCount === 0 ) { this._removeInactiveBinding( binding ); } } }, _lendAction: function ( action ) { // [ active actions | inactive actions ] // [ active actions >| inactive actions ] // s a // <-swap-> // a s var actions = this._actions, prevIndex = action._cacheIndex, lastActiveIndex = this._nActiveActions ++, firstInactiveAction = actions[ lastActiveIndex ]; action._cacheIndex = lastActiveIndex; actions[ lastActiveIndex ] = action; firstInactiveAction._cacheIndex = prevIndex; actions[ prevIndex ] = firstInactiveAction; }, _takeBackAction: function ( action ) { // [ active actions | inactive actions ] // [ active actions |< inactive actions ] // a s // <-swap-> // s a var actions = this._actions, prevIndex = action._cacheIndex, firstInactiveIndex = -- this._nActiveActions, lastActiveAction = actions[ firstInactiveIndex ]; action._cacheIndex = firstInactiveIndex; actions[ firstInactiveIndex ] = action; lastActiveAction._cacheIndex = prevIndex; actions[ prevIndex ] = lastActiveAction; }, // Memory management for PropertyMixer objects _addInactiveBinding: function ( binding, rootUuid, trackName ) { var bindingsByRoot = this._bindingsByRootAndName, bindingByName = bindingsByRoot[ rootUuid ], bindings = this._bindings; if ( bindingByName === undefined ) { bindingByName = {}; bindingsByRoot[ rootUuid ] = bindingByName; } bindingByName[ trackName ] = binding; binding._cacheIndex = bindings.length; bindings.push( binding ); }, _removeInactiveBinding: function ( binding ) { var bindings = this._bindings, propBinding = binding.binding, rootUuid = propBinding.rootNode.uuid, trackName = propBinding.path, bindingsByRoot = this._bindingsByRootAndName, bindingByName = bindingsByRoot[ rootUuid ], lastInactiveBinding = bindings[ bindings.length - 1 ], cacheIndex = binding._cacheIndex; lastInactiveBinding._cacheIndex = cacheIndex; bindings[ cacheIndex ] = lastInactiveBinding; bindings.pop(); delete bindingByName[ trackName ]; remove_empty_map: { for ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars delete bindingsByRoot[ rootUuid ]; } }, _lendBinding: function ( binding ) { var bindings = this._bindings, prevIndex = binding._cacheIndex, lastActiveIndex = this._nActiveBindings ++, firstInactiveBinding = bindings[ lastActiveIndex ]; binding._cacheIndex = lastActiveIndex; bindings[ lastActiveIndex ] = binding; firstInactiveBinding._cacheIndex = prevIndex; bindings[ prevIndex ] = firstInactiveBinding; }, _takeBackBinding: function ( binding ) { var bindings = this._bindings, prevIndex = binding._cacheIndex, firstInactiveIndex = -- this._nActiveBindings, lastActiveBinding = bindings[ firstInactiveIndex ]; binding._cacheIndex = firstInactiveIndex; bindings[ firstInactiveIndex ] = binding; lastActiveBinding._cacheIndex = prevIndex; bindings[ prevIndex ] = lastActiveBinding; }, // Memory management of Interpolants for weight and time scale _lendControlInterpolant: function () { var interpolants = this._controlInterpolants, lastActiveIndex = this._nActiveControlInterpolants ++, interpolant = interpolants[ lastActiveIndex ]; if ( interpolant === undefined ) { interpolant = new LinearInterpolant( new Float32Array( 2 ), new Float32Array( 2 ), 1, this._controlInterpolantsResultBuffer ); interpolant.__cacheIndex = lastActiveIndex; interpolants[ lastActiveIndex ] = interpolant; } return interpolant; }, _takeBackControlInterpolant: function ( interpolant ) { var interpolants = this._controlInterpolants, prevIndex = interpolant.__cacheIndex, firstInactiveIndex = -- this._nActiveControlInterpolants, lastActiveInterpolant = interpolants[ firstInactiveIndex ]; interpolant.__cacheIndex = firstInactiveIndex; interpolants[ firstInactiveIndex ] = interpolant; lastActiveInterpolant.__cacheIndex = prevIndex; interpolants[ prevIndex ] = lastActiveInterpolant; }, _controlInterpolantsResultBuffer: new Float32Array( 1 ), // return an action for a clip optionally using a custom root target // object (this method allocates a lot of dynamic memory in case a // previously unknown clip/root combination is specified) clipAction: function ( clip, optionalRoot ) { var root = optionalRoot || this._root, rootUuid = root.uuid, clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip, clipUuid = clipObject !== null ? clipObject.uuid : clip, actionsForClip = this._actionsByClip[ clipUuid ], prototypeAction = null; if ( actionsForClip !== undefined ) { var existingAction = actionsForClip.actionByRoot[ rootUuid ]; if ( existingAction !== undefined ) { return existingAction; } // we know the clip, so we don't have to parse all // the bindings again but can just copy prototypeAction = actionsForClip.knownActions[ 0 ]; // also, take the clip from the prototype action if ( clipObject === null ) clipObject = prototypeAction._clip; } // clip must be known when specified via string if ( clipObject === null ) return null; // allocate all resources required to run it var newAction = new AnimationAction( this, clipObject, optionalRoot ); this._bindAction( newAction, prototypeAction ); // and make the action known to the memory manager this._addInactiveAction( newAction, clipUuid, rootUuid ); return newAction; }, // get an existing action existingAction: function ( clip, optionalRoot ) { var root = optionalRoot || this._root, rootUuid = root.uuid, clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip, clipUuid = clipObject ? clipObject.uuid : clip, actionsForClip = this._actionsByClip[ clipUuid ]; if ( actionsForClip !== undefined ) { return actionsForClip.actionByRoot[ rootUuid ] || null; } return null; }, // deactivates all previously scheduled actions stopAllAction: function () { var actions = this._actions, nActions = this._nActiveActions, bindings = this._bindings, nBindings = this._nActiveBindings; this._nActiveActions = 0; this._nActiveBindings = 0; for ( var i = 0; i !== nActions; ++ i ) { actions[ i ].reset(); } for ( var i = 0; i !== nBindings; ++ i ) { bindings[ i ].useCount = 0; } return this; }, // advance the time and update apply the animation update: function ( deltaTime ) { deltaTime *= this.timeScale; var actions = this._actions, nActions = this._nActiveActions, time = this.time += deltaTime, timeDirection = Math.sign( deltaTime ), accuIndex = this._accuIndex ^= 1; // run active actions for ( var i = 0; i !== nActions; ++ i ) { var action = actions[ i ]; action._update( time, deltaTime, timeDirection, accuIndex ); } // update scene graph var bindings = this._bindings, nBindings = this._nActiveBindings; for ( var i = 0; i !== nBindings; ++ i ) { bindings[ i ].apply( accuIndex ); } return this; }, // return this mixer's root target object getRoot: function () { return this._root; }, // free all resources specific to a particular clip uncacheClip: function ( clip ) { var actions = this._actions, clipUuid = clip.uuid, actionsByClip = this._actionsByClip, actionsForClip = actionsByClip[ clipUuid ]; if ( actionsForClip !== undefined ) { // note: just calling _removeInactiveAction would mess up the // iteration state and also require updating the state we can // just throw away var actionsToRemove = actionsForClip.knownActions; for ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) { var action = actionsToRemove[ i ]; this._deactivateAction( action ); var cacheIndex = action._cacheIndex, lastInactiveAction = actions[ actions.length - 1 ]; action._cacheIndex = null; action._byClipCacheIndex = null; lastInactiveAction._cacheIndex = cacheIndex; actions[ cacheIndex ] = lastInactiveAction; actions.pop(); this._removeInactiveBindingsForAction( action ); } delete actionsByClip[ clipUuid ]; } }, // free all resources specific to a particular root target object uncacheRoot: function ( root ) { var rootUuid = root.uuid, actionsByClip = this._actionsByClip; for ( var clipUuid in actionsByClip ) { var actionByRoot = actionsByClip[ clipUuid ].actionByRoot, action = actionByRoot[ rootUuid ]; if ( action !== undefined ) { this._deactivateAction( action ); this._removeInactiveAction( action ); } } var bindingsByRoot = this._bindingsByRootAndName, bindingByName = bindingsByRoot[ rootUuid ]; if ( bindingByName !== undefined ) { for ( var trackName in bindingByName ) { var binding = bindingByName[ trackName ]; binding.restoreOriginalState(); this._removeInactiveBinding( binding ); } } }, // remove a targeted clip from the cache uncacheAction: function ( clip, optionalRoot ) { var action = this.existingAction( clip, optionalRoot ); if ( action !== null ) { this._deactivateAction( action ); this._removeInactiveAction( action ); } } } ); /** * @author mrdoob / http://mrdoob.com/ */ function Uniform( value ) { if ( typeof value === 'string' ) { console.warn( 'THREE.Uniform: Type parameter is no longer needed.' ); value = arguments[ 1 ]; } this.value = value; } Uniform.prototype.clone = function () { return new Uniform( this.value.clone === undefined ? this.value : this.value.clone() ); }; /** * @author benaadams / https://twitter.com/ben_a_adams */ function InstancedBufferGeometry() { BufferGeometry.call( this ); this.type = 'InstancedBufferGeometry'; this.maxInstancedCount = undefined; } InstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), { constructor: InstancedBufferGeometry, isInstancedBufferGeometry: true, copy: function ( source ) { BufferGeometry.prototype.copy.call( this, source ); this.maxInstancedCount = source.maxInstancedCount; return this; }, clone: function () { return new this.constructor().copy( this ); } } ); /** * @author benaadams / https://twitter.com/ben_a_adams */ function InstancedInterleavedBuffer( array, stride, meshPerAttribute ) { InterleavedBuffer.call( this, array, stride ); this.meshPerAttribute = meshPerAttribute || 1; } InstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), { constructor: InstancedInterleavedBuffer, isInstancedInterleavedBuffer: true, copy: function ( source ) { InterleavedBuffer.prototype.copy.call( this, source ); this.meshPerAttribute = source.meshPerAttribute; return this; } } ); /** * @author benaadams / https://twitter.com/ben_a_adams */ function InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) { if ( typeof ( normalized ) === 'number' ) { meshPerAttribute = normalized; normalized = false; console.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' ); } BufferAttribute.call( this, array, itemSize, normalized ); this.meshPerAttribute = meshPerAttribute || 1; } InstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), { constructor: InstancedBufferAttribute, isInstancedBufferAttribute: true, copy: function ( source ) { BufferAttribute.prototype.copy.call( this, source ); this.meshPerAttribute = source.meshPerAttribute; return this; } } ); /** * @author mrdoob / http://mrdoob.com/ * @author bhouston / http://clara.io/ * @author stephomi / http://stephaneginier.com/ */ function Raycaster( origin, direction, near, far ) { this.ray = new Ray( origin, direction ); // direction is assumed to be normalized (for accurate distance calculations) this.near = near || 0; this.far = far || Infinity; this.params = { Mesh: {}, Line: {}, LOD: {}, Points: { threshold: 1 }, Sprite: {} }; Object.defineProperties( this.params, { PointCloud: { get: function () { console.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' ); return this.Points; } } } ); } function ascSort( a, b ) { return a.distance - b.distance; } function intersectObject( object, raycaster, intersects, recursive ) { if ( object.visible === false ) return; object.raycast( raycaster, intersects ); if ( recursive === true ) { var children = object.children; for ( var i = 0, l = children.length; i < l; i ++ ) { intersectObject( children[ i ], raycaster, intersects, true ); } } } Object.assign( Raycaster.prototype, { linePrecision: 1, set: function ( origin, direction ) { // direction is assumed to be normalized (for accurate distance calculations) this.ray.set( origin, direction ); }, setFromCamera: function ( coords, camera ) { if ( ( camera && camera.isPerspectiveCamera ) ) { this.ray.origin.setFromMatrixPosition( camera.matrixWorld ); this.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize(); } else if ( ( camera && camera.isOrthographicCamera ) ) { this.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera this.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld ); } else { console.error( 'THREE.Raycaster: Unsupported camera type.' ); } }, intersectObject: function ( object, recursive, optionalTarget ) { var intersects = optionalTarget || []; intersectObject( object, this, intersects, recursive ); intersects.sort( ascSort ); return intersects; }, intersectObjects: function ( objects, recursive, optionalTarget ) { var intersects = optionalTarget || []; if ( Array.isArray( objects ) === false ) { console.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' ); return intersects; } for ( var i = 0, l = objects.length; i < l; i ++ ) { intersectObject( objects[ i ], this, intersects, recursive ); } intersects.sort( ascSort ); return intersects; } } ); /** * @author bhouston / http://clara.io * @author WestLangley / http://github.com/WestLangley * * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system * * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up. * The azimuthal angle (theta) is measured from the positive z-axiz. */ function Spherical( radius, phi, theta ) { this.radius = ( radius !== undefined ) ? radius : 1.0; this.phi = ( phi !== undefined ) ? phi : 0; // polar angle this.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle return this; } Object.assign( Spherical.prototype, { set: function ( radius, phi, theta ) { this.radius = radius; this.phi = phi; this.theta = theta; return this; }, clone: function () { return new this.constructor().copy( this ); }, copy: function ( other ) { this.radius = other.radius; this.phi = other.phi; this.theta = other.theta; return this; }, // restrict phi to be betwee EPS and PI-EPS makeSafe: function () { var EPS = 0.000001; this.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) ); return this; }, setFromVector3: function ( v ) { return this.setFromCartesianCoords( v.x, v.y, v.z ); }, setFromCartesianCoords: function ( x, y, z ) { this.radius = Math.sqrt( x * x + y * y + z * z ); if ( this.radius === 0 ) { this.theta = 0; this.phi = 0; } else { this.theta = Math.atan2( x, z ); this.phi = Math.acos( _Math.clamp( y / this.radius, - 1, 1 ) ); } return this; } } ); /** * @author Mugen87 / https://github.com/Mugen87 * * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system * */ function Cylindrical( radius, theta, y ) { this.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane this.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis this.y = ( y !== undefined ) ? y : 0; // height above the x-z plane return this; } Object.assign( Cylindrical.prototype, { set: function ( radius, theta, y ) { this.radius = radius; this.theta = theta; this.y = y; return this; }, clone: function () { return new this.constructor().copy( this ); }, copy: function ( other ) { this.radius = other.radius; this.theta = other.theta; this.y = other.y; return this; }, setFromVector3: function ( v ) { return this.setFromCartesianCoords( v.x, v.y, v.z ); }, setFromCartesianCoords: function ( x, y, z ) { this.radius = Math.sqrt( x * x + z * z ); this.theta = Math.atan2( x, z ); this.y = y; return this; } } ); /** * @author bhouston / http://clara.io */ function Box2( min, max ) { this.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity ); this.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity ); } Object.assign( Box2.prototype, { set: function ( min, max ) { this.min.copy( min ); this.max.copy( max ); return this; }, setFromPoints: function ( points ) { this.makeEmpty(); for ( var i = 0, il = points.length; i < il; i ++ ) { this.expandByPoint( points[ i ] ); } return this; }, setFromCenterAndSize: function () { var v1 = new Vector2(); return function setFromCenterAndSize( center, size ) { var halfSize = v1.copy( size ).multiplyScalar( 0.5 ); this.min.copy( center ).sub( halfSize ); this.max.copy( center ).add( halfSize ); return this; }; }(), clone: function () { return new this.constructor().copy( this ); }, copy: function ( box ) { this.min.copy( box.min ); this.max.copy( box.max ); return this; }, makeEmpty: function () { this.min.x = this.min.y = + Infinity; this.max.x = this.max.y = - Infinity; return this; }, isEmpty: function () { // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ); }, getCenter: function ( target ) { if ( target === undefined ) { console.warn( 'THREE.Box2: .getCenter() target is now required' ); target = new Vector2(); } return this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 ); }, getSize: function ( target ) { if ( target === undefined ) { console.warn( 'THREE.Box2: .getSize() target is now required' ); target = new Vector2(); } return this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min ); }, expandByPoint: function ( point ) { this.min.min( point ); this.max.max( point ); return this; }, expandByVector: function ( vector ) { this.min.sub( vector ); this.max.add( vector ); return this; }, expandByScalar: function ( scalar ) { this.min.addScalar( - scalar ); this.max.addScalar( scalar ); return this; }, containsPoint: function ( point ) { return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y ? false : true; }, containsBox: function ( box ) { return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y; }, getParameter: function ( point, target ) { // This can potentially have a divide by zero if the box // has a size dimension of 0. if ( target === undefined ) { console.warn( 'THREE.Box2: .getParameter() target is now required' ); target = new Vector2(); } return target.set( ( point.x - this.min.x ) / ( this.max.x - this.min.x ), ( point.y - this.min.y ) / ( this.max.y - this.min.y ) ); }, intersectsBox: function ( box ) { // using 4 splitting planes to rule out intersections return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y ? false : true; }, clampPoint: function ( point, target ) { if ( target === undefined ) { console.warn( 'THREE.Box2: .clampPoint() target is now required' ); target = new Vector2(); } return target.copy( point ).clamp( this.min, this.max ); }, distanceToPoint: function () { var v1 = new Vector2(); return function distanceToPoint( point ) { var clampedPoint = v1.copy( point ).clamp( this.min, this.max ); return clampedPoint.sub( point ).length(); }; }(), intersect: function ( box ) { this.min.max( box.min ); this.max.min( box.max ); return this; }, union: function ( box ) { this.min.min( box.min ); this.max.max( box.max ); return this; }, translate: function ( offset ) { this.min.add( offset ); this.max.add( offset ); return this; }, equals: function ( box ) { return box.min.equals( this.min ) && box.max.equals( this.max ); } } ); /** * @author bhouston / http://clara.io */ function Line3( start, end ) { this.start = ( start !== undefined ) ? start : new Vector3(); this.end = ( end !== undefined ) ? end : new Vector3(); } Object.assign( Line3.prototype, { set: function ( start, end ) { this.start.copy( start ); this.end.copy( end ); return this; }, clone: function () { return new this.constructor().copy( this ); }, copy: function ( line ) { this.start.copy( line.start ); this.end.copy( line.end ); return this; }, getCenter: function ( target ) { if ( target === undefined ) { console.warn( 'THREE.Line3: .getCenter() target is now required' ); target = new Vector3(); } return target.addVectors( this.start, this.end ).multiplyScalar( 0.5 ); }, delta: function ( target ) { if ( target === undefined ) { console.warn( 'THREE.Line3: .delta() target is now required' ); target = new Vector3(); } return target.subVectors( this.end, this.start ); }, distanceSq: function () { return this.start.distanceToSquared( this.end ); }, distance: function () { return this.start.distanceTo( this.end ); }, at: function ( t, target ) { if ( target === undefined ) { console.warn( 'THREE.Line3: .at() target is now required' ); target = new Vector3(); } return this.delta( target ).multiplyScalar( t ).add( this.start ); }, closestPointToPointParameter: function () { var startP = new Vector3(); var startEnd = new Vector3(); return function closestPointToPointParameter( point, clampToLine ) { startP.subVectors( point, this.start ); startEnd.subVectors( this.end, this.start ); var startEnd2 = startEnd.dot( startEnd ); var startEnd_startP = startEnd.dot( startP ); var t = startEnd_startP / startEnd2; if ( clampToLine ) { t = _Math.clamp( t, 0, 1 ); } return t; }; }(), closestPointToPoint: function ( point, clampToLine, target ) { var t = this.closestPointToPointParameter( point, clampToLine ); if ( target === undefined ) { console.warn( 'THREE.Line3: .closestPointToPoint() target is now required' ); target = new Vector3(); } return this.delta( target ).multiplyScalar( t ).add( this.start ); }, applyMatrix4: function ( matrix ) { this.start.applyMatrix4( matrix ); this.end.applyMatrix4( matrix ); return this; }, equals: function ( line ) { return line.start.equals( this.start ) && line.end.equals( this.end ); } } ); /** * @author alteredq / http://alteredqualia.com/ */ function ImmediateRenderObject( material ) { Object3D.call( this ); this.material = material; this.render = function ( /* renderCallback */ ) {}; } ImmediateRenderObject.prototype = Object.create( Object3D.prototype ); ImmediateRenderObject.prototype.constructor = ImmediateRenderObject; ImmediateRenderObject.prototype.isImmediateRenderObject = true; /** * @author mrdoob / http://mrdoob.com/ * @author WestLangley / http://github.com/WestLangley */ function VertexNormalsHelper( object, size, hex, linewidth ) { this.object = object; this.size = ( size !== undefined ) ? size : 1; var color = ( hex !== undefined ) ? hex : 0xff0000; var width = ( linewidth !== undefined ) ? linewidth : 1; // var nNormals = 0; var objGeometry = this.object.geometry; if ( objGeometry && objGeometry.isGeometry ) { nNormals = objGeometry.faces.length * 3; } else if ( objGeometry && objGeometry.isBufferGeometry ) { nNormals = objGeometry.attributes.normal.count; } // var geometry = new BufferGeometry(); var positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 ); geometry.addAttribute( 'position', positions ); LineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) ); // this.matrixAutoUpdate = false; this.update(); } VertexNormalsHelper.prototype = Object.create( LineSegments.prototype ); VertexNormalsHelper.prototype.constructor = VertexNormalsHelper; VertexNormalsHelper.prototype.update = ( function () { var v1 = new Vector3(); var v2 = new Vector3(); var normalMatrix = new Matrix3(); return function update() { var keys = [ 'a', 'b', 'c' ]; this.object.updateMatrixWorld( true ); normalMatrix.getNormalMatrix( this.object.matrixWorld ); var matrixWorld = this.object.matrixWorld; var position = this.geometry.attributes.position; // var objGeometry = this.object.geometry; if ( objGeometry && objGeometry.isGeometry ) { var vertices = objGeometry.vertices; var faces = objGeometry.faces; var idx = 0; for ( var i = 0, l = faces.length; i < l; i ++ ) { var face = faces[ i ]; for ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) { var vertex = vertices[ face[ keys[ j ] ] ]; var normal = face.vertexNormals[ j ]; v1.copy( vertex ).applyMatrix4( matrixWorld ); v2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 ); position.setXYZ( idx, v1.x, v1.y, v1.z ); idx = idx + 1; position.setXYZ( idx, v2.x, v2.y, v2.z ); idx = idx + 1; } } } else if ( objGeometry && objGeometry.isBufferGeometry ) { var objPos = objGeometry.attributes.position; var objNorm = objGeometry.attributes.normal; var idx = 0; // for simplicity, ignore index and drawcalls, and render every normal for ( var j = 0, jl = objPos.count; j < jl; j ++ ) { v1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld ); v2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) ); v2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 ); position.setXYZ( idx, v1.x, v1.y, v1.z ); idx = idx + 1; position.setXYZ( idx, v2.x, v2.y, v2.z ); idx = idx + 1; } } position.needsUpdate = true; }; }() ); /** * @author alteredq / http://alteredqualia.com/ * @author mrdoob / http://mrdoob.com/ * @author WestLangley / http://github.com/WestLangley */ function SpotLightHelper( light, color ) { Object3D.call( this ); this.light = light; this.light.updateMatrixWorld(); this.matrix = light.matrixWorld; this.matrixAutoUpdate = false; this.color = color; var geometry = new BufferGeometry(); var positions = [ 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, - 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, - 1, 1 ]; for ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) { var p1 = ( i / l ) * Math.PI * 2; var p2 = ( j / l ) * Math.PI * 2; positions.push( Math.cos( p1 ), Math.sin( p1 ), 1, Math.cos( p2 ), Math.sin( p2 ), 1 ); } geometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) ); var material = new LineBasicMaterial( { fog: false } ); this.cone = new LineSegments( geometry, material ); this.add( this.cone ); this.update(); } SpotLightHelper.prototype = Object.create( Object3D.prototype ); SpotLightHelper.prototype.constructor = SpotLightHelper; SpotLightHelper.prototype.dispose = function () { this.cone.geometry.dispose(); this.cone.material.dispose(); }; SpotLightHelper.prototype.update = function () { var vector = new Vector3(); return function update() { this.light.updateMatrixWorld(); var coneLength = this.light.distance ? this.light.distance : 1000; var coneWidth = coneLength * Math.tan( this.light.angle ); this.cone.scale.set( coneWidth, coneWidth, coneLength ); vector.setFromMatrixPosition( this.light.target.matrixWorld ); this.cone.lookAt( vector ); if ( this.color !== undefined ) { this.cone.material.color.set( this.color ); } else { this.cone.material.color.copy( this.light.color ); } }; }(); /** * @author Sean Griffin / http://twitter.com/sgrif * @author Michael Guerrero / http://realitymeltdown.com * @author mrdoob / http://mrdoob.com/ * @author ikerr / http://verold.com * @author Mugen87 / https://github.com/Mugen87 */ function getBoneList( object ) { var boneList = []; if ( object && object.isBone ) { boneList.push( object ); } for ( var i = 0; i < object.children.length; i ++ ) { boneList.push.apply( boneList, getBoneList( object.children[ i ] ) ); } return boneList; } function SkeletonHelper( object ) { var bones = getBoneList( object ); var geometry = new BufferGeometry(); var vertices = []; var colors = []; var color1 = new Color( 0, 0, 1 ); var color2 = new Color( 0, 1, 0 ); for ( var i = 0; i < bones.length; i ++ ) { var bone = bones[ i ]; if ( bone.parent && bone.parent.isBone ) { vertices.push( 0, 0, 0 ); vertices.push( 0, 0, 0 ); colors.push( color1.r, color1.g, color1.b ); colors.push( color2.r, color2.g, color2.b ); } } geometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) ); geometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) ); var material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } ); LineSegments.call( this, geometry, material ); this.root = object; this.bones = bones; this.matrix = object.matrixWorld; this.matrixAutoUpdate = false; } SkeletonHelper.prototype = Object.create( LineSegments.prototype ); SkeletonHelper.prototype.constructor = SkeletonHelper; SkeletonHelper.prototype.updateMatrixWorld = function () { var vector = new Vector3(); var boneMatrix = new Matrix4(); var matrixWorldInv = new Matrix4(); return function updateMatrixWorld( force ) { var bones = this.bones; var geometry = this.geometry; var position = geometry.getAttribute( 'position' ); matrixWorldInv.getInverse( this.root.matrixWorld ); for ( var i = 0, j = 0; i < bones.length; i ++ ) { var bone = bones[ i ]; if ( bone.parent && bone.parent.isBone ) { boneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld ); vector.setFromMatrixPosition( boneMatrix ); position.setXYZ( j, vector.x, vector.y, vector.z ); boneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld ); vector.setFromMatrixPosition( boneMatrix ); position.setXYZ( j + 1, vector.x, vector.y, vector.z ); j += 2; } } geometry.getAttribute( 'position' ).needsUpdate = true; Object3D.prototype.updateMatrixWorld.call( this, force ); }; }(); /** * @author alteredq / http://alteredqualia.com/ * @author mrdoob / http://mrdoob.com/ */ function PointLightHelper( light, sphereSize, color ) { this.light = light; this.light.updateMatrixWorld(); this.color = color; var geometry = new SphereBufferGeometry( sphereSize, 4, 2 ); var material = new MeshBasicMaterial( { wireframe: true, fog: false } ); Mesh.call( this, geometry, material ); this.matrix = this.light.matrixWorld; this.matrixAutoUpdate = false; this.update(); /* var distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 ); var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } ); this.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial ); this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial ); var d = light.distance; if ( d === 0.0 ) { this.lightDistance.visible = false; } else { this.lightDistance.scale.set( d, d, d ); } this.add( this.lightDistance ); */ } PointLightHelper.prototype = Object.create( Mesh.prototype ); PointLightHelper.prototype.constructor = PointLightHelper; PointLightHelper.prototype.dispose = function () { this.geometry.dispose(); this.material.dispose(); }; PointLightHelper.prototype.update = function () { if ( this.color !== undefined ) { this.material.color.set( this.color ); } else { this.material.color.copy( this.light.color ); } /* var d = this.light.distance; if ( d === 0.0 ) { this.lightDistance.visible = false; } else { this.lightDistance.visible = true; this.lightDistance.scale.set( d, d, d ); } */ }; /** * @author abelnation / http://github.com/abelnation * @author Mugen87 / http://github.com/Mugen87 * @author WestLangley / http://github.com/WestLangley * * This helper must be added as a child of the light */ function RectAreaLightHelper( light, color ) { this.type = 'RectAreaLightHelper'; this.light = light; this.color = color; // optional hardwired color for the helper var positions = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ]; var geometry = new BufferGeometry(); geometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) ); geometry.computeBoundingSphere(); var material = new LineBasicMaterial( { fog: false } ); Line.call( this, geometry, material ); // var positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ]; var geometry2 = new BufferGeometry(); geometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) ); geometry2.computeBoundingSphere(); this.add( new Mesh( geometry2, new MeshBasicMaterial( { side: BackSide, fog: false } ) ) ); this.update(); } RectAreaLightHelper.prototype = Object.create( Line.prototype ); RectAreaLightHelper.prototype.constructor = RectAreaLightHelper; RectAreaLightHelper.prototype.update = function () { this.scale.set( 0.5 * this.light.width, 0.5 * this.light.height, 1 ); if ( this.color !== undefined ) { this.material.color.set( this.color ); this.children[ 0 ].material.color.set( this.color ); } else { this.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity ); // prevent hue shift var c = this.material.color; var max = Math.max( c.r, c.g, c.b ); if ( max > 1 ) c.multiplyScalar( 1 / max ); this.children[ 0 ].material.color.copy( this.material.color ); } }; RectAreaLightHelper.prototype.dispose = function () { this.geometry.dispose(); this.material.dispose(); this.children[ 0 ].geometry.dispose(); this.children[ 0 ].material.dispose(); }; /** * @author alteredq / http://alteredqualia.com/ * @author mrdoob / http://mrdoob.com/ * @author Mugen87 / https://github.com/Mugen87 */ function HemisphereLightHelper( light, size, color ) { Object3D.call( this ); this.light = light; this.light.updateMatrixWorld(); this.matrix = light.matrixWorld; this.matrixAutoUpdate = false; this.color = color; var geometry = new OctahedronBufferGeometry( size ); geometry.rotateY( Math.PI * 0.5 ); this.material = new MeshBasicMaterial( { wireframe: true, fog: false } ); if ( this.color === undefined ) this.material.vertexColors = VertexColors; var position = geometry.getAttribute( 'position' ); var colors = new Float32Array( position.count * 3 ); geometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) ); this.add( new Mesh( geometry, this.material ) ); this.update(); } HemisphereLightHelper.prototype = Object.create( Object3D.prototype ); HemisphereLightHelper.prototype.constructor = HemisphereLightHelper; HemisphereLightHelper.prototype.dispose = function () { this.children[ 0 ].geometry.dispose(); this.children[ 0 ].material.dispose(); }; HemisphereLightHelper.prototype.update = function () { var vector = new Vector3(); var color1 = new Color(); var color2 = new Color(); return function update() { var mesh = this.children[ 0 ]; if ( this.color !== undefined ) { this.material.color.set( this.color ); } else { var colors = mesh.geometry.getAttribute( 'color' ); color1.copy( this.light.color ); color2.copy( this.light.groundColor ); for ( var i = 0, l = colors.count; i < l; i ++ ) { var color = ( i < ( l / 2 ) ) ? color1 : color2; colors.setXYZ( i, color.r, color.g, color.b ); } colors.needsUpdate = true; } mesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() ); }; }(); /** * @author mrdoob / http://mrdoob.com/ */ function GridHelper( size, divisions, color1, color2 ) { size = size || 10; divisions = divisions || 10; color1 = new Color( color1 !== undefined ? color1 : 0x444444 ); color2 = new Color( color2 !== undefined ? color2 : 0x888888 ); var center = divisions / 2; var step = size / divisions; var halfSize = size / 2; var vertices = [], colors = []; for ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) { vertices.push( - halfSize, 0, k, halfSize, 0, k ); vertices.push( k, 0, - halfSize, k, 0, halfSize ); var color = i === center ? color1 : color2; color.toArray( colors, j ); j += 3; color.toArray( colors, j ); j += 3; color.toArray( colors, j ); j += 3; color.toArray( colors, j ); j += 3; } var geometry = new BufferGeometry(); geometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) ); geometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) ); var material = new LineBasicMaterial( { vertexColors: VertexColors } ); LineSegments.call( this, geometry, material ); } GridHelper.prototype = Object.create( LineSegments.prototype ); GridHelper.prototype.constructor = GridHelper; /** * @author mrdoob / http://mrdoob.com/ * @author Mugen87 / http://github.com/Mugen87 * @author Hectate / http://www.github.com/Hectate */ function PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) { radius = radius || 10; radials = radials || 16; circles = circles || 8; divisions = divisions || 64; color1 = new Color( color1 !== undefined ? color1 : 0x444444 ); color2 = new Color( color2 !== undefined ? color2 : 0x888888 ); var vertices = []; var colors = []; var x, z; var v, i, j, r, color; // create the radials for ( i = 0; i <= radials; i ++ ) { v = ( i / radials ) * ( Math.PI * 2 ); x = Math.sin( v ) * radius; z = Math.cos( v ) * radius; vertices.push( 0, 0, 0 ); vertices.push( x, 0, z ); color = ( i & 1 ) ? color1 : color2; colors.push( color.r, color.g, color.b ); colors.push( color.r, color.g, color.b ); } // create the circles for ( i = 0; i <= circles; i ++ ) { color = ( i & 1 ) ? color1 : color2; r = radius - ( radius / circles * i ); for ( j = 0; j < divisions; j ++ ) { // first vertex v = ( j / divisions ) * ( Math.PI * 2 ); x = Math.sin( v ) * r; z = Math.cos( v ) * r; vertices.push( x, 0, z ); colors.push( color.r, color.g, color.b ); // second vertex v = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 ); x = Math.sin( v ) * r; z = Math.cos( v ) * r; vertices.push( x, 0, z ); colors.push( color.r, color.g, color.b ); } } var geometry = new BufferGeometry(); geometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) ); geometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) ); var material = new LineBasicMaterial( { vertexColors: VertexColors } ); LineSegments.call( this, geometry, material ); } PolarGridHelper.prototype = Object.create( LineSegments.prototype ); PolarGridHelper.prototype.constructor = PolarGridHelper; /** * @author Mugen87 / http://github.com/Mugen87 */ function PositionalAudioHelper( audio, range, divisionsInnerAngle, divisionsOuterAngle ) { this.audio = audio; this.range = range || 1; this.divisionsInnerAngle = divisionsInnerAngle || 16; this.divisionsOuterAngle = divisionsOuterAngle || 2; var geometry = new BufferGeometry(); var divisions = this.divisionsInnerAngle + this.divisionsOuterAngle * 2; var positions = new Float32Array( ( divisions * 3 + 3 ) * 3 ); geometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) ); var materialInnerAngle = new LineBasicMaterial( { color: 0x00ff00 } ); var materialOuterAngle = new LineBasicMaterial( { color: 0xffff00 } ); Line.call( this, geometry, [ materialOuterAngle, materialInnerAngle ] ); this.update(); } PositionalAudioHelper.prototype = Object.create( Line.prototype ); PositionalAudioHelper.prototype.constructor = PositionalAudioHelper; PositionalAudioHelper.prototype.update = function () { var audio = this.audio; var range = this.range; var divisionsInnerAngle = this.divisionsInnerAngle; var divisionsOuterAngle = this.divisionsOuterAngle; var coneInnerAngle = _Math.degToRad( audio.panner.coneInnerAngle ); var coneOuterAngle = _Math.degToRad( audio.panner.coneOuterAngle ); var halfConeInnerAngle = coneInnerAngle / 2; var halfConeOuterAngle = coneOuterAngle / 2; var start = 0; var count = 0; var i, stride; var geometry = this.geometry; var positionAttribute = geometry.attributes.position; geometry.clearGroups(); // function generateSegment( from, to, divisions, materialIndex ) { var step = ( to - from ) / divisions; positionAttribute.setXYZ( start, 0, 0, 0 ); count ++; for ( i = from; i < to; i += step ) { stride = start + count; positionAttribute.setXYZ( stride, Math.sin( i ) * range, 0, Math.cos( i ) * range ); positionAttribute.setXYZ( stride + 1, Math.sin( Math.min( i + step, to ) ) * range, 0, Math.cos( Math.min( i + step, to ) ) * range ); positionAttribute.setXYZ( stride + 2, 0, 0, 0 ); count += 3; } geometry.addGroup( start, count, materialIndex ); start += count; count = 0; } // generateSegment( - halfConeOuterAngle, - halfConeInnerAngle, divisionsOuterAngle, 0 ); generateSegment( - halfConeInnerAngle, halfConeInnerAngle, divisionsInnerAngle, 1 ); generateSegment( halfConeInnerAngle, halfConeOuterAngle, divisionsOuterAngle, 0 ); // positionAttribute.needsUpdate = true; if ( coneInnerAngle === coneOuterAngle ) this.material[ 0 ].visible = false; }; PositionalAudioHelper.prototype.dispose = function () { this.geometry.dispose(); this.material[ 0 ].dispose(); this.material[ 1 ].dispose(); }; /** * @author mrdoob / http://mrdoob.com/ * @author WestLangley / http://github.com/WestLangley */ function FaceNormalsHelper( object, size, hex, linewidth ) { // FaceNormalsHelper only supports THREE.Geometry this.object = object; this.size = ( size !== undefined ) ? size : 1; var color = ( hex !== undefined ) ? hex : 0xffff00; var width = ( linewidth !== undefined ) ? linewidth : 1; // var nNormals = 0; var objGeometry = this.object.geometry; if ( objGeometry && objGeometry.isGeometry ) { nNormals = objGeometry.faces.length; } else { console.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' ); } // var geometry = new BufferGeometry(); var positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 ); geometry.addAttribute( 'position', positions ); LineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) ); // this.matrixAutoUpdate = false; this.update(); } FaceNormalsHelper.prototype = Object.create( LineSegments.prototype ); FaceNormalsHelper.prototype.constructor = FaceNormalsHelper; FaceNormalsHelper.prototype.update = ( function () { var v1 = new Vector3(); var v2 = new Vector3(); var normalMatrix = new Matrix3(); return function update() { this.object.updateMatrixWorld( true ); normalMatrix.getNormalMatrix( this.object.matrixWorld ); var matrixWorld = this.object.matrixWorld; var position = this.geometry.attributes.position; // var objGeometry = this.object.geometry; var vertices = objGeometry.vertices; var faces = objGeometry.faces; var idx = 0; for ( var i = 0, l = faces.length; i < l; i ++ ) { var face = faces[ i ]; var normal = face.normal; v1.copy( vertices[ face.a ] ) .add( vertices[ face.b ] ) .add( vertices[ face.c ] ) .divideScalar( 3 ) .applyMatrix4( matrixWorld ); v2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 ); position.setXYZ( idx, v1.x, v1.y, v1.z ); idx = idx + 1; position.setXYZ( idx, v2.x, v2.y, v2.z ); idx = idx + 1; } position.needsUpdate = true; }; }() ); /** * @author alteredq / http://alteredqualia.com/ * @author mrdoob / http://mrdoob.com/ * @author WestLangley / http://github.com/WestLangley */ function DirectionalLightHelper( light, size, color ) { Object3D.call( this ); this.light = light; this.light.updateMatrixWorld(); this.matrix = light.matrixWorld; this.matrixAutoUpdate = false; this.color = color; if ( size === undefined ) size = 1; var geometry = new BufferGeometry(); geometry.addAttribute( 'position', new Float32BufferAttribute( [ - size, size, 0, size, size, 0, size, - size, 0, - size, - size, 0, - size, size, 0 ], 3 ) ); var material = new LineBasicMaterial( { fog: false } ); this.lightPlane = new Line( geometry, material ); this.add( this.lightPlane ); geometry = new BufferGeometry(); geometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) ); this.targetLine = new Line( geometry, material ); this.add( this.targetLine ); this.update(); } DirectionalLightHelper.prototype = Object.create( Object3D.prototype ); DirectionalLightHelper.prototype.constructor = DirectionalLightHelper; DirectionalLightHelper.prototype.dispose = function () { this.lightPlane.geometry.dispose(); this.lightPlane.material.dispose(); this.targetLine.geometry.dispose(); this.targetLine.material.dispose(); }; DirectionalLightHelper.prototype.update = function () { var v1 = new Vector3(); var v2 = new Vector3(); var v3 = new Vector3(); return function update() { v1.setFromMatrixPosition( this.light.matrixWorld ); v2.setFromMatrixPosition( this.light.target.matrixWorld ); v3.subVectors( v2, v1 ); this.lightPlane.lookAt( v2 ); if ( this.color !== undefined ) { this.lightPlane.material.color.set( this.color ); this.targetLine.material.color.set( this.color ); } else { this.lightPlane.material.color.copy( this.light.color ); this.targetLine.material.color.copy( this.light.color ); } this.targetLine.lookAt( v2 ); this.targetLine.scale.z = v3.length(); }; }(); /** * @author alteredq / http://alteredqualia.com/ * @author Mugen87 / https://github.com/Mugen87 * * - shows frustum, line of sight and up of the camera * - suitable for fast updates * - based on frustum visualization in lightgl.js shadowmap example * http://evanw.github.com/lightgl.js/tests/shadowmap.html */ function CameraHelper( camera ) { var geometry = new BufferGeometry(); var material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } ); var vertices = []; var colors = []; var pointMap = {}; // colors var colorFrustum = new Color( 0xffaa00 ); var colorCone = new Color( 0xff0000 ); var colorUp = new Color( 0x00aaff ); var colorTarget = new Color( 0xffffff ); var colorCross = new Color( 0x333333 ); // near addLine( 'n1', 'n2', colorFrustum ); addLine( 'n2', 'n4', colorFrustum ); addLine( 'n4', 'n3', colorFrustum ); addLine( 'n3', 'n1', colorFrustum ); // far addLine( 'f1', 'f2', colorFrustum ); addLine( 'f2', 'f4', colorFrustum ); addLine( 'f4', 'f3', colorFrustum ); addLine( 'f3', 'f1', colorFrustum ); // sides addLine( 'n1', 'f1', colorFrustum ); addLine( 'n2', 'f2', colorFrustum ); addLine( 'n3', 'f3', colorFrustum ); addLine( 'n4', 'f4', colorFrustum ); // cone addLine( 'p', 'n1', colorCone ); addLine( 'p', 'n2', colorCone ); addLine( 'p', 'n3', colorCone ); addLine( 'p', 'n4', colorCone ); // up addLine( 'u1', 'u2', colorUp ); addLine( 'u2', 'u3', colorUp ); addLine( 'u3', 'u1', colorUp ); // target addLine( 'c', 't', colorTarget ); addLine( 'p', 'c', colorCross ); // cross addLine( 'cn1', 'cn2', colorCross ); addLine( 'cn3', 'cn4', colorCross ); addLine( 'cf1', 'cf2', colorCross ); addLine( 'cf3', 'cf4', colorCross ); function addLine( a, b, color ) { addPoint( a, color ); addPoint( b, color ); } function addPoint( id, color ) { vertices.push( 0, 0, 0 ); colors.push( color.r, color.g, color.b ); if ( pointMap[ id ] === undefined ) { pointMap[ id ] = []; } pointMap[ id ].push( ( vertices.length / 3 ) - 1 ); } geometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) ); geometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) ); LineSegments.call( this, geometry, material ); this.camera = camera; if ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix(); this.matrix = camera.matrixWorld; this.matrixAutoUpdate = false; this.pointMap = pointMap; this.update(); } CameraHelper.prototype = Object.create( LineSegments.prototype ); CameraHelper.prototype.constructor = CameraHelper; CameraHelper.prototype.update = function () { var geometry, pointMap; var vector = new Vector3(); var camera = new Camera(); function setPoint( point, x, y, z ) { vector.set( x, y, z ).unproject( camera ); var points = pointMap[ point ]; if ( points !== undefined ) { var position = geometry.getAttribute( 'position' ); for ( var i = 0, l = points.length; i < l; i ++ ) { position.setXYZ( points[ i ], vector.x, vector.y, vector.z ); } } } return function update() { geometry = this.geometry; pointMap = this.pointMap; var w = 1, h = 1; // we need just camera projection matrix // world matrix must be identity camera.projectionMatrix.copy( this.camera.projectionMatrix ); // center / target setPoint( 'c', 0, 0, - 1 ); setPoint( 't', 0, 0, 1 ); // near setPoint( 'n1', - w, - h, - 1 ); setPoint( 'n2', w, - h, - 1 ); setPoint( 'n3', - w, h, - 1 ); setPoint( 'n4', w, h, - 1 ); // far setPoint( 'f1', - w, - h, 1 ); setPoint( 'f2', w, - h, 1 ); setPoint( 'f3', - w, h, 1 ); setPoint( 'f4', w, h, 1 ); // up setPoint( 'u1', w * 0.7, h * 1.1, - 1 ); setPoint( 'u2', - w * 0.7, h * 1.1, - 1 ); setPoint( 'u3', 0, h * 2, - 1 ); // cross setPoint( 'cf1', - w, 0, 1 ); setPoint( 'cf2', w, 0, 1 ); setPoint( 'cf3', 0, - h, 1 ); setPoint( 'cf4', 0, h, 1 ); setPoint( 'cn1', - w, 0, - 1 ); setPoint( 'cn2', w, 0, - 1 ); setPoint( 'cn3', 0, - h, - 1 ); setPoint( 'cn4', 0, h, - 1 ); geometry.getAttribute( 'position' ).needsUpdate = true; }; }(); /** * @author mrdoob / http://mrdoob.com/ * @author Mugen87 / http://github.com/Mugen87 */ function BoxHelper( object, color ) { this.object = object; if ( color === undefined ) color = 0xffff00; var indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] ); var positions = new Float32Array( 8 * 3 ); var geometry = new BufferGeometry(); geometry.setIndex( new BufferAttribute( indices, 1 ) ); geometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) ); LineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) ); this.matrixAutoUpdate = false; this.update(); } BoxHelper.prototype = Object.create( LineSegments.prototype ); BoxHelper.prototype.constructor = BoxHelper; BoxHelper.prototype.update = ( function () { var box = new Box3(); return function update( object ) { if ( object !== undefined ) { console.warn( 'THREE.BoxHelper: .update() has no longer arguments.' ); } if ( this.object !== undefined ) { box.setFromObject( this.object ); } if ( box.isEmpty() ) return; var min = box.min; var max = box.max; /* 5____4 1/___0/| | 6__|_7 2/___3/ 0: max.x, max.y, max.z 1: min.x, max.y, max.z 2: min.x, min.y, max.z 3: max.x, min.y, max.z 4: max.x, max.y, min.z 5: min.x, max.y, min.z 6: min.x, min.y, min.z 7: max.x, min.y, min.z */ var position = this.geometry.attributes.position; var array = position.array; array[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z; array[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z; array[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z; array[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z; array[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z; array[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z; array[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z; array[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z; position.needsUpdate = true; this.geometry.computeBoundingSphere(); }; } )(); BoxHelper.prototype.setFromObject = function ( object ) { this.object = object; this.update(); return this; }; BoxHelper.prototype.copy = function ( source ) { LineSegments.prototype.copy.call( this, source ); this.object = source.object; return this; }; BoxHelper.prototype.clone = function () { return new this.constructor().copy( this ); }; /** * @author WestLangley / http://github.com/WestLangley */ function Box3Helper( box, hex ) { this.type = 'Box3Helper'; this.box = box; var color = ( hex !== undefined ) ? hex : 0xffff00; var indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] ); var positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ]; var geometry = new BufferGeometry(); geometry.setIndex( new BufferAttribute( indices, 1 ) ); geometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) ); LineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) ); this.geometry.computeBoundingSphere(); } Box3Helper.prototype = Object.create( LineSegments.prototype ); Box3Helper.prototype.constructor = Box3Helper; Box3Helper.prototype.updateMatrixWorld = function ( force ) { var box = this.box; if ( box.isEmpty() ) return; box.getCenter( this.position ); box.getSize( this.scale ); this.scale.multiplyScalar( 0.5 ); Object3D.prototype.updateMatrixWorld.call( this, force ); }; /** * @author WestLangley / http://github.com/WestLangley */ function PlaneHelper( plane, size, hex ) { this.type = 'PlaneHelper'; this.plane = plane; this.size = ( size === undefined ) ? 1 : size; var color = ( hex !== undefined ) ? hex : 0xffff00; var positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ]; var geometry = new BufferGeometry(); geometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) ); geometry.computeBoundingSphere(); Line.call( this, geometry, new LineBasicMaterial( { color: color } ) ); // var positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ]; var geometry2 = new BufferGeometry(); geometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) ); geometry2.computeBoundingSphere(); this.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) ); } PlaneHelper.prototype = Object.create( Line.prototype ); PlaneHelper.prototype.constructor = PlaneHelper; PlaneHelper.prototype.updateMatrixWorld = function ( force ) { var scale = - this.plane.constant; if ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter this.scale.set( 0.5 * this.size, 0.5 * this.size, scale ); this.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here this.lookAt( this.plane.normal ); Object3D.prototype.updateMatrixWorld.call( this, force ); }; /** * @author WestLangley / http://github.com/WestLangley * @author zz85 / http://github.com/zz85 * @author bhouston / http://clara.io * * Creates an arrow for visualizing directions * * Parameters: * dir - Vector3 * origin - Vector3 * length - Number * color - color in hex value * headLength - Number * headWidth - Number */ var lineGeometry, coneGeometry; function ArrowHelper( dir, origin, length, color, headLength, headWidth ) { // dir is assumed to be normalized Object3D.call( this ); if ( dir === undefined ) dir = new Vector3( 0, 0, 1 ); if ( origin === undefined ) origin = new Vector3( 0, 0, 0 ); if ( length === undefined ) length = 1; if ( color === undefined ) color = 0xffff00; if ( headLength === undefined ) headLength = 0.2 * length; if ( headWidth === undefined ) headWidth = 0.2 * headLength; if ( lineGeometry === undefined ) { lineGeometry = new BufferGeometry(); lineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) ); coneGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 ); coneGeometry.translate( 0, - 0.5, 0 ); } this.position.copy( origin ); this.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) ); this.line.matrixAutoUpdate = false; this.add( this.line ); this.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) ); this.cone.matrixAutoUpdate = false; this.add( this.cone ); this.setDirection( dir ); this.setLength( length, headLength, headWidth ); } ArrowHelper.prototype = Object.create( Object3D.prototype ); ArrowHelper.prototype.constructor = ArrowHelper; ArrowHelper.prototype.setDirection = ( function () { var axis = new Vector3(); var radians; return function setDirection( dir ) { // dir is assumed to be normalized if ( dir.y > 0.99999 ) { this.quaternion.set( 0, 0, 0, 1 ); } else if ( dir.y < - 0.99999 ) { this.quaternion.set( 1, 0, 0, 0 ); } else { axis.set( dir.z, 0, - dir.x ).normalize(); radians = Math.acos( dir.y ); this.quaternion.setFromAxisAngle( axis, radians ); } }; }() ); ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) { if ( headLength === undefined ) headLength = 0.2 * length; if ( headWidth === undefined ) headWidth = 0.2 * headLength; this.line.scale.set( 1, Math.max( 0, length - headLength ), 1 ); this.line.updateMatrix(); this.cone.scale.set( headWidth, headLength, headWidth ); this.cone.position.y = length; this.cone.updateMatrix(); }; ArrowHelper.prototype.setColor = function ( color ) { this.line.material.color.copy( color ); this.cone.material.color.copy( color ); }; ArrowHelper.prototype.copy = function ( source ) { Object3D.prototype.copy.call( this, source, false ); this.line.copy( source.line ); this.cone.copy( source.cone ); return this; }; ArrowHelper.prototype.clone = function () { return new this.constructor().copy( this ); }; /** * @author sroucheray / http://sroucheray.org/ * @author mrdoob / http://mrdoob.com/ */ function AxesHelper( size ) { size = size || 1; var vertices = [ 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size ]; var colors = [ 1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1 ]; var geometry = new BufferGeometry(); geometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) ); geometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) ); var material = new LineBasicMaterial( { vertexColors: VertexColors } ); LineSegments.call( this, geometry, material ); } AxesHelper.prototype = Object.create( LineSegments.prototype ); AxesHelper.prototype.constructor = AxesHelper; /** * @author mrdoob / http://mrdoob.com/ */ function Face4( a, b, c, d, normal, color, materialIndex ) { console.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' ); return new Face3( a, b, c, normal, color, materialIndex ); } var LineStrip = 0; var LinePieces = 1; function MeshFaceMaterial( materials ) { console.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' ); return materials; } function MultiMaterial( materials ) { if ( materials === undefined ) materials = []; console.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' ); materials.isMultiMaterial = true; materials.materials = materials; materials.clone = function () { return materials.slice(); }; return materials; } function PointCloud( geometry, material ) { console.warn( 'THREE.PointCloud has been renamed to THREE.Points.' ); return new Points( geometry, material ); } function Particle( material ) { console.warn( 'THREE.Particle has been renamed to THREE.Sprite.' ); return new Sprite( material ); } function ParticleSystem( geometry, material ) { console.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' ); return new Points( geometry, material ); } function PointCloudMaterial( parameters ) { console.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' ); return new PointsMaterial( parameters ); } function ParticleBasicMaterial( parameters ) { console.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' ); return new PointsMaterial( parameters ); } function ParticleSystemMaterial( parameters ) { console.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' ); return new PointsMaterial( parameters ); } function Vertex( x, y, z ) { console.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' ); return new Vector3( x, y, z ); } // function DynamicBufferAttribute( array, itemSize ) { console.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' ); return new BufferAttribute( array, itemSize ).setDynamic( true ); } function Int8Attribute( array, itemSize ) { console.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' ); return new Int8BufferAttribute( array, itemSize ); } function Uint8Attribute( array, itemSize ) { console.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' ); return new Uint8BufferAttribute( array, itemSize ); } function Uint8ClampedAttribute( array, itemSize ) { console.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' ); return new Uint8ClampedBufferAttribute( array, itemSize ); } function Int16Attribute( array, itemSize ) { console.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' ); return new Int16BufferAttribute( array, itemSize ); } function Uint16Attribute( array, itemSize ) { console.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' ); return new Uint16BufferAttribute( array, itemSize ); } function Int32Attribute( array, itemSize ) { console.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' ); return new Int32BufferAttribute( array, itemSize ); } function Uint32Attribute( array, itemSize ) { console.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' ); return new Uint32BufferAttribute( array, itemSize ); } function Float32Attribute( array, itemSize ) { console.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' ); return new Float32BufferAttribute( array, itemSize ); } function Float64Attribute( array, itemSize ) { console.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' ); return new Float64BufferAttribute( array, itemSize ); } // Curve.create = function ( construct, getPoint ) { console.log( 'THREE.Curve.create() has been deprecated' ); construct.prototype = Object.create( Curve.prototype ); construct.prototype.constructor = construct; construct.prototype.getPoint = getPoint; return construct; }; // Object.assign( CurvePath.prototype, { createPointsGeometry: function ( divisions ) { console.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' ); // generate geometry from path points (for Line or Points objects) var pts = this.getPoints( divisions ); return this.createGeometry( pts ); }, createSpacedPointsGeometry: function ( divisions ) { console.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' ); // generate geometry from equidistant sampling along the path var pts = this.getSpacedPoints( divisions ); return this.createGeometry( pts ); }, createGeometry: function ( points ) { console.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' ); var geometry = new Geometry(); for ( var i = 0, l = points.length; i < l; i ++ ) { var point = points[ i ]; geometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) ); } return geometry; } } ); // Object.assign( Path.prototype, { fromPoints: function ( points ) { console.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' ); this.setFromPoints( points ); } } ); // function ClosedSplineCurve3( points ) { console.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' ); CatmullRomCurve3.call( this, points ); this.type = 'catmullrom'; this.closed = true; } ClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype ); // function SplineCurve3( points ) { console.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' ); CatmullRomCurve3.call( this, points ); this.type = 'catmullrom'; } SplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype ); // function Spline( points ) { console.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' ); CatmullRomCurve3.call( this, points ); this.type = 'catmullrom'; } Spline.prototype = Object.create( CatmullRomCurve3.prototype ); Object.assign( Spline.prototype, { initFromArray: function ( /* a */ ) { console.error( 'THREE.Spline: .initFromArray() has been removed.' ); }, getControlPointsArray: function ( /* optionalTarget */ ) { console.error( 'THREE.Spline: .getControlPointsArray() has been removed.' ); }, reparametrizeByArcLength: function ( /* samplingCoef */ ) { console.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' ); } } ); // function AxisHelper( size ) { console.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' ); return new AxesHelper( size ); } function BoundingBoxHelper( object, color ) { console.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' ); return new BoxHelper( object, color ); } function EdgesHelper( object, hex ) { console.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' ); return new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) ); } GridHelper.prototype.setColors = function () { console.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' ); }; SkeletonHelper.prototype.update = function () { console.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' ); }; function WireframeHelper( object, hex ) { console.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' ); return new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) ); } // Object.assign( Loader.prototype, { extractUrlBase: function ( url ) { console.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' ); return LoaderUtils.extractUrlBase( url ); } } ); function XHRLoader( manager ) { console.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' ); return new FileLoader( manager ); } function BinaryTextureLoader( manager ) { console.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' ); return new DataTextureLoader( manager ); } Object.assign( ObjectLoader.prototype, { setTexturePath: function ( value ) { console.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' ); return this.setResourcePath( value ); } } ); // Object.assign( Box2.prototype, { center: function ( optionalTarget ) { console.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' ); return this.getCenter( optionalTarget ); }, empty: function () { console.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' ); return this.isEmpty(); }, isIntersectionBox: function ( box ) { console.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' ); return this.intersectsBox( box ); }, size: function ( optionalTarget ) { console.warn( 'THREE.Box2: .size() has been renamed to .getSize().' ); return this.getSize( optionalTarget ); } } ); Object.assign( Box3.prototype, { center: function ( optionalTarget ) { console.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' ); return this.getCenter( optionalTarget ); }, empty: function () { console.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' ); return this.isEmpty(); }, isIntersectionBox: function ( box ) { console.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' ); return this.intersectsBox( box ); }, isIntersectionSphere: function ( sphere ) { console.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' ); return this.intersectsSphere( sphere ); }, size: function ( optionalTarget ) { console.warn( 'THREE.Box3: .size() has been renamed to .getSize().' ); return this.getSize( optionalTarget ); } } ); Line3.prototype.center = function ( optionalTarget ) { console.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' ); return this.getCenter( optionalTarget ); }; Object.assign( _Math, { random16: function () { console.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' ); return Math.random(); }, nearestPowerOfTwo: function ( value ) { console.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' ); return _Math.floorPowerOfTwo( value ); }, nextPowerOfTwo: function ( value ) { console.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' ); return _Math.ceilPowerOfTwo( value ); } } ); Object.assign( Matrix3.prototype, { flattenToArrayOffset: function ( array, offset ) { console.warn( "THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead." ); return this.toArray( array, offset ); }, multiplyVector3: function ( vector ) { console.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' ); return vector.applyMatrix3( this ); }, multiplyVector3Array: function ( /* a */ ) { console.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' ); }, applyToBuffer: function ( buffer /*, offset, length */ ) { console.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' ); return this.applyToBufferAttribute( buffer ); }, applyToVector3Array: function ( /* array, offset, length */ ) { console.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' ); } } ); Object.assign( Matrix4.prototype, { extractPosition: function ( m ) { console.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' ); return this.copyPosition( m ); }, flattenToArrayOffset: function ( array, offset ) { console.warn( "THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead." ); return this.toArray( array, offset ); }, getPosition: function () { var v1; return function getPosition() { if ( v1 === undefined ) v1 = new Vector3(); console.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' ); return v1.setFromMatrixColumn( this, 3 ); }; }(), setRotationFromQuaternion: function ( q ) { console.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' ); return this.makeRotationFromQuaternion( q ); }, multiplyToArray: function () { console.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' ); }, multiplyVector3: function ( vector ) { console.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' ); return vector.applyMatrix4( this ); }, multiplyVector4: function ( vector ) { console.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' ); return vector.applyMatrix4( this ); }, multiplyVector3Array: function ( /* a */ ) { console.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' ); }, rotateAxis: function ( v ) { console.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' ); v.transformDirection( this ); }, crossVector: function ( vector ) { console.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' ); return vector.applyMatrix4( this ); }, translate: function () { console.error( 'THREE.Matrix4: .translate() has been removed.' ); }, rotateX: function () { console.error( 'THREE.Matrix4: .rotateX() has been removed.' ); }, rotateY: function () { console.error( 'THREE.Matrix4: .rotateY() has been removed.' ); }, rotateZ: function () { console.error( 'THREE.Matrix4: .rotateZ() has been removed.' ); }, rotateByAxis: function () { console.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' ); }, applyToBuffer: function ( buffer /*, offset, length */ ) { console.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' ); return this.applyToBufferAttribute( buffer ); }, applyToVector3Array: function ( /* array, offset, length */ ) { console.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' ); }, makeFrustum: function ( left, right, bottom, top, near, far ) { console.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' ); return this.makePerspective( left, right, top, bottom, near, far ); } } ); Plane.prototype.isIntersectionLine = function ( line ) { console.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' ); return this.intersectsLine( line ); }; Quaternion.prototype.multiplyVector3 = function ( vector ) { console.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' ); return vector.applyQuaternion( this ); }; Object.assign( Ray.prototype, { isIntersectionBox: function ( box ) { console.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' ); return this.intersectsBox( box ); }, isIntersectionPlane: function ( plane ) { console.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' ); return this.intersectsPlane( plane ); }, isIntersectionSphere: function ( sphere ) { console.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' ); return this.intersectsSphere( sphere ); } } ); Object.assign( Triangle.prototype, { area: function () { console.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' ); return this.getArea(); }, barycoordFromPoint: function ( point, target ) { console.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' ); return this.getBarycoord( point, target ); }, midpoint: function ( target ) { console.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' ); return this.getMidpoint( target ); }, normal: function ( target ) { console.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' ); return this.getNormal( target ); }, plane: function ( target ) { console.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' ); return this.getPlane( target ); } } ); Object.assign( Triangle, { barycoordFromPoint: function ( point, a, b, c, target ) { console.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' ); return Triangle.getBarycoord( point, a, b, c, target ); }, normal: function ( a, b, c, target ) { console.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' ); return Triangle.getNormal( a, b, c, target ); } } ); Object.assign( Shape.prototype, { extractAllPoints: function ( divisions ) { console.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' ); return this.extractPoints( divisions ); }, extrude: function ( options ) { console.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' ); return new ExtrudeGeometry( this, options ); }, makeGeometry: function ( options ) { console.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' ); return new ShapeGeometry( this, options ); } } ); Object.assign( Vector2.prototype, { fromAttribute: function ( attribute, index, offset ) { console.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' ); return this.fromBufferAttribute( attribute, index, offset ); }, distanceToManhattan: function ( v ) { console.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' ); return this.manhattanDistanceTo( v ); }, lengthManhattan: function () { console.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' ); return this.manhattanLength(); } } ); Object.assign( Vector3.prototype, { setEulerFromRotationMatrix: function () { console.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' ); }, setEulerFromQuaternion: function () { console.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' ); }, getPositionFromMatrix: function ( m ) { console.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' ); return this.setFromMatrixPosition( m ); }, getScaleFromMatrix: function ( m ) { console.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' ); return this.setFromMatrixScale( m ); }, getColumnFromMatrix: function ( index, matrix ) { console.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' ); return this.setFromMatrixColumn( matrix, index ); }, applyProjection: function ( m ) { console.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' ); return this.applyMatrix4( m ); }, fromAttribute: function ( attribute, index, offset ) { console.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' ); return this.fromBufferAttribute( attribute, index, offset ); }, distanceToManhattan: function ( v ) { console.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' ); return this.manhattanDistanceTo( v ); }, lengthManhattan: function () { console.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' ); return this.manhattanLength(); } } ); Object.assign( Vector4.prototype, { fromAttribute: function ( attribute, index, offset ) { console.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' ); return this.fromBufferAttribute( attribute, index, offset ); }, lengthManhattan: function () { console.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' ); return this.manhattanLength(); } } ); // Object.assign( Geometry.prototype, { computeTangents: function () { console.error( 'THREE.Geometry: .computeTangents() has been removed.' ); }, computeLineDistances: function () { console.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' ); } } ); Object.assign( Object3D.prototype, { getChildByName: function ( name ) { console.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' ); return this.getObjectByName( name ); }, renderDepth: function () { console.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' ); }, translate: function ( distance, axis ) { console.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' ); return this.translateOnAxis( axis, distance ); }, getWorldRotation: function () { console.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' ); } } ); Object.defineProperties( Object3D.prototype, { eulerOrder: { get: function () { console.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' ); return this.rotation.order; }, set: function ( value ) { console.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' ); this.rotation.order = value; } }, useQuaternion: { get: function () { console.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' ); }, set: function () { console.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' ); } } } ); Object.defineProperties( LOD.prototype, { objects: { get: function () { console.warn( 'THREE.LOD: .objects has been renamed to .levels.' ); return this.levels; } } } ); Object.defineProperty( Skeleton.prototype, 'useVertexTexture', { get: function () { console.warn( 'THREE.Skeleton: useVertexTexture has been removed.' ); }, set: function () { console.warn( 'THREE.Skeleton: useVertexTexture has been removed.' ); } } ); SkinnedMesh.prototype.initBones = function () { console.error( 'THREE.SkinnedMesh: initBones() has been removed.' ); }; Object.defineProperty( Curve.prototype, '__arcLengthDivisions', { get: function () { console.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' ); return this.arcLengthDivisions; }, set: function ( value ) { console.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' ); this.arcLengthDivisions = value; } } ); // PerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) { console.warn( "THREE.PerspectiveCamera.setLens is deprecated. " + "Use .setFocalLength and .filmGauge for a photographic setup." ); if ( filmGauge !== undefined ) this.filmGauge = filmGauge; this.setFocalLength( focalLength ); }; // Object.defineProperties( Light.prototype, { onlyShadow: { set: function () { console.warn( 'THREE.Light: .onlyShadow has been removed.' ); } }, shadowCameraFov: { set: function ( value ) { console.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' ); this.shadow.camera.fov = value; } }, shadowCameraLeft: { set: function ( value ) { console.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' ); this.shadow.camera.left = value; } }, shadowCameraRight: { set: function ( value ) { console.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' ); this.shadow.camera.right = value; } }, shadowCameraTop: { set: function ( value ) { console.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' ); this.shadow.camera.top = value; } }, shadowCameraBottom: { set: function ( value ) { console.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' ); this.shadow.camera.bottom = value; } }, shadowCameraNear: { set: function ( value ) { console.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' ); this.shadow.camera.near = value; } }, shadowCameraFar: { set: function ( value ) { console.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' ); this.shadow.camera.far = value; } }, shadowCameraVisible: { set: function () { console.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' ); } }, shadowBias: { set: function ( value ) { console.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' ); this.shadow.bias = value; } }, shadowDarkness: { set: function () { console.warn( 'THREE.Light: .shadowDarkness has been removed.' ); } }, shadowMapWidth: { set: function ( value ) { console.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' ); this.shadow.mapSize.width = value; } }, shadowMapHeight: { set: function ( value ) { console.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' ); this.shadow.mapSize.height = value; } } } ); // Object.defineProperties( BufferAttribute.prototype, { length: { get: function () { console.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' ); return this.array.length; } }, copyIndicesArray: function ( /* indices */ ) { console.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' ); } } ); Object.assign( BufferGeometry.prototype, { addIndex: function ( index ) { console.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' ); this.setIndex( index ); }, addDrawCall: function ( start, count, indexOffset ) { if ( indexOffset !== undefined ) { console.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' ); } console.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' ); this.addGroup( start, count ); }, clearDrawCalls: function () { console.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' ); this.clearGroups(); }, computeTangents: function () { console.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' ); }, computeOffsets: function () { console.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' ); } } ); Object.defineProperties( BufferGeometry.prototype, { drawcalls: { get: function () { console.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' ); return this.groups; } }, offsets: { get: function () { console.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' ); return this.groups; } } } ); // Object.assign( ExtrudeBufferGeometry.prototype, { getArrays: function () { console.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' ); }, addShapeList: function () { console.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' ); }, addShape: function () { console.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' ); } } ); // Object.defineProperties( Uniform.prototype, { dynamic: { set: function () { console.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' ); } }, onUpdate: { value: function () { console.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' ); return this; } } } ); // Object.defineProperties( Material.prototype, { wrapAround: { get: function () { console.warn( 'THREE.Material: .wrapAround has been removed.' ); }, set: function () { console.warn( 'THREE.Material: .wrapAround has been removed.' ); } }, overdraw: { get: function () { console.warn( 'THREE.Material: .overdraw has been removed.' ); }, set: function () { console.warn( 'THREE.Material: .overdraw has been removed.' ); } }, wrapRGB: { get: function () { console.warn( 'THREE.Material: .wrapRGB has been removed.' ); return new Color(); } }, shading: { get: function () { console.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' ); }, set: function ( value ) { console.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' ); this.flatShading = ( value === FlatShading ); } } } ); Object.defineProperties( MeshPhongMaterial.prototype, { metal: { get: function () { console.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' ); return false; }, set: function () { console.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' ); } } } ); Object.defineProperties( ShaderMaterial.prototype, { derivatives: { get: function () { console.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' ); return this.extensions.derivatives; }, set: function ( value ) { console.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' ); this.extensions.derivatives = value; } } } ); // Object.assign( WebGLRenderer.prototype, { clearTarget: function ( renderTarget, color, depth, stencil ) { console.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' ); this.setRenderTarget( renderTarget ); this.clear( color, depth, stencil ); }, animate: function ( callback ) { console.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' ); this.setAnimationLoop( callback ); }, getCurrentRenderTarget: function () { console.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' ); return this.getRenderTarget(); }, getMaxAnisotropy: function () { console.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' ); return this.capabilities.getMaxAnisotropy(); }, getPrecision: function () { console.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' ); return this.capabilities.precision; }, resetGLState: function () { console.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' ); return this.state.reset(); }, supportsFloatTextures: function () { console.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \'OES_texture_float\' ).' ); return this.extensions.get( 'OES_texture_float' ); }, supportsHalfFloatTextures: function () { console.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \'OES_texture_half_float\' ).' ); return this.extensions.get( 'OES_texture_half_float' ); }, supportsStandardDerivatives: function () { console.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \'OES_standard_derivatives\' ).' ); return this.extensions.get( 'OES_standard_derivatives' ); }, supportsCompressedTextureS3TC: function () { console.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \'WEBGL_compressed_texture_s3tc\' ).' ); return this.extensions.get( 'WEBGL_compressed_texture_s3tc' ); }, supportsCompressedTexturePVRTC: function () { console.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \'WEBGL_compressed_texture_pvrtc\' ).' ); return this.extensions.get( 'WEBGL_compressed_texture_pvrtc' ); }, supportsBlendMinMax: function () { console.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \'EXT_blend_minmax\' ).' ); return this.extensions.get( 'EXT_blend_minmax' ); }, supportsVertexTextures: function () { console.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' ); return this.capabilities.vertexTextures; }, supportsInstancedArrays: function () { console.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \'ANGLE_instanced_arrays\' ).' ); return this.extensions.get( 'ANGLE_instanced_arrays' ); }, enableScissorTest: function ( boolean ) { console.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' ); this.setScissorTest( boolean ); }, initMaterial: function () { console.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' ); }, addPrePlugin: function () { console.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' ); }, addPostPlugin: function () { console.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' ); }, updateShadowMap: function () { console.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' ); }, setFaceCulling: function () { console.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' ); } } ); Object.defineProperties( WebGLRenderer.prototype, { shadowMapEnabled: { get: function () { return this.shadowMap.enabled; }, set: function ( value ) { console.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' ); this.shadowMap.enabled = value; } }, shadowMapType: { get: function () { return this.shadowMap.type; }, set: function ( value ) { console.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' ); this.shadowMap.type = value; } }, shadowMapCullFace: { get: function () { console.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' ); return undefined; }, set: function ( /* value */ ) { console.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' ); } } } ); Object.defineProperties( WebGLShadowMap.prototype, { cullFace: { get: function () { console.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' ); return undefined; }, set: function ( /* cullFace */ ) { console.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' ); } }, renderReverseSided: { get: function () { console.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' ); return undefined; }, set: function () { console.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' ); } }, renderSingleSided: { get: function () { console.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' ); return undefined; }, set: function () { console.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' ); } } } ); // Object.defineProperties( WebGLRenderTargetCube.prototype, { activeCubeFace: { set: function ( /* value */ ) { console.warn( 'THREE.WebGLRenderTargetCube: .activeCubeFace has been removed. It is now the second parameter of WebGLRenderer.setRenderTarget().' ); } }, activeMipMapLevel: { set: function ( /* value */ ) { console.warn( 'THREE.WebGLRenderTargetCube: .activeMipMapLevel has been removed. It is now the third parameter of WebGLRenderer.setRenderTarget().' ); } } } ); // Object.defineProperties( WebGLRenderTarget.prototype, { wrapS: { get: function () { console.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' ); return this.texture.wrapS; }, set: function ( value ) { console.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' ); this.texture.wrapS = value; } }, wrapT: { get: function () { console.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' ); return this.texture.wrapT; }, set: function ( value ) { console.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' ); this.texture.wrapT = value; } }, magFilter: { get: function () { console.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' ); return this.texture.magFilter; }, set: function ( value ) { console.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' ); this.texture.magFilter = value; } }, minFilter: { get: function () { console.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' ); return this.texture.minFilter; }, set: function ( value ) { console.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' ); this.texture.minFilter = value; } }, anisotropy: { get: function () { console.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' ); return this.texture.anisotropy; }, set: function ( value ) { console.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' ); this.texture.anisotropy = value; } }, offset: { get: function () { console.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' ); return this.texture.offset; }, set: function ( value ) { console.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' ); this.texture.offset = value; } }, repeat: { get: function () { console.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' ); return this.texture.repeat; }, set: function ( value ) { console.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' ); this.texture.repeat = value; } }, format: { get: function () { console.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' ); return this.texture.format; }, set: function ( value ) { console.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' ); this.texture.format = value; } }, type: { get: function () { console.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' ); return this.texture.type; }, set: function ( value ) { console.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' ); this.texture.type = value; } }, generateMipmaps: { get: function () { console.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' ); return this.texture.generateMipmaps; }, set: function ( value ) { console.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' ); this.texture.generateMipmaps = value; } } } ); // Object.defineProperties( WebVRManager.prototype, { standing: { set: function ( /* value */ ) { console.warn( 'THREE.WebVRManager: .standing has been removed.' ); } }, userHeight: { set: function ( /* value */ ) { console.warn( 'THREE.WebVRManager: .userHeight has been removed.' ); } } } ); // Audio.prototype.load = function ( file ) { console.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' ); var scope = this; var audioLoader = new AudioLoader(); audioLoader.load( file, function ( buffer ) { scope.setBuffer( buffer ); } ); return this; }; AudioAnalyser.prototype.getData = function () { console.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' ); return this.getFrequencyData(); }; // CubeCamera.prototype.updateCubeMap = function ( renderer, scene ) { console.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' ); return this.update( renderer, scene ); }; // var GeometryUtils = { merge: function ( geometry1, geometry2, materialIndexOffset ) { console.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' ); var matrix; if ( geometry2.isMesh ) { geometry2.matrixAutoUpdate && geometry2.updateMatrix(); matrix = geometry2.matrix; geometry2 = geometry2.geometry; } geometry1.merge( geometry2, matrix, materialIndexOffset ); }, center: function ( geometry ) { console.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' ); return geometry.center(); } }; ImageUtils.crossOrigin = undefined; ImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) { console.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' ); var loader = new TextureLoader(); loader.setCrossOrigin( this.crossOrigin ); var texture = loader.load( url, onLoad, undefined, onError ); if ( mapping ) texture.mapping = mapping; return texture; }; ImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) { console.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' ); var loader = new CubeTextureLoader(); loader.setCrossOrigin( this.crossOrigin ); var texture = loader.load( urls, onLoad, undefined, onError ); if ( mapping ) texture.mapping = mapping; return texture; }; ImageUtils.loadCompressedTexture = function () { console.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' ); }; ImageUtils.loadCompressedTextureCube = function () { console.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' ); }; // function Projector() { console.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' ); this.projectVector = function ( vector, camera ) { console.warn( 'THREE.Projector: .projectVector() is now vector.project().' ); vector.project( camera ); }; this.unprojectVector = function ( vector, camera ) { console.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' ); vector.unproject( camera ); }; this.pickingRay = function () { console.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' ); }; } // function CanvasRenderer() { console.error( 'THREE.CanvasRenderer has been removed' ); } // function JSONLoader() { console.error( 'THREE.JSONLoader has been removed.' ); } // var SceneUtils = { createMultiMaterialObject: function ( /* geometry, materials */ ) { console.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' ); }, detach: function ( /* child, parent, scene */ ) { console.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' ); }, attach: function ( /* child, scene, parent */ ) { console.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' ); } }; // function LensFlare() { console.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' ); } exports.WebGLMultisampleRenderTarget = WebGLMultisampleRenderTarget; exports.WebGLRenderTargetCube = WebGLRenderTargetCube; exports.WebGLRenderTarget = WebGLRenderTarget; exports.WebGLRenderer = WebGLRenderer; exports.ShaderLib = ShaderLib; exports.UniformsLib = UniformsLib; exports.UniformsUtils = UniformsUtils; exports.ShaderChunk = ShaderChunk; exports.FogExp2 = FogExp2; exports.Fog = Fog; exports.Scene = Scene; exports.Sprite = Sprite; exports.LOD = LOD; exports.SkinnedMesh = SkinnedMesh; exports.Skeleton = Skeleton; exports.Bone = Bone; exports.Mesh = Mesh; exports.LineSegments = LineSegments; exports.LineLoop = LineLoop; exports.Line = Line; exports.Points = Points; exports.Group = Group; exports.VideoTexture = VideoTexture; exports.DataTexture = DataTexture; exports.DataTexture2DArray = DataTexture2DArray; exports.DataTexture3D = DataTexture3D; exports.CompressedTexture = CompressedTexture; exports.CubeTexture = CubeTexture; exports.CanvasTexture = CanvasTexture; exports.DepthTexture = DepthTexture; exports.Texture = Texture; exports.AnimationLoader = AnimationLoader; exports.CompressedTextureLoader = CompressedTextureLoader; exports.DataTextureLoader = DataTextureLoader; exports.CubeTextureLoader = CubeTextureLoader; exports.TextureLoader = TextureLoader; exports.ObjectLoader = ObjectLoader; exports.MaterialLoader = MaterialLoader; exports.BufferGeometryLoader = BufferGeometryLoader; exports.DefaultLoadingManager = DefaultLoadingManager; exports.LoadingManager = LoadingManager; exports.ImageLoader = ImageLoader; exports.ImageBitmapLoader = ImageBitmapLoader; exports.FontLoader = FontLoader; exports.FileLoader = FileLoader; exports.Loader = Loader; exports.LoaderUtils = LoaderUtils; exports.Cache = Cache; exports.AudioLoader = AudioLoader; exports.SpotLightShadow = SpotLightShadow; exports.SpotLight = SpotLight; exports.PointLight = PointLight; exports.RectAreaLight = RectAreaLight; exports.HemisphereLight = HemisphereLight; exports.DirectionalLightShadow = DirectionalLightShadow; exports.DirectionalLight = DirectionalLight; exports.AmbientLight = AmbientLight; exports.LightShadow = LightShadow; exports.Light = Light; exports.StereoCamera = StereoCamera; exports.PerspectiveCamera = PerspectiveCamera; exports.OrthographicCamera = OrthographicCamera; exports.CubeCamera = CubeCamera; exports.ArrayCamera = ArrayCamera; exports.Camera = Camera; exports.AudioListener = AudioListener; exports.PositionalAudio = PositionalAudio; exports.AudioContext = AudioContext; exports.AudioAnalyser = AudioAnalyser; exports.Audio = Audio; exports.VectorKeyframeTrack = VectorKeyframeTrack; exports.StringKeyframeTrack = StringKeyframeTrack; exports.QuaternionKeyframeTrack = QuaternionKeyframeTrack; exports.NumberKeyframeTrack = NumberKeyframeTrack; exports.ColorKeyframeTrack = ColorKeyframeTrack; exports.BooleanKeyframeTrack = BooleanKeyframeTrack; exports.PropertyMixer = PropertyMixer; exports.PropertyBinding = PropertyBinding; exports.KeyframeTrack = KeyframeTrack; exports.AnimationUtils = AnimationUtils; exports.AnimationObjectGroup = AnimationObjectGroup; exports.AnimationMixer = AnimationMixer; exports.AnimationClip = AnimationClip; exports.Uniform = Uniform; exports.InstancedBufferGeometry = InstancedBufferGeometry; exports.BufferGeometry = BufferGeometry; exports.Geometry = Geometry; exports.InterleavedBufferAttribute = InterleavedBufferAttribute; exports.InstancedInterleavedBuffer = InstancedInterleavedBuffer; exports.InterleavedBuffer = InterleavedBuffer; exports.InstancedBufferAttribute = InstancedBufferAttribute; exports.Face3 = Face3; exports.Object3D = Object3D; exports.Raycaster = Raycaster; exports.Layers = Layers; exports.EventDispatcher = EventDispatcher; exports.Clock = Clock; exports.QuaternionLinearInterpolant = QuaternionLinearInterpolant; exports.LinearInterpolant = LinearInterpolant; exports.DiscreteInterpolant = DiscreteInterpolant; exports.CubicInterpolant = CubicInterpolant; exports.Interpolant = Interpolant; exports.Triangle = Triangle; exports.Math = _Math; exports.Spherical = Spherical; exports.Cylindrical = Cylindrical; exports.Plane = Plane; exports.Frustum = Frustum; exports.Sphere = Sphere; exports.Ray = Ray; exports.Matrix4 = Matrix4; exports.Matrix3 = Matrix3; exports.Box3 = Box3; exports.Box2 = Box2; exports.Line3 = Line3; exports.Euler = Euler; exports.Vector4 = Vector4; exports.Vector3 = Vector3; exports.Vector2 = Vector2; exports.Quaternion = Quaternion; exports.Color = Color; exports.ImmediateRenderObject = ImmediateRenderObject; exports.VertexNormalsHelper = VertexNormalsHelper; exports.SpotLightHelper = SpotLightHelper; exports.SkeletonHelper = SkeletonHelper; exports.PointLightHelper = PointLightHelper; exports.RectAreaLightHelper = RectAreaLightHelper; exports.HemisphereLightHelper = HemisphereLightHelper; exports.GridHelper = GridHelper; exports.PolarGridHelper = PolarGridHelper; exports.PositionalAudioHelper = PositionalAudioHelper; exports.FaceNormalsHelper = FaceNormalsHelper; exports.DirectionalLightHelper = DirectionalLightHelper; exports.CameraHelper = CameraHelper; exports.BoxHelper = BoxHelper; exports.Box3Helper = Box3Helper; exports.PlaneHelper = PlaneHelper; exports.ArrowHelper = ArrowHelper; exports.AxesHelper = AxesHelper; exports.Shape = Shape; exports.Path = Path; exports.ShapePath = ShapePath; exports.Font = Font; exports.CurvePath = CurvePath; exports.Curve = Curve; exports.ImageUtils = ImageUtils; exports.ShapeUtils = ShapeUtils; exports.WebGLUtils = WebGLUtils; exports.WireframeGeometry = WireframeGeometry; exports.ParametricGeometry = ParametricGeometry; exports.ParametricBufferGeometry = ParametricBufferGeometry; exports.TetrahedronGeometry = TetrahedronGeometry; exports.TetrahedronBufferGeometry = TetrahedronBufferGeometry; exports.OctahedronGeometry = OctahedronGeometry; exports.OctahedronBufferGeometry = OctahedronBufferGeometry; exports.IcosahedronGeometry = IcosahedronGeometry; exports.IcosahedronBufferGeometry = IcosahedronBufferGeometry; exports.DodecahedronGeometry = DodecahedronGeometry; exports.DodecahedronBufferGeometry = DodecahedronBufferGeometry; exports.PolyhedronGeometry = PolyhedronGeometry; exports.PolyhedronBufferGeometry = PolyhedronBufferGeometry; exports.TubeGeometry = TubeGeometry; exports.TubeBufferGeometry = TubeBufferGeometry; exports.TorusKnotGeometry = TorusKnotGeometry; exports.TorusKnotBufferGeometry = TorusKnotBufferGeometry; exports.TorusGeometry = TorusGeometry; exports.TorusBufferGeometry = TorusBufferGeometry; exports.TextGeometry = TextGeometry; exports.TextBufferGeometry = TextBufferGeometry; exports.SphereGeometry = SphereGeometry; exports.SphereBufferGeometry = SphereBufferGeometry; exports.RingGeometry = RingGeometry; exports.RingBufferGeometry = RingBufferGeometry; exports.PlaneGeometry = PlaneGeometry; exports.PlaneBufferGeometry = PlaneBufferGeometry; exports.LatheGeometry = LatheGeometry; exports.LatheBufferGeometry = LatheBufferGeometry; exports.ShapeGeometry = ShapeGeometry; exports.ShapeBufferGeometry = ShapeBufferGeometry; exports.ExtrudeGeometry = ExtrudeGeometry; exports.ExtrudeBufferGeometry = ExtrudeBufferGeometry; exports.EdgesGeometry = EdgesGeometry; exports.ConeGeometry = ConeGeometry; exports.ConeBufferGeometry = ConeBufferGeometry; exports.CylinderGeometry = CylinderGeometry; exports.CylinderBufferGeometry = CylinderBufferGeometry; exports.CircleGeometry = CircleGeometry; exports.CircleBufferGeometry = CircleBufferGeometry; exports.BoxGeometry = BoxGeometry; exports.CubeGeometry = BoxGeometry; exports.BoxBufferGeometry = BoxBufferGeometry; exports.ShadowMaterial = ShadowMaterial; exports.SpriteMaterial = SpriteMaterial; exports.RawShaderMaterial = RawShaderMaterial; exports.ShaderMaterial = ShaderMaterial; exports.PointsMaterial = PointsMaterial; exports.MeshPhysicalMaterial = MeshPhysicalMaterial; exports.MeshStandardMaterial = MeshStandardMaterial; exports.MeshPhongMaterial = MeshPhongMaterial; exports.MeshToonMaterial = MeshToonMaterial; exports.MeshNormalMaterial = MeshNormalMaterial; exports.MeshLambertMaterial = MeshLambertMaterial; exports.MeshDepthMaterial = MeshDepthMaterial; exports.MeshDistanceMaterial = MeshDistanceMaterial; exports.MeshBasicMaterial = MeshBasicMaterial; exports.MeshMatcapMaterial = MeshMatcapMaterial; exports.LineDashedMaterial = LineDashedMaterial; exports.LineBasicMaterial = LineBasicMaterial; exports.Material = Material; exports.Float64BufferAttribute = Float64BufferAttribute; exports.Float32BufferAttribute = Float32BufferAttribute; exports.Uint32BufferAttribute = Uint32BufferAttribute; exports.Int32BufferAttribute = Int32BufferAttribute; exports.Uint16BufferAttribute = Uint16BufferAttribute; exports.Int16BufferAttribute = Int16BufferAttribute; exports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute; exports.Uint8BufferAttribute = Uint8BufferAttribute; exports.Int8BufferAttribute = Int8BufferAttribute; exports.BufferAttribute = BufferAttribute; exports.ArcCurve = ArcCurve; exports.CatmullRomCurve3 = CatmullRomCurve3; exports.CubicBezierCurve = CubicBezierCurve; exports.CubicBezierCurve3 = CubicBezierCurve3; exports.EllipseCurve = EllipseCurve; exports.LineCurve = LineCurve; exports.LineCurve3 = LineCurve3; exports.QuadraticBezierCurve = QuadraticBezierCurve; exports.QuadraticBezierCurve3 = QuadraticBezierCurve3; exports.SplineCurve = SplineCurve; exports.REVISION = REVISION; exports.MOUSE = MOUSE; exports.CullFaceNone = CullFaceNone; exports.CullFaceBack = CullFaceBack; exports.CullFaceFront = CullFaceFront; exports.CullFaceFrontBack = CullFaceFrontBack; exports.FrontFaceDirectionCW = FrontFaceDirectionCW; exports.FrontFaceDirectionCCW = FrontFaceDirectionCCW; exports.BasicShadowMap = BasicShadowMap; exports.PCFShadowMap = PCFShadowMap; exports.PCFSoftShadowMap = PCFSoftShadowMap; exports.FrontSide = FrontSide; exports.BackSide = BackSide; exports.DoubleSide = DoubleSide; exports.FlatShading = FlatShading; exports.SmoothShading = SmoothShading; exports.NoColors = NoColors; exports.FaceColors = FaceColors; exports.VertexColors = VertexColors; exports.NoBlending = NoBlending; exports.NormalBlending = NormalBlending; exports.AdditiveBlending = AdditiveBlending; exports.SubtractiveBlending = SubtractiveBlending; exports.MultiplyBlending = MultiplyBlending; exports.CustomBlending = CustomBlending; exports.AddEquation = AddEquation; exports.SubtractEquation = SubtractEquation; exports.ReverseSubtractEquation = ReverseSubtractEquation; exports.MinEquation = MinEquation; exports.MaxEquation = MaxEquation; exports.ZeroFactor = ZeroFactor; exports.OneFactor = OneFactor; exports.SrcColorFactor = SrcColorFactor; exports.OneMinusSrcColorFactor = OneMinusSrcColorFactor; exports.SrcAlphaFactor = SrcAlphaFactor; exports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor; exports.DstAlphaFactor = DstAlphaFactor; exports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor; exports.DstColorFactor = DstColorFactor; exports.OneMinusDstColorFactor = OneMinusDstColorFactor; exports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor; exports.NeverDepth = NeverDepth; exports.AlwaysDepth = AlwaysDepth; exports.LessDepth = LessDepth; exports.LessEqualDepth = LessEqualDepth; exports.EqualDepth = EqualDepth; exports.GreaterEqualDepth = GreaterEqualDepth; exports.GreaterDepth = GreaterDepth; exports.NotEqualDepth = NotEqualDepth; exports.MultiplyOperation = MultiplyOperation; exports.MixOperation = MixOperation; exports.AddOperation = AddOperation; exports.NoToneMapping = NoToneMapping; exports.LinearToneMapping = LinearToneMapping; exports.ReinhardToneMapping = ReinhardToneMapping; exports.Uncharted2ToneMapping = Uncharted2ToneMapping; exports.CineonToneMapping = CineonToneMapping; exports.ACESFilmicToneMapping = ACESFilmicToneMapping; exports.UVMapping = UVMapping; exports.CubeReflectionMapping = CubeReflectionMapping; exports.CubeRefractionMapping = CubeRefractionMapping; exports.EquirectangularReflectionMapping = EquirectangularReflectionMapping; exports.EquirectangularRefractionMapping = EquirectangularRefractionMapping; exports.SphericalReflectionMapping = SphericalReflectionMapping; exports.CubeUVReflectionMapping = CubeUVReflectionMapping; exports.CubeUVRefractionMapping = CubeUVRefractionMapping; exports.RepeatWrapping = RepeatWrapping; exports.ClampToEdgeWrapping = ClampToEdgeWrapping; exports.MirroredRepeatWrapping = MirroredRepeatWrapping; exports.NearestFilter = NearestFilter; exports.NearestMipMapNearestFilter = NearestMipMapNearestFilter; exports.NearestMipMapLinearFilter = NearestMipMapLinearFilter; exports.LinearFilter = LinearFilter; exports.LinearMipMapNearestFilter = LinearMipMapNearestFilter; exports.LinearMipMapLinearFilter = LinearMipMapLinearFilter; exports.UnsignedByteType = UnsignedByteType; exports.ByteType = ByteType; exports.ShortType = ShortType; exports.UnsignedShortType = UnsignedShortType; exports.IntType = IntType; exports.UnsignedIntType = UnsignedIntType; exports.FloatType = FloatType; exports.HalfFloatType = HalfFloatType; exports.UnsignedShort4444Type = UnsignedShort4444Type; exports.UnsignedShort5551Type = UnsignedShort5551Type; exports.UnsignedShort565Type = UnsignedShort565Type; exports.UnsignedInt248Type = UnsignedInt248Type; exports.AlphaFormat = AlphaFormat; exports.RGBFormat = RGBFormat; exports.RGBAFormat = RGBAFormat; exports.LuminanceFormat = LuminanceFormat; exports.LuminanceAlphaFormat = LuminanceAlphaFormat; exports.RGBEFormat = RGBEFormat; exports.DepthFormat = DepthFormat; exports.DepthStencilFormat = DepthStencilFormat; exports.RedFormat = RedFormat; exports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format; exports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format; exports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format; exports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format; exports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format; exports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format; exports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format; exports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format; exports.RGB_ETC1_Format = RGB_ETC1_Format; exports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format; exports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format; exports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format; exports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format; exports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format; exports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format; exports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format; exports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format; exports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format; exports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format; exports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format; exports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format; exports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format; exports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format; exports.LoopOnce = LoopOnce; exports.LoopRepeat = LoopRepeat; exports.LoopPingPong = LoopPingPong; exports.InterpolateDiscrete = InterpolateDiscrete; exports.InterpolateLinear = InterpolateLinear; exports.InterpolateSmooth = InterpolateSmooth; exports.ZeroCurvatureEnding = ZeroCurvatureEnding; exports.ZeroSlopeEnding = ZeroSlopeEnding; exports.WrapAroundEnding = WrapAroundEnding; exports.TrianglesDrawMode = TrianglesDrawMode; exports.TriangleStripDrawMode = TriangleStripDrawMode; exports.TriangleFanDrawMode = TriangleFanDrawMode; exports.LinearEncoding = LinearEncoding; exports.sRGBEncoding = sRGBEncoding; exports.GammaEncoding = GammaEncoding; exports.RGBEEncoding = RGBEEncoding; exports.LogLuvEncoding = LogLuvEncoding; exports.RGBM7Encoding = RGBM7Encoding; exports.RGBM16Encoding = RGBM16Encoding; exports.RGBDEncoding = RGBDEncoding; exports.BasicDepthPacking = BasicDepthPacking; exports.RGBADepthPacking = RGBADepthPacking; exports.TangentSpaceNormalMap = TangentSpaceNormalMap; exports.ObjectSpaceNormalMap = ObjectSpaceNormalMap; exports.Face4 = Face4; exports.LineStrip = LineStrip; exports.LinePieces = LinePieces; exports.MeshFaceMaterial = MeshFaceMaterial; exports.MultiMaterial = MultiMaterial; exports.PointCloud = PointCloud; exports.Particle = Particle; exports.ParticleSystem = ParticleSystem; exports.PointCloudMaterial = PointCloudMaterial; exports.ParticleBasicMaterial = ParticleBasicMaterial; exports.ParticleSystemMaterial = ParticleSystemMaterial; exports.Vertex = Vertex; exports.DynamicBufferAttribute = DynamicBufferAttribute; exports.Int8Attribute = Int8Attribute; exports.Uint8Attribute = Uint8Attribute; exports.Uint8ClampedAttribute = Uint8ClampedAttribute; exports.Int16Attribute = Int16Attribute; exports.Uint16Attribute = Uint16Attribute; exports.Int32Attribute = Int32Attribute; exports.Uint32Attribute = Uint32Attribute; exports.Float32Attribute = Float32Attribute; exports.Float64Attribute = Float64Attribute; exports.ClosedSplineCurve3 = ClosedSplineCurve3; exports.SplineCurve3 = SplineCurve3; exports.Spline = Spline; exports.AxisHelper = AxisHelper; exports.BoundingBoxHelper = BoundingBoxHelper; exports.EdgesHelper = EdgesHelper; exports.WireframeHelper = WireframeHelper; exports.XHRLoader = XHRLoader; exports.BinaryTextureLoader = BinaryTextureLoader; exports.GeometryUtils = GeometryUtils; exports.Projector = Projector; exports.CanvasRenderer = CanvasRenderer; exports.JSONLoader = JSONLoader; exports.SceneUtils = SceneUtils; exports.LensFlare = LensFlare; Object.defineProperty(exports, '__esModule', { value: true }); })); ",
    "// Copyright 2016 The Draco Authors. // // Licensed under the Apache License, Version 2.0 (the "License"); // you may not use this file except in compliance with the License. // You may obtain a copy of the License at // // http://www.apache.org/licenses/LICENSE-2.0 // // Unless required by applicable law or agreed to in writing, software // distributed under the License is distributed on an "AS IS" BASIS, // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. // See the License for the specific language governing permissions and // limitations under the License. // 'use strict'; /** * @param {THREE.LoadingManager} manager */ THREE.DRACOLoader = function(manager) { this.timeLoaded = 0; this.manager = manager || THREE.DefaultLoadingManager; this.materials = null; this.verbosity = 0; this.attributeOptions = {}; this.drawMode = THREE.TrianglesDrawMode; // Native Draco attribute type to Three.JS attribute type. this.nativeAttributeMap = { 'position' : 'POSITION', 'normal' : 'NORMAL', 'color' : 'COLOR', 'uv' : 'TEX_COORD' }; }; THREE.DRACOLoader.prototype = { constructor: THREE.DRACOLoader, load: function(url, onLoad, onProgress, onError) { var scope = this; var loader = new THREE.FileLoader(scope.manager); loader.setPath(this.path); loader.setResponseType('arraybuffer'); loader.load(url, function(blob) { scope.decodeDracoFile(blob, onLoad); }, onProgress, onError); }, setPath: function(value) { this.path = value; return this; }, setVerbosity: function(level) { this.verbosity = level; return this; }, /** * Sets desired mode for generated geometry indices. * Can be either: * THREE.TrianglesDrawMode * THREE.TriangleStripDrawMode */ setDrawMode: function(drawMode) { this.drawMode = drawMode; return this; }, /** * Skips dequantization for a specific attribute. * |attributeName| is the THREE.js name of the given attribute type. * The only currently supported |attributeName| is 'position', more may be * added in future. */ setSkipDequantization: function(attributeName, skip) { var skipDequantization = true; if (typeof skip !== 'undefined') skipDequantization = skip; this.getAttributeOptions(attributeName).skipDequantization = skipDequantization; return this; }, /** * Decompresses a Draco buffer. Names of attributes (for ID and type maps) * must be one of the supported three.js types, including: position, color, * normal, uv, uv2, skinIndex, skinWeight. * * @param {ArrayBuffer} rawBuffer * @param {Function} callback * @param {Object|undefined} attributeUniqueIdMap Provides a pre-defined ID * for each attribute in the geometry to be decoded. If given, * `attributeTypeMap` is required and `nativeAttributeMap` will be * ignored. * @param {Object|undefined} attributeTypeMap Provides a predefined data * type (as a typed array constructor) for each attribute in the * geometry to be decoded. */ decodeDracoFile: function(rawBuffer, callback, attributeUniqueIdMap, attributeTypeMap) { var scope = this; THREE.DRACOLoader.getDecoderModule() .then( function ( module ) { scope.decodeDracoFileInternal( rawBuffer, module.decoder, callback, attributeUniqueIdMap, attributeTypeMap); }); }, decodeDracoFileInternal: function(rawBuffer, dracoDecoder, callback, attributeUniqueIdMap, attributeTypeMap) { /* * Here is how to use Draco Javascript decoder and get the geometry. */ var buffer = new dracoDecoder.DecoderBuffer(); buffer.Init(new Int8Array(rawBuffer), rawBuffer.byteLength); var decoder = new dracoDecoder.Decoder(); /* * Determine what type is this file: mesh or point cloud. */ var geometryType = decoder.GetEncodedGeometryType(buffer); if (geometryType == dracoDecoder.TRIANGULAR_MESH) { if (this.verbosity > 0) { console.log('Loaded a mesh.'); } } else if (geometryType == dracoDecoder.POINT_CLOUD) { if (this.verbosity > 0) { console.log('Loaded a point cloud.'); } } else { var errorMsg = 'THREE.DRACOLoader: Unknown geometry type.'; console.error(errorMsg); throw new Error(errorMsg); } callback(this.convertDracoGeometryTo3JS(dracoDecoder, decoder, geometryType, buffer, attributeUniqueIdMap, attributeTypeMap)); }, addAttributeToGeometry: function(dracoDecoder, decoder, dracoGeometry, attributeName, attributeType, attribute, geometry, geometryBuffer) { if (attribute.ptr === 0) { var errorMsg = 'THREE.DRACOLoader: No attribute ' + attributeName; console.error(errorMsg); throw new Error(errorMsg); } var numComponents = attribute.num_components(); var numPoints = dracoGeometry.num_points(); var numValues = numPoints * numComponents; var attributeData; var TypedBufferAttribute; switch ( attributeType ) { case Float32Array: attributeData = new dracoDecoder.DracoFloat32Array(); decoder.GetAttributeFloatForAllPoints( dracoGeometry, attribute, attributeData); geometryBuffer[ attributeName ] = new Float32Array( numValues ); TypedBufferAttribute = THREE.Float32BufferAttribute; break; case Int8Array: attributeData = new dracoDecoder.DracoInt8Array(); decoder.GetAttributeInt8ForAllPoints( dracoGeometry, attribute, attributeData ); geometryBuffer[ attributeName ] = new Int8Array( numValues ); TypedBufferAttribute = THREE.Int8BufferAttribute; break; case Int16Array: attributeData = new dracoDecoder.DracoInt16Array(); decoder.GetAttributeInt16ForAllPoints( dracoGeometry, attribute, attributeData); geometryBuffer[ attributeName ] = new Int16Array( numValues ); TypedBufferAttribute = THREE.Int16BufferAttribute; break; case Int32Array: attributeData = new dracoDecoder.DracoInt32Array(); decoder.GetAttributeInt32ForAllPoints( dracoGeometry, attribute, attributeData); geometryBuffer[ attributeName ] = new Int32Array( numValues ); TypedBufferAttribute = THREE.Int32BufferAttribute; break; case Uint8Array: attributeData = new dracoDecoder.DracoUInt8Array(); decoder.GetAttributeUInt8ForAllPoints( dracoGeometry, attribute, attributeData); geometryBuffer[ attributeName ] = new Uint8Array( numValues ); TypedBufferAttribute = THREE.Uint8BufferAttribute; break; case Uint16Array: attributeData = new dracoDecoder.DracoUInt16Array(); decoder.GetAttributeUInt16ForAllPoints( dracoGeometry, attribute, attributeData); geometryBuffer[ attributeName ] = new Uint16Array( numValues ); TypedBufferAttribute = THREE.Uint16BufferAttribute; break; case Uint32Array: attributeData = new dracoDecoder.DracoUInt32Array(); decoder.GetAttributeUInt32ForAllPoints( dracoGeometry, attribute, attributeData); geometryBuffer[ attributeName ] = new Uint32Array( numValues ); TypedBufferAttribute = THREE.Uint32BufferAttribute; break; default: var errorMsg = 'THREE.DRACOLoader: Unexpected attribute type.'; console.error( errorMsg ); throw new Error( errorMsg ); } // Copy data from decoder. for (var i = 0; i < numValues; i++) { geometryBuffer[attributeName][i] = attributeData.GetValue(i); } // Add attribute to THREEJS geometry for rendering. geometry.addAttribute(attributeName, new TypedBufferAttribute(geometryBuffer[attributeName], numComponents)); dracoDecoder.destroy(attributeData); }, convertDracoGeometryTo3JS: function(dracoDecoder, decoder, geometryType, buffer, attributeUniqueIdMap, attributeTypeMap) { // TODO: Should not assume native Draco attribute IDs apply. if (this.getAttributeOptions('position').skipDequantization === true) { decoder.SkipAttributeTransform(dracoDecoder.POSITION); } var dracoGeometry; var decodingStatus; var start_time = performance.now(); if (geometryType === dracoDecoder.TRIANGULAR_MESH) { dracoGeometry = new dracoDecoder.Mesh(); decodingStatus = decoder.DecodeBufferToMesh(buffer, dracoGeometry); } else { dracoGeometry = new dracoDecoder.PointCloud(); decodingStatus = decoder.DecodeBufferToPointCloud(buffer, dracoGeometry); } if (!decodingStatus.ok() || dracoGeometry.ptr == 0) { var errorMsg = 'THREE.DRACOLoader: Decoding failed: '; errorMsg += decodingStatus.error_msg(); console.error(errorMsg); dracoDecoder.destroy(decoder); dracoDecoder.destroy(dracoGeometry); throw new Error(errorMsg); } var decode_end = performance.now(); dracoDecoder.destroy(buffer); /* * Example on how to retrieve mesh and attributes. */ var numFaces; if (geometryType == dracoDecoder.TRIANGULAR_MESH) { numFaces = dracoGeometry.num_faces(); if (this.verbosity > 0) { console.log('Number of faces loaded: ' + numFaces.toString()); } } else { numFaces = 0; } var numPoints = dracoGeometry.num_points(); var numAttributes = dracoGeometry.num_attributes(); if (this.verbosity > 0) { console.log('Number of points loaded: ' + numPoints.toString()); console.log('Number of attributes loaded: ' + numAttributes.toString()); } // Verify if there is position attribute. // TODO: Should not assume native Draco attribute IDs apply. var posAttId = decoder.GetAttributeId(dracoGeometry, dracoDecoder.POSITION); if (posAttId == -1) { var errorMsg = 'THREE.DRACOLoader: No position attribute found.'; console.error(errorMsg); dracoDecoder.destroy(decoder); dracoDecoder.destroy(dracoGeometry); throw new Error(errorMsg); } var posAttribute = decoder.GetAttribute(dracoGeometry, posAttId); // Structure for converting to THREEJS geometry later. var geometryBuffer = {}; // Import data to Three JS geometry. var geometry = new THREE.BufferGeometry(); // Do not use both the native attribute map and a provided (e.g. glTF) map. if ( attributeUniqueIdMap ) { // Add attributes of user specified unique id. E.g. GLTF models. for (var attributeName in attributeUniqueIdMap) { var attributeType = attributeTypeMap[attributeName]; var attributeId = attributeUniqueIdMap[attributeName]; var attribute = decoder.GetAttributeByUniqueId(dracoGeometry, attributeId); this.addAttributeToGeometry(dracoDecoder, decoder, dracoGeometry, attributeName, attributeType, attribute, geometry, geometryBuffer); } } else { // Add native Draco attribute type to geometry. for (var attributeName in this.nativeAttributeMap) { var attId = decoder.GetAttributeId(dracoGeometry, dracoDecoder[this.nativeAttributeMap[attributeName]]); if (attId !== -1) { if (this.verbosity > 0) { console.log('Loaded ' + attributeName + ' attribute.'); } var attribute = decoder.GetAttribute(dracoGeometry, attId); this.addAttributeToGeometry(dracoDecoder, decoder, dracoGeometry, attributeName, Float32Array, attribute, geometry, geometryBuffer); } } } // For mesh, we need to generate the faces. if (geometryType == dracoDecoder.TRIANGULAR_MESH) { if (this.drawMode === THREE.TriangleStripDrawMode) { var stripsArray = new dracoDecoder.DracoInt32Array(); var numStrips = decoder.GetTriangleStripsFromMesh( dracoGeometry, stripsArray); geometryBuffer.indices = new Uint32Array(stripsArray.size()); for (var i = 0; i < stripsArray.size(); ++i) { geometryBuffer.indices[i] = stripsArray.GetValue(i); } dracoDecoder.destroy(stripsArray); } else { var numIndices = numFaces * 3; geometryBuffer.indices = new Uint32Array(numIndices); var ia = new dracoDecoder.DracoInt32Array(); for (var i = 0; i < numFaces; ++i) { decoder.GetFaceFromMesh(dracoGeometry, i, ia); var index = i * 3; geometryBuffer.indices[index] = ia.GetValue(0); geometryBuffer.indices[index + 1] = ia.GetValue(1); geometryBuffer.indices[index + 2] = ia.GetValue(2); } dracoDecoder.destroy(ia); } } geometry.drawMode = this.drawMode; if (geometryType == dracoDecoder.TRIANGULAR_MESH) { geometry.setIndex(new(geometryBuffer.indices.length > 65535 ? THREE.Uint32BufferAttribute : THREE.Uint16BufferAttribute) (geometryBuffer.indices, 1)); } // TODO: Should not assume native Draco attribute IDs apply. // TODO: Can other attribute types be quantized? var posTransform = new dracoDecoder.AttributeQuantizationTransform(); if (posTransform.InitFromAttribute(posAttribute)) { // Quantized attribute. Store the quantization parameters into the // THREE.js attribute. geometry.attributes['position'].isQuantized = true; geometry.attributes['position'].maxRange = posTransform.range(); geometry.attributes['position'].numQuantizationBits = posTransform.quantization_bits(); geometry.attributes['position'].minValues = new Float32Array(3); for (var i = 0; i < 3; ++i) { geometry.attributes['position'].minValues[i] = posTransform.min_value(i); } } dracoDecoder.destroy(posTransform); dracoDecoder.destroy(decoder); dracoDecoder.destroy(dracoGeometry); this.decode_time = decode_end - start_time; this.import_time = performance.now() - decode_end; if (this.verbosity > 0) { console.log('Decode time: ' + this.decode_time); console.log('Import time: ' + this.import_time); } return geometry; }, isVersionSupported: function(version, callback) { THREE.DRACOLoader.getDecoderModule() .then( function ( module ) { callback( module.decoder.isVersionSupported( version ) ); }); }, getAttributeOptions: function(attributeName) { if (typeof this.attributeOptions[attributeName] === 'undefined') this.attributeOptions[attributeName] = {}; return this.attributeOptions[attributeName]; } }; THREE.DRACOLoader.decoderPath = './'; THREE.DRACOLoader.decoderConfig = {}; THREE.DRACOLoader.decoderModulePromise = null; /** * Sets the base path for decoder source files. * @param {string} path */ THREE.DRACOLoader.setDecoderPath = function ( path ) { THREE.DRACOLoader.decoderPath = path; }; /** * Sets decoder configuration and releases singleton decoder module. Module * will be recreated with the next decoding call. * @param {Object} config */ THREE.DRACOLoader.setDecoderConfig = function ( config ) { var wasmBinary = THREE.DRACOLoader.decoderConfig.wasmBinary; THREE.DRACOLoader.decoderConfig = config || {}; THREE.DRACOLoader.releaseDecoderModule(); // Reuse WASM binary. if ( wasmBinary ) THREE.DRACOLoader.decoderConfig.wasmBinary = wasmBinary; }; /** * Releases the singleton DracoDecoderModule instance. Module will be recreated * with the next decoding call. */ THREE.DRACOLoader.releaseDecoderModule = function () { THREE.DRACOLoader.decoderModulePromise = null; }; /** * Gets WebAssembly or asm.js singleton instance of DracoDecoderModule * after testing for browser support. Returns Promise that resolves when * module is available. * @return {Promise<{decoder: DracoDecoderModule}>} */ THREE.DRACOLoader.getDecoderModule = function () { var scope = this; var path = THREE.DRACOLoader.decoderPath; var config = THREE.DRACOLoader.decoderConfig; var promise = THREE.DRACOLoader.decoderModulePromise; if ( promise ) return promise; // Load source files. if ( typeof DracoDecoderModule !== 'undefined' ) { // Loaded externally. promise = Promise.resolve(); } else if ( typeof WebAssembly !== 'object' || config.type === 'js' ) { // Load with asm.js. promise = THREE.DRACOLoader._loadScript( path + 'draco_decoder.js' ); } else { // Load with WebAssembly. config.wasmBinaryFile = path + 'draco_decoder.wasm'; promise = THREE.DRACOLoader._loadScript( path + 'draco_wasm_wrapper.js' ) .then( function () { return THREE.DRACOLoader._loadArrayBuffer( config.wasmBinaryFile ); } ) .then( function ( wasmBinary ) { config.wasmBinary = wasmBinary; } ); } // Wait for source files, then create and return a decoder. promise = promise.then( function () { return new Promise( function ( resolve ) { config.onModuleLoaded = function ( decoder ) { scope.timeLoaded = performance.now(); // Module is Promise-like. Wrap before resolving to avoid loop. resolve( { decoder: decoder } ); }; DracoDecoderModule( config ); } ); } ); THREE.DRACOLoader.decoderModulePromise = promise; return promise; }; /** * @param {string} src * @return {Promise} */ THREE.DRACOLoader._loadScript = function ( src ) { var prevScript = document.getElementById( 'decoder_script' ); if ( prevScript !== null ) { prevScript.parentNode.removeChild( prevScript ); } var head = document.getElementsByTagName( 'head' )[ 0 ]; var script = document.createElement( 'script' ); script.id = 'decoder_script'; script.type = 'text/javascript'; script.src = src; return new Promise( function ( resolve ) { script.onload = resolve; head.appendChild( script ); }); }; /** * @param {string} src * @return {Promise} */ THREE.DRACOLoader._loadArrayBuffer = function ( src ) { var loader = new THREE.FileLoader(); loader.setResponseType( 'arraybuffer' ); return new Promise( function( resolve, reject ) { loader.load( src, resolve, undefined, reject ); }); }; ",
    "/** * @author Rich Tibbett / https://github.com/richtr * @author mrdoob / http://mrdoob.com/ * @author Tony Parisi / http://www.tonyparisi.com/ * @author Takahiro / https://github.com/takahirox * @author Don McCurdy / https://www.donmccurdy.com */ THREE.GLTFLoader = ( function () { function GLTFLoader( manager ) { this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager; this.dracoLoader = null; } GLTFLoader.prototype = { constructor: GLTFLoader, crossOrigin: 'anonymous', load: function ( url, onLoad, onProgress, onError ) { var scope = this; var resourcePath; if ( this.resourcePath !== undefined ) { resourcePath = this.resourcePath; } else if ( this.path !== undefined ) { resourcePath = this.path; } else { resourcePath = THREE.LoaderUtils.extractUrlBase( url ); } // Tells the LoadingManager to track an extra item, which resolves after // the model is fully loaded. This means the count of items loaded will // be incorrect, but ensures manager.onLoad() does not fire early. scope.manager.itemStart( url ); var _onError = function ( e ) { if ( onError ) { onError( e ); } else { console.error( e ); } scope.manager.itemError( url ); scope.manager.itemEnd( url ); }; var loader = new THREE.FileLoader( scope.manager ); loader.setPath( this.path ); loader.setResponseType( 'arraybuffer' ); loader.load( url, function ( data ) { try { scope.parse( data, resourcePath, function ( gltf ) { onLoad( gltf ); scope.manager.itemEnd( url ); }, _onError ); } catch ( e ) { _onError( e ); } }, onProgress, _onError ); }, setCrossOrigin: function ( value ) { this.crossOrigin = value; return this; }, setPath: function ( value ) { this.path = value; return this; }, setResourcePath: function ( value ) { this.resourcePath = value; return this; }, setDRACOLoader: function ( dracoLoader ) { this.dracoLoader = dracoLoader; return this; }, parse: function ( data, path, onLoad, onError ) { var content; var extensions = {}; if ( typeof data === 'string' ) { content = data; } else { var magic = THREE.LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) ); if ( magic === BINARY_EXTENSION_HEADER_MAGIC ) { try { extensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data ); } catch ( error ) { if ( onError ) onError( error ); return; } content = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content; } else { content = THREE.LoaderUtils.decodeText( new Uint8Array( data ) ); } } var json = JSON.parse( content ); if ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) { if ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead.' ) ); return; } if ( json.extensionsUsed ) { for ( var i = 0; i < json.extensionsUsed.length; ++ i ) { var extensionName = json.extensionsUsed[ i ]; var extensionsRequired = json.extensionsRequired || []; switch ( extensionName ) { case EXTENSIONS.KHR_LIGHTS_PUNCTUAL: extensions[ extensionName ] = new GLTFLightsExtension( json ); break; case EXTENSIONS.KHR_MATERIALS_UNLIT: extensions[ extensionName ] = new GLTFMaterialsUnlitExtension( json ); break; case EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: extensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension( json ); break; case EXTENSIONS.KHR_DRACO_MESH_COMPRESSION: extensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader ); break; case EXTENSIONS.MSFT_TEXTURE_DDS: extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] = new GLTFTextureDDSExtension(); break; case EXTENSIONS.KHR_TEXTURE_TRANSFORM: extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] = new GLTFTextureTransformExtension( json ); break; default: if ( extensionsRequired.indexOf( extensionName ) >= 0 ) { console.warn( 'THREE.GLTFLoader: Unknown extension "' + extensionName + '".' ); } } } } var parser = new GLTFParser( json, extensions, { path: path || this.resourcePath || '', crossOrigin: this.crossOrigin, manager: this.manager } ); parser.parse( onLoad, onError ); } }; /* GLTFREGISTRY */ function GLTFRegistry() { var objects = {}; return { get: function ( key ) { return objects[ key ]; }, add: function ( key, object ) { objects[ key ] = object; }, remove: function ( key ) { delete objects[ key ]; }, removeAll: function () { objects = {}; } }; } /*********************************/ /********** EXTENSIONS ***********/ /*********************************/ var EXTENSIONS = { KHR_BINARY_GLTF: 'KHR_binary_glTF', KHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression', KHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual', KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness', KHR_MATERIALS_UNLIT: 'KHR_materials_unlit', KHR_TEXTURE_TRANSFORM: 'KHR_texture_transform', MSFT_TEXTURE_DDS: 'MSFT_texture_dds' }; /** * DDS Texture Extension * * Specification: * https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds * */ function GLTFTextureDDSExtension() { if ( ! THREE.DDSLoader ) { throw new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader' ); } this.name = EXTENSIONS.MSFT_TEXTURE_DDS; this.ddsLoader = new THREE.DDSLoader(); } /** * Lights Extension * * Specification: PENDING */ function GLTFLightsExtension( json ) { this.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL; var extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {}; this.lightDefs = extension.lights || []; } GLTFLightsExtension.prototype.loadLight = function ( lightIndex ) { var lightDef = this.lightDefs[ lightIndex ]; var lightNode; var color = new THREE.Color( 0xffffff ); if ( lightDef.color !== undefined ) color.fromArray( lightDef.color ); var range = lightDef.range !== undefined ? lightDef.range : 0; switch ( lightDef.type ) { case 'directional': lightNode = new THREE.DirectionalLight( color ); lightNode.target.position.set( 0, 0, - 1 ); lightNode.add( lightNode.target ); break; case 'point': lightNode = new THREE.PointLight( color ); lightNode.distance = range; break; case 'spot': lightNode = new THREE.SpotLight( color ); lightNode.distance = range; // Handle spotlight properties. lightDef.spot = lightDef.spot || {}; lightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0; lightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0; lightNode.angle = lightDef.spot.outerConeAngle; lightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle; lightNode.target.position.set( 0, 0, - 1 ); lightNode.add( lightNode.target ); break; default: throw new Error( 'THREE.GLTFLoader: Unexpected light type, "' + lightDef.type + '".' ); } // Some lights (e.g. spot) default to a position other than the origin. Reset the position // here, because node-level parsing will only override position if explicitly specified. lightNode.position.set( 0, 0, 0 ); lightNode.decay = 2; if ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity; lightNode.name = lightDef.name || ( 'light_' + lightIndex ); return Promise.resolve( lightNode ); }; /** * Unlit Materials Extension (pending) * * PR: https://github.com/KhronosGroup/glTF/pull/1163 */ function GLTFMaterialsUnlitExtension( json ) { this.name = EXTENSIONS.KHR_MATERIALS_UNLIT; } GLTFMaterialsUnlitExtension.prototype.getMaterialType = function ( material ) { return THREE.MeshBasicMaterial; }; GLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, material, parser ) { var pending = []; materialParams.color = new THREE.Color( 1.0, 1.0, 1.0 ); materialParams.opacity = 1.0; var metallicRoughness = material.pbrMetallicRoughness; if ( metallicRoughness ) { if ( Array.isArray( metallicRoughness.baseColorFactor ) ) { var array = metallicRoughness.baseColorFactor; materialParams.color.fromArray( array ); materialParams.opacity = array[ 3 ]; } if ( metallicRoughness.baseColorTexture !== undefined ) { pending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) ); } } return Promise.all( pending ); }; /* BINARY EXTENSION */ var BINARY_EXTENSION_BUFFER_NAME = 'binary_glTF'; var BINARY_EXTENSION_HEADER_MAGIC = 'glTF'; var BINARY_EXTENSION_HEADER_LENGTH = 12; var BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 }; function GLTFBinaryExtension( data ) { this.name = EXTENSIONS.KHR_BINARY_GLTF; this.content = null; this.body = null; var headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH ); this.header = { magic: THREE.LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ), version: headerView.getUint32( 4, true ), length: headerView.getUint32( 8, true ) }; if ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) { throw new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' ); } else if ( this.header.version < 2.0 ) { throw new Error( 'THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.' ); } var chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH ); var chunkIndex = 0; while ( chunkIndex < chunkView.byteLength ) { var chunkLength = chunkView.getUint32( chunkIndex, true ); chunkIndex += 4; var chunkType = chunkView.getUint32( chunkIndex, true ); chunkIndex += 4; if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) { var contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength ); this.content = THREE.LoaderUtils.decodeText( contentArray ); } else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) { var byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex; this.body = data.slice( byteOffset, byteOffset + chunkLength ); } // Clients must ignore chunks with unknown types. chunkIndex += chunkLength; } if ( this.content === null ) { throw new Error( 'THREE.GLTFLoader: JSON content not found.' ); } } /** * DRACO Mesh Compression Extension * * Specification: https://github.com/KhronosGroup/glTF/pull/874 */ function GLTFDracoMeshCompressionExtension( json, dracoLoader ) { if ( ! dracoLoader ) { throw new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' ); } this.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION; this.json = json; this.dracoLoader = dracoLoader; } GLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) { var json = this.json; var dracoLoader = this.dracoLoader; var bufferViewIndex = primitive.extensions[ this.name ].bufferView; var gltfAttributeMap = primitive.extensions[ this.name ].attributes; var threeAttributeMap = {}; var attributeNormalizedMap = {}; var attributeTypeMap = {}; for ( var attributeName in gltfAttributeMap ) { var threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase(); threeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ]; } for ( attributeName in primitive.attributes ) { var threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase(); if ( gltfAttributeMap[ attributeName ] !== undefined ) { var accessorDef = json.accessors[ primitive.attributes[ attributeName ] ]; var componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ]; attributeTypeMap[ threeAttributeName ] = componentType; attributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true; } } return parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) { return new Promise( function ( resolve ) { dracoLoader.decodeDracoFile( bufferView, function ( geometry ) { for ( var attributeName in geometry.attributes ) { var attribute = geometry.attributes[ attributeName ]; var normalized = attributeNormalizedMap[ attributeName ]; if ( normalized !== undefined ) attribute.normalized = normalized; } resolve( geometry ); }, threeAttributeMap, attributeTypeMap ); } ); } ); }; /** * Texture Transform Extension * * Specification: */ function GLTFTextureTransformExtension( json ) { this.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM; } GLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) { texture = texture.clone(); if ( transform.offset !== undefined ) { texture.offset.fromArray( transform.offset ); } if ( transform.rotation !== undefined ) { texture.rotation = transform.rotation; } if ( transform.scale !== undefined ) { texture.repeat.fromArray( transform.scale ); } if ( transform.texCoord !== undefined ) { console.warn( 'THREE.GLTFLoader: Custom UV sets in "' + this.name + '" extension not yet supported.' ); } texture.needsUpdate = true; return texture; }; /** * Specular-Glossiness Extension * * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness */ function GLTFMaterialsPbrSpecularGlossinessExtension() { return { name: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS, specularGlossinessParams: [ 'color', 'map', 'lightMap', 'lightMapIntensity', 'aoMap', 'aoMapIntensity', 'emissive', 'emissiveIntensity', 'emissiveMap', 'bumpMap', 'bumpScale', 'normalMap', 'displacementMap', 'displacementScale', 'displacementBias', 'specularMap', 'specular', 'glossinessMap', 'glossiness', 'alphaMap', 'envMap', 'envMapIntensity', 'refractionRatio', ], getMaterialType: function () { return THREE.ShaderMaterial; }, extendParams: function ( params, material, parser ) { var pbrSpecularGlossiness = material.extensions[ this.name ]; var shader = THREE.ShaderLib[ 'standard' ]; var uniforms = THREE.UniformsUtils.clone( shader.uniforms ); var specularMapParsFragmentChunk = [ '#ifdef USE_SPECULARMAP', ' uniform sampler2D specularMap;', '#endif' ].join( '\n' ); var glossinessMapParsFragmentChunk = [ '#ifdef USE_GLOSSINESSMAP', ' uniform sampler2D glossinessMap;', '#endif' ].join( '\n' ); var specularMapFragmentChunk = [ 'vec3 specularFactor = specular;', '#ifdef USE_SPECULARMAP', ' vec4 texelSpecular = texture2D( specularMap, vUv );', ' texelSpecular = sRGBToLinear( texelSpecular );', ' // reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture', ' specularFactor *= texelSpecular.rgb;', '#endif' ].join( '\n' ); var glossinessMapFragmentChunk = [ 'float glossinessFactor = glossiness;', '#ifdef USE_GLOSSINESSMAP', ' vec4 texelGlossiness = texture2D( glossinessMap, vUv );', ' // reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture', ' glossinessFactor *= texelGlossiness.a;', '#endif' ].join( '\n' ); var lightPhysicalFragmentChunk = [ 'PhysicalMaterial material;', 'material.diffuseColor = diffuseColor.rgb;', 'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );', 'material.specularColor = specularFactor.rgb;', ].join( '\n' ); var fragmentShader = shader.fragmentShader .replace( 'uniform float roughness;', 'uniform vec3 specular;' ) .replace( 'uniform float metalness;', 'uniform float glossiness;' ) .replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk ) .replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk ) .replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk ) .replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk ) .replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk ); delete uniforms.roughness; delete uniforms.metalness; delete uniforms.roughnessMap; delete uniforms.metalnessMap; uniforms.specular = { value: new THREE.Color().setHex( 0x111111 ) }; uniforms.glossiness = { value: 0.5 }; uniforms.specularMap = { value: null }; uniforms.glossinessMap = { value: null }; params.vertexShader = shader.vertexShader; params.fragmentShader = fragmentShader; params.uniforms = uniforms; params.defines = { 'STANDARD': '' }; params.color = new THREE.Color( 1.0, 1.0, 1.0 ); params.opacity = 1.0; var pending = []; if ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) { var array = pbrSpecularGlossiness.diffuseFactor; params.color.fromArray( array ); params.opacity = array[ 3 ]; } if ( pbrSpecularGlossiness.diffuseTexture !== undefined ) { pending.push( parser.assignTexture( params, 'map', pbrSpecularGlossiness.diffuseTexture ) ); } params.emissive = new THREE.Color( 0.0, 0.0, 0.0 ); params.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0; params.specular = new THREE.Color( 1.0, 1.0, 1.0 ); if ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) { params.specular.fromArray( pbrSpecularGlossiness.specularFactor ); } if ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) { var specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture; pending.push( parser.assignTexture( params, 'glossinessMap', specGlossMapDef ) ); pending.push( parser.assignTexture( params, 'specularMap', specGlossMapDef ) ); } return Promise.all( pending ); }, createMaterial: function ( params ) { // setup material properties based on MeshStandardMaterial for Specular-Glossiness var material = new THREE.ShaderMaterial( { defines: params.defines, vertexShader: params.vertexShader, fragmentShader: params.fragmentShader, uniforms: params.uniforms, fog: true, lights: true, opacity: params.opacity, transparent: params.transparent } ); material.isGLTFSpecularGlossinessMaterial = true; material.color = params.color; material.map = params.map === undefined ? null : params.map; material.lightMap = null; material.lightMapIntensity = 1.0; material.aoMap = params.aoMap === undefined ? null : params.aoMap; material.aoMapIntensity = 1.0; material.emissive = params.emissive; material.emissiveIntensity = 1.0; material.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap; material.bumpMap = params.bumpMap === undefined ? null : params.bumpMap; material.bumpScale = 1; material.normalMap = params.normalMap === undefined ? null : params.normalMap; if ( params.normalScale ) material.normalScale = params.normalScale; material.displacementMap = null; material.displacementScale = 1; material.displacementBias = 0; material.specularMap = params.specularMap === undefined ? null : params.specularMap; material.specular = params.specular; material.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap; material.glossiness = params.glossiness; material.alphaMap = null; material.envMap = params.envMap === undefined ? null : params.envMap; material.envMapIntensity = 1.0; material.refractionRatio = 0.98; material.extensions.derivatives = true; return material; }, /** * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can * copy only properties it knows about or inherits, and misses many properties that would * normally be defined by MeshStandardMaterial. * * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of * loading a glTF model, but cloning later (e.g. by the user) would require these changes * AND also updating `.onBeforeRender` on the parent mesh. * * @param {THREE.ShaderMaterial} source * @return {THREE.ShaderMaterial} */ cloneMaterial: function ( source ) { var target = source.clone(); target.isGLTFSpecularGlossinessMaterial = true; var params = this.specularGlossinessParams; for ( var i = 0, il = params.length; i < il; i ++ ) { target[ params[ i ] ] = source[ params[ i ] ]; } return target; }, // Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer. refreshUniforms: function ( renderer, scene, camera, geometry, material, group ) { if ( material.isGLTFSpecularGlossinessMaterial !== true ) { return; } var uniforms = material.uniforms; var defines = material.defines; uniforms.opacity.value = material.opacity; uniforms.diffuse.value.copy( material.color ); uniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity ); uniforms.map.value = material.map; uniforms.specularMap.value = material.specularMap; uniforms.alphaMap.value = material.alphaMap; uniforms.lightMap.value = material.lightMap; uniforms.lightMapIntensity.value = material.lightMapIntensity; uniforms.aoMap.value = material.aoMap; uniforms.aoMapIntensity.value = material.aoMapIntensity; // uv repeat and offset setting priorities // 1. color map // 2. specular map // 3. normal map // 4. bump map // 5. alpha map // 6. emissive map var uvScaleMap; if ( material.map ) { uvScaleMap = material.map; } else if ( material.specularMap ) { uvScaleMap = material.specularMap; } else if ( material.displacementMap ) { uvScaleMap = material.displacementMap; } else if ( material.normalMap ) { uvScaleMap = material.normalMap; } else if ( material.bumpMap ) { uvScaleMap = material.bumpMap; } else if ( material.glossinessMap ) { uvScaleMap = material.glossinessMap; } else if ( material.alphaMap ) { uvScaleMap = material.alphaMap; } else if ( material.emissiveMap ) { uvScaleMap = material.emissiveMap; } if ( uvScaleMap !== undefined ) { // backwards compatibility if ( uvScaleMap.isWebGLRenderTarget ) { uvScaleMap = uvScaleMap.texture; } if ( uvScaleMap.matrixAutoUpdate === true ) { uvScaleMap.updateMatrix(); } uniforms.uvTransform.value.copy( uvScaleMap.matrix ); } if ( material.envMap ) { uniforms.envMap.value = material.envMap; uniforms.envMapIntensity.value = material.envMapIntensity; // don't flip CubeTexture envMaps, flip everything else: // WebGLRenderTargetCube will be flipped for backwards compatibility // WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture // this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future uniforms.flipEnvMap.value = material.envMap.isCubeTexture ? - 1 : 1; uniforms.reflectivity.value = material.reflectivity; uniforms.refractionRatio.value = material.refractionRatio; uniforms.maxMipLevel.value = renderer.properties.get( material.envMap ).__maxMipLevel; } uniforms.specular.value.copy( material.specular ); uniforms.glossiness.value = material.glossiness; uniforms.glossinessMap.value = material.glossinessMap; uniforms.emissiveMap.value = material.emissiveMap; uniforms.bumpMap.value = material.bumpMap; uniforms.normalMap.value = material.normalMap; uniforms.displacementMap.value = material.displacementMap; uniforms.displacementScale.value = material.displacementScale; uniforms.displacementBias.value = material.displacementBias; if ( uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined ) { defines.USE_GLOSSINESSMAP = ''; // set USE_ROUGHNESSMAP to enable vUv defines.USE_ROUGHNESSMAP = ''; } if ( uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined ) { delete defines.USE_GLOSSINESSMAP; delete defines.USE_ROUGHNESSMAP; } } }; } /*********************************/ /********** INTERPOLATION ********/ /*********************************/ // Spline Interpolation // Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation function GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) { THREE.Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer ); } GLTFCubicSplineInterpolant.prototype = Object.create( THREE.Interpolant.prototype ); GLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant; GLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) { // Copies a sample value to the result buffer. See description of glTF // CUBICSPLINE values layout in interpolate_() function below. var result = this.resultBuffer, values = this.sampleValues, valueSize = this.valueSize, offset = index * valueSize * 3 + valueSize; for ( var i = 0; i !== valueSize; i ++ ) { result[ i ] = values[ offset + i ]; } return result; }; GLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_; GLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_; GLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) { var result = this.resultBuffer; var values = this.sampleValues; var stride = this.valueSize; var stride2 = stride * 2; var stride3 = stride * 3; var td = t1 - t0; var p = ( t - t0 ) / td; var pp = p * p; var ppp = pp * p; var offset1 = i1 * stride3; var offset0 = offset1 - stride3; var s2 = - 2 * ppp + 3 * pp; var s3 = ppp - pp; var s0 = 1 - s2; var s1 = s3 - pp + p; // Layout of keyframe output values for CUBICSPLINE animations: // [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ] for ( var i = 0; i !== stride; i ++ ) { var p0 = values[ offset0 + i + stride ]; // splineVertex_k var m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k) var p1 = values[ offset1 + i + stride ]; // splineVertex_k+1 var m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k) result[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1; } return result; }; /*********************************/ /********** INTERNALS ************/ /*********************************/ /* CONSTANTS */ var WEBGL_CONSTANTS = { FLOAT: 5126, //FLOAT_MAT2: 35674, FLOAT_MAT3: 35675, FLOAT_MAT4: 35676, FLOAT_VEC2: 35664, FLOAT_VEC3: 35665, FLOAT_VEC4: 35666, LINEAR: 9729, REPEAT: 10497, SAMPLER_2D: 35678, POINTS: 0, LINES: 1, LINE_LOOP: 2, LINE_STRIP: 3, TRIANGLES: 4, TRIANGLE_STRIP: 5, TRIANGLE_FAN: 6, UNSIGNED_BYTE: 5121, UNSIGNED_SHORT: 5123 }; var WEBGL_TYPE = { 5126: Number, //35674: THREE.Matrix2, 35675: THREE.Matrix3, 35676: THREE.Matrix4, 35664: THREE.Vector2, 35665: THREE.Vector3, 35666: THREE.Vector4, 35678: THREE.Texture }; var WEBGL_COMPONENT_TYPES = { 5120: Int8Array, 5121: Uint8Array, 5122: Int16Array, 5123: Uint16Array, 5125: Uint32Array, 5126: Float32Array }; var WEBGL_FILTERS = { 9728: THREE.NearestFilter, 9729: THREE.LinearFilter, 9984: THREE.NearestMipMapNearestFilter, 9985: THREE.LinearMipMapNearestFilter, 9986: THREE.NearestMipMapLinearFilter, 9987: THREE.LinearMipMapLinearFilter }; var WEBGL_WRAPPINGS = { 33071: THREE.ClampToEdgeWrapping, 33648: THREE.MirroredRepeatWrapping, 10497: THREE.RepeatWrapping }; var WEBGL_SIDES = { 1028: THREE.BackSide, // Culling front 1029: THREE.FrontSide // Culling back //1032: THREE.NoSide // Culling front and back, what to do? }; var WEBGL_DEPTH_FUNCS = { 512: THREE.NeverDepth, 513: THREE.LessDepth, 514: THREE.EqualDepth, 515: THREE.LessEqualDepth, 516: THREE.GreaterEqualDepth, 517: THREE.NotEqualDepth, 518: THREE.GreaterEqualDepth, 519: THREE.AlwaysDepth }; var WEBGL_BLEND_EQUATIONS = { 32774: THREE.AddEquation, 32778: THREE.SubtractEquation, 32779: THREE.ReverseSubtractEquation }; var WEBGL_BLEND_FUNCS = { 0: THREE.ZeroFactor, 1: THREE.OneFactor, 768: THREE.SrcColorFactor, 769: THREE.OneMinusSrcColorFactor, 770: THREE.SrcAlphaFactor, 771: THREE.OneMinusSrcAlphaFactor, 772: THREE.DstAlphaFactor, 773: THREE.OneMinusDstAlphaFactor, 774: THREE.DstColorFactor, 775: THREE.OneMinusDstColorFactor, 776: THREE.SrcAlphaSaturateFactor // The followings are not supported by Three.js yet //32769: CONSTANT_COLOR, //32770: ONE_MINUS_CONSTANT_COLOR, //32771: CONSTANT_ALPHA, //32772: ONE_MINUS_CONSTANT_COLOR }; var WEBGL_TYPE_SIZES = { 'SCALAR': 1, 'VEC2': 2, 'VEC3': 3, 'VEC4': 4, 'MAT2': 4, 'MAT3': 9, 'MAT4': 16 }; var ATTRIBUTES = { POSITION: 'position', NORMAL: 'normal', TANGENT: 'tangent', TEXCOORD_0: 'uv', TEXCOORD_1: 'uv2', COLOR_0: 'color', WEIGHTS_0: 'skinWeight', JOINTS_0: 'skinIndex', }; var PATH_PROPERTIES = { scale: 'scale', translation: 'position', rotation: 'quaternion', weights: 'morphTargetInfluences' }; var INTERPOLATION = { CUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each // keyframe track will be initialized with a default interpolation type, then modified. LINEAR: THREE.InterpolateLinear, STEP: THREE.InterpolateDiscrete }; var STATES_ENABLES = { 2884: 'CULL_FACE', 2929: 'DEPTH_TEST', 3042: 'BLEND', 3089: 'SCISSOR_TEST', 32823: 'POLYGON_OFFSET_FILL', 32926: 'SAMPLE_ALPHA_TO_COVERAGE' }; var ALPHA_MODES = { OPAQUE: 'OPAQUE', MASK: 'MASK', BLEND: 'BLEND' }; var MIME_TYPE_FORMATS = { 'image/png': THREE.RGBAFormat, 'image/jpeg': THREE.RGBFormat }; /* UTILITY FUNCTIONS */ function resolveURL( url, path ) { // Invalid URL if ( typeof url !== 'string' || url === '' ) return ''; // Absolute URL http://,https://,// if ( /^(https?:)?\/\//i.test( url ) ) return url; // Data URI if ( /^data:.*,.*$/i.test( url ) ) return url; // Blob URL if ( /^blob:.*$/i.test( url ) ) return url; // Relative URL return path + url; } var defaultMaterial; /** * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material */ function createDefaultMaterial() { defaultMaterial = defaultMaterial || new THREE.MeshStandardMaterial( { color: 0xFFFFFF, emissive: 0x000000, metalness: 1, roughness: 1, transparent: false, depthTest: true, side: THREE.FrontSide } ); return defaultMaterial; } function addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) { // Add unknown glTF extensions to an object's userData. for ( var name in objectDef.extensions ) { if ( knownExtensions[ name ] === undefined ) { object.userData.gltfExtensions = object.userData.gltfExtensions || {}; object.userData.gltfExtensions[ name ] = objectDef.extensions[ name ]; } } } /** * @param {THREE.Object3D|THREE.Material|THREE.BufferGeometry} object * @param {GLTF.definition} gltfDef */ function assignExtrasToUserData( object, gltfDef ) { if ( gltfDef.extras !== undefined ) { if ( typeof gltfDef.extras === 'object' ) { object.userData = gltfDef.extras; } else { console.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras ); } } } /** * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets * * @param {THREE.BufferGeometry} geometry * @param {Array<GLTF.Target>} targets * @param {GLTFParser} parser * @return {Promise<THREE.BufferGeometry>} */ function addMorphTargets( geometry, targets, parser ) { var hasMorphPosition = false; var hasMorphNormal = false; for ( var i = 0, il = targets.length; i < il; i ++ ) { var target = targets[ i ]; if ( target.POSITION !== undefined ) hasMorphPosition = true; if ( target.NORMAL !== undefined ) hasMorphNormal = true; if ( hasMorphPosition && hasMorphNormal ) break; } if ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry ); var pendingPositionAccessors = []; var pendingNormalAccessors = []; for ( var i = 0, il = targets.length; i < il; i ++ ) { var target = targets[ i ]; if ( hasMorphPosition ) { var pendingAccessor = target.POSITION !== undefined ? parser.getDependency( 'accessor', target.POSITION ) : geometry.attributes.position; pendingPositionAccessors.push( pendingAccessor ); } if ( hasMorphNormal ) { var pendingAccessor = target.NORMAL !== undefined ? parser.getDependency( 'accessor', target.NORMAL ) : geometry.attributes.normal; pendingNormalAccessors.push( pendingAccessor ); } } return Promise.all( [ Promise.all( pendingPositionAccessors ), Promise.all( pendingNormalAccessors ) ] ).then( function ( accessors ) { var morphPositions = accessors[ 0 ]; var morphNormals = accessors[ 1 ]; // Clone morph target accessors before modifying them. for ( var i = 0, il = morphPositions.length; i < il; i ++ ) { if ( geometry.attributes.position === morphPositions[ i ] ) continue; morphPositions[ i ] = cloneBufferAttribute( morphPositions[ i ] ); } for ( var i = 0, il = morphNormals.length; i < il; i ++ ) { if ( geometry.attributes.normal === morphNormals[ i ] ) continue; morphNormals[ i ] = cloneBufferAttribute( morphNormals[ i ] ); } for ( var i = 0, il = targets.length; i < il; i ++ ) { var target = targets[ i ]; var attributeName = 'morphTarget' + i; if ( hasMorphPosition ) { // Three.js morph position is absolute value. The formula is // basePosition // + weight0 * ( morphPosition0 - basePosition ) // + weight1 * ( morphPosition1 - basePosition ) // ... // while the glTF one is relative // basePosition // + weight0 * glTFmorphPosition0 // + weight1 * glTFmorphPosition1 // ... // then we need to convert from relative to absolute here. if ( target.POSITION !== undefined ) { var positionAttribute = morphPositions[ i ]; positionAttribute.name = attributeName; var position = geometry.attributes.position; for ( var j = 0, jl = positionAttribute.count; j < jl; j ++ ) { positionAttribute.setXYZ( j, positionAttribute.getX( j ) + position.getX( j ), positionAttribute.getY( j ) + position.getY( j ), positionAttribute.getZ( j ) + position.getZ( j ) ); } } } if ( hasMorphNormal ) { // see target.POSITION's comment if ( target.NORMAL !== undefined ) { var normalAttribute = morphNormals[ i ]; normalAttribute.name = attributeName; var normal = geometry.attributes.normal; for ( var j = 0, jl = normalAttribute.count; j < jl; j ++ ) { normalAttribute.setXYZ( j, normalAttribute.getX( j ) + normal.getX( j ), normalAttribute.getY( j ) + normal.getY( j ), normalAttribute.getZ( j ) + normal.getZ( j ) ); } } } } if ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions; if ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals; return geometry; } ); } /** * @param {THREE.Mesh} mesh * @param {GLTF.Mesh} meshDef */ function updateMorphTargets( mesh, meshDef ) { mesh.updateMorphTargets(); if ( meshDef.weights !== undefined ) { for ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) { mesh.morphTargetInfluences[ i ] = meshDef.weights[ i ]; } } // .extras has user-defined data, so check that .extras.targetNames is an array. if ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) { var targetNames = meshDef.extras.targetNames; if ( mesh.morphTargetInfluences.length === targetNames.length ) { mesh.morphTargetDictionary = {}; for ( var i = 0, il = targetNames.length; i < il; i ++ ) { mesh.morphTargetDictionary[ targetNames[ i ] ] = i; } } else { console.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' ); } } } function isObjectEqual( a, b ) { if ( Object.keys( a ).length !== Object.keys( b ).length ) return false; for ( var key in a ) { if ( a[ key ] !== b[ key ] ) return false; } return true; } function createPrimitiveKey( primitiveDef ) { var dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]; var geometryKey; if ( dracoExtension ) { geometryKey = 'draco:' + dracoExtension.bufferView + ':' + dracoExtension.indices + ':' + createAttributesKey( dracoExtension.attributes ); } else { geometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode; } return geometryKey; } function createAttributesKey( attributes ) { var attributesKey = ''; var keys = Object.keys( attributes ).sort(); for ( var i = 0, il = keys.length; i < il; i ++ ) { attributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';'; } return attributesKey; } function cloneBufferAttribute( attribute ) { if ( attribute.isInterleavedBufferAttribute ) { var count = attribute.count; var itemSize = attribute.itemSize; var array = attribute.array.slice( 0, count * itemSize ); for ( var i = 0, j = 0; i < count; ++ i ) { array[ j ++ ] = attribute.getX( i ); if ( itemSize >= 2 ) array[ j ++ ] = attribute.getY( i ); if ( itemSize >= 3 ) array[ j ++ ] = attribute.getZ( i ); if ( itemSize >= 4 ) array[ j ++ ] = attribute.getW( i ); } return new THREE.BufferAttribute( array, itemSize, attribute.normalized ); } return attribute.clone(); } /* GLTF PARSER */ function GLTFParser( json, extensions, options ) { this.json = json || {}; this.extensions = extensions || {}; this.options = options || {}; // loader object cache this.cache = new GLTFRegistry(); // BufferGeometry caching this.primitiveCache = {}; this.textureLoader = new THREE.TextureLoader( this.options.manager ); this.textureLoader.setCrossOrigin( this.options.crossOrigin ); this.fileLoader = new THREE.FileLoader( this.options.manager ); this.fileLoader.setResponseType( 'arraybuffer' ); } GLTFParser.prototype.parse = function ( onLoad, onError ) { var parser = this; var json = this.json; var extensions = this.extensions; // Clear the loader cache this.cache.removeAll(); // Mark the special nodes/meshes in json for efficient parse this.markDefs(); Promise.all( [ this.getDependencies( 'scene' ), this.getDependencies( 'animation' ), this.getDependencies( 'camera' ), ] ).then( function ( dependencies ) { var result = { scene: dependencies[ 0 ][ json.scene || 0 ], scenes: dependencies[ 0 ], animations: dependencies[ 1 ], cameras: dependencies[ 2 ], asset: json.asset, parser: parser, userData: {} }; addUnknownExtensionsToUserData( extensions, result, json ); onLoad( result ); } ).catch( onError ); }; /** * Marks the special nodes/meshes in json for efficient parse. */ GLTFParser.prototype.markDefs = function () { var nodeDefs = this.json.nodes || []; var skinDefs = this.json.skins || []; var meshDefs = this.json.meshes || []; var meshReferences = {}; var meshUses = {}; // Nothing in the node definition indicates whether it is a Bone or an // Object3D. Use the skins' joint references to mark bones. for ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) { var joints = skinDefs[ skinIndex ].joints; for ( var i = 0, il = joints.length; i < il; i ++ ) { nodeDefs[ joints[ i ] ].isBone = true; } } // Meshes can (and should) be reused by multiple nodes in a glTF asset. To // avoid having more than one THREE.Mesh with the same name, count // references and rename instances below. // // Example: CesiumMilkTruck sample model reuses "Wheel" meshes. for ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) { var nodeDef = nodeDefs[ nodeIndex ]; if ( nodeDef.mesh !== undefined ) { if ( meshReferences[ nodeDef.mesh ] === undefined ) { meshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0; } meshReferences[ nodeDef.mesh ] ++; // Nothing in the mesh definition indicates whether it is // a SkinnedMesh or Mesh. Use the node's mesh reference // to mark SkinnedMesh if node has skin. if ( nodeDef.skin !== undefined ) { meshDefs[ nodeDef.mesh ].isSkinnedMesh = true; } } } this.json.meshReferences = meshReferences; this.json.meshUses = meshUses; }; /** * Requests the specified dependency asynchronously, with caching. * @param {string} type * @param {number} index * @return {Promise<THREE.Object3D|THREE.Material|THREE.Texture|THREE.AnimationClip|ArrayBuffer|Object>} */ GLTFParser.prototype.getDependency = function ( type, index ) { var cacheKey = type + ':' + index; var dependency = this.cache.get( cacheKey ); if ( ! dependency ) { switch ( type ) { case 'scene': dependency = this.loadScene( index ); break; case 'node': dependency = this.loadNode( index ); break; case 'mesh': dependency = this.loadMesh( index ); break; case 'accessor': dependency = this.loadAccessor( index ); break; case 'bufferView': dependency = this.loadBufferView( index ); break; case 'buffer': dependency = this.loadBuffer( index ); break; case 'material': dependency = this.loadMaterial( index ); break; case 'texture': dependency = this.loadTexture( index ); break; case 'skin': dependency = this.loadSkin( index ); break; case 'animation': dependency = this.loadAnimation( index ); break; case 'camera': dependency = this.loadCamera( index ); break; case 'light': dependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index ); break; default: throw new Error( 'Unknown type: ' + type ); } this.cache.add( cacheKey, dependency ); } return dependency; }; /** * Requests all dependencies of the specified type asynchronously, with caching. * @param {string} type * @return {Promise<Array<Object>>} */ GLTFParser.prototype.getDependencies = function ( type ) { var dependencies = this.cache.get( type ); if ( ! dependencies ) { var parser = this; var defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || []; dependencies = Promise.all( defs.map( function ( def, index ) { return parser.getDependency( type, index ); } ) ); this.cache.add( type, dependencies ); } return dependencies; }; /** * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views * @param {number} bufferIndex * @return {Promise<ArrayBuffer>} */ GLTFParser.prototype.loadBuffer = function ( bufferIndex ) { var bufferDef = this.json.buffers[ bufferIndex ]; var loader = this.fileLoader; if ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) { throw new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' ); } // If present, GLB container is required to be the first buffer. if ( bufferDef.uri === undefined && bufferIndex === 0 ) { return Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body ); } var options = this.options; return new Promise( function ( resolve, reject ) { loader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () { reject( new Error( 'THREE.GLTFLoader: Failed to load buffer "' + bufferDef.uri + '".' ) ); } ); } ); }; /** * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views * @param {number} bufferViewIndex * @return {Promise<ArrayBuffer>} */ GLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) { var bufferViewDef = this.json.bufferViews[ bufferViewIndex ]; return this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) { var byteLength = bufferViewDef.byteLength || 0; var byteOffset = bufferViewDef.byteOffset || 0; return buffer.slice( byteOffset, byteOffset + byteLength ); } ); }; /** * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors * @param {number} accessorIndex * @return {Promise<THREE.BufferAttribute|THREE.InterleavedBufferAttribute>} */ GLTFParser.prototype.loadAccessor = function ( accessorIndex ) { var parser = this; var json = this.json; var accessorDef = this.json.accessors[ accessorIndex ]; if ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) { // Ignore empty accessors, which may be used to declare runtime // information about attributes coming from another source (e.g. Draco // compression extension). return Promise.resolve( null ); } var pendingBufferViews = []; if ( accessorDef.bufferView !== undefined ) { pendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) ); } else { pendingBufferViews.push( null ); } if ( accessorDef.sparse !== undefined ) { pendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) ); pendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) ); } return Promise.all( pendingBufferViews ).then( function ( bufferViews ) { var bufferView = bufferViews[ 0 ]; var itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ]; var TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ]; // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12. var elementBytes = TypedArray.BYTES_PER_ELEMENT; var itemBytes = elementBytes * itemSize; var byteOffset = accessorDef.byteOffset || 0; var byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined; var normalized = accessorDef.normalized === true; var array, bufferAttribute; // The buffer is not interleaved if the stride is the item size in bytes. if ( byteStride && byteStride !== itemBytes ) { var ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType; var ib = parser.cache.get( ibCacheKey ); if ( ! ib ) { // Use the full buffer if it's interleaved. array = new TypedArray( bufferView ); // Integer parameters to IB/IBA are in array elements, not bytes. ib = new THREE.InterleavedBuffer( array, byteStride / elementBytes ); parser.cache.add( ibCacheKey, ib ); } bufferAttribute = new THREE.InterleavedBufferAttribute( ib, itemSize, byteOffset / elementBytes, normalized ); } else { if ( bufferView === null ) { array = new TypedArray( accessorDef.count * itemSize ); } else { array = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize ); } bufferAttribute = new THREE.BufferAttribute( array, itemSize, normalized ); } // https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors if ( accessorDef.sparse !== undefined ) { var itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR; var TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ]; var byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0; var byteOffsetValues = accessorDef.sparse.values.byteOffset || 0; var sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices ); var sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize ); if ( bufferView !== null ) { // Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes. bufferAttribute.setArray( bufferAttribute.array.slice() ); } for ( var i = 0, il = sparseIndices.length; i < il; i ++ ) { var index = sparseIndices[ i ]; bufferAttribute.setX( index, sparseValues[ i * itemSize ] ); if ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] ); if ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] ); if ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] ); if ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' ); } } return bufferAttribute; } ); }; /** * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures * @param {number} textureIndex * @return {Promise<THREE.Texture>} */ GLTFParser.prototype.loadTexture = function ( textureIndex ) { var parser = this; var json = this.json; var options = this.options; var textureLoader = this.textureLoader; var URL = window.URL || window.webkitURL; var textureDef = json.textures[ textureIndex ]; var textureExtensions = textureDef.extensions || {}; var source; if ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) { source = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ]; } else { source = json.images[ textureDef.source ]; } var sourceURI = source.uri; var isObjectURL = false; if ( source.bufferView !== undefined ) { // Load binary image data from bufferView, if provided. sourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) { isObjectURL = true; var blob = new Blob( [ bufferView ], { type: source.mimeType } ); sourceURI = URL.createObjectURL( blob ); return sourceURI; } ); } return Promise.resolve( sourceURI ).then( function ( sourceURI ) { // Load Texture resource. var loader = THREE.Loader.Handlers.get( sourceURI ); if ( ! loader ) { loader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader : textureLoader; } return new Promise( function ( resolve, reject ) { loader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject ); } ); } ).then( function ( texture ) { // Clean up resources and configure Texture. if ( isObjectURL === true ) { URL.revokeObjectURL( sourceURI ); } texture.flipY = false; if ( textureDef.name !== undefined ) texture.name = textureDef.name; // Ignore unknown mime types, like DDS files. if ( source.mimeType in MIME_TYPE_FORMATS ) { texture.format = MIME_TYPE_FORMATS[ source.mimeType ]; } var samplers = json.samplers || {}; var sampler = samplers[ textureDef.sampler ] || {}; texture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || THREE.LinearFilter; texture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || THREE.LinearMipMapLinearFilter; texture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || THREE.RepeatWrapping; texture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || THREE.RepeatWrapping; return texture; } ); }; /** * Asynchronously assigns a texture to the given material parameters. * @param {Object} materialParams * @param {string} mapName * @param {Object} mapDef * @return {Promise} */ GLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) { var parser = this; return this.getDependency( 'texture', mapDef.index ).then( function ( texture ) { switch ( mapName ) { case 'aoMap': case 'emissiveMap': case 'metalnessMap': case 'normalMap': case 'roughnessMap': texture.format = THREE.RGBFormat; break; } if ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) { var transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined; if ( transform ) { texture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform ); } } materialParams[ mapName ] = texture; } ); }; /** * Assigns final material to a Mesh, Line, or Points instance. The instance * already has a material (generated from the glTF material options alone) * but reuse of the same glTF material may require multiple threejs materials * to accomodate different primitive types, defines, etc. New materials will * be created if necessary, and reused from a cache. * @param {THREE.Object3D} mesh Mesh, Line, or Points instance. */ GLTFParser.prototype.assignFinalMaterial = function ( mesh ) { var geometry = mesh.geometry; var material = mesh.material; var extensions = this.extensions; var useVertexTangents = geometry.attributes.tangent !== undefined; var useVertexColors = geometry.attributes.color !== undefined; var useFlatShading = geometry.attributes.normal === undefined; var useSkinning = mesh.isSkinnedMesh === true; var useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0; var useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined; if ( mesh.isPoints ) { var cacheKey = 'PointsMaterial:' + material.uuid; var pointsMaterial = this.cache.get( cacheKey ); if ( ! pointsMaterial ) { pointsMaterial = new THREE.PointsMaterial(); THREE.Material.prototype.copy.call( pointsMaterial, material ); pointsMaterial.color.copy( material.color ); pointsMaterial.map = material.map; pointsMaterial.lights = false; // PointsMaterial doesn't support lights yet this.cache.add( cacheKey, pointsMaterial ); } material = pointsMaterial; } else if ( mesh.isLine ) { var cacheKey = 'LineBasicMaterial:' + material.uuid; var lineMaterial = this.cache.get( cacheKey ); if ( ! lineMaterial ) { lineMaterial = new THREE.LineBasicMaterial(); THREE.Material.prototype.copy.call( lineMaterial, material ); lineMaterial.color.copy( material.color ); lineMaterial.lights = false; // LineBasicMaterial doesn't support lights yet this.cache.add( cacheKey, lineMaterial ); } material = lineMaterial; } // Clone the material if it will be modified if ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) { var cacheKey = 'ClonedMaterial:' + material.uuid + ':'; if ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:'; if ( useSkinning ) cacheKey += 'skinning:'; if ( useVertexTangents ) cacheKey += 'vertex-tangents:'; if ( useVertexColors ) cacheKey += 'vertex-colors:'; if ( useFlatShading ) cacheKey += 'flat-shading:'; if ( useMorphTargets ) cacheKey += 'morph-targets:'; if ( useMorphNormals ) cacheKey += 'morph-normals:'; var cachedMaterial = this.cache.get( cacheKey ); if ( ! cachedMaterial ) { cachedMaterial = material.isGLTFSpecularGlossinessMaterial ? extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].cloneMaterial( material ) : material.clone(); if ( useSkinning ) cachedMaterial.skinning = true; if ( useVertexTangents ) cachedMaterial.vertexTangents = true; if ( useVertexColors ) cachedMaterial.vertexColors = THREE.VertexColors; if ( useFlatShading ) cachedMaterial.flatShading = true; if ( useMorphTargets ) cachedMaterial.morphTargets = true; if ( useMorphNormals ) cachedMaterial.morphNormals = true; this.cache.add( cacheKey, cachedMaterial ); } material = cachedMaterial; } // workarounds for mesh and geometry if ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) { console.log( 'THREE.GLTFLoader: Duplicating UVs to support aoMap.' ); geometry.addAttribute( 'uv2', new THREE.BufferAttribute( geometry.attributes.uv.array, 2 ) ); } if ( material.isGLTFSpecularGlossinessMaterial ) { // for GLTFSpecularGlossinessMaterial(ShaderMaterial) uniforms runtime update mesh.onBeforeRender = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].refreshUniforms; } mesh.material = material; }; /** * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials * @param {number} materialIndex * @return {Promise<THREE.Material>} */ GLTFParser.prototype.loadMaterial = function ( materialIndex ) { var parser = this; var json = this.json; var extensions = this.extensions; var materialDef = json.materials[ materialIndex ]; var materialType; var materialParams = {}; var materialExtensions = materialDef.extensions || {}; var pending = []; if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) { var sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ]; materialType = sgExtension.getMaterialType( materialDef ); pending.push( sgExtension.extendParams( materialParams, materialDef, parser ) ); } else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) { var kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ]; materialType = kmuExtension.getMaterialType( materialDef ); pending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) ); } else { // Specification: // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material materialType = THREE.MeshStandardMaterial; var metallicRoughness = materialDef.pbrMetallicRoughness || {}; materialParams.color = new THREE.Color( 1.0, 1.0, 1.0 ); materialParams.opacity = 1.0; if ( Array.isArray( metallicRoughness.baseColorFactor ) ) { var array = metallicRoughness.baseColorFactor; materialParams.color.fromArray( array ); materialParams.opacity = array[ 3 ]; } if ( metallicRoughness.baseColorTexture !== undefined ) { pending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) ); } materialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0; materialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0; if ( metallicRoughness.metallicRoughnessTexture !== undefined ) { pending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) ); pending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) ); } } if ( materialDef.doubleSided === true ) { materialParams.side = THREE.DoubleSide; } var alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE; if ( alphaMode === ALPHA_MODES.BLEND ) { materialParams.transparent = true; } else { materialParams.transparent = false; if ( alphaMode === ALPHA_MODES.MASK ) { materialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5; } } if ( materialDef.normalTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) { pending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) ); materialParams.normalScale = new THREE.Vector2( 1, 1 ); if ( materialDef.normalTexture.scale !== undefined ) { materialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale ); } } if ( materialDef.occlusionTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) { pending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) ); if ( materialDef.occlusionTexture.strength !== undefined ) { materialParams.aoMapIntensity = materialDef.occlusionTexture.strength; } } if ( materialDef.emissiveFactor !== undefined && materialType !== THREE.MeshBasicMaterial ) { materialParams.emissive = new THREE.Color().fromArray( materialDef.emissiveFactor ); } if ( materialDef.emissiveTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) { pending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) ); } return Promise.all( pending ).then( function () { var material; if ( materialType === THREE.ShaderMaterial ) { material = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams ); } else { material = new materialType( materialParams ); } if ( materialDef.name !== undefined ) material.name = materialDef.name; // baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding. if ( material.map ) material.map.encoding = THREE.sRGBEncoding; if ( material.emissiveMap ) material.emissiveMap.encoding = THREE.sRGBEncoding; if ( material.specularMap ) material.specularMap.encoding = THREE.sRGBEncoding; assignExtrasToUserData( material, materialDef ); if ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef ); return material; } ); }; /** * @param {THREE.BufferGeometry} geometry * @param {GLTF.Primitive} primitiveDef * @param {GLTFParser} parser * @return {Promise<THREE.BufferGeometry>} */ function addPrimitiveAttributes( geometry, primitiveDef, parser ) { var attributes = primitiveDef.attributes; var pending = []; function assignAttributeAccessor( accessorIndex, attributeName ) { return parser.getDependency( 'accessor', accessorIndex ) .then( function ( accessor ) { geometry.addAttribute( attributeName, accessor ); } ); } for ( var gltfAttributeName in attributes ) { var threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase(); // Skip attributes already provided by e.g. Draco extension. if ( threeAttributeName in geometry.attributes ) continue; pending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) ); } if ( primitiveDef.indices !== undefined && ! geometry.index ) { var accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) { geometry.setIndex( accessor ); } ); pending.push( accessor ); } assignExtrasToUserData( geometry, primitiveDef ); return Promise.all( pending ).then( function () { return primitiveDef.targets !== undefined ? addMorphTargets( geometry, primitiveDef.targets, parser ) : geometry; } ); } /** * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry * * Creates BufferGeometries from primitives. * * @param {Array<GLTF.Primitive>} primitives * @return {Promise<Array<THREE.BufferGeometry>>} */ GLTFParser.prototype.loadGeometries = function ( primitives ) { var parser = this; var extensions = this.extensions; var cache = this.primitiveCache; function createDracoPrimitive( primitive ) { return extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] .decodePrimitive( primitive, parser ) .then( function ( geometry ) { return addPrimitiveAttributes( geometry, primitive, parser ); } ); } var pending = []; for ( var i = 0, il = primitives.length; i < il; i ++ ) { var primitive = primitives[ i ]; var cacheKey = createPrimitiveKey( primitive ); // See if we've already created this geometry var cached = cache[ cacheKey ]; if ( cached ) { // Use the cached geometry if it exists pending.push( cached.promise ); } else { var geometryPromise; if ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) { // Use DRACO geometry if available geometryPromise = createDracoPrimitive( primitive ); } else { // Otherwise create a new geometry geometryPromise = addPrimitiveAttributes( new THREE.BufferGeometry(), primitive, parser ); } // Cache this geometry cache[ cacheKey ] = { primitive: primitive, promise: geometryPromise }; pending.push( geometryPromise ); } } return Promise.all( pending ); }; /** * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes * @param {number} meshIndex * @return {Promise<THREE.Group|THREE.Mesh|THREE.SkinnedMesh>} */ GLTFParser.prototype.loadMesh = function ( meshIndex ) { var parser = this; var json = this.json; var extensions = this.extensions; var meshDef = json.meshes[ meshIndex ]; var primitives = meshDef.primitives; var pending = []; for ( var i = 0, il = primitives.length; i < il; i ++ ) { var material = primitives[ i ].material === undefined ? createDefaultMaterial() : this.getDependency( 'material', primitives[ i ].material ); pending.push( material ); } return Promise.all( pending ).then( function ( originalMaterials ) { return parser.loadGeometries( primitives ).then( function ( geometries ) { var meshes = []; for ( var i = 0, il = geometries.length; i < il; i ++ ) { var geometry = geometries[ i ]; var primitive = primitives[ i ]; // 1. create Mesh var mesh; var material = originalMaterials[ i ]; if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES || primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP || primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN || primitive.mode === undefined ) { // .isSkinnedMesh isn't in glTF spec. See .markDefs() mesh = meshDef.isSkinnedMesh === true ? new THREE.SkinnedMesh( geometry, material ) : new THREE.Mesh( geometry, material ); if ( mesh.isSkinnedMesh === true ) mesh.normalizeSkinWeights(); // #15319 if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) { mesh.drawMode = THREE.TriangleStripDrawMode; } else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) { mesh.drawMode = THREE.TriangleFanDrawMode; } } else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) { mesh = new THREE.LineSegments( geometry, material ); } else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) { mesh = new THREE.Line( geometry, material ); } else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) { mesh = new THREE.LineLoop( geometry, material ); } else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) { mesh = new THREE.Points( geometry, material ); } else { throw new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode ); } if ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) { updateMorphTargets( mesh, meshDef ); } mesh.name = meshDef.name || ( 'mesh_' + meshIndex ); if ( geometries.length > 1 ) mesh.name += '_' + i; assignExtrasToUserData( mesh, meshDef ); parser.assignFinalMaterial( mesh ); meshes.push( mesh ); } if ( meshes.length === 1 ) { return meshes[ 0 ]; } var group = new THREE.Group(); for ( var i = 0, il = meshes.length; i < il; i ++ ) { group.add( meshes[ i ] ); } return group; } ); } ); }; /** * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras * @param {number} cameraIndex * @return {Promise<THREE.Camera>} */ GLTFParser.prototype.loadCamera = function ( cameraIndex ) { var camera; var cameraDef = this.json.cameras[ cameraIndex ]; var params = cameraDef[ cameraDef.type ]; if ( ! params ) { console.warn( 'THREE.GLTFLoader: Missing camera parameters.' ); return; } if ( cameraDef.type === 'perspective' ) { camera = new THREE.PerspectiveCamera( THREE.Math.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 ); } else if ( cameraDef.type === 'orthographic' ) { camera = new THREE.OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar ); } if ( cameraDef.name !== undefined ) camera.name = cameraDef.name; assignExtrasToUserData( camera, cameraDef ); return Promise.resolve( camera ); }; /** * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins * @param {number} skinIndex * @return {Promise<Object>} */ GLTFParser.prototype.loadSkin = function ( skinIndex ) { var skinDef = this.json.skins[ skinIndex ]; var skinEntry = { joints: skinDef.joints }; if ( skinDef.inverseBindMatrices === undefined ) { return Promise.resolve( skinEntry ); } return this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) { skinEntry.inverseBindMatrices = accessor; return skinEntry; } ); }; /** * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations * @param {number} animationIndex * @return {Promise<THREE.AnimationClip>} */ GLTFParser.prototype.loadAnimation = function ( animationIndex ) { var json = this.json; var animationDef = json.animations[ animationIndex ]; var pendingNodes = []; var pendingInputAccessors = []; var pendingOutputAccessors = []; var pendingSamplers = []; var pendingTargets = []; for ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) { var channel = animationDef.channels[ i ]; var sampler = animationDef.samplers[ channel.sampler ]; var target = channel.target; var name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated. var input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input; var output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output; pendingNodes.push( this.getDependency( 'node', name ) ); pendingInputAccessors.push( this.getDependency( 'accessor', input ) ); pendingOutputAccessors.push( this.getDependency( 'accessor', output ) ); pendingSamplers.push( sampler ); pendingTargets.push( target ); } return Promise.all( [ Promise.all( pendingNodes ), Promise.all( pendingInputAccessors ), Promise.all( pendingOutputAccessors ), Promise.all( pendingSamplers ), Promise.all( pendingTargets ) ] ).then( function ( dependencies ) { var nodes = dependencies[ 0 ]; var inputAccessors = dependencies[ 1 ]; var outputAccessors = dependencies[ 2 ]; var samplers = dependencies[ 3 ]; var targets = dependencies[ 4 ]; var tracks = []; for ( var i = 0, il = nodes.length; i < il; i ++ ) { var node = nodes[ i ]; var inputAccessor = inputAccessors[ i ]; var outputAccessor = outputAccessors[ i ]; var sampler = samplers[ i ]; var target = targets[ i ]; if ( node === undefined ) continue; node.updateMatrix(); node.matrixAutoUpdate = true; var TypedKeyframeTrack; switch ( PATH_PROPERTIES[ target.path ] ) { case PATH_PROPERTIES.weights: TypedKeyframeTrack = THREE.NumberKeyframeTrack; break; case PATH_PROPERTIES.rotation: TypedKeyframeTrack = THREE.QuaternionKeyframeTrack; break; case PATH_PROPERTIES.position: case PATH_PROPERTIES.scale: default: TypedKeyframeTrack = THREE.VectorKeyframeTrack; break; } var targetName = node.name ? node.name : node.uuid; var interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : THREE.InterpolateLinear; var targetNames = []; if ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) { // Node may be a THREE.Group (glTF mesh with several primitives) or a THREE.Mesh. node.traverse( function ( object ) { if ( object.isMesh === true && object.morphTargetInfluences ) { targetNames.push( object.name ? object.name : object.uuid ); } } ); } else { targetNames.push( targetName ); } for ( var j = 0, jl = targetNames.length; j < jl; j ++ ) { var track = new TypedKeyframeTrack( targetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ], inputAccessor.array, outputAccessor.array, interpolation ); // Override interpolation with custom factory method. if ( sampler.interpolation === 'CUBICSPLINE' ) { track.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) { // A CUBICSPLINE keyframe in glTF has three output values for each input value, // representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize() // must be divided by three to get the interpolant's sampleSize argument. return new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result ); }; // Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants. track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true; } tracks.push( track ); } } var name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex; return new THREE.AnimationClip( name, undefined, tracks ); } ); }; /** * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy * @param {number} nodeIndex * @return {Promise<THREE.Object3D>} */ GLTFParser.prototype.loadNode = function ( nodeIndex ) { var json = this.json; var extensions = this.extensions; var parser = this; var meshReferences = json.meshReferences; var meshUses = json.meshUses; var nodeDef = json.nodes[ nodeIndex ]; return ( function () { // .isBone isn't in glTF spec. See .markDefs if ( nodeDef.isBone === true ) { return Promise.resolve( new THREE.Bone() ); } else if ( nodeDef.mesh !== undefined ) { return parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) { var node; if ( meshReferences[ nodeDef.mesh ] > 1 ) { var instanceNum = meshUses[ nodeDef.mesh ] ++; node = mesh.clone(); node.name += '_instance_' + instanceNum; // onBeforeRender copy for Specular-Glossiness node.onBeforeRender = mesh.onBeforeRender; for ( var i = 0, il = node.children.length; i < il; i ++ ) { node.children[ i ].name += '_instance_' + instanceNum; node.children[ i ].onBeforeRender = mesh.children[ i ].onBeforeRender; } } else { node = mesh; } // if weights are provided on the node, override weights on the mesh. if ( nodeDef.weights !== undefined ) { node.traverse( function ( o ) { if ( ! o.isMesh ) return; for ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) { o.morphTargetInfluences[ i ] = nodeDef.weights[ i ]; } } ); } return node; } ); } else if ( nodeDef.camera !== undefined ) { return parser.getDependency( 'camera', nodeDef.camera ); } else if ( nodeDef.extensions && nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] && nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) { return parser.getDependency( 'light', nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light ); } else { return Promise.resolve( new THREE.Object3D() ); } }() ).then( function ( node ) { if ( nodeDef.name !== undefined ) { node.name = THREE.PropertyBinding.sanitizeNodeName( nodeDef.name ); } assignExtrasToUserData( node, nodeDef ); if ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef ); if ( nodeDef.matrix !== undefined ) { var matrix = new THREE.Matrix4(); matrix.fromArray( nodeDef.matrix ); node.applyMatrix( matrix ); } else { if ( nodeDef.translation !== undefined ) { node.position.fromArray( nodeDef.translation ); } if ( nodeDef.rotation !== undefined ) { node.quaternion.fromArray( nodeDef.rotation ); } if ( nodeDef.scale !== undefined ) { node.scale.fromArray( nodeDef.scale ); } } return node; } ); }; /** * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes * @param {number} sceneIndex * @return {Promise<THREE.Scene>} */ GLTFParser.prototype.loadScene = function () { // scene node hierachy builder function buildNodeHierachy( nodeId, parentObject, json, parser ) { var nodeDef = json.nodes[ nodeId ]; return parser.getDependency( 'node', nodeId ).then( function ( node ) { if ( nodeDef.skin === undefined ) return node; // build skeleton here as well var skinEntry; return parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) { skinEntry = skin; var pendingJoints = []; for ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) { pendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) ); } return Promise.all( pendingJoints ); } ).then( function ( jointNodes ) { var meshes = node.isGroup === true ? node.children : [ node ]; for ( var i = 0, il = meshes.length; i < il; i ++ ) { var mesh = meshes[ i ]; var bones = []; var boneInverses = []; for ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) { var jointNode = jointNodes[ j ]; if ( jointNode ) { bones.push( jointNode ); var mat = new THREE.Matrix4(); if ( skinEntry.inverseBindMatrices !== undefined ) { mat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 ); } boneInverses.push( mat ); } else { console.warn( 'THREE.GLTFLoader: Joint "%s" could not be found.', skinEntry.joints[ j ] ); } } mesh.bind( new THREE.Skeleton( bones, boneInverses ), mesh.matrixWorld ); } return node; } ); } ).then( function ( node ) { // build node hierachy parentObject.add( node ); var pending = []; if ( nodeDef.children ) { var children = nodeDef.children; for ( var i = 0, il = children.length; i < il; i ++ ) { var child = children[ i ]; pending.push( buildNodeHierachy( child, node, json, parser ) ); } } return Promise.all( pending ); } ); } return function loadScene( sceneIndex ) { var json = this.json; var extensions = this.extensions; var sceneDef = this.json.scenes[ sceneIndex ]; var parser = this; var scene = new THREE.Scene(); if ( sceneDef.name !== undefined ) scene.name = sceneDef.name; assignExtrasToUserData( scene, sceneDef ); if ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef ); var nodeIds = sceneDef.nodes || []; var pending = []; for ( var i = 0, il = nodeIds.length; i < il; i ++ ) { pending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) ); } return Promise.all( pending ).then( function () { return scene; } ); }; }(); return GLTFLoader; } )(); ",
    "/** * Loads a Wavefront .mtl file specifying materials * * @author angelxuanchang */ THREE.MTLLoader = function ( manager ) { this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager; }; THREE.MTLLoader.prototype = { constructor: THREE.MTLLoader, /** * Loads and parses a MTL asset from a URL. * * @param {String} url - URL to the MTL file. * @param {Function} [onLoad] - Callback invoked with the loaded object. * @param {Function} [onProgress] - Callback for download progress. * @param {Function} [onError] - Callback for download errors. * * @see setPath setResourcePath * * @note In order for relative texture references to resolve correctly * you must call setResourcePath() explicitly prior to load. */ load: function ( url, onLoad, onProgress, onError ) { var scope = this; var path = ( this.path === undefined ) ? THREE.LoaderUtils.extractUrlBase( url ) : this.path; var loader = new THREE.FileLoader( this.manager ); loader.setPath( this.path ); loader.load( url, function ( text ) { onLoad( scope.parse( text, path ) ); }, onProgress, onError ); }, /** * Set base path for resolving references. * If set this path will be prepended to each loaded and found reference. * * @see setResourcePath * @param {String} path * @return {THREE.MTLLoader} * * @example * mtlLoader.setPath( 'assets/obj/' ); * mtlLoader.load( 'my.mtl', ... ); */ setPath: function ( path ) { this.path = path; return this; }, /** * Set base path for additional resources like textures. * * @see setPath * @param {String} path * @return {THREE.MTLLoader} * * @example * mtlLoader.setPath( 'assets/obj/' ); * mtlLoader.setResourcePath( 'assets/textures/' ); * mtlLoader.load( 'my.mtl', ... ); */ setResourcePath: function ( path ) { this.resourcePath = path; return this; }, setTexturePath: function ( path ) { console.warn( 'THREE.MTLLoader: .setTexturePath() has been renamed to .setResourcePath().' ); return this.setResourcePath( path ); }, setCrossOrigin: function ( value ) { this.crossOrigin = value; return this; }, setMaterialOptions: function ( value ) { this.materialOptions = value; return this; }, /** * Parses a MTL file. * * @param {String} text - Content of MTL file * @return {THREE.MTLLoader.MaterialCreator} * * @see setPath setResourcePath * * @note In order for relative texture references to resolve correctly * you must call setResourcePath() explicitly prior to parse. */ parse: function ( text, path ) { var lines = text.split( '\n' ); var info = {}; var delimiter_pattern = /\s+/; var materialsInfo = {}; for ( var i = 0; i < lines.length; i ++ ) { var line = lines[ i ]; line = line.trim(); if ( line.length === 0 || line.charAt( 0 ) === '#' ) { // Blank line or comment ignore continue; } var pos = line.indexOf( ' ' ); var key = ( pos >= 0 ) ? line.substring( 0, pos ) : line; key = key.toLowerCase(); var value = ( pos >= 0 ) ? line.substring( pos + 1 ) : ''; value = value.trim(); if ( key === 'newmtl' ) { // New material info = { name: value }; materialsInfo[ value ] = info; } else { if ( key === 'ka' || key === 'kd' || key === 'ks' || key ==='ke' ) { var ss = value.split( delimiter_pattern, 3 ); info[ key ] = [ parseFloat( ss[ 0 ] ), parseFloat( ss[ 1 ] ), parseFloat( ss[ 2 ] ) ]; } else { info[ key ] = value; } } } var materialCreator = new THREE.MTLLoader.MaterialCreator( this.resourcePath || path, this.materialOptions ); materialCreator.setCrossOrigin( this.crossOrigin ); materialCreator.setManager( this.manager ); materialCreator.setMaterials( materialsInfo ); return materialCreator; } }; /** * Create a new THREE-MTLLoader.MaterialCreator * @param baseUrl - Url relative to which textures are loaded * @param options - Set of options on how to construct the materials * side: Which side to apply the material * THREE.FrontSide (default), THREE.BackSide, THREE.DoubleSide * wrap: What type of wrapping to apply for textures * THREE.RepeatWrapping (default), THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping * normalizeRGB: RGBs need to be normalized to 0-1 from 0-255 * Default: false, assumed to be already normalized * ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's * Default: false * @constructor */ THREE.MTLLoader.MaterialCreator = function ( baseUrl, options ) { this.baseUrl = baseUrl || ''; this.options = options; this.materialsInfo = {}; this.materials = {}; this.materialsArray = []; this.nameLookup = {}; this.side = ( this.options && this.options.side ) ? this.options.side : THREE.FrontSide; this.wrap = ( this.options && this.options.wrap ) ? this.options.wrap : THREE.RepeatWrapping; }; THREE.MTLLoader.MaterialCreator.prototype = { constructor: THREE.MTLLoader.MaterialCreator, crossOrigin: 'anonymous', setCrossOrigin: function ( value ) { this.crossOrigin = value; return this; }, setManager: function ( value ) { this.manager = value; }, setMaterials: function ( materialsInfo ) { this.materialsInfo = this.convert( materialsInfo ); this.materials = {}; this.materialsArray = []; this.nameLookup = {}; }, convert: function ( materialsInfo ) { if ( ! this.options ) return materialsInfo; var converted = {}; for ( var mn in materialsInfo ) { // Convert materials info into normalized form based on options var mat = materialsInfo[ mn ]; var covmat = {}; converted[ mn ] = covmat; for ( var prop in mat ) { var save = true; var value = mat[ prop ]; var lprop = prop.toLowerCase(); switch ( lprop ) { case 'kd': case 'ka': case 'ks': // Diffuse color (color under white light) using RGB values if ( this.options && this.options.normalizeRGB ) { value = [ value[ 0 ] / 255, value[ 1 ] / 255, value[ 2 ] / 255 ]; } if ( this.options && this.options.ignoreZeroRGBs ) { if ( value[ 0 ] === 0 && value[ 1 ] === 0 && value[ 2 ] === 0 ) { // ignore save = false; } } break; default: break; } if ( save ) { covmat[ lprop ] = value; } } } return converted; }, preload: function () { for ( var mn in this.materialsInfo ) { this.create( mn ); } }, getIndex: function ( materialName ) { return this.nameLookup[ materialName ]; }, getAsArray: function () { var index = 0; for ( var mn in this.materialsInfo ) { this.materialsArray[ index ] = this.create( mn ); this.nameLookup[ mn ] = index; index ++; } return this.materialsArray; }, create: function ( materialName ) { if ( this.materials[ materialName ] === undefined ) { this.createMaterial_( materialName ); } return this.materials[ materialName ]; }, createMaterial_: function ( materialName ) { // Create material var scope = this; var mat = this.materialsInfo[ materialName ]; var params = { name: materialName, side: this.side }; function resolveURL( baseUrl, url ) { if ( typeof url !== 'string' || url === '' ) return ''; // Absolute URL if ( /^https?:\/\//i.test( url ) ) return url; return baseUrl + url; } function setMapForType( mapType, value ) { if ( params[ mapType ] ) return; // Keep the first encountered texture var texParams = scope.getTextureParams( value, params ); var map = scope.loadTexture( resolveURL( scope.baseUrl, texParams.url ) ); map.repeat.copy( texParams.scale ); map.offset.copy( texParams.offset ); map.wrapS = scope.wrap; map.wrapT = scope.wrap; params[ mapType ] = map; } for ( var prop in mat ) { var value = mat[ prop ]; var n; if ( value === '' ) continue; switch ( prop.toLowerCase() ) { // Ns is material specular exponent case 'kd': // Diffuse color (color under white light) using RGB values params.color = new THREE.Color().fromArray( value ); break; case 'ks': // Specular color (color when light is reflected from shiny surface) using RGB values params.specular = new THREE.Color().fromArray( value ); break; case 'ke': // Emissive using RGB values params.emissive = new THREE.Color().fromArray( value ); break; case 'map_kd': // Diffuse texture map setMapForType( "map", value ); break; case 'map_ks': // Specular map setMapForType( "specularMap", value ); break; case 'map_ke': // Emissive map setMapForType( "emissiveMap", value ); break; case 'norm': setMapForType( "normalMap", value ); break; case 'map_bump': case 'bump': // Bump texture map setMapForType( "bumpMap", value ); break; case 'map_d': // Alpha map setMapForType( "alphaMap", value ); params.transparent = true; break; case 'ns': // The specular exponent (defines the focus of the specular highlight) // A high exponent results in a tight, concentrated highlight. Ns values normally range from 0 to 1000. params.shininess = parseFloat( value ); break; case 'd': n = parseFloat( value ); if ( n < 1 ) { params.opacity = n; params.transparent = true; } break; case 'tr': n = parseFloat( value ); if ( this.options && this.options.invertTrProperty ) n = 1 - n; if ( n > 0 ) { params.opacity = 1 - n; params.transparent = true; } break; default: break; } } this.materials[ materialName ] = new THREE.MeshPhongMaterial( params ); return this.materials[ materialName ]; }, getTextureParams: function ( value, matParams ) { var texParams = { scale: new THREE.Vector2( 1, 1 ), offset: new THREE.Vector2( 0, 0 ) }; var items = value.split( /\s+/ ); var pos; pos = items.indexOf( '-bm' ); if ( pos >= 0 ) { matParams.bumpScale = parseFloat( items[ pos + 1 ] ); items.splice( pos, 2 ); } pos = items.indexOf( '-s' ); if ( pos >= 0 ) { texParams.scale.set( parseFloat( items[ pos + 1 ] ), parseFloat( items[ pos + 2 ] ) ); items.splice( pos, 4 ); // we expect 3 parameters here! } pos = items.indexOf( '-o' ); if ( pos >= 0 ) { texParams.offset.set( parseFloat( items[ pos + 1 ] ), parseFloat( items[ pos + 2 ] ) ); items.splice( pos, 4 ); // we expect 3 parameters here! } texParams.url = items.join( ' ' ).trim(); return texParams; }, loadTexture: function ( url, mapping, onLoad, onProgress, onError ) { var texture; var loader = THREE.Loader.Handlers.get( url ); var manager = ( this.manager !== undefined ) ? this.manager : THREE.DefaultLoadingManager; if ( loader === null ) { loader = new THREE.TextureLoader( manager ); } if ( loader.setCrossOrigin ) loader.setCrossOrigin( this.crossOrigin ); texture = loader.load( url, onLoad, onProgress, onError ); if ( mapping !== undefined ) texture.mapping = mapping; return texture; } }; ",
    "/** * @author mrdoob / http://mrdoob.com/ */ THREE.OBJLoader = ( function () { // o object_name | g group_name var object_pattern = /^[og]\s*(.+)?/; // mtllib file_reference var material_library_pattern = /^mtllib /; // usemtl material_name var material_use_pattern = /^usemtl /; function ParserState() { var state = { objects: [], object: {}, vertices: [], normals: [], colors: [], uvs: [], materialLibraries: [], startObject: function ( name, fromDeclaration ) { // If the current object (initial from reset) is not from a g/o declaration in the parsed // file. We need to use it for the first parsed g/o to keep things in sync. if ( this.object && this.object.fromDeclaration === false ) { this.object.name = name; this.object.fromDeclaration = ( fromDeclaration !== false ); return; } var previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined ); if ( this.object && typeof this.object._finalize === 'function' ) { this.object._finalize( true ); } this.object = { name: name || '', fromDeclaration: ( fromDeclaration !== false ), geometry: { vertices: [], normals: [], colors: [], uvs: [] }, materials: [], smooth: true, startMaterial: function ( name, libraries ) { var previous = this._finalize( false ); // New usemtl declaration overwrites an inherited material, except if faces were declared // after the material, then it must be preserved for proper MultiMaterial continuation. if ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) { this.materials.splice( previous.index, 1 ); } var material = { index: this.materials.length, name: name || '', mtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ), smooth: ( previous !== undefined ? previous.smooth : this.smooth ), groupStart: ( previous !== undefined ? previous.groupEnd : 0 ), groupEnd: - 1, groupCount: - 1, inherited: false, clone: function ( index ) { var cloned = { index: ( typeof index === 'number' ? index : this.index ), name: this.name, mtllib: this.mtllib, smooth: this.smooth, groupStart: 0, groupEnd: - 1, groupCount: - 1, inherited: false }; cloned.clone = this.clone.bind( cloned ); return cloned; } }; this.materials.push( material ); return material; }, currentMaterial: function () { if ( this.materials.length > 0 ) { return this.materials[ this.materials.length - 1 ]; } return undefined; }, _finalize: function ( end ) { var lastMultiMaterial = this.currentMaterial(); if ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) { lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3; lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart; lastMultiMaterial.inherited = false; } // Ignore objects tail materials if no face declarations followed them before a new o/g started. if ( end && this.materials.length > 1 ) { for ( var mi = this.materials.length - 1; mi >= 0; mi -- ) { if ( this.materials[ mi ].groupCount <= 0 ) { this.materials.splice( mi, 1 ); } } } // Guarantee at least one empty material, this makes the creation later more straight forward. if ( end && this.materials.length === 0 ) { this.materials.push( { name: '', smooth: this.smooth } ); } return lastMultiMaterial; } }; // Inherit previous objects material. // Spec tells us that a declared material must be set to all objects until a new material is declared. // If a usemtl declaration is encountered while this new object is being parsed, it will // overwrite the inherited material. Exception being that there was already face declarations // to the inherited material, then it will be preserved for proper MultiMaterial continuation. if ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) { var declared = previousMaterial.clone( 0 ); declared.inherited = true; this.object.materials.push( declared ); } this.objects.push( this.object ); }, finalize: function () { if ( this.object && typeof this.object._finalize === 'function' ) { this.object._finalize( true ); } }, parseVertexIndex: function ( value, len ) { var index = parseInt( value, 10 ); return ( index >= 0 ? index - 1 : index + len / 3 ) * 3; }, parseNormalIndex: function ( value, len ) { var index = parseInt( value, 10 ); return ( index >= 0 ? index - 1 : index + len / 3 ) * 3; }, parseUVIndex: function ( value, len ) { var index = parseInt( value, 10 ); return ( index >= 0 ? index - 1 : index + len / 2 ) * 2; }, addVertex: function ( a, b, c ) { var src = this.vertices; var dst = this.object.geometry.vertices; dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] ); dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] ); dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] ); }, addVertexPoint: function ( a ) { var src = this.vertices; var dst = this.object.geometry.vertices; dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] ); }, addVertexLine: function ( a ) { var src = this.vertices; var dst = this.object.geometry.vertices; dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] ); }, addNormal: function ( a, b, c ) { var src = this.normals; var dst = this.object.geometry.normals; dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] ); dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] ); dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] ); }, addColor: function ( a, b, c ) { var src = this.colors; var dst = this.object.geometry.colors; dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] ); dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] ); dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] ); }, addUV: function ( a, b, c ) { var src = this.uvs; var dst = this.object.geometry.uvs; dst.push( src[ a + 0 ], src[ a + 1 ] ); dst.push( src[ b + 0 ], src[ b + 1 ] ); dst.push( src[ c + 0 ], src[ c + 1 ] ); }, addUVLine: function ( a ) { var src = this.uvs; var dst = this.object.geometry.uvs; dst.push( src[ a + 0 ], src[ a + 1 ] ); }, addFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) { var vLen = this.vertices.length; var ia = this.parseVertexIndex( a, vLen ); var ib = this.parseVertexIndex( b, vLen ); var ic = this.parseVertexIndex( c, vLen ); this.addVertex( ia, ib, ic ); if ( ua !== undefined && ua !== '' ) { var uvLen = this.uvs.length; ia = this.parseUVIndex( ua, uvLen ); ib = this.parseUVIndex( ub, uvLen ); ic = this.parseUVIndex( uc, uvLen ); this.addUV( ia, ib, ic ); } if ( na !== undefined && na !== '' ) { // Normals are many times the same. If so, skip function call and parseInt. var nLen = this.normals.length; ia = this.parseNormalIndex( na, nLen ); ib = na === nb ? ia : this.parseNormalIndex( nb, nLen ); ic = na === nc ? ia : this.parseNormalIndex( nc, nLen ); this.addNormal( ia, ib, ic ); } if ( this.colors.length > 0 ) { this.addColor( ia, ib, ic ); } }, addPointGeometry: function ( vertices ) { this.object.geometry.type = 'Points'; var vLen = this.vertices.length; for ( var vi = 0, l = vertices.length; vi < l; vi ++ ) { this.addVertexPoint( this.parseVertexIndex( vertices[ vi ], vLen ) ); } }, addLineGeometry: function ( vertices, uvs ) { this.object.geometry.type = 'Line'; var vLen = this.vertices.length; var uvLen = this.uvs.length; for ( var vi = 0, l = vertices.length; vi < l; vi ++ ) { this.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) ); } for ( var uvi = 0, l = uvs.length; uvi < l; uvi ++ ) { this.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) ); } } }; state.startObject( '', false ); return state; } // function OBJLoader( manager ) { this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager; this.materials = null; } OBJLoader.prototype = { constructor: OBJLoader, load: function ( url, onLoad, onProgress, onError ) { var scope = this; var loader = new THREE.FileLoader( scope.manager ); loader.setPath( this.path ); loader.load( url, function ( text ) { onLoad( scope.parse( text ) ); }, onProgress, onError ); }, setPath: function ( value ) { this.path = value; return this; }, setMaterials: function ( materials ) { this.materials = materials; return this; }, parse: function ( text ) { console.time( 'OBJLoader' ); var state = new ParserState(); if ( text.indexOf( '\r\n' ) !== - 1 ) { // This is faster than String.split with regex that splits on both text = text.replace( /\r\n/g, '\n' ); } if ( text.indexOf( '\\\n' ) !== - 1 ) { // join lines separated by a line continuation character (\) text = text.replace( /\\\n/g, '' ); } var lines = text.split( '\n' ); var line = '', lineFirstChar = ''; var lineLength = 0; var result = []; // Faster to just trim left side of the line. Use if available. var trimLeft = ( typeof ''.trimLeft === 'function' ); for ( var i = 0, l = lines.length; i < l; i ++ ) { line = lines[ i ]; line = trimLeft ? line.trimLeft() : line.trim(); lineLength = line.length; if ( lineLength === 0 ) continue; lineFirstChar = line.charAt( 0 ); // @todo invoke passed in handler if any if ( lineFirstChar === '#' ) continue; if ( lineFirstChar === 'v' ) { var data = line.split( /\s+/ ); switch ( data[ 0 ] ) { case 'v': state.vertices.push( parseFloat( data[ 1 ] ), parseFloat( data[ 2 ] ), parseFloat( data[ 3 ] ) ); if ( data.length === 8 ) { state.colors.push( parseFloat( data[ 4 ] ), parseFloat( data[ 5 ] ), parseFloat( data[ 6 ] ) ); } break; case 'vn': state.normals.push( parseFloat( data[ 1 ] ), parseFloat( data[ 2 ] ), parseFloat( data[ 3 ] ) ); break; case 'vt': state.uvs.push( parseFloat( data[ 1 ] ), parseFloat( data[ 2 ] ) ); break; } } else if ( lineFirstChar === 'f' ) { var lineData = line.substr( 1 ).trim(); var vertexData = lineData.split( /\s+/ ); var faceVertices = []; // Parse the face vertex data into an easy to work with format for ( var j = 0, jl = vertexData.length; j < jl; j ++ ) { var vertex = vertexData[ j ]; if ( vertex.length > 0 ) { var vertexParts = vertex.split( '/' ); faceVertices.push( vertexParts ); } } // Draw an edge between the first vertex and all subsequent vertices to form an n-gon var v1 = faceVertices[ 0 ]; for ( var j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) { var v2 = faceVertices[ j ]; var v3 = faceVertices[ j + 1 ]; state.addFace( v1[ 0 ], v2[ 0 ], v3[ 0 ], v1[ 1 ], v2[ 1 ], v3[ 1 ], v1[ 2 ], v2[ 2 ], v3[ 2 ] ); } } else if ( lineFirstChar === 'l' ) { var lineParts = line.substring( 1 ).trim().split( " " ); var lineVertices = [], lineUVs = []; if ( line.indexOf( "/" ) === - 1 ) { lineVertices = lineParts; } else { for ( var li = 0, llen = lineParts.length; li < llen; li ++ ) { var parts = lineParts[ li ].split( "/" ); if ( parts[ 0 ] !== "" ) lineVertices.push( parts[ 0 ] ); if ( parts[ 1 ] !== "" ) lineUVs.push( parts[ 1 ] ); } } state.addLineGeometry( lineVertices, lineUVs ); } else if ( lineFirstChar === 'p' ) { var lineData = line.substr( 1 ).trim(); var pointData = lineData.split( " " ); state.addPointGeometry( pointData ); } else if ( ( result = object_pattern.exec( line ) ) !== null ) { // o object_name // or // g group_name // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869 // var name = result[ 0 ].substr( 1 ).trim(); var name = ( " " + result[ 0 ].substr( 1 ).trim() ).substr( 1 ); state.startObject( name ); } else if ( material_use_pattern.test( line ) ) { // material state.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries ); } else if ( material_library_pattern.test( line ) ) { // mtl file state.materialLibraries.push( line.substring( 7 ).trim() ); } else if ( lineFirstChar === 's' ) { result = line.split( ' ' ); // smooth shading // @todo Handle files that have varying smooth values for a set of faces inside one geometry, // but does not define a usemtl for each face set. // This should be detected and a dummy material created (later MultiMaterial and geometry groups). // This requires some care to not create extra material on each smooth value for "normal" obj files. // where explicit usemtl defines geometry groups. // Example asset: examples/models/obj/cerberus/Cerberus.obj /* * http://paulbourke.net/dataformats/obj/ * or * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf * * From chapter "Grouping" Syntax explanation "s group_number": * "group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off. * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form * surfaces, smoothing groups are either turned on or off; there is no difference between values greater * than 0." */ if ( result.length > 1 ) { var value = result[ 1 ].trim().toLowerCase(); state.object.smooth = ( value !== '0' && value !== 'off' ); } else { // ZBrush can produce "s" lines #11707 state.object.smooth = true; } var material = state.object.currentMaterial(); if ( material ) material.smooth = state.object.smooth; } else { // Handle null terminated files without exception if ( line === '\0' ) continue; throw new Error( 'THREE.OBJLoader: Unexpected line: "' + line + '"' ); } } state.finalize(); var container = new THREE.Group(); container.materialLibraries = [].concat( state.materialLibraries ); for ( var i = 0, l = state.objects.length; i < l; i ++ ) { var object = state.objects[ i ]; var geometry = object.geometry; var materials = object.materials; var isLine = ( geometry.type === 'Line' ); var isPoints = ( geometry.type === 'Points' ); var hasVertexColors = false; // Skip o/g line declarations that did not follow with any faces if ( geometry.vertices.length === 0 ) continue; var buffergeometry = new THREE.BufferGeometry(); buffergeometry.addAttribute( 'position', new THREE.Float32BufferAttribute( geometry.vertices, 3 ) ); if ( geometry.normals.length > 0 ) { buffergeometry.addAttribute( 'normal', new THREE.Float32BufferAttribute( geometry.normals, 3 ) ); } else { buffergeometry.computeVertexNormals(); } if ( geometry.colors.length > 0 ) { hasVertexColors = true; buffergeometry.addAttribute( 'color', new THREE.Float32BufferAttribute( geometry.colors, 3 ) ); } if ( geometry.uvs.length > 0 ) { buffergeometry.addAttribute( 'uv', new THREE.Float32BufferAttribute( geometry.uvs, 2 ) ); } // Create materials var createdMaterials = []; for ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) { var sourceMaterial = materials[ mi ]; var material = undefined; if ( this.materials !== null ) { material = this.materials.create( sourceMaterial.name ); // mtl etc. loaders probably can't create line materials correctly, copy properties to a line material. if ( isLine && material && ! ( material instanceof THREE.LineBasicMaterial ) ) { var materialLine = new THREE.LineBasicMaterial(); THREE.Material.prototype.copy.call( materialLine, material ); materialLine.color.copy( material.color ); materialLine.lights = false; material = materialLine; } else if ( isPoints && material && ! ( material instanceof THREE.PointsMaterial ) ) { var materialPoints = new THREE.PointsMaterial( { size: 10, sizeAttenuation: false } ); THREE.Material.prototype.copy.call( materialPoints, material ); materialPoints.color.copy( material.color ); materialPoints.map = material.map; materialPoints.lights = false; material = materialPoints; } } if ( ! material ) { if ( isLine ) { material = new THREE.LineBasicMaterial(); } else if ( isPoints ) { material = new THREE.PointsMaterial( { size: 1, sizeAttenuation: false } ); } else { material = new THREE.MeshPhongMaterial(); } material.name = sourceMaterial.name; } material.flatShading = sourceMaterial.smooth ? false : true; material.vertexColors = hasVertexColors ? THREE.VertexColors : THREE.NoColors; createdMaterials.push( material ); } // Create mesh var mesh; if ( createdMaterials.length > 1 ) { for ( var mi = 0, miLen = materials.length; mi < miLen; mi ++ ) { var sourceMaterial = materials[ mi ]; buffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi ); } if ( isLine ) { mesh = new THREE.LineSegments( buffergeometry, createdMaterials ); } else if ( isPoints ) { mesh = new THREE.Points( buffergeometry, createdMaterials ); } else { mesh = new THREE.Mesh( buffergeometry, createdMaterials ); } } else { if ( isLine ) { mesh = new THREE.LineSegments( buffergeometry, createdMaterials[ 0 ] ); } else if ( isPoints ) { mesh = new THREE.Points( buffergeometry, createdMaterials[ 0 ] ); } else { mesh = new THREE.Mesh( buffergeometry, createdMaterials[ 0 ] ); } } mesh.name = object.name; container.add( mesh ); } console.timeEnd( 'OBJLoader' ); return container; } }; return OBJLoader; } )(); ",
    "var createLayout = require('layout-bmfont-text') var inherits = require('inherits') var createIndices = require('quad-indices') var buffer = require('three-buffer-vertex-data') var assign = require('object-assign') var vertices = require('./lib/vertices') var utils = require('./lib/utils') var Base = THREE.BufferGeometry module.exports = function createTextGeometry (opt) { return new TextGeometry(opt) } function TextGeometry (opt) { Base.call(this) if (typeof opt === 'string') { opt = { text: opt } } // use these as default values for any subsequent // calls to update() this._opt = assign({}, opt) // also do an initial setup... if (opt) this.update(opt) } inherits(TextGeometry, Base) TextGeometry.prototype.update = function (opt) { if (typeof opt === 'string') { opt = { text: opt } } // use constructor defaults opt = assign({}, this._opt, opt) if (!opt.font) { throw new TypeError('must specify a { font } in options') } this.layout = createLayout(opt) // get vec2 texcoords var flipY = opt.flipY !== false // the desired BMFont data var font = opt.font // determine texture size from font file var texWidth = font.common.scaleW var texHeight = font.common.scaleH // get visible glyphs var glyphs = this.layout.glyphs.filter(function (glyph) { var bitmap = glyph.data return bitmap.width * bitmap.height > 0 }) // provide visible glyphs for convenience this.visibleGlyphs = glyphs // get common vertex data var positions = vertices.positions(glyphs) var uvs = vertices.uvs(glyphs, texWidth, texHeight, flipY) var indices = createIndices({ clockwise: true, type: 'uint16', count: glyphs.length }) // update vertex data buffer.index(this, indices, 1, 'uint16') buffer.attr(this, 'position', positions, 2) buffer.attr(this, 'uv', uvs, 2) // update multipage data if (!opt.multipage && 'page' in this.attributes) { // disable multipage rendering this.removeAttribute('page') } else if (opt.multipage) { var pages = vertices.pages(glyphs) // enable multipage rendering buffer.attr(this, 'page', pages, 1) } } TextGeometry.prototype.computeBoundingSphere = function () { if (this.boundingSphere === null) { this.boundingSphere = new THREE.Sphere() } var positions = this.attributes.position.array var itemSize = this.attributes.position.itemSize if (!positions || !itemSize || positions.length < 2) { this.boundingSphere.radius = 0 this.boundingSphere.center.set(0, 0, 0) return } utils.computeSphere(positions, this.boundingSphere) if (isNaN(this.boundingSphere.radius)) { console.error('THREE.BufferGeometry.computeBoundingSphere(): ' + 'Computed radius is NaN. The ' + '"position" attribute is likely to have NaN values.') } } TextGeometry.prototype.computeBoundingBox = function () { if (this.boundingBox === null) { this.boundingBox = new THREE.Box3() } var bbox = this.boundingBox var positions = this.attributes.position.array var itemSize = this.attributes.position.itemSize if (!positions || !itemSize || positions.length < 2) { bbox.makeEmpty() return } utils.computeBox(positions, bbox) } ",
    "var itemSize = 2 var box = { min: [0, 0], max: [0, 0] } function bounds (positions) { var count = positions.length / itemSize box.min[0] = positions[0] box.min[1] = positions[1] box.max[0] = positions[0] box.max[1] = positions[1] for (var i = 0; i < count; i++) { var x = positions[i * itemSize + 0] var y = positions[i * itemSize + 1] box.min[0] = Math.min(x, box.min[0]) box.min[1] = Math.min(y, box.min[1]) box.max[0] = Math.max(x, box.max[0]) box.max[1] = Math.max(y, box.max[1]) } } module.exports.computeBox = function (positions, output) { bounds(positions) output.min.set(box.min[0], box.min[1], 0) output.max.set(box.max[0], box.max[1], 0) } module.exports.computeSphere = function (positions, output) { bounds(positions) var minX = box.min[0] var minY = box.min[1] var maxX = box.max[0] var maxY = box.max[1] var width = maxX - minX var height = maxY - minY var length = Math.sqrt(width * width + height * height) output.center.set(minX + width / 2, minY + height / 2, 0) output.radius = length / 2 } ",
    "module.exports.pages = function pages (glyphs) { var pages = new Float32Array(glyphs.length * 4 * 1) var i = 0 glyphs.forEach(function (glyph) { var id = glyph.data.page || 0 pages[i++] = id pages[i++] = id pages[i++] = id pages[i++] = id }) return pages } module.exports.uvs = function uvs (glyphs, texWidth, texHeight, flipY) { var uvs = new Float32Array(glyphs.length * 4 * 2) var i = 0 glyphs.forEach(function (glyph) { var bitmap = glyph.data var bw = (bitmap.x + bitmap.width) var bh = (bitmap.y + bitmap.height) // top left position var u0 = bitmap.x / texWidth var v1 = bitmap.y / texHeight var u1 = bw / texWidth var v0 = bh / texHeight if (flipY) { v1 = (texHeight - bitmap.y) / texHeight v0 = (texHeight - bh) / texHeight } // BL uvs[i++] = u0 uvs[i++] = v1 // TL uvs[i++] = u0 uvs[i++] = v0 // TR uvs[i++] = u1 uvs[i++] = v0 // BR uvs[i++] = u1 uvs[i++] = v1 }) return uvs } module.exports.positions = function positions (glyphs) { var positions = new Float32Array(glyphs.length * 4 * 2) var i = 0 glyphs.forEach(function (glyph) { var bitmap = glyph.data // bottom left position var x = glyph.position[0] + bitmap.xoffset var y = glyph.position[1] + bitmap.yoffset // quad size var w = bitmap.width var h = bitmap.height // BL positions[i++] = x positions[i++] = y // TL positions[i++] = x positions[i++] = y + h // TR positions[i++] = x + w positions[i++] = y + h // BR positions[i++] = x + w positions[i++] = y }) return positions } ",
    "var flatten = require('flatten-vertex-data') var warned = false; module.exports.attr = setAttribute module.exports.index = setIndex function setIndex (geometry, data, itemSize, dtype) { if (typeof itemSize !== 'number') itemSize = 1 if (typeof dtype !== 'string') dtype = 'uint16' var isR69 = !geometry.index && typeof geometry.setIndex !== 'function' var attrib = isR69 ? geometry.getAttribute('index') : geometry.index var newAttrib = updateAttribute(attrib, data, itemSize, dtype) if (newAttrib) { if (isR69) geometry.addAttribute('index', newAttrib) else geometry.index = newAttrib } } function setAttribute (geometry, key, data, itemSize, dtype) { if (typeof itemSize !== 'number') itemSize = 3 if (typeof dtype !== 'string') dtype = 'float32' if (Array.isArray(data) && Array.isArray(data[0]) && data[0].length !== itemSize) { throw new Error('Nested vertex array has unexpected size; expected ' + itemSize + ' but found ' + data[0].length) } var attrib = geometry.getAttribute(key) var newAttrib = updateAttribute(attrib, data, itemSize, dtype) if (newAttrib) { geometry.addAttribute(key, newAttrib) } } function updateAttribute (attrib, data, itemSize, dtype) { data = data || [] if (!attrib || rebuildAttribute(attrib, data, itemSize)) { // create a new array with desired type data = flatten(data, dtype) var needsNewBuffer = attrib && typeof attrib.setArray !== 'function' if (!attrib || needsNewBuffer) { // We are on an old version of ThreeJS which can't // support growing / shrinking buffers, so we need // to build a new buffer if (needsNewBuffer && !warned) { warned = true console.warn([ 'A WebGL buffer is being updated with a new size or itemSize, ', 'however this version of ThreeJS only supports fixed-size buffers.', '\nThe old buffer may still be kept in memory.\n', 'To avoid memory leaks, it is recommended that you dispose ', 'your geometries and create new ones, or update to ThreeJS r82 or newer.\n', 'See here for discussion:\n', 'https://github.com/mrdoob/three.js/pull/9631' ].join('')) } // Build a new attribute attrib = new THREE.BufferAttribute(data, itemSize); } attrib.itemSize = itemSize attrib.needsUpdate = true // New versions of ThreeJS suggest using setArray // to change the data. It will use bufferData internally, // so you can change the array size without any issues if (typeof attrib.setArray === 'function') { attrib.setArray(data) } return attrib } else { // copy data into the existing array flatten(data, attrib.array) attrib.needsUpdate = true return null } } // Test whether the attribute needs to be re-created, // returns false if we can re-use it as-is. function rebuildAttribute (attrib, data, itemSize) { if (attrib.itemSize !== itemSize) return true if (!attrib.array) return true var attribLength = attrib.array.length if (Array.isArray(data) && Array.isArray(data[0])) { // [ [ x, y, z ] ] return attribLength !== data.length * itemSize } else { // [ x, y, z ] return attribLength !== data.length } return false } ",
    "var nextTick = require('process/browser.js').nextTick; var apply = Function.prototype.apply; var slice = Array.prototype.slice; var immediateIds = {}; var nextImmediateId = 0; // DOM APIs, for completeness exports.setTimeout = function() { return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout); }; exports.setInterval = function() { return new Timeout(apply.call(setInterval, window, arguments), clearInterval); }; exports.clearTimeout = exports.clearInterval = function(timeout) { timeout.close(); }; function Timeout(id, clearFn) { this._id = id; this._clearFn = clearFn; } Timeout.prototype.unref = Timeout.prototype.ref = function() {}; Timeout.prototype.close = function() { this._clearFn.call(window, this._id); }; // Does not start the time, just sets up the members needed. exports.enroll = function(item, msecs) { clearTimeout(item._idleTimeoutId); item._idleTimeout = msecs; }; exports.unenroll = function(item) { clearTimeout(item._idleTimeoutId); item._idleTimeout = -1; }; exports._unrefActive = exports.active = function(item) { clearTimeout(item._idleTimeoutId); var msecs = item._idleTimeout; if (msecs >= 0) { item._idleTimeoutId = setTimeout(function onTimeout() { if (item._onTimeout) item._onTimeout(); }, msecs); } }; // That's not how node.js implements it but the exposed api is the same. exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) { var id = nextImmediateId++; var args = arguments.length < 2 ? false : slice.call(arguments, 1); immediateIds[id] = true; nextTick(function onNextTick() { if (immediateIds[id]) { // fn.call() is faster so we optimize for the common use-case // @see http://jsperf.com/call-apply-segu if (args) { fn.apply(null, args); } else { fn.call(null); } // Prevent ids from leaking exports.clearImmediate(id); } }); return id; }; exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) { delete immediateIds[id]; };",
    " exports = module.exports = trim; function trim(str){ return str.replace(/^\s*|\s*$/g, ''); } exports.left = function(str){ return str.replace(/^\s*/, ''); }; exports.right = function(str){ return str.replace(/\s*$/, ''); }; ",
    "/** * @license * webvr-polyfill * Copyright (c) 2015-2017 Google * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @license * cardboard-vr-display * Copyright (c) 2015-2017 Google * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @license * webvr-polyfill-dpdb * Copyright (c) 2017 Google * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @license * wglu-preserve-state * Copyright (c) 2016, Brandon Jones. * * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. */ /** * @license * nosleep.js * Copyright (c) 2017, Rich Tibbett * * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. */ (function (global, factory) { typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global.WebVRPolyfill = factory()); }(this, (function () { 'use strict'; var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {}; function unwrapExports (x) { return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x; } function createCommonjsModule(fn, module) { return module = { exports: {} }, fn(module, module.exports), module.exports; } var isMobile = function isMobile() { return (/Android/i.test(navigator.userAgent) || /iPhone|iPad|iPod/i.test(navigator.userAgent) ); }; var copyArray = function copyArray(source, dest) { for (var i = 0, n = source.length; i < n; i++) { dest[i] = source[i]; } }; var extend = function extend(dest, src) { for (var key in src) { if (src.hasOwnProperty(key)) { dest[key] = src[key]; } } return dest; }; var cardboardVrDisplay = createCommonjsModule(function (module, exports) { /** * @license * cardboard-vr-display * Copyright (c) 2015-2017 Google * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @license * gl-preserve-state * Copyright (c) 2016, Brandon Jones. * * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. */ /** * @license * webvr-polyfill-dpdb * Copyright (c) 2015-2017 Google * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @license * nosleep.js * Copyright (c) 2017, Rich Tibbett * * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. */ (function (global, factory) { module.exports = factory(); }(commonjsGlobal, (function () { var classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }; var createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); var slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }(); var MIN_TIMESTEP = 0.001; var MAX_TIMESTEP = 1; var dataUri = function dataUri(mimeType, svg) { return 'data:' + mimeType + ',' + encodeURIComponent(svg); }; var lerp = function lerp(a, b, t) { return a + (b - a) * t; }; var isIOS = function () { var isIOS = /iPad|iPhone|iPod/.test(navigator.platform); return function () { return isIOS; }; }(); var isWebViewAndroid = function () { var isWebViewAndroid = navigator.userAgent.indexOf('Version') !== -1 && navigator.userAgent.indexOf('Android') !== -1 && navigator.userAgent.indexOf('Chrome') !== -1; return function () { return isWebViewAndroid; }; }(); var isSafari = function () { var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent); return function () { return isSafari; }; }(); var isFirefoxAndroid = function () { var isFirefoxAndroid = navigator.userAgent.indexOf('Firefox') !== -1 && navigator.userAgent.indexOf('Android') !== -1; return function () { return isFirefoxAndroid; }; }(); var getChromeVersion = function () { var match = navigator.userAgent.match(/.*Chrome\/([0-9]+)/); var value = match ? parseInt(match[1], 10) : null; return function () { return value; }; }(); var isChromeWithoutDeviceMotion = function () { var value = false; if (getChromeVersion() === 65) { var match = navigator.userAgent.match(/.*Chrome\/([0-9\.]*)/); if (match) { var _match$1$split = match[1].split('.'), _match$1$split2 = slicedToArray(_match$1$split, 4), major = _match$1$split2[0], minor = _match$1$split2[1], branch = _match$1$split2[2], build = _match$1$split2[3]; value = parseInt(branch, 10) === 3325 && parseInt(build, 10) < 148; } } return function () { return value; }; }(); var isR7 = function () { var isR7 = navigator.userAgent.indexOf('R7 Build') !== -1; return function () { return isR7; }; }(); var isLandscapeMode = function isLandscapeMode() { var rtn = window.orientation == 90 || window.orientation == -90; return isR7() ? !rtn : rtn; }; var isTimestampDeltaValid = function isTimestampDeltaValid(timestampDeltaS) { if (isNaN(timestampDeltaS)) { return false; } if (timestampDeltaS <= MIN_TIMESTEP) { return false; } if (timestampDeltaS > MAX_TIMESTEP) { return false; } return true; }; var getScreenWidth = function getScreenWidth() { return Math.max(window.screen.width, window.screen.height) * window.devicePixelRatio; }; var getScreenHeight = function getScreenHeight() { return Math.min(window.screen.width, window.screen.height) * window.devicePixelRatio; }; var requestFullscreen = function requestFullscreen(element) { if (isWebViewAndroid()) { return false; } if (element.requestFullscreen) { element.requestFullscreen(); } else if (element.webkitRequestFullscreen) { element.webkitRequestFullscreen(); } else if (element.mozRequestFullScreen) { element.mozRequestFullScreen(); } else if (element.msRequestFullscreen) { element.msRequestFullscreen(); } else { return false; } return true; }; var exitFullscreen = function exitFullscreen() { if (document.exitFullscreen) { document.exitFullscreen(); } else if (document.webkitExitFullscreen) { document.webkitExitFullscreen(); } else if (document.mozCancelFullScreen) { document.mozCancelFullScreen(); } else if (document.msExitFullscreen) { document.msExitFullscreen(); } else { return false; } return true; }; var getFullscreenElement = function getFullscreenElement() { return document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement; }; var linkProgram = function linkProgram(gl, vertexSource, fragmentSource, attribLocationMap) { var vertexShader = gl.createShader(gl.VERTEX_SHADER); gl.shaderSource(vertexShader, vertexSource); gl.compileShader(vertexShader); var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER); gl.shaderSource(fragmentShader, fragmentSource); gl.compileShader(fragmentShader); var program = gl.createProgram(); gl.attachShader(program, vertexShader); gl.attachShader(program, fragmentShader); for (var attribName in attribLocationMap) { gl.bindAttribLocation(program, attribLocationMap[attribName], attribName); }gl.linkProgram(program); gl.deleteShader(vertexShader); gl.deleteShader(fragmentShader); return program; }; var getProgramUniforms = function getProgramUniforms(gl, program) { var uniforms = {}; var uniformCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS); var uniformName = ''; for (var i = 0; i < uniformCount; i++) { var uniformInfo = gl.getActiveUniform(program, i); uniformName = uniformInfo.name.replace('[0]', ''); uniforms[uniformName] = gl.getUniformLocation(program, uniformName); } return uniforms; }; var orthoMatrix = function orthoMatrix(out, left, right, bottom, top, near, far) { var lr = 1 / (left - right), bt = 1 / (bottom - top), nf = 1 / (near - far); out[0] = -2 * lr; out[1] = 0; out[2] = 0; out[3] = 0; out[4] = 0; out[5] = -2 * bt; out[6] = 0; out[7] = 0; out[8] = 0; out[9] = 0; out[10] = 2 * nf; out[11] = 0; out[12] = (left + right) * lr; out[13] = (top + bottom) * bt; out[14] = (far + near) * nf; out[15] = 1; return out; }; var isMobile = function isMobile() { var check = false; (function (a) { if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor || window.opera); return check; }; var extend = function extend(dest, src) { for (var key in src) { if (src.hasOwnProperty(key)) { dest[key] = src[key]; } } return dest; }; var safariCssSizeWorkaround = function safariCssSizeWorkaround(canvas) { if (isIOS()) { var width = canvas.style.width; var height = canvas.style.height; canvas.style.width = parseInt(width) + 1 + 'px'; canvas.style.height = parseInt(height) + 'px'; setTimeout(function () { canvas.style.width = width; canvas.style.height = height; }, 100); } window.canvas = canvas; }; var frameDataFromPose = function () { var piOver180 = Math.PI / 180.0; var rad45 = Math.PI * 0.25; function mat4_perspectiveFromFieldOfView(out, fov, near, far) { var upTan = Math.tan(fov ? fov.upDegrees * piOver180 : rad45), downTan = Math.tan(fov ? fov.downDegrees * piOver180 : rad45), leftTan = Math.tan(fov ? fov.leftDegrees * piOver180 : rad45), rightTan = Math.tan(fov ? fov.rightDegrees * piOver180 : rad45), xScale = 2.0 / (leftTan + rightTan), yScale = 2.0 / (upTan + downTan); out[0] = xScale; out[1] = 0.0; out[2] = 0.0; out[3] = 0.0; out[4] = 0.0; out[5] = yScale; out[6] = 0.0; out[7] = 0.0; out[8] = -((leftTan - rightTan) * xScale * 0.5); out[9] = (upTan - downTan) * yScale * 0.5; out[10] = far / (near - far); out[11] = -1.0; out[12] = 0.0; out[13] = 0.0; out[14] = far * near / (near - far); out[15] = 0.0; return out; } function mat4_fromRotationTranslation(out, q, v) { var x = q[0], y = q[1], z = q[2], w = q[3], x2 = x + x, y2 = y + y, z2 = z + z, xx = x * x2, xy = x * y2, xz = x * z2, yy = y * y2, yz = y * z2, zz = z * z2, wx = w * x2, wy = w * y2, wz = w * z2; out[0] = 1 - (yy + zz); out[1] = xy + wz; out[2] = xz - wy; out[3] = 0; out[4] = xy - wz; out[5] = 1 - (xx + zz); out[6] = yz + wx; out[7] = 0; out[8] = xz + wy; out[9] = yz - wx; out[10] = 1 - (xx + yy); out[11] = 0; out[12] = v[0]; out[13] = v[1]; out[14] = v[2]; out[15] = 1; return out; } function mat4_translate(out, a, v) { var x = v[0], y = v[1], z = v[2], a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23; if (a === out) { out[12] = a[0] * x + a[4] * y + a[8] * z + a[12]; out[13] = a[1] * x + a[5] * y + a[9] * z + a[13]; out[14] = a[2] * x + a[6] * y + a[10] * z + a[14]; out[15] = a[3] * x + a[7] * y + a[11] * z + a[15]; } else { a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3]; a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7]; a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11]; out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03; out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13; out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23; out[12] = a00 * x + a10 * y + a20 * z + a[12]; out[13] = a01 * x + a11 * y + a21 * z + a[13]; out[14] = a02 * x + a12 * y + a22 * z + a[14]; out[15] = a03 * x + a13 * y + a23 * z + a[15]; } return out; } function mat4_invert(out, a) { var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3], a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7], a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11], a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15], b00 = a00 * a11 - a01 * a10, b01 = a00 * a12 - a02 * a10, b02 = a00 * a13 - a03 * a10, b03 = a01 * a12 - a02 * a11, b04 = a01 * a13 - a03 * a11, b05 = a02 * a13 - a03 * a12, b06 = a20 * a31 - a21 * a30, b07 = a20 * a32 - a22 * a30, b08 = a20 * a33 - a23 * a30, b09 = a21 * a32 - a22 * a31, b10 = a21 * a33 - a23 * a31, b11 = a22 * a33 - a23 * a32, det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06; if (!det) { return null; } det = 1.0 / det; out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det; out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det; out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det; out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det; out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det; out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det; out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det; out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det; out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det; out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det; out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det; out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det; out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det; out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det; out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det; out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det; return out; } var defaultOrientation = new Float32Array([0, 0, 0, 1]); var defaultPosition = new Float32Array([0, 0, 0]); function updateEyeMatrices(projection, view, pose, fov, offset, vrDisplay) { mat4_perspectiveFromFieldOfView(projection, fov || null, vrDisplay.depthNear, vrDisplay.depthFar); var orientation = pose.orientation || defaultOrientation; var position = pose.position || defaultPosition; mat4_fromRotationTranslation(view, orientation, position); if (offset) mat4_translate(view, view, offset); mat4_invert(view, view); } return function (frameData, pose, vrDisplay) { if (!frameData || !pose) return false; frameData.pose = pose; frameData.timestamp = pose.timestamp; updateEyeMatrices(frameData.leftProjectionMatrix, frameData.leftViewMatrix, pose, vrDisplay._getFieldOfView("left"), vrDisplay._getEyeOffset("left"), vrDisplay); updateEyeMatrices(frameData.rightProjectionMatrix, frameData.rightViewMatrix, pose, vrDisplay._getFieldOfView("right"), vrDisplay._getEyeOffset("right"), vrDisplay); return true; }; }(); var isInsideCrossOriginIFrame = function isInsideCrossOriginIFrame() { var isFramed = window.self !== window.top; var refOrigin = getOriginFromUrl(document.referrer); var thisOrigin = getOriginFromUrl(window.location.href); return isFramed && refOrigin !== thisOrigin; }; var getOriginFromUrl = function getOriginFromUrl(url) { var domainIdx; var protoSepIdx = url.indexOf("://"); if (protoSepIdx !== -1) { domainIdx = protoSepIdx + 3; } else { domainIdx = 0; } var domainEndIdx = url.indexOf('/', domainIdx); if (domainEndIdx === -1) { domainEndIdx = url.length; } return url.substring(0, domainEndIdx); }; var getQuaternionAngle = function getQuaternionAngle(quat) { if (quat.w > 1) { console.warn('getQuaternionAngle: w > 1'); return 0; } var angle = 2 * Math.acos(quat.w); return angle; }; var warnOnce = function () { var observedWarnings = {}; return function (key, message) { if (observedWarnings[key] === undefined) { console.warn('webvr-polyfill: ' + message); observedWarnings[key] = true; } }; }(); var deprecateWarning = function deprecateWarning(deprecated, suggested) { var alternative = suggested ? 'Please use ' + suggested + ' instead.' : ''; warnOnce(deprecated, deprecated + ' has been deprecated. ' + 'This may not work on native WebVR displays. ' + alternative); }; function WGLUPreserveGLState(gl, bindings, callback) { if (!bindings) { callback(gl); return; } var boundValues = []; var activeTexture = null; for (var i = 0; i < bindings.length; ++i) { var binding = bindings[i]; switch (binding) { case gl.TEXTURE_BINDING_2D: case gl.TEXTURE_BINDING_CUBE_MAP: var textureUnit = bindings[++i]; if (textureUnit < gl.TEXTURE0 || textureUnit > gl.TEXTURE31) { console.error("TEXTURE_BINDING_2D or TEXTURE_BINDING_CUBE_MAP must be followed by a valid texture unit"); boundValues.push(null, null); break; } if (!activeTexture) { activeTexture = gl.getParameter(gl.ACTIVE_TEXTURE); } gl.activeTexture(textureUnit); boundValues.push(gl.getParameter(binding), null); break; case gl.ACTIVE_TEXTURE: activeTexture = gl.getParameter(gl.ACTIVE_TEXTURE); boundValues.push(null); break; default: boundValues.push(gl.getParameter(binding)); break; } } callback(gl); for (var i = 0; i < bindings.length; ++i) { var binding = bindings[i]; var boundValue = boundValues[i]; switch (binding) { case gl.ACTIVE_TEXTURE: break; case gl.ARRAY_BUFFER_BINDING: gl.bindBuffer(gl.ARRAY_BUFFER, boundValue); break; case gl.COLOR_CLEAR_VALUE: gl.clearColor(boundValue[0], boundValue[1], boundValue[2], boundValue[3]); break; case gl.COLOR_WRITEMASK: gl.colorMask(boundValue[0], boundValue[1], boundValue[2], boundValue[3]); break; case gl.CURRENT_PROGRAM: gl.useProgram(boundValue); break; case gl.ELEMENT_ARRAY_BUFFER_BINDING: gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, boundValue); break; case gl.FRAMEBUFFER_BINDING: gl.bindFramebuffer(gl.FRAMEBUFFER, boundValue); break; case gl.RENDERBUFFER_BINDING: gl.bindRenderbuffer(gl.RENDERBUFFER, boundValue); break; case gl.TEXTURE_BINDING_2D: var textureUnit = bindings[++i]; if (textureUnit < gl.TEXTURE0 || textureUnit > gl.TEXTURE31) break; gl.activeTexture(textureUnit); gl.bindTexture(gl.TEXTURE_2D, boundValue); break; case gl.TEXTURE_BINDING_CUBE_MAP: var textureUnit = bindings[++i]; if (textureUnit < gl.TEXTURE0 || textureUnit > gl.TEXTURE31) break; gl.activeTexture(textureUnit); gl.bindTexture(gl.TEXTURE_CUBE_MAP, boundValue); break; case gl.VIEWPORT: gl.viewport(boundValue[0], boundValue[1], boundValue[2], boundValue[3]); break; case gl.BLEND: case gl.CULL_FACE: case gl.DEPTH_TEST: case gl.SCISSOR_TEST: case gl.STENCIL_TEST: if (boundValue) { gl.enable(binding); } else { gl.disable(binding); } break; default: console.log("No GL restore behavior for 0x" + binding.toString(16)); break; } if (activeTexture) { gl.activeTexture(activeTexture); } } } var glPreserveState = WGLUPreserveGLState; var distortionVS = ['attribute vec2 position;', 'attribute vec3 texCoord;', 'varying vec2 vTexCoord;', 'uniform vec4 viewportOffsetScale[2];', 'void main() {', ' vec4 viewport = viewportOffsetScale[int(texCoord.z)];', ' vTexCoord = (texCoord.xy * viewport.zw) + viewport.xy;', ' gl_Position = vec4( position, 1.0, 1.0 );', '}'].join('\n'); var distortionFS = ['precision mediump float;', 'uniform sampler2D diffuse;', 'varying vec2 vTexCoord;', 'void main() {', ' gl_FragColor = texture2D(diffuse, vTexCoord);', '}'].join('\n'); function CardboardDistorter(gl, cardboardUI, bufferScale, dirtySubmitFrameBindings) { this.gl = gl; this.cardboardUI = cardboardUI; this.bufferScale = bufferScale; this.dirtySubmitFrameBindings = dirtySubmitFrameBindings; this.ctxAttribs = gl.getContextAttributes(); this.meshWidth = 20; this.meshHeight = 20; this.bufferWidth = gl.drawingBufferWidth; this.bufferHeight = gl.drawingBufferHeight; this.realBindFramebuffer = gl.bindFramebuffer; this.realEnable = gl.enable; this.realDisable = gl.disable; this.realColorMask = gl.colorMask; this.realClearColor = gl.clearColor; this.realViewport = gl.viewport; if (!isIOS()) { this.realCanvasWidth = Object.getOwnPropertyDescriptor(gl.canvas.__proto__, 'width'); this.realCanvasHeight = Object.getOwnPropertyDescriptor(gl.canvas.__proto__, 'height'); } this.isPatched = false; this.lastBoundFramebuffer = null; this.cullFace = false; this.depthTest = false; this.blend = false; this.scissorTest = false; this.stencilTest = false; this.viewport = [0, 0, 0, 0]; this.colorMask = [true, true, true, true]; this.clearColor = [0, 0, 0, 0]; this.attribs = { position: 0, texCoord: 1 }; this.program = linkProgram(gl, distortionVS, distortionFS, this.attribs); this.uniforms = getProgramUniforms(gl, this.program); this.viewportOffsetScale = new Float32Array(8); this.setTextureBounds(); this.vertexBuffer = gl.createBuffer(); this.indexBuffer = gl.createBuffer(); this.indexCount = 0; this.renderTarget = gl.createTexture(); this.framebuffer = gl.createFramebuffer(); this.depthStencilBuffer = null; this.depthBuffer = null; this.stencilBuffer = null; if (this.ctxAttribs.depth && this.ctxAttribs.stencil) { this.depthStencilBuffer = gl.createRenderbuffer(); } else if (this.ctxAttribs.depth) { this.depthBuffer = gl.createRenderbuffer(); } else if (this.ctxAttribs.stencil) { this.stencilBuffer = gl.createRenderbuffer(); } this.patch(); this.onResize(); } CardboardDistorter.prototype.destroy = function () { var gl = this.gl; this.unpatch(); gl.deleteProgram(this.program); gl.deleteBuffer(this.vertexBuffer); gl.deleteBuffer(this.indexBuffer); gl.deleteTexture(this.renderTarget); gl.deleteFramebuffer(this.framebuffer); if (this.depthStencilBuffer) { gl.deleteRenderbuffer(this.depthStencilBuffer); } if (this.depthBuffer) { gl.deleteRenderbuffer(this.depthBuffer); } if (this.stencilBuffer) { gl.deleteRenderbuffer(this.stencilBuffer); } if (this.cardboardUI) { this.cardboardUI.destroy(); } }; CardboardDistorter.prototype.onResize = function () { var gl = this.gl; var self = this; var glState = [gl.RENDERBUFFER_BINDING, gl.TEXTURE_BINDING_2D, gl.TEXTURE0]; glPreserveState(gl, glState, function (gl) { self.realBindFramebuffer.call(gl, gl.FRAMEBUFFER, null); if (self.scissorTest) { self.realDisable.call(gl, gl.SCISSOR_TEST); } self.realColorMask.call(gl, true, true, true, true); self.realViewport.call(gl, 0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight); self.realClearColor.call(gl, 0, 0, 0, 1); gl.clear(gl.COLOR_BUFFER_BIT); self.realBindFramebuffer.call(gl, gl.FRAMEBUFFER, self.framebuffer); gl.bindTexture(gl.TEXTURE_2D, self.renderTarget); gl.texImage2D(gl.TEXTURE_2D, 0, self.ctxAttribs.alpha ? gl.RGBA : gl.RGB, self.bufferWidth, self.bufferHeight, 0, self.ctxAttribs.alpha ? gl.RGBA : gl.RGB, gl.UNSIGNED_BYTE, null); gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR); gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR); gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE); gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE); gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, self.renderTarget, 0); if (self.ctxAttribs.depth && self.ctxAttribs.stencil) { gl.bindRenderbuffer(gl.RENDERBUFFER, self.depthStencilBuffer); gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, self.bufferWidth, self.bufferHeight); gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, self.depthStencilBuffer); } else if (self.ctxAttribs.depth) { gl.bindRenderbuffer(gl.RENDERBUFFER, self.depthBuffer); gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, self.bufferWidth, self.bufferHeight); gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, self.depthBuffer); } else if (self.ctxAttribs.stencil) { gl.bindRenderbuffer(gl.RENDERBUFFER, self.stencilBuffer); gl.renderbufferStorage(gl.RENDERBUFFER, gl.STENCIL_INDEX8, self.bufferWidth, self.bufferHeight); gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.STENCIL_ATTACHMENT, gl.RENDERBUFFER, self.stencilBuffer); } if (!gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE) { console.error('Framebuffer incomplete!'); } self.realBindFramebuffer.call(gl, gl.FRAMEBUFFER, self.lastBoundFramebuffer); if (self.scissorTest) { self.realEnable.call(gl, gl.SCISSOR_TEST); } self.realColorMask.apply(gl, self.colorMask); self.realViewport.apply(gl, self.viewport); self.realClearColor.apply(gl, self.clearColor); }); if (this.cardboardUI) { this.cardboardUI.onResize(); } }; CardboardDistorter.prototype.patch = function () { if (this.isPatched) { return; } var self = this; var canvas = this.gl.canvas; var gl = this.gl; if (!isIOS()) { canvas.width = getScreenWidth() * this.bufferScale; canvas.height = getScreenHeight() * this.bufferScale; Object.defineProperty(canvas, 'width', { configurable: true, enumerable: true, get: function get() { return self.bufferWidth; }, set: function set(value) { self.bufferWidth = value; self.realCanvasWidth.set.call(canvas, value); self.onResize(); } }); Object.defineProperty(canvas, 'height', { configurable: true, enumerable: true, get: function get() { return self.bufferHeight; }, set: function set(value) { self.bufferHeight = value; self.realCanvasHeight.set.call(canvas, value); self.onResize(); } }); } this.lastBoundFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING); if (this.lastBoundFramebuffer == null) { this.lastBoundFramebuffer = this.framebuffer; this.gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer); } this.gl.bindFramebuffer = function (target, framebuffer) { self.lastBoundFramebuffer = framebuffer ? framebuffer : self.framebuffer; self.realBindFramebuffer.call(gl, target, self.lastBoundFramebuffer); }; this.cullFace = gl.getParameter(gl.CULL_FACE); this.depthTest = gl.getParameter(gl.DEPTH_TEST); this.blend = gl.getParameter(gl.BLEND); this.scissorTest = gl.getParameter(gl.SCISSOR_TEST); this.stencilTest = gl.getParameter(gl.STENCIL_TEST); gl.enable = function (pname) { switch (pname) { case gl.CULL_FACE: self.cullFace = true;break; case gl.DEPTH_TEST: self.depthTest = true;break; case gl.BLEND: self.blend = true;break; case gl.SCISSOR_TEST: self.scissorTest = true;break; case gl.STENCIL_TEST: self.stencilTest = true;break; } self.realEnable.call(gl, pname); }; gl.disable = function (pname) { switch (pname) { case gl.CULL_FACE: self.cullFace = false;break; case gl.DEPTH_TEST: self.depthTest = false;break; case gl.BLEND: self.blend = false;break; case gl.SCISSOR_TEST: self.scissorTest = false;break; case gl.STENCIL_TEST: self.stencilTest = false;break; } self.realDisable.call(gl, pname); }; this.colorMask = gl.getParameter(gl.COLOR_WRITEMASK); gl.colorMask = function (r, g, b, a) { self.colorMask[0] = r; self.colorMask[1] = g; self.colorMask[2] = b; self.colorMask[3] = a; self.realColorMask.call(gl, r, g, b, a); }; this.clearColor = gl.getParameter(gl.COLOR_CLEAR_VALUE); gl.clearColor = function (r, g, b, a) { self.clearColor[0] = r; self.clearColor[1] = g; self.clearColor[2] = b; self.clearColor[3] = a; self.realClearColor.call(gl, r, g, b, a); }; this.viewport = gl.getParameter(gl.VIEWPORT); gl.viewport = function (x, y, w, h) { self.viewport[0] = x; self.viewport[1] = y; self.viewport[2] = w; self.viewport[3] = h; self.realViewport.call(gl, x, y, w, h); }; this.isPatched = true; safariCssSizeWorkaround(canvas); }; CardboardDistorter.prototype.unpatch = function () { if (!this.isPatched) { return; } var gl = this.gl; var canvas = this.gl.canvas; if (!isIOS()) { Object.defineProperty(canvas, 'width', this.realCanvasWidth); Object.defineProperty(canvas, 'height', this.realCanvasHeight); } canvas.width = this.bufferWidth; canvas.height = this.bufferHeight; gl.bindFramebuffer = this.realBindFramebuffer; gl.enable = this.realEnable; gl.disable = this.realDisable; gl.colorMask = this.realColorMask; gl.clearColor = this.realClearColor; gl.viewport = this.realViewport; if (this.lastBoundFramebuffer == this.framebuffer) { gl.bindFramebuffer(gl.FRAMEBUFFER, null); } this.isPatched = false; setTimeout(function () { safariCssSizeWorkaround(canvas); }, 1); }; CardboardDistorter.prototype.setTextureBounds = function (leftBounds, rightBounds) { if (!leftBounds) { leftBounds = [0, 0, 0.5, 1]; } if (!rightBounds) { rightBounds = [0.5, 0, 0.5, 1]; } this.viewportOffsetScale[0] = leftBounds[0]; this.viewportOffsetScale[1] = leftBounds[1]; this.viewportOffsetScale[2] = leftBounds[2]; this.viewportOffsetScale[3] = leftBounds[3]; this.viewportOffsetScale[4] = rightBounds[0]; this.viewportOffsetScale[5] = rightBounds[1]; this.viewportOffsetScale[6] = rightBounds[2]; this.viewportOffsetScale[7] = rightBounds[3]; }; CardboardDistorter.prototype.submitFrame = function () { var gl = this.gl; var self = this; var glState = []; if (!this.dirtySubmitFrameBindings) { glState.push(gl.CURRENT_PROGRAM, gl.ARRAY_BUFFER_BINDING, gl.ELEMENT_ARRAY_BUFFER_BINDING, gl.TEXTURE_BINDING_2D, gl.TEXTURE0); } glPreserveState(gl, glState, function (gl) { self.realBindFramebuffer.call(gl, gl.FRAMEBUFFER, null); if (self.cullFace) { self.realDisable.call(gl, gl.CULL_FACE); } if (self.depthTest) { self.realDisable.call(gl, gl.DEPTH_TEST); } if (self.blend) { self.realDisable.call(gl, gl.BLEND); } if (self.scissorTest) { self.realDisable.call(gl, gl.SCISSOR_TEST); } if (self.stencilTest) { self.realDisable.call(gl, gl.STENCIL_TEST); } self.realColorMask.call(gl, true, true, true, true); self.realViewport.call(gl, 0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight); if (self.ctxAttribs.alpha || isIOS()) { self.realClearColor.call(gl, 0, 0, 0, 1); gl.clear(gl.COLOR_BUFFER_BIT); } gl.useProgram(self.program); gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, self.indexBuffer); gl.bindBuffer(gl.ARRAY_BUFFER, self.vertexBuffer); gl.enableVertexAttribArray(self.attribs.position); gl.enableVertexAttribArray(self.attribs.texCoord); gl.vertexAttribPointer(self.attribs.position, 2, gl.FLOAT, false, 20, 0); gl.vertexAttribPointer(self.attribs.texCoord, 3, gl.FLOAT, false, 20, 8); gl.activeTexture(gl.TEXTURE0); gl.uniform1i(self.uniforms.diffuse, 0); gl.bindTexture(gl.TEXTURE_2D, self.renderTarget); gl.uniform4fv(self.uniforms.viewportOffsetScale, self.viewportOffsetScale); gl.drawElements(gl.TRIANGLES, self.indexCount, gl.UNSIGNED_SHORT, 0); if (self.cardboardUI) { self.cardboardUI.renderNoState(); } self.realBindFramebuffer.call(self.gl, gl.FRAMEBUFFER, self.framebuffer); if (!self.ctxAttribs.preserveDrawingBuffer) { self.realClearColor.call(gl, 0, 0, 0, 0); gl.clear(gl.COLOR_BUFFER_BIT); } if (!self.dirtySubmitFrameBindings) { self.realBindFramebuffer.call(gl, gl.FRAMEBUFFER, self.lastBoundFramebuffer); } if (self.cullFace) { self.realEnable.call(gl, gl.CULL_FACE); } if (self.depthTest) { self.realEnable.call(gl, gl.DEPTH_TEST); } if (self.blend) { self.realEnable.call(gl, gl.BLEND); } if (self.scissorTest) { self.realEnable.call(gl, gl.SCISSOR_TEST); } if (self.stencilTest) { self.realEnable.call(gl, gl.STENCIL_TEST); } self.realColorMask.apply(gl, self.colorMask); self.realViewport.apply(gl, self.viewport); if (self.ctxAttribs.alpha || !self.ctxAttribs.preserveDrawingBuffer) { self.realClearColor.apply(gl, self.clearColor); } }); if (isIOS()) { var canvas = gl.canvas; if (canvas.width != self.bufferWidth || canvas.height != self.bufferHeight) { self.bufferWidth = canvas.width; self.bufferHeight = canvas.height; self.onResize(); } } }; CardboardDistorter.prototype.updateDeviceInfo = function (deviceInfo) { var gl = this.gl; var self = this; var glState = [gl.ARRAY_BUFFER_BINDING, gl.ELEMENT_ARRAY_BUFFER_BINDING]; glPreserveState(gl, glState, function (gl) { var vertices = self.computeMeshVertices_(self.meshWidth, self.meshHeight, deviceInfo); gl.bindBuffer(gl.ARRAY_BUFFER, self.vertexBuffer); gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW); if (!self.indexCount) { var indices = self.computeMeshIndices_(self.meshWidth, self.meshHeight); gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, self.indexBuffer); gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW); self.indexCount = indices.length; } }); }; CardboardDistorter.prototype.computeMeshVertices_ = function (width, height, deviceInfo) { var vertices = new Float32Array(2 * width * height * 5); var lensFrustum = deviceInfo.getLeftEyeVisibleTanAngles(); var noLensFrustum = deviceInfo.getLeftEyeNoLensTanAngles(); var viewport = deviceInfo.getLeftEyeVisibleScreenRect(noLensFrustum); var vidx = 0; for (var e = 0; e < 2; e++) { for (var j = 0; j < height; j++) { for (var i = 0; i < width; i++, vidx++) { var u = i / (width - 1); var v = j / (height - 1); var s = u; var t = v; var x = lerp(lensFrustum[0], lensFrustum[2], u); var y = lerp(lensFrustum[3], lensFrustum[1], v); var d = Math.sqrt(x * x + y * y); var r = deviceInfo.distortion.distortInverse(d); var p = x * r / d; var q = y * r / d; u = (p - noLensFrustum[0]) / (noLensFrustum[2] - noLensFrustum[0]); v = (q - noLensFrustum[3]) / (noLensFrustum[1] - noLensFrustum[3]); u = (viewport.x + u * viewport.width - 0.5) * 2.0; v = (viewport.y + v * viewport.height - 0.5) * 2.0; vertices[vidx * 5 + 0] = u; vertices[vidx * 5 + 1] = v; vertices[vidx * 5 + 2] = s; vertices[vidx * 5 + 3] = t; vertices[vidx * 5 + 4] = e; } } var w = lensFrustum[2] - lensFrustum[0]; lensFrustum[0] = -(w + lensFrustum[0]); lensFrustum[2] = w - lensFrustum[2]; w = noLensFrustum[2] - noLensFrustum[0]; noLensFrustum[0] = -(w + noLensFrustum[0]); noLensFrustum[2] = w - noLensFrustum[2]; viewport.x = 1 - (viewport.x + viewport.width); } return vertices; }; CardboardDistorter.prototype.computeMeshIndices_ = function (width, height) { var indices = new Uint16Array(2 * (width - 1) * (height - 1) * 6); var halfwidth = width / 2; var halfheight = height / 2; var vidx = 0; var iidx = 0; for (var e = 0; e < 2; e++) { for (var j = 0; j < height; j++) { for (var i = 0; i < width; i++, vidx++) { if (i == 0 || j == 0) continue; if (i <= halfwidth == j <= halfheight) { indices[iidx++] = vidx; indices[iidx++] = vidx - width - 1; indices[iidx++] = vidx - width; indices[iidx++] = vidx - width - 1; indices[iidx++] = vidx; indices[iidx++] = vidx - 1; } else { indices[iidx++] = vidx - 1; indices[iidx++] = vidx - width; indices[iidx++] = vidx; indices[iidx++] = vidx - width; indices[iidx++] = vidx - 1; indices[iidx++] = vidx - width - 1; } } } } return indices; }; CardboardDistorter.prototype.getOwnPropertyDescriptor_ = function (proto, attrName) { var descriptor = Object.getOwnPropertyDescriptor(proto, attrName); if (descriptor.get === undefined || descriptor.set === undefined) { descriptor.configurable = true; descriptor.enumerable = true; descriptor.get = function () { return this.getAttribute(attrName); }; descriptor.set = function (val) { this.setAttribute(attrName, val); }; } return descriptor; }; var uiVS = ['attribute vec2 position;', 'uniform mat4 projectionMat;', 'void main() {', ' gl_Position = projectionMat * vec4( position, -1.0, 1.0 );', '}'].join('\n'); var uiFS = ['precision mediump float;', 'uniform vec4 color;', 'void main() {', ' gl_FragColor = color;', '}'].join('\n'); var DEG2RAD = Math.PI / 180.0; var kAnglePerGearSection = 60; var kOuterRimEndAngle = 12; var kInnerRimBeginAngle = 20; var kOuterRadius = 1; var kMiddleRadius = 0.75; var kInnerRadius = 0.3125; var kCenterLineThicknessDp = 4; var kButtonWidthDp = 28; var kTouchSlopFactor = 1.5; function CardboardUI(gl) { this.gl = gl; this.attribs = { position: 0 }; this.program = linkProgram(gl, uiVS, uiFS, this.attribs); this.uniforms = getProgramUniforms(gl, this.program); this.vertexBuffer = gl.createBuffer(); this.gearOffset = 0; this.gearVertexCount = 0; this.arrowOffset = 0; this.arrowVertexCount = 0; this.projMat = new Float32Array(16); this.listener = null; this.onResize(); } CardboardUI.prototype.destroy = function () { var gl = this.gl; if (this.listener) { gl.canvas.removeEventListener('click', this.listener, false); } gl.deleteProgram(this.program); gl.deleteBuffer(this.vertexBuffer); }; CardboardUI.prototype.listen = function (optionsCallback, backCallback) { var canvas = this.gl.canvas; this.listener = function (event) { var midline = canvas.clientWidth / 2; var buttonSize = kButtonWidthDp * kTouchSlopFactor; if (event.clientX > midline - buttonSize && event.clientX < midline + buttonSize && event.clientY > canvas.clientHeight - buttonSize) { optionsCallback(event); } else if (event.clientX < buttonSize && event.clientY < buttonSize) { backCallback(event); } }; canvas.addEventListener('click', this.listener, false); }; CardboardUI.prototype.onResize = function () { var gl = this.gl; var self = this; var glState = [gl.ARRAY_BUFFER_BINDING]; glPreserveState(gl, glState, function (gl) { var vertices = []; var midline = gl.drawingBufferWidth / 2; var physicalPixels = Math.max(screen.width, screen.height) * window.devicePixelRatio; var scalingRatio = gl.drawingBufferWidth / physicalPixels; var dps = scalingRatio * window.devicePixelRatio; var lineWidth = kCenterLineThicknessDp * dps / 2; var buttonSize = kButtonWidthDp * kTouchSlopFactor * dps; var buttonScale = kButtonWidthDp * dps / 2; var buttonBorder = (kButtonWidthDp * kTouchSlopFactor - kButtonWidthDp) * dps; vertices.push(midline - lineWidth, buttonSize); vertices.push(midline - lineWidth, gl.drawingBufferHeight); vertices.push(midline + lineWidth, buttonSize); vertices.push(midline + lineWidth, gl.drawingBufferHeight); self.gearOffset = vertices.length / 2; function addGearSegment(theta, r) { var angle = (90 - theta) * DEG2RAD; var x = Math.cos(angle); var y = Math.sin(angle); vertices.push(kInnerRadius * x * buttonScale + midline, kInnerRadius * y * buttonScale + buttonScale); vertices.push(r * x * buttonScale + midline, r * y * buttonScale + buttonScale); } for (var i = 0; i <= 6; i++) { var segmentTheta = i * kAnglePerGearSection; addGearSegment(segmentTheta, kOuterRadius); addGearSegment(segmentTheta + kOuterRimEndAngle, kOuterRadius); addGearSegment(segmentTheta + kInnerRimBeginAngle, kMiddleRadius); addGearSegment(segmentTheta + (kAnglePerGearSection - kInnerRimBeginAngle), kMiddleRadius); addGearSegment(segmentTheta + (kAnglePerGearSection - kOuterRimEndAngle), kOuterRadius); } self.gearVertexCount = vertices.length / 2 - self.gearOffset; self.arrowOffset = vertices.length / 2; function addArrowVertex(x, y) { vertices.push(buttonBorder + x, gl.drawingBufferHeight - buttonBorder - y); } var angledLineWidth = lineWidth / Math.sin(45 * DEG2RAD); addArrowVertex(0, buttonScale); addArrowVertex(buttonScale, 0); addArrowVertex(buttonScale + angledLineWidth, angledLineWidth); addArrowVertex(angledLineWidth, buttonScale + angledLineWidth); addArrowVertex(angledLineWidth, buttonScale - angledLineWidth); addArrowVertex(0, buttonScale); addArrowVertex(buttonScale, buttonScale * 2); addArrowVertex(buttonScale + angledLineWidth, buttonScale * 2 - angledLineWidth); addArrowVertex(angledLineWidth, buttonScale - angledLineWidth); addArrowVertex(0, buttonScale); addArrowVertex(angledLineWidth, buttonScale - lineWidth); addArrowVertex(kButtonWidthDp * dps, buttonScale - lineWidth); addArrowVertex(angledLineWidth, buttonScale + lineWidth); addArrowVertex(kButtonWidthDp * dps, buttonScale + lineWidth); self.arrowVertexCount = vertices.length / 2 - self.arrowOffset; gl.bindBuffer(gl.ARRAY_BUFFER, self.vertexBuffer); gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW); }); }; CardboardUI.prototype.render = function () { var gl = this.gl; var self = this; var glState = [gl.CULL_FACE, gl.DEPTH_TEST, gl.BLEND, gl.SCISSOR_TEST, gl.STENCIL_TEST, gl.COLOR_WRITEMASK, gl.VIEWPORT, gl.CURRENT_PROGRAM, gl.ARRAY_BUFFER_BINDING]; glPreserveState(gl, glState, function (gl) { gl.disable(gl.CULL_FACE); gl.disable(gl.DEPTH_TEST); gl.disable(gl.BLEND); gl.disable(gl.SCISSOR_TEST); gl.disable(gl.STENCIL_TEST); gl.colorMask(true, true, true, true); gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight); self.renderNoState(); }); }; CardboardUI.prototype.renderNoState = function () { var gl = this.gl; gl.useProgram(this.program); gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer); gl.enableVertexAttribArray(this.attribs.position); gl.vertexAttribPointer(this.attribs.position, 2, gl.FLOAT, false, 8, 0); gl.uniform4f(this.uniforms.color, 1.0, 1.0, 1.0, 1.0); orthoMatrix(this.projMat, 0, gl.drawingBufferWidth, 0, gl.drawingBufferHeight, 0.1, 1024.0); gl.uniformMatrix4fv(this.uniforms.projectionMat, false, this.projMat); gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4); gl.drawArrays(gl.TRIANGLE_STRIP, this.gearOffset, this.gearVertexCount); gl.drawArrays(gl.TRIANGLE_STRIP, this.arrowOffset, this.arrowVertexCount); }; function Distortion(coefficients) { this.coefficients = coefficients; } Distortion.prototype.distortInverse = function (radius) { var r0 = 0; var r1 = 1; var dr0 = radius - this.distort(r0); while (Math.abs(r1 - r0) > 0.0001 ) { var dr1 = radius - this.distort(r1); var r2 = r1 - dr1 * ((r1 - r0) / (dr1 - dr0)); r0 = r1; r1 = r2; dr0 = dr1; } return r1; }; Distortion.prototype.distort = function (radius) { var r2 = radius * radius; var ret = 0; for (var i = 0; i < this.coefficients.length; i++) { ret = r2 * (ret + this.coefficients[i]); } return (ret + 1) * radius; }; var degToRad = Math.PI / 180; var radToDeg = 180 / Math.PI; var Vector3 = function Vector3(x, y, z) { this.x = x || 0; this.y = y || 0; this.z = z || 0; }; Vector3.prototype = { constructor: Vector3, set: function set(x, y, z) { this.x = x; this.y = y; this.z = z; return this; }, copy: function copy(v) { this.x = v.x; this.y = v.y; this.z = v.z; return this; }, length: function length() { return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z); }, normalize: function normalize() { var scalar = this.length(); if (scalar !== 0) { var invScalar = 1 / scalar; this.multiplyScalar(invScalar); } else { this.x = 0; this.y = 0; this.z = 0; } return this; }, multiplyScalar: function multiplyScalar(scalar) { this.x *= scalar; this.y *= scalar; this.z *= scalar; }, applyQuaternion: function applyQuaternion(q) { var x = this.x; var y = this.y; var z = this.z; var qx = q.x; var qy = q.y; var qz = q.z; var qw = q.w; var ix = qw * x + qy * z - qz * y; var iy = qw * y + qz * x - qx * z; var iz = qw * z + qx * y - qy * x; var iw = -qx * x - qy * y - qz * z; this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy; this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz; this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx; return this; }, dot: function dot(v) { return this.x * v.x + this.y * v.y + this.z * v.z; }, crossVectors: function crossVectors(a, b) { var ax = a.x, ay = a.y, az = a.z; var bx = b.x, by = b.y, bz = b.z; this.x = ay * bz - az * by; this.y = az * bx - ax * bz; this.z = ax * by - ay * bx; return this; } }; var Quaternion = function Quaternion(x, y, z, w) { this.x = x || 0; this.y = y || 0; this.z = z || 0; this.w = w !== undefined ? w : 1; }; Quaternion.prototype = { constructor: Quaternion, set: function set(x, y, z, w) { this.x = x; this.y = y; this.z = z; this.w = w; return this; }, copy: function copy(quaternion) { this.x = quaternion.x; this.y = quaternion.y; this.z = quaternion.z; this.w = quaternion.w; return this; }, setFromEulerXYZ: function setFromEulerXYZ(x, y, z) { var c1 = Math.cos(x / 2); var c2 = Math.cos(y / 2); var c3 = Math.cos(z / 2); var s1 = Math.sin(x / 2); var s2 = Math.sin(y / 2); var s3 = Math.sin(z / 2); this.x = s1 * c2 * c3 + c1 * s2 * s3; this.y = c1 * s2 * c3 - s1 * c2 * s3; this.z = c1 * c2 * s3 + s1 * s2 * c3; this.w = c1 * c2 * c3 - s1 * s2 * s3; return this; }, setFromEulerYXZ: function setFromEulerYXZ(x, y, z) { var c1 = Math.cos(x / 2); var c2 = Math.cos(y / 2); var c3 = Math.cos(z / 2); var s1 = Math.sin(x / 2); var s2 = Math.sin(y / 2); var s3 = Math.sin(z / 2); this.x = s1 * c2 * c3 + c1 * s2 * s3; this.y = c1 * s2 * c3 - s1 * c2 * s3; this.z = c1 * c2 * s3 - s1 * s2 * c3; this.w = c1 * c2 * c3 + s1 * s2 * s3; return this; }, setFromAxisAngle: function setFromAxisAngle(axis, angle) { var halfAngle = angle / 2, s = Math.sin(halfAngle); this.x = axis.x * s; this.y = axis.y * s; this.z = axis.z * s; this.w = Math.cos(halfAngle); return this; }, multiply: function multiply(q) { return this.multiplyQuaternions(this, q); }, multiplyQuaternions: function multiplyQuaternions(a, b) { var qax = a.x, qay = a.y, qaz = a.z, qaw = a.w; var qbx = b.x, qby = b.y, qbz = b.z, qbw = b.w; this.x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby; this.y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz; this.z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx; this.w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz; return this; }, inverse: function inverse() { this.x *= -1; this.y *= -1; this.z *= -1; this.normalize(); return this; }, normalize: function normalize() { var l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w); if (l === 0) { this.x = 0; this.y = 0; this.z = 0; this.w = 1; } else { l = 1 / l; this.x = this.x * l; this.y = this.y * l; this.z = this.z * l; this.w = this.w * l; } return this; }, slerp: function slerp(qb, t) { if (t === 0) return this; if (t === 1) return this.copy(qb); var x = this.x, y = this.y, z = this.z, w = this.w; var cosHalfTheta = w * qb.w + x * qb.x + y * qb.y + z * qb.z; if (cosHalfTheta < 0) { this.w = -qb.w; this.x = -qb.x; this.y = -qb.y; this.z = -qb.z; cosHalfTheta = -cosHalfTheta; } else { this.copy(qb); } if (cosHalfTheta >= 1.0) { this.w = w; this.x = x; this.y = y; this.z = z; return this; } var halfTheta = Math.acos(cosHalfTheta); var sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta); if (Math.abs(sinHalfTheta) < 0.001) { this.w = 0.5 * (w + this.w); this.x = 0.5 * (x + this.x); this.y = 0.5 * (y + this.y); this.z = 0.5 * (z + this.z); return this; } var ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta, ratioB = Math.sin(t * halfTheta) / sinHalfTheta; this.w = w * ratioA + this.w * ratioB; this.x = x * ratioA + this.x * ratioB; this.y = y * ratioA + this.y * ratioB; this.z = z * ratioA + this.z * ratioB; return this; }, setFromUnitVectors: function () { var v1, r; var EPS = 0.000001; return function (vFrom, vTo) { if (v1 === undefined) v1 = new Vector3(); r = vFrom.dot(vTo) + 1; if (r < EPS) { r = 0; if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) { v1.set(-vFrom.y, vFrom.x, 0); } else { v1.set(0, -vFrom.z, vFrom.y); } } else { v1.crossVectors(vFrom, vTo); } this.x = v1.x; this.y = v1.y; this.z = v1.z; this.w = r; this.normalize(); return this; }; }() }; function Device(params) { this.width = params.width || getScreenWidth(); this.height = params.height || getScreenHeight(); this.widthMeters = params.widthMeters; this.heightMeters = params.heightMeters; this.bevelMeters = params.bevelMeters; } var DEFAULT_ANDROID = new Device({ widthMeters: 0.110, heightMeters: 0.062, bevelMeters: 0.004 }); var DEFAULT_IOS = new Device({ widthMeters: 0.1038, heightMeters: 0.0584, bevelMeters: 0.004 }); var Viewers = { CardboardV1: new CardboardViewer({ id: 'CardboardV1', label: 'Cardboard I/O 2014', fov: 40, interLensDistance: 0.060, baselineLensDistance: 0.035, screenLensDistance: 0.042, distortionCoefficients: [0.441, 0.156], inverseCoefficients: [-0.4410035, 0.42756155, -0.4804439, 0.5460139, -0.58821183, 0.5733938, -0.48303202, 0.33299083, -0.17573841, 0.0651772, -0.01488963, 0.001559834] }), CardboardV2: new CardboardViewer({ id: 'CardboardV2', label: 'Cardboard I/O 2015', fov: 60, interLensDistance: 0.064, baselineLensDistance: 0.035, screenLensDistance: 0.039, distortionCoefficients: [0.34, 0.55], inverseCoefficients: [-0.33836704, -0.18162185, 0.862655, -1.2462051, 1.0560602, -0.58208317, 0.21609078, -0.05444823, 0.009177956, -9.904169E-4, 6.183535E-5, -1.6981803E-6] }) }; function DeviceInfo(deviceParams, additionalViewers) { this.viewer = Viewers.CardboardV2; this.updateDeviceParams(deviceParams); this.distortion = new Distortion(this.viewer.distortionCoefficients); for (var i = 0; i < additionalViewers.length; i++) { var viewer = additionalViewers[i]; Viewers[viewer.id] = new CardboardViewer(viewer); } } DeviceInfo.prototype.updateDeviceParams = function (deviceParams) { this.device = this.determineDevice_(deviceParams) || this.device; }; DeviceInfo.prototype.getDevice = function () { return this.device; }; DeviceInfo.prototype.setViewer = function (viewer) { this.viewer = viewer; this.distortion = new Distortion(this.viewer.distortionCoefficients); }; DeviceInfo.prototype.determineDevice_ = function (deviceParams) { if (!deviceParams) { if (isIOS()) { console.warn('Using fallback iOS device measurements.'); return DEFAULT_IOS; } else { console.warn('Using fallback Android device measurements.'); return DEFAULT_ANDROID; } } var METERS_PER_INCH = 0.0254; var metersPerPixelX = METERS_PER_INCH / deviceParams.xdpi; var metersPerPixelY = METERS_PER_INCH / deviceParams.ydpi; var width = getScreenWidth(); var height = getScreenHeight(); return new Device({ widthMeters: metersPerPixelX * width, heightMeters: metersPerPixelY * height, bevelMeters: deviceParams.bevelMm * 0.001 }); }; DeviceInfo.prototype.getDistortedFieldOfViewLeftEye = function () { var viewer = this.viewer; var device = this.device; var distortion = this.distortion; var eyeToScreenDistance = viewer.screenLensDistance; var outerDist = (device.widthMeters - viewer.interLensDistance) / 2; var innerDist = viewer.interLensDistance / 2; var bottomDist = viewer.baselineLensDistance - device.bevelMeters; var topDist = device.heightMeters - bottomDist; var outerAngle = radToDeg * Math.atan(distortion.distort(outerDist / eyeToScreenDistance)); var innerAngle = radToDeg * Math.atan(distortion.distort(innerDist / eyeToScreenDistance)); var bottomAngle = radToDeg * Math.atan(distortion.distort(bottomDist / eyeToScreenDistance)); var topAngle = radToDeg * Math.atan(distortion.distort(topDist / eyeToScreenDistance)); return { leftDegrees: Math.min(outerAngle, viewer.fov), rightDegrees: Math.min(innerAngle, viewer.fov), downDegrees: Math.min(bottomAngle, viewer.fov), upDegrees: Math.min(topAngle, viewer.fov) }; }; DeviceInfo.prototype.getLeftEyeVisibleTanAngles = function () { var viewer = this.viewer; var device = this.device; var distortion = this.distortion; var fovLeft = Math.tan(-degToRad * viewer.fov); var fovTop = Math.tan(degToRad * viewer.fov); var fovRight = Math.tan(degToRad * viewer.fov); var fovBottom = Math.tan(-degToRad * viewer.fov); var halfWidth = device.widthMeters / 4; var halfHeight = device.heightMeters / 2; var verticalLensOffset = viewer.baselineLensDistance - device.bevelMeters - halfHeight; var centerX = viewer.interLensDistance / 2 - halfWidth; var centerY = -verticalLensOffset; var centerZ = viewer.screenLensDistance; var screenLeft = distortion.distort((centerX - halfWidth) / centerZ); var screenTop = distortion.distort((centerY + halfHeight) / centerZ); var screenRight = distortion.distort((centerX + halfWidth) / centerZ); var screenBottom = distortion.distort((centerY - halfHeight) / centerZ); var result = new Float32Array(4); result[0] = Math.max(fovLeft, screenLeft); result[1] = Math.min(fovTop, screenTop); result[2] = Math.min(fovRight, screenRight); result[3] = Math.max(fovBottom, screenBottom); return result; }; DeviceInfo.prototype.getLeftEyeNoLensTanAngles = function () { var viewer = this.viewer; var device = this.device; var distortion = this.distortion; var result = new Float32Array(4); var fovLeft = distortion.distortInverse(Math.tan(-degToRad * viewer.fov)); var fovTop = distortion.distortInverse(Math.tan(degToRad * viewer.fov)); var fovRight = distortion.distortInverse(Math.tan(degToRad * viewer.fov)); var fovBottom = distortion.distortInverse(Math.tan(-degToRad * viewer.fov)); var halfWidth = device.widthMeters / 4; var halfHeight = device.heightMeters / 2; var verticalLensOffset = viewer.baselineLensDistance - device.bevelMeters - halfHeight; var centerX = viewer.interLensDistance / 2 - halfWidth; var centerY = -verticalLensOffset; var centerZ = viewer.screenLensDistance; var screenLeft = (centerX - halfWidth) / centerZ; var screenTop = (centerY + halfHeight) / centerZ; var screenRight = (centerX + halfWidth) / centerZ; var screenBottom = (centerY - halfHeight) / centerZ; result[0] = Math.max(fovLeft, screenLeft); result[1] = Math.min(fovTop, screenTop); result[2] = Math.min(fovRight, screenRight); result[3] = Math.max(fovBottom, screenBottom); return result; }; DeviceInfo.prototype.getLeftEyeVisibleScreenRect = function (undistortedFrustum) { var viewer = this.viewer; var device = this.device; var dist = viewer.screenLensDistance; var eyeX = (device.widthMeters - viewer.interLensDistance) / 2; var eyeY = viewer.baselineLensDistance - device.bevelMeters; var left = (undistortedFrustum[0] * dist + eyeX) / device.widthMeters; var top = (undistortedFrustum[1] * dist + eyeY) / device.heightMeters; var right = (undistortedFrustum[2] * dist + eyeX) / device.widthMeters; var bottom = (undistortedFrustum[3] * dist + eyeY) / device.heightMeters; return { x: left, y: bottom, width: right - left, height: top - bottom }; }; DeviceInfo.prototype.getFieldOfViewLeftEye = function (opt_isUndistorted) { return opt_isUndistorted ? this.getUndistortedFieldOfViewLeftEye() : this.getDistortedFieldOfViewLeftEye(); }; DeviceInfo.prototype.getFieldOfViewRightEye = function (opt_isUndistorted) { var fov = this.getFieldOfViewLeftEye(opt_isUndistorted); return { leftDegrees: fov.rightDegrees, rightDegrees: fov.leftDegrees, upDegrees: fov.upDegrees, downDegrees: fov.downDegrees }; }; DeviceInfo.prototype.getUndistortedFieldOfViewLeftEye = function () { var p = this.getUndistortedParams_(); return { leftDegrees: radToDeg * Math.atan(p.outerDist), rightDegrees: radToDeg * Math.atan(p.innerDist), downDegrees: radToDeg * Math.atan(p.bottomDist), upDegrees: radToDeg * Math.atan(p.topDist) }; }; DeviceInfo.prototype.getUndistortedViewportLeftEye = function () { var p = this.getUndistortedParams_(); var viewer = this.viewer; var device = this.device; var eyeToScreenDistance = viewer.screenLensDistance; var screenWidth = device.widthMeters / eyeToScreenDistance; var screenHeight = device.heightMeters / eyeToScreenDistance; var xPxPerTanAngle = device.width / screenWidth; var yPxPerTanAngle = device.height / screenHeight; var x = Math.round((p.eyePosX - p.outerDist) * xPxPerTanAngle); var y = Math.round((p.eyePosY - p.bottomDist) * yPxPerTanAngle); return { x: x, y: y, width: Math.round((p.eyePosX + p.innerDist) * xPxPerTanAngle) - x, height: Math.round((p.eyePosY + p.topDist) * yPxPerTanAngle) - y }; }; DeviceInfo.prototype.getUndistortedParams_ = function () { var viewer = this.viewer; var device = this.device; var distortion = this.distortion; var eyeToScreenDistance = viewer.screenLensDistance; var halfLensDistance = viewer.interLensDistance / 2 / eyeToScreenDistance; var screenWidth = device.widthMeters / eyeToScreenDistance; var screenHeight = device.heightMeters / eyeToScreenDistance; var eyePosX = screenWidth / 2 - halfLensDistance; var eyePosY = (viewer.baselineLensDistance - device.bevelMeters) / eyeToScreenDistance; var maxFov = viewer.fov; var viewerMax = distortion.distortInverse(Math.tan(degToRad * maxFov)); var outerDist = Math.min(eyePosX, viewerMax); var innerDist = Math.min(halfLensDistance, viewerMax); var bottomDist = Math.min(eyePosY, viewerMax); var topDist = Math.min(screenHeight - eyePosY, viewerMax); return { outerDist: outerDist, innerDist: innerDist, topDist: topDist, bottomDist: bottomDist, eyePosX: eyePosX, eyePosY: eyePosY }; }; function CardboardViewer(params) { this.id = params.id; this.label = params.label; this.fov = params.fov; this.interLensDistance = params.interLensDistance; this.baselineLensDistance = params.baselineLensDistance; this.screenLensDistance = params.screenLensDistance; this.distortionCoefficients = params.distortionCoefficients; this.inverseCoefficients = params.inverseCoefficients; } DeviceInfo.Viewers = Viewers; var format = 1; var last_updated = "2018-12-10T17:01:42Z"; var devices = [{"type":"android","rules":[{"mdmh":"asus/*/Nexus 7/*"},{"ua":"Nexus 7"}],"dpi":[320.8,323],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"asus/*/ASUS_Z00AD/*"},{"ua":"ASUS_Z00AD"}],"dpi":[403,404.6],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"Google/*/Pixel 2 XL/*"},{"ua":"Pixel 2 XL"}],"dpi":537.9,"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"Google/*/Pixel 3 XL/*"},{"ua":"Pixel 3 XL"}],"dpi":[558.5,553.8],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"Google/*/Pixel XL/*"},{"ua":"Pixel XL"}],"dpi":[537.9,533],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"Google/*/Pixel 3/*"},{"ua":"Pixel 3"}],"dpi":442.4,"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"Google/*/Pixel 2/*"},{"ua":"Pixel 2"}],"dpi":441,"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"Google/*/Pixel/*"},{"ua":"Pixel"}],"dpi":[432.6,436.7],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"HTC/*/HTC6435LVW/*"},{"ua":"HTC6435LVW"}],"dpi":[449.7,443.3],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"HTC/*/HTC One XL/*"},{"ua":"HTC One XL"}],"dpi":[315.3,314.6],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"htc/*/Nexus 9/*"},{"ua":"Nexus 9"}],"dpi":289,"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"HTC/*/HTC One M9/*"},{"ua":"HTC One M9"}],"dpi":[442.5,443.3],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"HTC/*/HTC One_M8/*"},{"ua":"HTC One_M8"}],"dpi":[449.7,447.4],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"HTC/*/HTC One/*"},{"ua":"HTC One"}],"dpi":472.8,"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"Huawei/*/Nexus 6P/*"},{"ua":"Nexus 6P"}],"dpi":[515.1,518],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"Huawei/*/BLN-L24/*"},{"ua":"HONORBLN-L24"}],"dpi":480,"bw":4,"ac":500},{"type":"android","rules":[{"mdmh":"Huawei/*/BKL-L09/*"},{"ua":"BKL-L09"}],"dpi":403,"bw":3.47,"ac":500},{"type":"android","rules":[{"mdmh":"LENOVO/*/Lenovo PB2-690Y/*"},{"ua":"Lenovo PB2-690Y"}],"dpi":[457.2,454.713],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"LGE/*/Nexus 5X/*"},{"ua":"Nexus 5X"}],"dpi":[422,419.9],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"LGE/*/LGMS345/*"},{"ua":"LGMS345"}],"dpi":[221.7,219.1],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"LGE/*/LG-D800/*"},{"ua":"LG-D800"}],"dpi":[422,424.1],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"LGE/*/LG-D850/*"},{"ua":"LG-D850"}],"dpi":[537.9,541.9],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"LGE/*/VS985 4G/*"},{"ua":"VS985 4G"}],"dpi":[537.9,535.6],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"LGE/*/Nexus 5/*"},{"ua":"Nexus 5 B"}],"dpi":[442.4,444.8],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"LGE/*/Nexus 4/*"},{"ua":"Nexus 4"}],"dpi":[319.8,318.4],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"LGE/*/LG-P769/*"},{"ua":"LG-P769"}],"dpi":[240.6,247.5],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"LGE/*/LGMS323/*"},{"ua":"LGMS323"}],"dpi":[206.6,204.6],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"LGE/*/LGLS996/*"},{"ua":"LGLS996"}],"dpi":[403.4,401.5],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"Micromax/*/4560MMX/*"},{"ua":"4560MMX"}],"dpi":[240,219.4],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"Micromax/*/A250/*"},{"ua":"Micromax A250"}],"dpi":[480,446.4],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"Micromax/*/Micromax AQ4501/*"},{"ua":"Micromax AQ4501"}],"dpi":240,"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"motorola/*/G5/*"},{"ua":"Moto G (5) Plus"}],"dpi":[403.4,403],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"motorola/*/DROID RAZR/*"},{"ua":"DROID RAZR"}],"dpi":[368.1,256.7],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"motorola/*/XT830C/*"},{"ua":"XT830C"}],"dpi":[254,255.9],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"motorola/*/XT1021/*"},{"ua":"XT1021"}],"dpi":[254,256.7],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"motorola/*/XT1023/*"},{"ua":"XT1023"}],"dpi":[254,256.7],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"motorola/*/XT1028/*"},{"ua":"XT1028"}],"dpi":[326.6,327.6],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"motorola/*/XT1034/*"},{"ua":"XT1034"}],"dpi":[326.6,328.4],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"motorola/*/XT1053/*"},{"ua":"XT1053"}],"dpi":[315.3,316.1],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"motorola/*/XT1562/*"},{"ua":"XT1562"}],"dpi":[403.4,402.7],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"motorola/*/Nexus 6/*"},{"ua":"Nexus 6 B"}],"dpi":[494.3,489.7],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"motorola/*/XT1063/*"},{"ua":"XT1063"}],"dpi":[295,296.6],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"motorola/*/XT1064/*"},{"ua":"XT1064"}],"dpi":[295,295.6],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"motorola/*/XT1092/*"},{"ua":"XT1092"}],"dpi":[422,424.1],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"motorola/*/XT1095/*"},{"ua":"XT1095"}],"dpi":[422,423.4],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"motorola/*/G4/*"},{"ua":"Moto G (4)"}],"dpi":401,"bw":4,"ac":1000},{"type":"android","rules":[{"mdmh":"OnePlus/*/A0001/*"},{"ua":"A0001"}],"dpi":[403.4,401],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"OnePlus/*/ONE E1005/*"},{"ua":"ONE E1005"}],"dpi":[442.4,441.4],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"OnePlus/*/ONE A2005/*"},{"ua":"ONE A2005"}],"dpi":[391.9,405.4],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"OnePlus/*/ONEPLUS A5000/*"},{"ua":"ONEPLUS A5000 "}],"dpi":[403.411,399.737],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"OnePlus/*/ONE A5010/*"},{"ua":"ONEPLUS A5010"}],"dpi":[403,400],"bw":2,"ac":1000},{"type":"android","rules":[{"mdmh":"OPPO/*/X909/*"},{"ua":"X909"}],"dpi":[442.4,444.1],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/GT-I9082/*"},{"ua":"GT-I9082"}],"dpi":[184.7,185.4],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/SM-G360P/*"},{"ua":"SM-G360P"}],"dpi":[196.7,205.4],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/Nexus S/*"},{"ua":"Nexus S"}],"dpi":[234.5,229.8],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/GT-I9300/*"},{"ua":"GT-I9300"}],"dpi":[304.8,303.9],"bw":5,"ac":500},{"type":"android","rules":[{"mdmh":"samsung/*/SM-T230NU/*"},{"ua":"SM-T230NU"}],"dpi":216,"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"samsung/*/SGH-T399/*"},{"ua":"SGH-T399"}],"dpi":[217.7,231.4],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/SGH-M919/*"},{"ua":"SGH-M919"}],"dpi":[440.8,437.7],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/SM-N9005/*"},{"ua":"SM-N9005"}],"dpi":[386.4,387],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"samsung/*/SAMSUNG-SM-N900A/*"},{"ua":"SAMSUNG-SM-N900A"}],"dpi":[386.4,387.7],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/GT-I9500/*"},{"ua":"GT-I9500"}],"dpi":[442.5,443.3],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"samsung/*/GT-I9505/*"},{"ua":"GT-I9505"}],"dpi":439.4,"bw":4,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/SM-G900F/*"},{"ua":"SM-G900F"}],"dpi":[415.6,431.6],"bw":5,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/SM-G900M/*"},{"ua":"SM-G900M"}],"dpi":[415.6,431.6],"bw":5,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/SM-G800F/*"},{"ua":"SM-G800F"}],"dpi":326.8,"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/SM-G906S/*"},{"ua":"SM-G906S"}],"dpi":[562.7,572.4],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/GT-I9300/*"},{"ua":"GT-I9300"}],"dpi":[306.7,304.8],"bw":5,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/SM-T535/*"},{"ua":"SM-T535"}],"dpi":[142.6,136.4],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"samsung/*/SM-N920C/*"},{"ua":"SM-N920C"}],"dpi":[515.1,518.4],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/SM-N920P/*"},{"ua":"SM-N920P"}],"dpi":[386.3655,390.144],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/SM-N920W8/*"},{"ua":"SM-N920W8"}],"dpi":[515.1,518.4],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/GT-I9300I/*"},{"ua":"GT-I9300I"}],"dpi":[304.8,305.8],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/GT-I9195/*"},{"ua":"GT-I9195"}],"dpi":[249.4,256.7],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"samsung/*/SPH-L520/*"},{"ua":"SPH-L520"}],"dpi":[249.4,255.9],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/SAMSUNG-SGH-I717/*"},{"ua":"SAMSUNG-SGH-I717"}],"dpi":285.8,"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/SPH-D710/*"},{"ua":"SPH-D710"}],"dpi":[217.7,204.2],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/GT-N7100/*"},{"ua":"GT-N7100"}],"dpi":265.1,"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/SCH-I605/*"},{"ua":"SCH-I605"}],"dpi":265.1,"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/Galaxy Nexus/*"},{"ua":"Galaxy Nexus"}],"dpi":[315.3,314.2],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/SM-N910H/*"},{"ua":"SM-N910H"}],"dpi":[515.1,518],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/SM-N910C/*"},{"ua":"SM-N910C"}],"dpi":[515.2,520.2],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"samsung/*/SM-G130M/*"},{"ua":"SM-G130M"}],"dpi":[165.9,164.8],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"samsung/*/SM-G928I/*"},{"ua":"SM-G928I"}],"dpi":[515.1,518.4],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/SM-G920F/*"},{"ua":"SM-G920F"}],"dpi":580.6,"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"samsung/*/SM-G920P/*"},{"ua":"SM-G920P"}],"dpi":[522.5,577],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/SM-G925F/*"},{"ua":"SM-G925F"}],"dpi":580.6,"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"samsung/*/SM-G925V/*"},{"ua":"SM-G925V"}],"dpi":[522.5,576.6],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/SM-G930F/*"},{"ua":"SM-G930F"}],"dpi":576.6,"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"samsung/*/SM-G935F/*"},{"ua":"SM-G935F"}],"dpi":533,"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"samsung/*/SM-G950F/*"},{"ua":"SM-G950F"}],"dpi":[562.707,565.293],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"samsung/*/SM-G955U/*"},{"ua":"SM-G955U"}],"dpi":[522.514,525.762],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"samsung/*/SM-G955F/*"},{"ua":"SM-G955F"}],"dpi":[522.514,525.762],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"Sony/*/C6903/*"},{"ua":"C6903"}],"dpi":[442.5,443.3],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"Sony/*/D6653/*"},{"ua":"D6653"}],"dpi":[428.6,427.6],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"Sony/*/E6653/*"},{"ua":"E6653"}],"dpi":[428.6,425.7],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"Sony/*/E6853/*"},{"ua":"E6853"}],"dpi":[403.4,401.9],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"Sony/*/SGP321/*"},{"ua":"SGP321"}],"dpi":[224.7,224.1],"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"TCT/*/ALCATEL ONE TOUCH Fierce/*"},{"ua":"ALCATEL ONE TOUCH Fierce"}],"dpi":[240,247.5],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"THL/*/thl 5000/*"},{"ua":"thl 5000"}],"dpi":[480,443.3],"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"Fly/*/IQ4412/*"},{"ua":"IQ4412"}],"dpi":307.9,"bw":3,"ac":1000},{"type":"android","rules":[{"mdmh":"ZTE/*/ZTE Blade L2/*"},{"ua":"ZTE Blade L2"}],"dpi":240,"bw":3,"ac":500},{"type":"android","rules":[{"mdmh":"BENEVE/*/VR518/*"},{"ua":"VR518"}],"dpi":480,"bw":3,"ac":500},{"type":"ios","rules":[{"res":[640,960]}],"dpi":[325.1,328.4],"bw":4,"ac":1000},{"type":"ios","rules":[{"res":[640,1136]}],"dpi":[317.1,320.2],"bw":3,"ac":1000},{"type":"ios","rules":[{"res":[750,1334]}],"dpi":326.4,"bw":4,"ac":1000},{"type":"ios","rules":[{"res":[1242,2208]}],"dpi":[453.6,458.4],"bw":4,"ac":1000},{"type":"ios","rules":[{"res":[1125,2001]}],"dpi":[410.9,415.4],"bw":4,"ac":1000},{"type":"ios","rules":[{"res":[1125,2436]}],"dpi":458,"bw":4,"ac":1000}]; var DPDB_CACHE = { format: format, last_updated: last_updated, devices: devices }; function Dpdb(url, onDeviceParamsUpdated) { this.dpdb = DPDB_CACHE; this.recalculateDeviceParams_(); if (url) { this.onDeviceParamsUpdated = onDeviceParamsUpdated; var xhr = new XMLHttpRequest(); var obj = this; xhr.open('GET', url, true); xhr.addEventListener('load', function () { obj.loading = false; if (xhr.status >= 200 && xhr.status <= 299) { obj.dpdb = JSON.parse(xhr.response); obj.recalculateDeviceParams_(); } else { console.error('Error loading online DPDB!'); } }); xhr.send(); } } Dpdb.prototype.getDeviceParams = function () { return this.deviceParams; }; Dpdb.prototype.recalculateDeviceParams_ = function () { var newDeviceParams = this.calcDeviceParams_(); if (newDeviceParams) { this.deviceParams = newDeviceParams; if (this.onDeviceParamsUpdated) { this.onDeviceParamsUpdated(this.deviceParams); } } else { console.error('Failed to recalculate device parameters.'); } }; Dpdb.prototype.calcDeviceParams_ = function () { var db = this.dpdb; if (!db) { console.error('DPDB not available.'); return null; } if (db.format != 1) { console.error('DPDB has unexpected format version.'); return null; } if (!db.devices || !db.devices.length) { console.error('DPDB does not have a devices section.'); return null; } var userAgent = navigator.userAgent || navigator.vendor || window.opera; var width = getScreenWidth(); var height = getScreenHeight(); if (!db.devices) { console.error('DPDB has no devices section.'); return null; } for (var i = 0; i < db.devices.length; i++) { var device = db.devices[i]; if (!device.rules) { console.warn('Device[' + i + '] has no rules section.'); continue; } if (device.type != 'ios' && device.type != 'android') { console.warn('Device[' + i + '] has invalid type.'); continue; } if (isIOS() != (device.type == 'ios')) continue; var matched = false; for (var j = 0; j < device.rules.length; j++) { var rule = device.rules[j]; if (this.ruleMatches_(rule, userAgent, width, height)) { matched = true; break; } } if (!matched) continue; var xdpi = device.dpi[0] || device.dpi; var ydpi = device.dpi[1] || device.dpi; return new DeviceParams({ xdpi: xdpi, ydpi: ydpi, bevelMm: device.bw }); } console.warn('No DPDB device match.'); return null; }; Dpdb.prototype.ruleMatches_ = function (rule, ua, screenWidth, screenHeight) { if (!rule.ua && !rule.res) return false; if (rule.ua && rule.ua.substring(0, 2) === 'SM') rule.ua = rule.ua.substring(0, 7); if (rule.ua && ua.indexOf(rule.ua) < 0) return false; if (rule.res) { if (!rule.res[0] || !rule.res[1]) return false; var resX = rule.res[0]; var resY = rule.res[1]; if (Math.min(screenWidth, screenHeight) != Math.min(resX, resY) || Math.max(screenWidth, screenHeight) != Math.max(resX, resY)) { return false; } } return true; }; function DeviceParams(params) { this.xdpi = params.xdpi; this.ydpi = params.ydpi; this.bevelMm = params.bevelMm; } function SensorSample(sample, timestampS) { this.set(sample, timestampS); } SensorSample.prototype.set = function (sample, timestampS) { this.sample = sample; this.timestampS = timestampS; }; SensorSample.prototype.copy = function (sensorSample) { this.set(sensorSample.sample, sensorSample.timestampS); }; function ComplementaryFilter(kFilter, isDebug) { this.kFilter = kFilter; this.isDebug = isDebug; this.currentAccelMeasurement = new SensorSample(); this.currentGyroMeasurement = new SensorSample(); this.previousGyroMeasurement = new SensorSample(); if (isIOS()) { this.filterQ = new Quaternion(-1, 0, 0, 1); } else { this.filterQ = new Quaternion(1, 0, 0, 1); } this.previousFilterQ = new Quaternion(); this.previousFilterQ.copy(this.filterQ); this.accelQ = new Quaternion(); this.isOrientationInitialized = false; this.estimatedGravity = new Vector3(); this.measuredGravity = new Vector3(); this.gyroIntegralQ = new Quaternion(); } ComplementaryFilter.prototype.addAccelMeasurement = function (vector, timestampS) { this.currentAccelMeasurement.set(vector, timestampS); }; ComplementaryFilter.prototype.addGyroMeasurement = function (vector, timestampS) { this.currentGyroMeasurement.set(vector, timestampS); var deltaT = timestampS - this.previousGyroMeasurement.timestampS; if (isTimestampDeltaValid(deltaT)) { this.run_(); } this.previousGyroMeasurement.copy(this.currentGyroMeasurement); }; ComplementaryFilter.prototype.run_ = function () { if (!this.isOrientationInitialized) { this.accelQ = this.accelToQuaternion_(this.currentAccelMeasurement.sample); this.previousFilterQ.copy(this.accelQ); this.isOrientationInitialized = true; return; } var deltaT = this.currentGyroMeasurement.timestampS - this.previousGyroMeasurement.timestampS; var gyroDeltaQ = this.gyroToQuaternionDelta_(this.currentGyroMeasurement.sample, deltaT); this.gyroIntegralQ.multiply(gyroDeltaQ); this.filterQ.copy(this.previousFilterQ); this.filterQ.multiply(gyroDeltaQ); var invFilterQ = new Quaternion(); invFilterQ.copy(this.filterQ); invFilterQ.inverse(); this.estimatedGravity.set(0, 0, -1); this.estimatedGravity.applyQuaternion(invFilterQ); this.estimatedGravity.normalize(); this.measuredGravity.copy(this.currentAccelMeasurement.sample); this.measuredGravity.normalize(); var deltaQ = new Quaternion(); deltaQ.setFromUnitVectors(this.estimatedGravity, this.measuredGravity); deltaQ.inverse(); if (this.isDebug) { console.log('Delta: %d deg, G_est: (%s, %s, %s), G_meas: (%s, %s, %s)', radToDeg * getQuaternionAngle(deltaQ), this.estimatedGravity.x.toFixed(1), this.estimatedGravity.y.toFixed(1), this.estimatedGravity.z.toFixed(1), this.measuredGravity.x.toFixed(1), this.measuredGravity.y.toFixed(1), this.measuredGravity.z.toFixed(1)); } var targetQ = new Quaternion(); targetQ.copy(this.filterQ); targetQ.multiply(deltaQ); this.filterQ.slerp(targetQ, 1 - this.kFilter); this.previousFilterQ.copy(this.filterQ); }; ComplementaryFilter.prototype.getOrientation = function () { return this.filterQ; }; ComplementaryFilter.prototype.accelToQuaternion_ = function (accel) { var normAccel = new Vector3(); normAccel.copy(accel); normAccel.normalize(); var quat = new Quaternion(); quat.setFromUnitVectors(new Vector3(0, 0, -1), normAccel); quat.inverse(); return quat; }; ComplementaryFilter.prototype.gyroToQuaternionDelta_ = function (gyro, dt) { var quat = new Quaternion(); var axis = new Vector3(); axis.copy(gyro); axis.normalize(); quat.setFromAxisAngle(axis, gyro.length() * dt); return quat; }; function PosePredictor(predictionTimeS, isDebug) { this.predictionTimeS = predictionTimeS; this.isDebug = isDebug; this.previousQ = new Quaternion(); this.previousTimestampS = null; this.deltaQ = new Quaternion(); this.outQ = new Quaternion(); } PosePredictor.prototype.getPrediction = function (currentQ, gyro, timestampS) { if (!this.previousTimestampS) { this.previousQ.copy(currentQ); this.previousTimestampS = timestampS; return currentQ; } var axis = new Vector3(); axis.copy(gyro); axis.normalize(); var angularSpeed = gyro.length(); if (angularSpeed < degToRad * 20) { if (this.isDebug) { console.log('Moving slowly, at %s deg/s: no prediction', (radToDeg * angularSpeed).toFixed(1)); } this.outQ.copy(currentQ); this.previousQ.copy(currentQ); return this.outQ; } var predictAngle = angularSpeed * this.predictionTimeS; this.deltaQ.setFromAxisAngle(axis, predictAngle); this.outQ.copy(this.previousQ); this.outQ.multiply(this.deltaQ); this.previousQ.copy(currentQ); this.previousTimestampS = timestampS; return this.outQ; }; function FusionPoseSensor(kFilter, predictionTime, yawOnly, isDebug) { this.yawOnly = yawOnly; this.accelerometer = new Vector3(); this.gyroscope = new Vector3(); this.filter = new ComplementaryFilter(kFilter, isDebug); this.posePredictor = new PosePredictor(predictionTime, isDebug); this.isFirefoxAndroid = isFirefoxAndroid(); this.isIOS = isIOS(); var chromeVersion = getChromeVersion(); this.isDeviceMotionInRadians = !this.isIOS && chromeVersion && chromeVersion < 66; this.isWithoutDeviceMotion = isChromeWithoutDeviceMotion(); this.filterToWorldQ = new Quaternion(); if (isIOS()) { this.filterToWorldQ.setFromAxisAngle(new Vector3(1, 0, 0), Math.PI / 2); } else { this.filterToWorldQ.setFromAxisAngle(new Vector3(1, 0, 0), -Math.PI / 2); } this.inverseWorldToScreenQ = new Quaternion(); this.worldToScreenQ = new Quaternion(); this.originalPoseAdjustQ = new Quaternion(); this.originalPoseAdjustQ.setFromAxisAngle(new Vector3(0, 0, 1), -window.orientation * Math.PI / 180); this.setScreenTransform_(); if (isLandscapeMode()) { this.filterToWorldQ.multiply(this.inverseWorldToScreenQ); } this.resetQ = new Quaternion(); this.orientationOut_ = new Float32Array(4); this.start(); } FusionPoseSensor.prototype.getPosition = function () { return null; }; FusionPoseSensor.prototype.getOrientation = function () { var orientation = void 0; if (this.isWithoutDeviceMotion && this._deviceOrientationQ) { this.deviceOrientationFixQ = this.deviceOrientationFixQ || function () { var z = new Quaternion().setFromAxisAngle(new Vector3(0, 0, -1), 0); var y = new Quaternion(); if (window.orientation === -90) { y.setFromAxisAngle(new Vector3(0, 1, 0), Math.PI / -2); } else { y.setFromAxisAngle(new Vector3(0, 1, 0), Math.PI / 2); } return z.multiply(y); }(); this.deviceOrientationFilterToWorldQ = this.deviceOrientationFilterToWorldQ || function () { var q = new Quaternion(); q.setFromAxisAngle(new Vector3(1, 0, 0), -Math.PI / 2); return q; }(); orientation = this._deviceOrientationQ; var out = new Quaternion(); out.copy(orientation); out.multiply(this.deviceOrientationFilterToWorldQ); out.multiply(this.resetQ); out.multiply(this.worldToScreenQ); out.multiplyQuaternions(this.deviceOrientationFixQ, out); if (this.yawOnly) { out.x = 0; out.z = 0; out.normalize(); } this.orientationOut_[0] = out.x; this.orientationOut_[1] = out.y; this.orientationOut_[2] = out.z; this.orientationOut_[3] = out.w; return this.orientationOut_; } else { var filterOrientation = this.filter.getOrientation(); orientation = this.posePredictor.getPrediction(filterOrientation, this.gyroscope, this.previousTimestampS); } var out = new Quaternion(); out.copy(this.filterToWorldQ); out.multiply(this.resetQ); out.multiply(orientation); out.multiply(this.worldToScreenQ); if (this.yawOnly) { out.x = 0; out.z = 0; out.normalize(); } this.orientationOut_[0] = out.x; this.orientationOut_[1] = out.y; this.orientationOut_[2] = out.z; this.orientationOut_[3] = out.w; return this.orientationOut_; }; FusionPoseSensor.prototype.resetPose = function () { this.resetQ.copy(this.filter.getOrientation()); this.resetQ.x = 0; this.resetQ.y = 0; this.resetQ.z *= -1; this.resetQ.normalize(); if (isLandscapeMode()) { this.resetQ.multiply(this.inverseWorldToScreenQ); } this.resetQ.multiply(this.originalPoseAdjustQ); }; FusionPoseSensor.prototype.onDeviceOrientation_ = function (e) { this._deviceOrientationQ = this._deviceOrientationQ || new Quaternion(); var alpha = e.alpha, beta = e.beta, gamma = e.gamma; alpha = (alpha || 0) * Math.PI / 180; beta = (beta || 0) * Math.PI / 180; gamma = (gamma || 0) * Math.PI / 180; this._deviceOrientationQ.setFromEulerYXZ(beta, alpha, -gamma); }; FusionPoseSensor.prototype.onDeviceMotion_ = function (deviceMotion) { this.updateDeviceMotion_(deviceMotion); }; FusionPoseSensor.prototype.updateDeviceMotion_ = function (deviceMotion) { var accGravity = deviceMotion.accelerationIncludingGravity; var rotRate = deviceMotion.rotationRate; var timestampS = deviceMotion.timeStamp / 1000; var deltaS = timestampS - this.previousTimestampS; if (deltaS < 0) { warnOnce('fusion-pose-sensor:invalid:non-monotonic', 'Invalid timestamps detected: non-monotonic timestamp from devicemotion'); this.previousTimestampS = timestampS; return; } else if (deltaS <= MIN_TIMESTEP || deltaS > MAX_TIMESTEP) { warnOnce('fusion-pose-sensor:invalid:outside-threshold', 'Invalid timestamps detected: Timestamp from devicemotion outside expected range.'); this.previousTimestampS = timestampS; return; } this.accelerometer.set(-accGravity.x, -accGravity.y, -accGravity.z); if (isR7()) { this.gyroscope.set(-rotRate.beta, rotRate.alpha, rotRate.gamma); } else { this.gyroscope.set(rotRate.alpha, rotRate.beta, rotRate.gamma); } if (!this.isDeviceMotionInRadians) { this.gyroscope.multiplyScalar(Math.PI / 180); } this.filter.addAccelMeasurement(this.accelerometer, timestampS); this.filter.addGyroMeasurement(this.gyroscope, timestampS); this.previousTimestampS = timestampS; }; FusionPoseSensor.prototype.onOrientationChange_ = function (screenOrientation) { this.setScreenTransform_(); }; FusionPoseSensor.prototype.onMessage_ = function (event) { var message = event.data; if (!message || !message.type) { return; } var type = message.type.toLowerCase(); if (type !== 'devicemotion') { return; } this.updateDeviceMotion_(message.deviceMotionEvent); }; FusionPoseSensor.prototype.setScreenTransform_ = function () { this.worldToScreenQ.set(0, 0, 0, 1); switch (window.orientation) { case 0: break; case 90: this.worldToScreenQ.setFromAxisAngle(new Vector3(0, 0, 1), -Math.PI / 2); break; case -90: this.worldToScreenQ.setFromAxisAngle(new Vector3(0, 0, 1), Math.PI / 2); break; case 180: break; } this.inverseWorldToScreenQ.copy(this.worldToScreenQ); this.inverseWorldToScreenQ.inverse(); }; FusionPoseSensor.prototype.start = function () { this.onDeviceMotionCallback_ = this.onDeviceMotion_.bind(this); this.onOrientationChangeCallback_ = this.onOrientationChange_.bind(this); this.onMessageCallback_ = this.onMessage_.bind(this); this.onDeviceOrientationCallback_ = this.onDeviceOrientation_.bind(this); if (isIOS() && isInsideCrossOriginIFrame()) { window.addEventListener('message', this.onMessageCallback_); } window.addEventListener('orientationchange', this.onOrientationChangeCallback_); if (this.isWithoutDeviceMotion) { window.addEventListener('deviceorientation', this.onDeviceOrientationCallback_); } else { window.addEventListener('devicemotion', this.onDeviceMotionCallback_); } }; FusionPoseSensor.prototype.stop = function () { window.removeEventListener('devicemotion', this.onDeviceMotionCallback_); window.removeEventListener('deviceorientation', this.onDeviceOrientationCallback_); window.removeEventListener('orientationchange', this.onOrientationChangeCallback_); window.removeEventListener('message', this.onMessageCallback_); }; var SENSOR_FREQUENCY = 60; var X_AXIS = new Vector3(1, 0, 0); var Z_AXIS = new Vector3(0, 0, 1); var SENSOR_TO_VR = new Quaternion(); SENSOR_TO_VR.setFromAxisAngle(X_AXIS, -Math.PI / 2); SENSOR_TO_VR.multiply(new Quaternion().setFromAxisAngle(Z_AXIS, Math.PI / 2)); var PoseSensor = function () { function PoseSensor(config) { classCallCheck(this, PoseSensor); this.config = config; this.sensor = null; this.fusionSensor = null; this._out = new Float32Array(4); this.api = null; this.errors = []; this._sensorQ = new Quaternion(); this._outQ = new Quaternion(); this._onSensorRead = this._onSensorRead.bind(this); this._onSensorError = this._onSensorError.bind(this); this.init(); } createClass(PoseSensor, [{ key: 'init', value: function init() { var sensor = null; try { sensor = new RelativeOrientationSensor({ frequency: SENSOR_FREQUENCY, referenceFrame: 'screen' }); sensor.addEventListener('error', this._onSensorError); } catch (error) { this.errors.push(error); if (error.name === 'SecurityError') { console.error('Cannot construct sensors due to the Feature Policy'); console.warn('Attempting to fall back using "devicemotion"; however this will ' + 'fail in the future without correct permissions.'); this.useDeviceMotion(); } else if (error.name === 'ReferenceError') { this.useDeviceMotion(); } else { console.error(error); } } if (sensor) { this.api = 'sensor'; this.sensor = sensor; this.sensor.addEventListener('reading', this._onSensorRead); this.sensor.start(); } } }, { key: 'useDeviceMotion', value: function useDeviceMotion() { this.api = 'devicemotion'; this.fusionSensor = new FusionPoseSensor(this.config.K_FILTER, this.config.PREDICTION_TIME_S, this.config.YAW_ONLY, this.config.DEBUG); if (this.sensor) { this.sensor.removeEventListener('reading', this._onSensorRead); this.sensor.removeEventListener('error', this._onSensorError); this.sensor = null; } } }, { key: 'getOrientation', value: function getOrientation() { if (this.fusionSensor) { return this.fusionSensor.getOrientation(); } if (!this.sensor || !this.sensor.quaternion) { this._out[0] = this._out[1] = this._out[2] = 0; this._out[3] = 1; return this._out; } var q = this.sensor.quaternion; this._sensorQ.set(q[0], q[1], q[2], q[3]); var out = this._outQ; out.copy(SENSOR_TO_VR); out.multiply(this._sensorQ); if (this.config.YAW_ONLY) { out.x = out.z = 0; out.normalize(); } this._out[0] = out.x; this._out[1] = out.y; this._out[2] = out.z; this._out[3] = out.w; return this._out; } }, { key: '_onSensorError', value: function _onSensorError(event) { this.errors.push(event.error); if (event.error.name === 'NotAllowedError') { console.error('Permission to access sensor was denied'); } else if (event.error.name === 'NotReadableError') { console.error('Sensor could not be read'); } else { console.error(event.error); } this.useDeviceMotion(); } }, { key: '_onSensorRead', value: function _onSensorRead() {} }]); return PoseSensor; }(); var rotateInstructionsAsset = "<svg width='198' height='240' viewBox='0 0 198 240' xmlns='http://www.w3.org/2000/svg'><g fill='none' fill-rule='evenodd'><path d='M149.625 109.527l6.737 3.891v.886c0 .177.013.36.038.549.01.081.02.162.027.242.14 1.415.974 2.998 2.105 3.999l5.72 5.062.081-.09s4.382-2.53 5.235-3.024l25.97 14.993v54.001c0 .771-.386 1.217-.948 1.217-.233 0-.495-.076-.772-.236l-23.967-13.838-.014.024-27.322 15.775-.85-1.323c-4.731-1.529-9.748-2.74-14.951-3.61a.27.27 0 0 0-.007.024l-5.067 16.961-7.891 4.556-.037-.063v27.59c0 .772-.386 1.217-.948 1.217-.232 0-.495-.076-.772-.236l-42.473-24.522c-.95-.549-1.72-1.877-1.72-2.967v-1.035l-.021.047a5.111 5.111 0 0 0-1.816-.399 5.682 5.682 0 0 0-.546.001 13.724 13.724 0 0 1-1.918-.041c-1.655-.153-3.2-.6-4.404-1.296l-46.576-26.89.005.012-10.278-18.75c-1.001-1.827-.241-4.216 1.698-5.336l56.011-32.345a4.194 4.194 0 0 1 2.099-.572c1.326 0 2.572.659 3.227 1.853l.005-.003.227.413-.006.004a9.63 9.63 0 0 0 1.477 2.018l.277.27c1.914 1.85 4.468 2.801 7.113 2.801 1.949 0 3.948-.517 5.775-1.572.013 0 7.319-4.219 7.319-4.219a4.194 4.194 0 0 1 2.099-.572c1.326 0 2.572.658 3.226 1.853l3.25 5.928.022-.018 6.785 3.917-.105-.182 46.881-26.965m0-1.635c-.282 0-.563.073-.815.218l-46.169 26.556-5.41-3.124-3.005-5.481c-.913-1.667-2.699-2.702-4.66-2.703-1.011 0-2.02.274-2.917.792a3825 3825 0 0 1-7.275 4.195l-.044.024a9.937 9.937 0 0 1-4.957 1.353c-2.292 0-4.414-.832-5.976-2.342l-.252-.245a7.992 7.992 0 0 1-1.139-1.534 1.379 1.379 0 0 0-.06-.122l-.227-.414a1.718 1.718 0 0 0-.095-.154c-.938-1.574-2.673-2.545-4.571-2.545-1.011 0-2.02.274-2.917.792L3.125 155.502c-2.699 1.559-3.738 4.94-2.314 7.538l10.278 18.75c.177.323.448.563.761.704l46.426 26.804c1.403.81 3.157 1.332 5.072 1.508a15.661 15.661 0 0 0 2.146.046 4.766 4.766 0 0 1 .396 0c.096.004.19.011.283.022.109 1.593 1.159 3.323 2.529 4.114l42.472 24.522c.524.302 1.058.455 1.59.455 1.497 0 2.583-1.2 2.583-2.852v-26.562l7.111-4.105a1.64 1.64 0 0 0 .749-.948l4.658-15.593c4.414.797 8.692 1.848 12.742 3.128l.533.829a1.634 1.634 0 0 0 2.193.531l26.532-15.317L193 192.433c.523.302 1.058.455 1.59.455 1.497 0 2.583-1.199 2.583-2.852v-54.001c0-.584-.312-1.124-.818-1.416l-25.97-14.993a1.633 1.633 0 0 0-1.636.001c-.606.351-2.993 1.73-4.325 2.498l-4.809-4.255c-.819-.725-1.461-1.933-1.561-2.936a7.776 7.776 0 0 0-.033-.294 2.487 2.487 0 0 1-.023-.336v-.886c0-.584-.312-1.123-.817-1.416l-6.739-3.891a1.633 1.633 0 0 0-.817-.219' fill='#455A64'/><path d='M96.027 132.636l46.576 26.891c1.204.695 1.979 1.587 2.242 2.541l-.01.007-81.374 46.982h-.001c-1.654-.152-3.199-.6-4.403-1.295l-46.576-26.891 83.546-48.235' fill='#FAFAFA'/><path d='M63.461 209.174c-.008 0-.015 0-.022-.002-1.693-.156-3.228-.609-4.441-1.309l-46.576-26.89a.118.118 0 0 1 0-.203l83.546-48.235a.117.117 0 0 1 .117 0l46.576 26.891c1.227.708 2.021 1.612 2.296 2.611a.116.116 0 0 1-.042.124l-.021.016-81.375 46.981a.11.11 0 0 1-.058.016zm-50.747-28.303l46.401 26.79c1.178.68 2.671 1.121 4.32 1.276l81.272-46.922c-.279-.907-1.025-1.73-2.163-2.387l-46.517-26.857-83.313 48.1z' fill='#607D8B'/><path d='M148.327 165.471a5.85 5.85 0 0 1-.546.001c-1.894-.083-3.302-1.038-3.145-2.132a2.693 2.693 0 0 0-.072-1.105l-81.103 46.822c.628.058 1.272.073 1.918.042.182-.009.364-.009.546-.001 1.894.083 3.302 1.038 3.145 2.132l79.257-45.759' fill='#FFF'/><path d='M69.07 211.347a.118.118 0 0 1-.115-.134c.045-.317-.057-.637-.297-.925-.505-.61-1.555-1.022-2.738-1.074a5.966 5.966 0 0 0-.535.001 14.03 14.03 0 0 1-1.935-.041.117.117 0 0 1-.103-.092.116.116 0 0 1 .055-.126l81.104-46.822a.117.117 0 0 1 .171.07c.104.381.129.768.074 1.153-.045.316.057.637.296.925.506.61 1.555 1.021 2.739 1.073.178.008.357.008.535-.001a.117.117 0 0 1 .064.218l-79.256 45.759a.114.114 0 0 1-.059.016zm-3.405-2.372c.089 0 .177.002.265.006 1.266.056 2.353.488 2.908 1.158.227.274.35.575.36.882l78.685-45.429c-.036 0-.072-.001-.107-.003-1.267-.056-2.354-.489-2.909-1.158-.282-.34-.402-.724-.347-1.107a2.604 2.604 0 0 0-.032-.91L63.846 208.97a13.91 13.91 0 0 0 1.528.012c.097-.005.194-.007.291-.007z' fill='#607D8B'/><path d='M2.208 162.134c-1.001-1.827-.241-4.217 1.698-5.337l56.011-32.344c1.939-1.12 4.324-.546 5.326 1.281l.232.41a9.344 9.344 0 0 0 1.47 2.021l.278.27c3.325 3.214 8.583 3.716 12.888 1.23l7.319-4.22c1.94-1.119 4.324-.546 5.325 1.282l3.25 5.928-83.519 48.229-10.278-18.75z' fill='#FAFAFA'/><path d='M12.486 181.001a.112.112 0 0 1-.031-.005.114.114 0 0 1-.071-.056L2.106 162.19c-1.031-1.88-.249-4.345 1.742-5.494l56.01-32.344a4.328 4.328 0 0 1 2.158-.588c1.415 0 2.65.702 3.311 1.882.01.008.018.017.024.028l.227.414a.122.122 0 0 1 .013.038 9.508 9.508 0 0 0 1.439 1.959l.275.266c1.846 1.786 4.344 2.769 7.031 2.769 1.977 0 3.954-.538 5.717-1.557a.148.148 0 0 1 .035-.013l7.284-4.206a4.321 4.321 0 0 1 2.157-.588c1.427 0 2.672.716 3.329 1.914l3.249 5.929a.116.116 0 0 1-.044.157l-83.518 48.229a.116.116 0 0 1-.059.016zm49.53-57.004c-.704 0-1.41.193-2.041.557l-56.01 32.345c-1.882 1.086-2.624 3.409-1.655 5.179l10.221 18.645 83.317-48.112-3.195-5.829c-.615-1.122-1.783-1.792-3.124-1.792a4.08 4.08 0 0 0-2.04.557l-7.317 4.225a.148.148 0 0 1-.035.013 11.7 11.7 0 0 1-5.801 1.569c-2.748 0-5.303-1.007-7.194-2.835l-.278-.27a9.716 9.716 0 0 1-1.497-2.046.096.096 0 0 1-.013-.037l-.191-.347a.11.11 0 0 1-.023-.029c-.615-1.123-1.783-1.793-3.124-1.793z' fill='#607D8B'/><path d='M42.434 155.808c-2.51-.001-4.697-1.258-5.852-3.365-1.811-3.304-.438-7.634 3.059-9.654l12.291-7.098a7.599 7.599 0 0 1 3.789-1.033c2.51 0 4.697 1.258 5.852 3.365 1.811 3.304.439 7.634-3.059 9.654l-12.291 7.098a7.606 7.606 0 0 1-3.789 1.033zm13.287-20.683a7.128 7.128 0 0 0-3.555.971l-12.291 7.098c-3.279 1.893-4.573 5.942-2.883 9.024 1.071 1.955 3.106 3.122 5.442 3.122a7.13 7.13 0 0 0 3.556-.97l12.291-7.098c3.279-1.893 4.572-5.942 2.883-9.024-1.072-1.955-3.106-3.123-5.443-3.123z' fill='#607D8B'/><path d='M149.588 109.407l6.737 3.89v.887c0 .176.013.36.037.549.011.081.02.161.028.242.14 1.415.973 2.998 2.105 3.999l7.396 6.545c.177.156.358.295.541.415 1.579 1.04 2.95.466 3.062-1.282.049-.784.057-1.595.023-2.429l-.003-.16v-1.151l25.987 15.003v54c0 1.09-.77 1.53-1.72.982l-42.473-24.523c-.95-.548-1.72-1.877-1.72-2.966v-34.033' fill='#FAFAFA'/><path d='M194.553 191.25c-.257 0-.54-.085-.831-.253l-42.472-24.521c-.981-.567-1.779-1.943-1.779-3.068v-34.033h.234v34.033c0 1.051.745 2.336 1.661 2.866l42.473 24.521c.424.245.816.288 1.103.122.285-.164.442-.52.442-1.002v-53.933l-25.753-14.868.003 1.106c.034.832.026 1.654-.024 2.439-.054.844-.396 1.464-.963 1.746-.619.309-1.45.173-2.28-.373a5.023 5.023 0 0 1-.553-.426l-7.397-6.544c-1.158-1.026-1.999-2.625-2.143-4.076a9.624 9.624 0 0 0-.027-.238 4.241 4.241 0 0 1-.038-.564v-.82l-6.68-3.856.117-.202 6.738 3.89.058.034v.954c0 .171.012.351.036.533.011.083.021.165.029.246.138 1.395.948 2.935 2.065 3.923l7.397 6.545c.173.153.35.289.527.406.758.499 1.504.63 2.047.359.49-.243.786-.795.834-1.551.05-.778.057-1.591.024-2.417l-.004-.163v-1.355l.175.1 25.987 15.004.059.033v54.068c0 .569-.198.996-.559 1.204a1.002 1.002 0 0 1-.506.131' fill='#607D8B'/><path d='M145.685 163.161l24.115 13.922-25.978 14.998-1.462-.307c-6.534-2.17-13.628-3.728-21.019-4.616-4.365-.524-8.663 1.096-9.598 3.62a2.746 2.746 0 0 0-.011 1.928c1.538 4.267 4.236 8.363 7.995 12.135l.532.845-25.977 14.997-24.115-13.922 75.518-43.6' fill='#FFF'/><path d='M94.282 220.818l-.059-.033-24.29-14.024.175-.101 75.577-43.634.058.033 24.29 14.024-26.191 15.122-.045-.01-1.461-.307c-6.549-2.174-13.613-3.725-21.009-4.614a13.744 13.744 0 0 0-1.638-.097c-3.758 0-7.054 1.531-7.837 3.642a2.62 2.62 0 0 0-.01 1.848c1.535 4.258 4.216 8.326 7.968 12.091l.016.021.526.835.006.01.064.102-.105.061-25.977 14.998-.058.033zm-23.881-14.057l23.881 13.788 24.802-14.32c.546-.315.846-.489 1.017-.575l-.466-.74c-3.771-3.787-6.467-7.881-8.013-12.168a2.851 2.851 0 0 1 .011-2.008c.815-2.199 4.203-3.795 8.056-3.795.557 0 1.117.033 1.666.099 7.412.891 14.491 2.445 21.041 4.621.836.175 1.215.254 1.39.304l25.78-14.884-23.881-13.788-75.284 43.466z' fill='#607D8B'/><path d='M167.23 125.979v50.871l-27.321 15.773-6.461-14.167c-.91-1.996-3.428-1.738-5.624.574a10.238 10.238 0 0 0-2.33 4.018l-6.46 21.628-27.322 15.774v-50.871l75.518-43.6' fill='#FFF'/><path d='M91.712 220.567a.127.127 0 0 1-.059-.016.118.118 0 0 1-.058-.101v-50.871c0-.042.023-.08.058-.101l75.519-43.6a.117.117 0 0 1 .175.101v50.871c0 .041-.023.08-.059.1l-27.321 15.775a.118.118 0 0 1-.094.01.12.12 0 0 1-.071-.063l-6.46-14.168c-.375-.822-1.062-1.275-1.934-1.275-1.089 0-2.364.686-3.5 1.881a10.206 10.206 0 0 0-2.302 3.972l-6.46 21.627a.118.118 0 0 1-.054.068L91.77 220.551a.12.12 0 0 1-.058.016zm.117-50.92v50.601l27.106-15.65 6.447-21.583a10.286 10.286 0 0 1 2.357-4.065c1.18-1.242 2.517-1.954 3.669-1.954.969 0 1.731.501 2.146 1.411l6.407 14.051 27.152-15.676v-50.601l-75.284 43.466z' fill='#607D8B'/><path d='M168.543 126.213v50.87l-27.322 15.774-6.46-14.168c-.91-1.995-3.428-1.738-5.624.574a10.248 10.248 0 0 0-2.33 4.019l-6.461 21.627-27.321 15.774v-50.87l75.518-43.6' fill='#FFF'/><path d='M93.025 220.8a.123.123 0 0 1-.059-.015.12.12 0 0 1-.058-.101v-50.871c0-.042.023-.08.058-.101l75.518-43.6a.112.112 0 0 1 .117 0c.036.02.059.059.059.1v50.871a.116.116 0 0 1-.059.101l-27.321 15.774a.111.111 0 0 1-.094.01.115.115 0 0 1-.071-.062l-6.46-14.168c-.375-.823-1.062-1.275-1.935-1.275-1.088 0-2.363.685-3.499 1.881a10.19 10.19 0 0 0-2.302 3.971l-6.461 21.628a.108.108 0 0 1-.053.067l-27.322 15.775a.12.12 0 0 1-.058.015zm.117-50.919v50.6l27.106-15.649 6.447-21.584a10.293 10.293 0 0 1 2.357-4.065c1.179-1.241 2.516-1.954 3.668-1.954.969 0 1.732.502 2.147 1.412l6.407 14.051 27.152-15.676v-50.601l-75.284 43.466z' fill='#607D8B'/><path d='M169.8 177.083l-27.322 15.774-6.46-14.168c-.91-1.995-3.428-1.738-5.625.574a10.246 10.246 0 0 0-2.329 4.019l-6.461 21.627-27.321 15.774v-50.87l75.518-43.6v50.87z' fill='#FAFAFA'/><path d='M94.282 220.917a.234.234 0 0 1-.234-.233v-50.871c0-.083.045-.161.117-.202l75.518-43.601a.234.234 0 1 1 .35.202v50.871a.233.233 0 0 1-.116.202l-27.322 15.775a.232.232 0 0 1-.329-.106l-6.461-14.168c-.36-.789-.992-1.206-1.828-1.206-1.056 0-2.301.672-3.415 1.844a10.099 10.099 0 0 0-2.275 3.924l-6.46 21.628a.235.235 0 0 1-.107.136l-27.322 15.774a.23.23 0 0 1-.116.031zm.233-50.969v50.331l26.891-15.525 6.434-21.539a10.41 10.41 0 0 1 2.384-4.112c1.201-1.265 2.569-1.991 3.753-1.991 1.018 0 1.818.526 2.253 1.48l6.354 13.934 26.982-15.578v-50.331l-75.051 43.331z' fill='#607D8B'/><path d='M109.894 199.943c-1.774 0-3.241-.725-4.244-2.12a.224.224 0 0 1 .023-.294.233.233 0 0 1 .301-.023c.78.547 1.705.827 2.75.827 1.323 0 2.754-.439 4.256-1.306 5.311-3.067 9.631-10.518 9.631-16.611 0-1.927-.442-3.56-1.278-4.724a.232.232 0 0 1 .323-.327c1.671 1.172 2.591 3.381 2.591 6.219 0 6.242-4.426 13.863-9.865 17.003-1.574.908-3.084 1.356-4.488 1.356zm-2.969-1.542c.813.651 1.82.877 2.968.877h.001c1.321 0 2.753-.327 4.254-1.194 5.311-3.067 9.632-10.463 9.632-16.556 0-1.979-.463-3.599-1.326-4.761.411 1.035.625 2.275.625 3.635 0 6.243-4.426 13.883-9.865 17.023-1.574.909-3.084 1.317-4.49 1.317-.641 0-1.243-.149-1.799-.341z' fill='#607D8B'/><path d='M113.097 197.23c5.384-3.108 9.748-10.636 9.748-16.814 0-2.051-.483-3.692-1.323-4.86-1.784-1.252-4.374-1.194-7.257.47-5.384 3.108-9.748 10.636-9.748 16.814 0 2.051.483 3.692 1.323 4.86 1.784 1.252 4.374 1.194 7.257-.47' fill='#FAFAFA'/><path d='M108.724 198.614c-1.142 0-2.158-.213-3.019-.817-.021-.014-.04.014-.055-.007-.894-1.244-1.367-2.948-1.367-4.973 0-6.242 4.426-13.864 9.865-17.005 1.574-.908 3.084-1.363 4.49-1.363 1.142 0 2.158.309 3.018.913a.23.23 0 0 1 .056.056c.894 1.244 1.367 2.972 1.367 4.997 0 6.243-4.426 13.783-9.865 16.923-1.574.909-3.084 1.276-4.49 1.276zm-2.718-1.109c.774.532 1.688.776 2.718.776 1.323 0 2.754-.413 4.256-1.28 5.311-3.066 9.631-10.505 9.631-16.598 0-1.909-.434-3.523-1.255-4.685-.774-.533-1.688-.799-2.718-.799-1.323 0-2.755.441-4.256 1.308-5.311 3.066-9.631 10.506-9.631 16.599 0 1.909.434 3.517 1.255 4.679z' fill='#607D8B'/><path d='M149.318 114.262l-9.984 8.878 15.893 11.031 5.589-6.112-11.498-13.797' fill='#FAFAFA'/><path d='M169.676 120.84l-9.748 5.627c-3.642 2.103-9.528 2.113-13.147.024-3.62-2.089-3.601-5.488.041-7.591l9.495-5.608-6.729-3.885-81.836 47.071 45.923 26.514 3.081-1.779c.631-.365.869-.898.618-1.39-2.357-4.632-2.593-9.546-.683-14.262 5.638-13.92 24.509-24.815 48.618-28.07 8.169-1.103 16.68-.967 24.704.394.852.145 1.776.008 2.407-.357l3.081-1.778-25.825-14.91' fill='#FAFAFA'/><path d='M113.675 183.459a.47.47 0 0 1-.233-.062l-45.924-26.515a.468.468 0 0 1 .001-.809l81.836-47.071a.467.467 0 0 1 .466 0l6.729 3.885a.467.467 0 0 1-.467.809l-6.496-3.75-80.9 46.533 44.988 25.973 2.848-1.644c.192-.111.62-.409.435-.773-2.416-4.748-2.658-9.814-.7-14.65 2.806-6.927 8.885-13.242 17.582-18.263 8.657-4.998 19.518-8.489 31.407-10.094 8.198-1.107 16.79-.97 24.844.397.739.125 1.561.007 2.095-.301l2.381-1.374-25.125-14.506a.467.467 0 0 1 .467-.809l25.825 14.91a.467.467 0 0 1 0 .809l-3.081 1.779c-.721.417-1.763.575-2.718.413-7.963-1.351-16.457-1.486-24.563-.392-11.77 1.589-22.512 5.039-31.065 9.977-8.514 4.916-14.456 11.073-17.183 17.805-1.854 4.578-1.623 9.376.666 13.875.37.725.055 1.513-.8 2.006l-3.081 1.78a.476.476 0 0 1-.234.062' fill='#455A64'/><path d='M153.316 128.279c-2.413 0-4.821-.528-6.652-1.586-1.818-1.049-2.82-2.461-2.82-3.975 0-1.527 1.016-2.955 2.861-4.02l9.493-5.607a.233.233 0 1 1 .238.402l-9.496 5.609c-1.696.979-2.628 2.263-2.628 3.616 0 1.34.918 2.608 2.585 3.571 3.549 2.049 9.343 2.038 12.914-.024l9.748-5.628a.234.234 0 0 1 .234.405l-9.748 5.628c-1.858 1.072-4.296 1.609-6.729 1.609' fill='#607D8B'/><path d='M113.675 182.992l-45.913-26.508M113.675 183.342a.346.346 0 0 1-.175-.047l-45.913-26.508a.35.35 0 1 1 .35-.607l45.913 26.508a.35.35 0 0 1-.175.654' fill='#455A64'/><path d='M67.762 156.484v54.001c0 1.09.77 2.418 1.72 2.967l42.473 24.521c.95.549 1.72.11 1.72-.98v-54.001' fill='#FAFAFA'/><path d='M112.727 238.561c-.297 0-.62-.095-.947-.285l-42.473-24.521c-1.063-.613-1.895-2.05-1.895-3.27v-54.001a.35.35 0 1 1 .701 0v54.001c0 .96.707 2.18 1.544 2.663l42.473 24.522c.344.198.661.243.87.122.206-.119.325-.411.325-.799v-54.001a.35.35 0 1 1 .7 0v54.001c0 .655-.239 1.154-.675 1.406a1.235 1.235 0 0 1-.623.162' fill='#455A64'/><path d='M112.86 147.512h-.001c-2.318 0-4.499-.522-6.142-1.471-1.705-.984-2.643-2.315-2.643-3.749 0-1.445.952-2.791 2.68-3.788l12.041-6.953c1.668-.962 3.874-1.493 6.212-1.493 2.318 0 4.499.523 6.143 1.472 1.704.984 2.643 2.315 2.643 3.748 0 1.446-.952 2.791-2.68 3.789l-12.042 6.952c-1.668.963-3.874 1.493-6.211 1.493zm12.147-16.753c-2.217 0-4.298.497-5.861 1.399l-12.042 6.952c-1.502.868-2.33 1.998-2.33 3.182 0 1.173.815 2.289 2.293 3.142 1.538.889 3.596 1.378 5.792 1.378h.001c2.216 0 4.298-.497 5.861-1.399l12.041-6.953c1.502-.867 2.33-1.997 2.33-3.182 0-1.172-.814-2.288-2.292-3.142-1.539-.888-3.596-1.377-5.793-1.377z' fill='#607D8B'/><path d='M165.63 123.219l-5.734 3.311c-3.167 1.828-8.286 1.837-11.433.02-3.147-1.817-3.131-4.772.036-6.601l5.734-3.31 11.397 6.58' fill='#FAFAFA'/><path d='M154.233 117.448l9.995 5.771-4.682 2.704c-1.434.827-3.352 1.283-5.399 1.283-2.029 0-3.923-.449-5.333-1.263-1.29-.744-2-1.694-2-2.674 0-.991.723-1.955 2.036-2.713l5.383-3.108m0-.809l-5.734 3.31c-3.167 1.829-3.183 4.784-.036 6.601 1.568.905 3.623 1.357 5.684 1.357 2.077 0 4.159-.46 5.749-1.377l5.734-3.311-11.397-6.58M145.445 179.667c-1.773 0-3.241-.85-4.243-2.245-.067-.092-.057-.275.023-.356.08-.081.207-.12.3-.055.781.548 1.706.812 2.751.811 1.322 0 2.754-.446 4.256-1.313 5.31-3.066 9.631-10.522 9.631-16.615 0-1.927-.442-3.562-1.279-4.726a.235.235 0 0 1 .024-.301.232.232 0 0 1 .3-.027c1.67 1.172 2.59 3.38 2.59 6.219 0 6.242-4.425 13.987-9.865 17.127-1.573.908-3.083 1.481-4.488 1.481zM142.476 178c.814.651 1.82 1.002 2.969 1.002 1.322 0 2.753-.452 4.255-1.32 5.31-3.065 9.631-10.523 9.631-16.617 0-1.98-.463-3.63-1.325-4.793.411 1.035.624 2.26.624 3.62 0 6.242-4.425 13.875-9.865 17.015-1.573.909-3.084 1.376-4.489 1.376a5.49 5.49 0 0 1-1.8-.283z' fill='#607D8B'/><path d='M148.648 176.704c5.384-3.108 9.748-10.636 9.748-16.813 0-2.052-.483-3.693-1.322-4.861-1.785-1.252-4.375-1.194-7.258.471-5.383 3.108-9.748 10.636-9.748 16.813 0 2.051.484 3.692 1.323 4.86 1.785 1.253 4.374 1.195 7.257-.47' fill='#FAFAFA'/><path d='M144.276 178.276c-1.143 0-2.158-.307-3.019-.911a.217.217 0 0 1-.055-.054c-.895-1.244-1.367-2.972-1.367-4.997 0-6.241 4.425-13.875 9.865-17.016 1.573-.908 3.084-1.369 4.489-1.369 1.143 0 2.158.307 3.019.91a.24.24 0 0 1 .055.055c.894 1.244 1.367 2.971 1.367 4.997 0 6.241-4.425 13.875-9.865 17.016-1.573.908-3.084 1.369-4.489 1.369zm-2.718-1.172c.773.533 1.687.901 2.718.901 1.322 0 2.754-.538 4.256-1.405 5.31-3.066 9.631-10.567 9.631-16.661 0-1.908-.434-3.554-1.256-4.716-.774-.532-1.688-.814-2.718-.814-1.322 0-2.754.433-4.256 1.3-5.31 3.066-9.631 10.564-9.631 16.657 0 1.91.434 3.576 1.256 4.738z' fill='#607D8B'/><path d='M150.72 172.361l-.363-.295a24.105 24.105 0 0 0 2.148-3.128 24.05 24.05 0 0 0 1.977-4.375l.443.149a24.54 24.54 0 0 1-2.015 4.46 24.61 24.61 0 0 1-2.19 3.189M115.917 191.514l-.363-.294a24.174 24.174 0 0 0 2.148-3.128 24.038 24.038 0 0 0 1.976-4.375l.443.148a24.48 24.48 0 0 1-2.015 4.461 24.662 24.662 0 0 1-2.189 3.188M114 237.476V182.584 237.476' fill='#607D8B'/><g><path d='M81.822 37.474c.017-.135-.075-.28-.267-.392-.327-.188-.826-.21-1.109-.045l-6.012 3.471c-.131.076-.194.178-.191.285.002.132.002.461.002.578v.043l-.007.128-6.591 3.779c-.001 0-2.077 1.046-2.787 5.192 0 0-.912 6.961-.898 19.745.015 12.57.606 17.07 1.167 21.351.22 1.684 3.001 2.125 3.001 2.125.331.04.698-.027 1.08-.248l75.273-43.551c1.808-1.069 2.667-3.719 3.056-6.284 1.213-7.99 1.675-32.978-.275-39.878-.196-.693-.51-1.083-.868-1.282l-2.086-.79c-.727.028-1.416.467-1.534.535L82.032 37.072l-.21.402' fill='#FFF'/><path d='M144.311 1.701l2.085.79c.358.199.672.589.868 1.282 1.949 6.9 1.487 31.887.275 39.878-.39 2.565-1.249 5.215-3.056 6.284L69.21 93.486a1.78 1.78 0 0 1-.896.258l-.183-.011c0 .001-2.782-.44-3.003-2.124-.56-4.282-1.151-8.781-1.165-21.351-.015-12.784.897-19.745.897-19.745.71-4.146 2.787-5.192 2.787-5.192l6.591-3.779.007-.128v-.043c0-.117 0-.446-.002-.578-.003-.107.059-.21.191-.285l6.012-3.472a.98.98 0 0 1 .481-.11c.218 0 .449.053.627.156.193.112.285.258.268.392l.211-.402 60.744-34.836c.117-.068.806-.507 1.534-.535m0-.997l-.039.001c-.618.023-1.283.244-1.974.656l-.021.012-60.519 34.706a2.358 2.358 0 0 0-.831-.15c-.365 0-.704.084-.98.244l-6.012 3.471c-.442.255-.699.69-.689 1.166l.001.15-6.08 3.487c-.373.199-2.542 1.531-3.29 5.898l-.006.039c-.009.07-.92 7.173-.906 19.875.014 12.62.603 17.116 1.172 21.465l.002.015c.308 2.355 3.475 2.923 3.836 2.98l.034.004c.101.013.204.019.305.019a2.77 2.77 0 0 0 1.396-.392l75.273-43.552c1.811-1.071 2.999-3.423 3.542-6.997 1.186-7.814 1.734-33.096-.301-40.299-.253-.893-.704-1.527-1.343-1.882l-.132-.062-2.085-.789a.973.973 0 0 0-.353-.065' fill='#455A64'/><path d='M128.267 11.565l1.495.434-56.339 32.326' fill='#FFF'/><path d='M74.202 90.545a.5.5 0 0 1-.25-.931l18.437-10.645a.499.499 0 1 1 .499.864L74.451 90.478l-.249.067M75.764 42.654l-.108-.062.046-.171 5.135-2.964.17.045-.045.171-5.135 2.964-.063.017M70.52 90.375V46.421l.063-.036L137.84 7.554v43.954l-.062.036L70.52 90.375zm.25-43.811v43.38l66.821-38.579V7.985L70.77 46.564z' fill='#607D8B'/><path d='M86.986 83.182c-.23.149-.612.384-.849.523l-11.505 6.701c-.237.139-.206.252.068.252h.565c.275 0 .693-.113.93-.252L87.7 83.705c.237-.139.428-.253.425-.256a11.29 11.29 0 0 1-.006-.503c0-.274-.188-.377-.418-.227l-.715.463' fill='#607D8B'/><path d='M75.266 90.782H74.7c-.2 0-.316-.056-.346-.166-.03-.11.043-.217.215-.317l11.505-6.702c.236-.138.615-.371.844-.519l.715-.464a.488.488 0 0 1 .266-.089c.172 0 .345.13.345.421 0 .214.001.363.003.437l.006.004-.004.069c-.003.075-.003.075-.486.356l-11.505 6.702a2.282 2.282 0 0 1-.992.268zm-.6-.25l.034.001h.566c.252 0 .649-.108.866-.234l11.505-6.702c.168-.098.294-.173.361-.214-.004-.084-.004-.218-.004-.437l-.095-.171-.131.049-.714.463c-.232.15-.616.386-.854.525l-11.505 6.702-.029.018z' fill='#607D8B'/><path d='M75.266 89.871H74.7c-.2 0-.316-.056-.346-.166-.03-.11.043-.217.215-.317l11.505-6.702c.258-.151.694-.268.993-.268h.565c.2 0 .316.056.346.166.03.11-.043.217-.215.317l-11.505 6.702a2.282 2.282 0 0 1-.992.268zm-.6-.25l.034.001h.566c.252 0 .649-.107.866-.234l11.505-6.702.03-.018-.035-.001h-.565c-.252 0-.649.108-.867.234l-11.505 6.702-.029.018zM74.37 90.801v-1.247 1.247' fill='#607D8B'/><path d='M68.13 93.901c-.751-.093-1.314-.737-1.439-1.376-.831-4.238-1.151-8.782-1.165-21.352-.015-12.784.897-19.745.897-19.745.711-4.146 2.787-5.192 2.787-5.192l74.859-43.219c.223-.129 2.487-1.584 3.195.923 1.95 6.9 1.488 31.887.275 39.878-.389 2.565-1.248 5.215-3.056 6.283L69.21 93.653c-.382.221-.749.288-1.08.248 0 0-2.781-.441-3.001-2.125-.561-4.281-1.152-8.781-1.167-21.351-.014-12.784.898-19.745.898-19.745.71-4.146 2.787-5.191 2.787-5.191l6.598-3.81.871-.119 6.599-3.83.046-.461L68.13 93.901' fill='#FAFAFA'/><path d='M68.317 94.161l-.215-.013h-.001l-.244-.047c-.719-.156-2.772-.736-2.976-2.292-.568-4.34-1.154-8.813-1.168-21.384-.014-12.654.891-19.707.9-19.777.725-4.231 2.832-5.338 2.922-5.382l6.628-3.827.87-.119 6.446-3.742.034-.334a.248.248 0 0 1 .273-.223.248.248 0 0 1 .223.272l-.059.589-6.752 3.919-.87.118-6.556 3.785c-.031.016-1.99 1.068-2.666 5.018-.007.06-.908 7.086-.894 19.702.014 12.539.597 16.996 1.161 21.305.091.691.689 1.154 1.309 1.452a1.95 1.95 0 0 1-.236-.609c-.781-3.984-1.155-8.202-1.17-21.399-.014-12.653.891-19.707.9-19.777.725-4.231 2.832-5.337 2.922-5.382-.004.001 74.444-42.98 74.846-43.212l.028-.017c.904-.538 1.72-.688 2.36-.433.555.221.949.733 1.172 1.52 2.014 7.128 1.46 32.219.281 39.983-.507 3.341-1.575 5.515-3.175 6.462L69.335 93.869a2.023 2.023 0 0 1-1.018.292zm-.147-.507c.293.036.604-.037.915-.217l75.273-43.551c1.823-1.078 2.602-3.915 2.934-6.106 1.174-7.731 1.731-32.695-.268-39.772-.178-.631-.473-1.032-.876-1.192-.484-.193-1.166-.052-1.921.397l-.034.021-74.858 43.218c-.031.017-1.989 1.069-2.666 5.019-.007.059-.908 7.085-.894 19.702.015 13.155.386 17.351 1.161 21.303.09.461.476.983 1.037 1.139.114.025.185.037.196.039h.001z' fill='#455A64'/><path d='M69.317 68.982c.489-.281.885-.056.885.505 0 .56-.396 1.243-.885 1.525-.488.282-.884.057-.884-.504 0-.56.396-1.243.884-1.526' fill='#FFF'/><path d='M68.92 71.133c-.289 0-.487-.228-.487-.625 0-.56.396-1.243.884-1.526a.812.812 0 0 1 .397-.121c.289 0 .488.229.488.626 0 .56-.396 1.243-.885 1.525a.812.812 0 0 1-.397.121m.794-2.459a.976.976 0 0 0-.49.147c-.548.317-.978 1.058-.978 1.687 0 .486.271.812.674.812a.985.985 0 0 0 .491-.146c.548-.317.978-1.057.978-1.687 0-.486-.272-.813-.675-.813' fill='#8097A2'/><path d='M68.92 70.947c-.271 0-.299-.307-.299-.439 0-.491.361-1.116.79-1.363a.632.632 0 0 1 .303-.096c.272 0 .301.306.301.438 0 .491-.363 1.116-.791 1.364a.629.629 0 0 1-.304.096m.794-2.086a.812.812 0 0 0-.397.121c-.488.283-.884.966-.884 1.526 0 .397.198.625.487.625a.812.812 0 0 0 .397-.121c.489-.282.885-.965.885-1.525 0-.397-.199-.626-.488-.626' fill='#8097A2'/><path d='M69.444 85.35c.264-.152.477-.031.477.272 0 .303-.213.67-.477.822-.263.153-.477.031-.477-.271 0-.302.214-.671.477-.823' fill='#FFF'/><path d='M69.23 86.51c-.156 0-.263-.123-.263-.337 0-.302.214-.671.477-.823a.431.431 0 0 1 .214-.066c.156 0 .263.124.263.338 0 .303-.213.67-.477.822a.431.431 0 0 1-.214.066m.428-1.412c-.1 0-.203.029-.307.09-.32.185-.57.618-.57.985 0 .309.185.524.449.524a.63.63 0 0 0 .308-.09c.32-.185.57-.618.57-.985 0-.309-.185-.524-.45-.524' fill='#8097A2'/><path d='M69.23 86.322l-.076-.149c0-.235.179-.544.384-.661l.12-.041.076.151c0 .234-.179.542-.383.66l-.121.04m.428-1.038a.431.431 0 0 0-.214.066c-.263.152-.477.521-.477.823 0 .214.107.337.263.337a.431.431 0 0 0 .214-.066c.264-.152.477-.519.477-.822 0-.214-.107-.338-.263-.338' fill='#8097A2'/><path d='M139.278 7.769v43.667L72.208 90.16V46.493l67.07-38.724' fill='#455A64'/><path d='M72.083 90.375V46.421l.063-.036 67.257-38.831v43.954l-.062.036-67.258 38.831zm.25-43.811v43.38l66.821-38.579V7.985L72.333 46.564z' fill='#607D8B'/></g><path d='M125.737 88.647l-7.639 3.334V84l-11.459 4.713v8.269L99 100.315l13.369 3.646 13.368-15.314' fill='#455A64'/></g></svg>"; function RotateInstructions() { this.loadIcon_(); var overlay = document.createElement('div'); var s = overlay.style; s.position = 'fixed'; s.top = 0; s.right = 0; s.bottom = 0; s.left = 0; s.backgroundColor = 'gray'; s.fontFamily = 'sans-serif'; s.zIndex = 1000000; var img = document.createElement('img'); img.src = this.icon; var s = img.style; s.marginLeft = '25%'; s.marginTop = '25%'; s.width = '50%'; overlay.appendChild(img); var text = document.createElement('div'); var s = text.style; s.textAlign = 'center'; s.fontSize = '16px'; s.lineHeight = '24px'; s.margin = '24px 25%'; s.width = '50%'; text.innerHTML = 'Place your phone into your Cardboard viewer.'; overlay.appendChild(text); var snackbar = document.createElement('div'); var s = snackbar.style; s.backgroundColor = '#CFD8DC'; s.position = 'fixed'; s.bottom = 0; s.width = '100%'; s.height = '48px'; s.padding = '14px 24px'; s.boxSizing = 'border-box'; s.color = '#656A6B'; overlay.appendChild(snackbar); var snackbarText = document.createElement('div'); snackbarText.style.float = 'left'; snackbarText.innerHTML = 'No Cardboard viewer?'; var snackbarButton = document.createElement('a'); snackbarButton.href = 'https://www.google.com/get/cardboard/get-cardboard/'; snackbarButton.innerHTML = 'get one'; snackbarButton.target = '_blank'; var s = snackbarButton.style; s.float = 'right'; s.fontWeight = 600; s.textTransform = 'uppercase'; s.borderLeft = '1px solid gray'; s.paddingLeft = '24px'; s.textDecoration = 'none'; s.color = '#656A6B'; snackbar.appendChild(snackbarText); snackbar.appendChild(snackbarButton); this.overlay = overlay; this.text = text; this.hide(); } RotateInstructions.prototype.show = function (parent) { if (!parent && !this.overlay.parentElement) { document.body.appendChild(this.overlay); } else if (parent) { if (this.overlay.parentElement && this.overlay.parentElement != parent) this.overlay.parentElement.removeChild(this.overlay); parent.appendChild(this.overlay); } this.overlay.style.display = 'block'; var img = this.overlay.querySelector('img'); var s = img.style; if (isLandscapeMode()) { s.width = '20%'; s.marginLeft = '40%'; s.marginTop = '3%'; } else { s.width = '50%'; s.marginLeft = '25%'; s.marginTop = '25%'; } }; RotateInstructions.prototype.hide = function () { this.overlay.style.display = 'none'; }; RotateInstructions.prototype.showTemporarily = function (ms, parent) { this.show(parent); this.timer = setTimeout(this.hide.bind(this), ms); }; RotateInstructions.prototype.disableShowTemporarily = function () { clearTimeout(this.timer); }; RotateInstructions.prototype.update = function () { this.disableShowTemporarily(); if (!isLandscapeMode() && isMobile()) { this.show(); } else { this.hide(); } }; RotateInstructions.prototype.loadIcon_ = function () { this.icon = dataUri('image/svg+xml', rotateInstructionsAsset); }; var DEFAULT_VIEWER = 'CardboardV1'; var VIEWER_KEY = 'WEBVR_CARDBOARD_VIEWER'; var CLASS_NAME = 'webvr-polyfill-viewer-selector'; function ViewerSelector(defaultViewer) { try { this.selectedKey = localStorage.getItem(VIEWER_KEY); } catch (error) { console.error('Failed to load viewer profile: %s', error); } if (!this.selectedKey) { this.selectedKey = defaultViewer || DEFAULT_VIEWER; } this.dialog = this.createDialog_(DeviceInfo.Viewers); this.root = null; this.onChangeCallbacks_ = []; } ViewerSelector.prototype.show = function (root) { this.root = root; root.appendChild(this.dialog); var selected = this.dialog.querySelector('#' + this.selectedKey); selected.checked = true; this.dialog.style.display = 'block'; }; ViewerSelector.prototype.hide = function () { if (this.root && this.root.contains(this.dialog)) { this.root.removeChild(this.dialog); } this.dialog.style.display = 'none'; }; ViewerSelector.prototype.getCurrentViewer = function () { return DeviceInfo.Viewers[this.selectedKey]; }; ViewerSelector.prototype.getSelectedKey_ = function () { var input = this.dialog.querySelector('input[name=field]:checked'); if (input) { return input.id; } return null; }; ViewerSelector.prototype.onChange = function (cb) { this.onChangeCallbacks_.push(cb); }; ViewerSelector.prototype.fireOnChange_ = function (viewer) { for (var i = 0; i < this.onChangeCallbacks_.length; i++) { this.onChangeCallbacks_[i](viewer); } }; ViewerSelector.prototype.onSave_ = function () { this.selectedKey = this.getSelectedKey_(); if (!this.selectedKey || !DeviceInfo.Viewers[this.selectedKey]) { console.error('ViewerSelector.onSave_: this should never happen!'); return; } this.fireOnChange_(DeviceInfo.Viewers[this.selectedKey]); try { localStorage.setItem(VIEWER_KEY, this.selectedKey); } catch (error) { console.error('Failed to save viewer profile: %s', error); } this.hide(); }; ViewerSelector.prototype.createDialog_ = function (options) { var container = document.createElement('div'); container.classList.add(CLASS_NAME); container.style.display = 'none'; var overlay = document.createElement('div'); var s = overlay.style; s.position = 'fixed'; s.left = 0; s.top = 0; s.width = '100%'; s.height = '100%'; s.background = 'rgba(0, 0, 0, 0.3)'; overlay.addEventListener('click', this.hide.bind(this)); var width = 280; var dialog = document.createElement('div'); var s = dialog.style; s.boxSizing = 'border-box'; s.position = 'fixed'; s.top = '24px'; s.left = '50%'; s.marginLeft = -width / 2 + 'px'; s.width = width + 'px'; s.padding = '24px'; s.overflow = 'hidden'; s.background = '#fafafa'; s.fontFamily = "'Roboto', sans-serif"; s.boxShadow = '0px 5px 20px #666'; dialog.appendChild(this.createH1_('Select your viewer')); for (var id in options) { dialog.appendChild(this.createChoice_(id, options[id].label)); } dialog.appendChild(this.createButton_('Save', this.onSave_.bind(this))); container.appendChild(overlay); container.appendChild(dialog); return container; }; ViewerSelector.prototype.createH1_ = function (name) { var h1 = document.createElement('h1'); var s = h1.style; s.color = 'black'; s.fontSize = '20px'; s.fontWeight = 'bold'; s.marginTop = 0; s.marginBottom = '24px'; h1.innerHTML = name; return h1; }; ViewerSelector.prototype.createChoice_ = function (id, name) { var div = document.createElement('div'); div.style.marginTop = '8px'; div.style.color = 'black'; var input = document.createElement('input'); input.style.fontSize = '30px'; input.setAttribute('id', id); input.setAttribute('type', 'radio'); input.setAttribute('value', id); input.setAttribute('name', 'field'); var label = document.createElement('label'); label.style.marginLeft = '4px'; label.setAttribute('for', id); label.innerHTML = name; div.appendChild(input); div.appendChild(label); return div; }; ViewerSelector.prototype.createButton_ = function (label, onclick) { var button = document.createElement('button'); button.innerHTML = label; var s = button.style; s.float = 'right'; s.textTransform = 'uppercase'; s.color = '#1094f7'; s.fontSize = '14px'; s.letterSpacing = 0; s.border = 0; s.background = 'none'; s.marginTop = '16px'; button.addEventListener('click', onclick); return button; }; var commonjsGlobal$$1 = typeof window !== 'undefined' ? window : typeof commonjsGlobal !== 'undefined' ? commonjsGlobal : typeof self !== 'undefined' ? self : {}; function unwrapExports$$1 (x) { return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x; } function createCommonjsModule$$1(fn, module) { return module = { exports: {} }, fn(module, module.exports), module.exports; } var NoSleep = createCommonjsModule$$1(function (module, exports) { (function webpackUniversalModuleDefinition(root, factory) { module.exports = factory(); })(commonjsGlobal$$1, function() { return (function(modules) { var installedModules = {}; function __webpack_require__(moduleId) { if(installedModules[moduleId]) { return installedModules[moduleId].exports; } var module = installedModules[moduleId] = { i: moduleId, l: false, exports: {} }; modules[moduleId].call(module.exports, module, module.exports, __webpack_require__); module.l = true; return module.exports; } __webpack_require__.m = modules; __webpack_require__.c = installedModules; __webpack_require__.d = function(exports, name, getter) { if(!__webpack_require__.o(exports, name)) { Object.defineProperty(exports, name, { configurable: false, enumerable: true, get: getter }); } }; __webpack_require__.n = function(module) { var getter = module && module.__esModule ? function getDefault() { return module['default']; } : function getModuleExports() { return module; }; __webpack_require__.d(getter, 'a', getter); return getter; }; __webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); }; __webpack_require__.p = ""; return __webpack_require__(__webpack_require__.s = 0); }) ([ (function(module, exports, __webpack_require__) { var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } } var mediaFile = __webpack_require__(1); var oldIOS = typeof navigator !== 'undefined' && parseFloat(('' + (/CPU.*OS ([0-9_]{3,4})[0-9_]{0,1}|(CPU like).*AppleWebKit.*Mobile/i.exec(navigator.userAgent) || [0, ''])[1]).replace('undefined', '3_2').replace('_', '.').replace('_', '')) < 10 && !window.MSStream; var NoSleep = function () { function NoSleep() { _classCallCheck(this, NoSleep); if (oldIOS) { this.noSleepTimer = null; } else { this.noSleepVideo = document.createElement('video'); this.noSleepVideo.setAttribute('playsinline', ''); this.noSleepVideo.setAttribute('src', mediaFile); this.noSleepVideo.addEventListener('timeupdate', function (e) { if (this.noSleepVideo.currentTime > 0.5) { this.noSleepVideo.currentTime = Math.random(); } }.bind(this)); } } _createClass(NoSleep, [{ key: 'enable', value: function enable() { if (oldIOS) { this.disable(); this.noSleepTimer = window.setInterval(function () { window.location.href = '/'; window.setTimeout(window.stop, 0); }, 15000); } else { this.noSleepVideo.play(); } } }, { key: 'disable', value: function disable() { if (oldIOS) { if (this.noSleepTimer) { window.clearInterval(this.noSleepTimer); this.noSleepTimer = null; } } else { this.noSleepVideo.pause(); } } }]); return NoSleep; }(); module.exports = NoSleep; }), (function(module, exports, __webpack_require__) { module.exports = 'data:video/mp4;base64,AAAAIGZ0eXBtcDQyAAACAGlzb21pc28yYXZjMW1wNDEAAAAIZnJlZQAACKBtZGF0AAAC8wYF///v3EXpvebZSLeWLNgg2SPu73gyNjQgLSBjb3JlIDE0MiByMjQ3OSBkZDc5YTYxIC0gSC4yNjQvTVBFRy00IEFWQyBjb2RlYyAtIENvcHlsZWZ0IDIwMDMtMjAxNCAtIGh0dHA6Ly93d3cudmlkZW9sYW4ub3JnL3gyNjQuaHRtbCAtIG9wdGlvbnM6IGNhYmFjPTEgcmVmPTEgZGVibG9jaz0xOjA6MCBhbmFseXNlPTB4MToweDExMSBtZT1oZXggc3VibWU9MiBwc3k9MSBwc3lfcmQ9MS4wMDowLjAwIG1peGVkX3JlZj0wIG1lX3JhbmdlPTE2IGNocm9tYV9tZT0xIHRyZWxsaXM9MCA4eDhkY3Q9MCBjcW09MCBkZWFkem9uZT0yMSwxMSBmYXN0X3Bza2lwPTEgY2hyb21hX3FwX29mZnNldD0wIHRocmVhZHM9NiBsb29rYWhlYWRfdGhyZWFkcz0xIHNsaWNlZF90aHJlYWRzPTAgbnI9MCBkZWNpbWF0ZT0xIGludGVybGFjZWQ9MCBibHVyYXlfY29tcGF0PTAgY29uc3RyYWluZWRfaW50cmE9MCBiZnJhbWVzPTMgYl9weXJhbWlkPTIgYl9hZGFwdD0xIGJfYmlhcz0wIGRpcmVjdD0xIHdlaWdodGI9MSBvcGVuX2dvcD0wIHdlaWdodHA9MSBrZXlpbnQ9MzAwIGtleWludF9taW49MzAgc2NlbmVjdXQ9NDAgaW50cmFfcmVmcmVzaD0wIHJjX2xvb2thaGVhZD0xMCByYz1jcmYgbWJ0cmVlPTEgY3JmPTIwLjAgcWNvbXA9MC42MCBxcG1pbj0wIHFwbWF4PTY5IHFwc3RlcD00IHZidl9tYXhyYXRlPTIwMDAwIHZidl9idWZzaXplPTI1MDAwIGNyZl9tYXg9MC4wIG5hbF9ocmQ9bm9uZSBmaWxsZXI9MCBpcF9yYXRpbz0xLjQwIGFxPTE6MS4wMACAAAAAOWWIhAA3//p+C7v8tDDSTjf97w55i3SbRPO4ZY+hkjD5hbkAkL3zpJ6h/LR1CAABzgB1kqqzUorlhQAAAAxBmiQYhn/+qZYADLgAAAAJQZ5CQhX/AAj5IQAD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'; }) ]); }); }); var NoSleep$1 = unwrapExports$$1(NoSleep); var nextDisplayId = 1000; var defaultLeftBounds = [0, 0, 0.5, 1]; var defaultRightBounds = [0.5, 0, 0.5, 1]; var raf = window.requestAnimationFrame; var caf = window.cancelAnimationFrame; function VRFrameData() { this.leftProjectionMatrix = new Float32Array(16); this.leftViewMatrix = new Float32Array(16); this.rightProjectionMatrix = new Float32Array(16); this.rightViewMatrix = new Float32Array(16); this.pose = null; } function VRDisplayCapabilities(config) { Object.defineProperties(this, { hasPosition: { writable: false, enumerable: true, value: config.hasPosition }, hasExternalDisplay: { writable: false, enumerable: true, value: config.hasExternalDisplay }, canPresent: { writable: false, enumerable: true, value: config.canPresent }, maxLayers: { writable: false, enumerable: true, value: config.maxLayers }, hasOrientation: { enumerable: true, get: function get() { deprecateWarning('VRDisplayCapabilities.prototype.hasOrientation', 'VRDisplay.prototype.getFrameData'); return config.hasOrientation; } } }); } function VRDisplay(config) { config = config || {}; var USE_WAKELOCK = 'wakelock' in config ? config.wakelock : true; this.isPolyfilled = true; this.displayId = nextDisplayId++; this.displayName = ''; this.depthNear = 0.01; this.depthFar = 10000.0; this.isPresenting = false; Object.defineProperty(this, 'isConnected', { get: function get() { deprecateWarning('VRDisplay.prototype.isConnected', 'VRDisplayCapabilities.prototype.hasExternalDisplay'); return false; } }); this.capabilities = new VRDisplayCapabilities({ hasPosition: false, hasOrientation: false, hasExternalDisplay: false, canPresent: false, maxLayers: 1 }); this.stageParameters = null; this.waitingForPresent_ = false; this.layer_ = null; this.originalParent_ = null; this.fullscreenElement_ = null; this.fullscreenWrapper_ = null; this.fullscreenElementCachedStyle_ = null; this.fullscreenEventTarget_ = null; this.fullscreenChangeHandler_ = null; this.fullscreenErrorHandler_ = null; if (USE_WAKELOCK && isMobile()) { this.wakelock_ = new NoSleep$1(); } } VRDisplay.prototype.getFrameData = function (frameData) { return frameDataFromPose(frameData, this._getPose(), this); }; VRDisplay.prototype.getPose = function () { deprecateWarning('VRDisplay.prototype.getPose', 'VRDisplay.prototype.getFrameData'); return this._getPose(); }; VRDisplay.prototype.resetPose = function () { deprecateWarning('VRDisplay.prototype.resetPose'); return this._resetPose(); }; VRDisplay.prototype.getImmediatePose = function () { deprecateWarning('VRDisplay.prototype.getImmediatePose', 'VRDisplay.prototype.getFrameData'); return this._getPose(); }; VRDisplay.prototype.requestAnimationFrame = function (callback) { return raf(callback); }; VRDisplay.prototype.cancelAnimationFrame = function (id) { return caf(id); }; VRDisplay.prototype.wrapForFullscreen = function (element) { if (isIOS()) { return element; } if (!this.fullscreenWrapper_) { this.fullscreenWrapper_ = document.createElement('div'); var cssProperties = ['height: ' + Math.min(screen.height, screen.width) + 'px !important', 'top: 0 !important', 'left: 0 !important', 'right: 0 !important', 'border: 0', 'margin: 0', 'padding: 0', 'z-index: 999999 !important', 'position: fixed']; this.fullscreenWrapper_.setAttribute('style', cssProperties.join('; ') + ';'); this.fullscreenWrapper_.classList.add('webvr-polyfill-fullscreen-wrapper'); } if (this.fullscreenElement_ == element) { return this.fullscreenWrapper_; } if (this.fullscreenElement_) { if (this.originalParent_) { this.originalParent_.appendChild(this.fullscreenElement_); } else { this.fullscreenElement_.parentElement.removeChild(this.fullscreenElement_); } } this.fullscreenElement_ = element; this.originalParent_ = element.parentElement; if (!this.originalParent_) { document.body.appendChild(element); } if (!this.fullscreenWrapper_.parentElement) { var parent = this.fullscreenElement_.parentElement; parent.insertBefore(this.fullscreenWrapper_, this.fullscreenElement_); parent.removeChild(this.fullscreenElement_); } this.fullscreenWrapper_.insertBefore(this.fullscreenElement_, this.fullscreenWrapper_.firstChild); this.fullscreenElementCachedStyle_ = this.fullscreenElement_.getAttribute('style'); var self = this; function applyFullscreenElementStyle() { if (!self.fullscreenElement_) { return; } var cssProperties = ['position: absolute', 'top: 0', 'left: 0', 'width: ' + Math.max(screen.width, screen.height) + 'px', 'height: ' + Math.min(screen.height, screen.width) + 'px', 'border: 0', 'margin: 0', 'padding: 0']; self.fullscreenElement_.setAttribute('style', cssProperties.join('; ') + ';'); } applyFullscreenElementStyle(); return this.fullscreenWrapper_; }; VRDisplay.prototype.removeFullscreenWrapper = function () { if (!this.fullscreenElement_) { return; } var element = this.fullscreenElement_; if (this.fullscreenElementCachedStyle_) { element.setAttribute('style', this.fullscreenElementCachedStyle_); } else { element.removeAttribute('style'); } this.fullscreenElement_ = null; this.fullscreenElementCachedStyle_ = null; var parent = this.fullscreenWrapper_.parentElement; this.fullscreenWrapper_.removeChild(element); if (this.originalParent_ === parent) { parent.insertBefore(element, this.fullscreenWrapper_); } else if (this.originalParent_) { this.originalParent_.appendChild(element); } parent.removeChild(this.fullscreenWrapper_); return element; }; VRDisplay.prototype.requestPresent = function (layers) { var wasPresenting = this.isPresenting; var self = this; if (!(layers instanceof Array)) { deprecateWarning('VRDisplay.prototype.requestPresent with non-array argument', 'an array of VRLayers as the first argument'); layers = [layers]; } return new Promise(function (resolve, reject) { if (!self.capabilities.canPresent) { reject(new Error('VRDisplay is not capable of presenting.')); return; } if (layers.length == 0 || layers.length > self.capabilities.maxLayers) { reject(new Error('Invalid number of layers.')); return; } var incomingLayer = layers[0]; if (!incomingLayer.source) { resolve(); return; } var leftBounds = incomingLayer.leftBounds || defaultLeftBounds; var rightBounds = incomingLayer.rightBounds || defaultRightBounds; if (wasPresenting) { var layer = self.layer_; if (layer.source !== incomingLayer.source) { layer.source = incomingLayer.source; } for (var i = 0; i < 4; i++) { layer.leftBounds[i] = leftBounds[i]; layer.rightBounds[i] = rightBounds[i]; } self.wrapForFullscreen(self.layer_.source); self.updatePresent_(); resolve(); return; } self.layer_ = { predistorted: incomingLayer.predistorted, source: incomingLayer.source, leftBounds: leftBounds.slice(0), rightBounds: rightBounds.slice(0) }; self.waitingForPresent_ = false; if (self.layer_ && self.layer_.source) { var fullscreenElement = self.wrapForFullscreen(self.layer_.source); var onFullscreenChange = function onFullscreenChange() { var actualFullscreenElement = getFullscreenElement(); self.isPresenting = fullscreenElement === actualFullscreenElement; if (self.isPresenting) { if (screen.orientation && screen.orientation.lock) { screen.orientation.lock('landscape-primary').catch(function (error) { console.error('screen.orientation.lock() failed due to', error.message); }); } self.waitingForPresent_ = false; self.beginPresent_(); resolve(); } else { if (screen.orientation && screen.orientation.unlock) { screen.orientation.unlock(); } self.removeFullscreenWrapper(); self.disableWakeLock(); self.endPresent_(); self.removeFullscreenListeners_(); } self.fireVRDisplayPresentChange_(); }; var onFullscreenError = function onFullscreenError() { if (!self.waitingForPresent_) { return; } self.removeFullscreenWrapper(); self.removeFullscreenListeners_(); self.disableWakeLock(); self.waitingForPresent_ = false; self.isPresenting = false; reject(new Error('Unable to present.')); }; self.addFullscreenListeners_(fullscreenElement, onFullscreenChange, onFullscreenError); if (requestFullscreen(fullscreenElement)) { self.enableWakeLock(); self.waitingForPresent_ = true; } else if (isIOS() || isWebViewAndroid()) { self.enableWakeLock(); self.isPresenting = true; self.beginPresent_(); self.fireVRDisplayPresentChange_(); resolve(); } } if (!self.waitingForPresent_ && !isIOS()) { exitFullscreen(); reject(new Error('Unable to present.')); } }); }; VRDisplay.prototype.exitPresent = function () { var wasPresenting = this.isPresenting; var self = this; this.isPresenting = false; this.layer_ = null; this.disableWakeLock(); return new Promise(function (resolve, reject) { if (wasPresenting) { if (!exitFullscreen() && isIOS()) { self.endPresent_(); self.fireVRDisplayPresentChange_(); } if (isWebViewAndroid()) { self.removeFullscreenWrapper(); self.removeFullscreenListeners_(); self.endPresent_(); self.fireVRDisplayPresentChange_(); } resolve(); } else { reject(new Error('Was not presenting to VRDisplay.')); } }); }; VRDisplay.prototype.getLayers = function () { if (this.layer_) { return [this.layer_]; } return []; }; VRDisplay.prototype.fireVRDisplayPresentChange_ = function () { var event = new CustomEvent('vrdisplaypresentchange', { detail: { display: this } }); window.dispatchEvent(event); }; VRDisplay.prototype.fireVRDisplayConnect_ = function () { var event = new CustomEvent('vrdisplayconnect', { detail: { display: this } }); window.dispatchEvent(event); }; VRDisplay.prototype.addFullscreenListeners_ = function (element, changeHandler, errorHandler) { this.removeFullscreenListeners_(); this.fullscreenEventTarget_ = element; this.fullscreenChangeHandler_ = changeHandler; this.fullscreenErrorHandler_ = errorHandler; if (changeHandler) { if (document.fullscreenEnabled) { element.addEventListener('fullscreenchange', changeHandler, false); } else if (document.webkitFullscreenEnabled) { element.addEventListener('webkitfullscreenchange', changeHandler, false); } else if (document.mozFullScreenEnabled) { document.addEventListener('mozfullscreenchange', changeHandler, false); } else if (document.msFullscreenEnabled) { element.addEventListener('msfullscreenchange', changeHandler, false); } } if (errorHandler) { if (document.fullscreenEnabled) { element.addEventListener('fullscreenerror', errorHandler, false); } else if (document.webkitFullscreenEnabled) { element.addEventListener('webkitfullscreenerror', errorHandler, false); } else if (document.mozFullScreenEnabled) { document.addEventListener('mozfullscreenerror', errorHandler, false); } else if (document.msFullscreenEnabled) { element.addEventListener('msfullscreenerror', errorHandler, false); } } }; VRDisplay.prototype.removeFullscreenListeners_ = function () { if (!this.fullscreenEventTarget_) return; var element = this.fullscreenEventTarget_; if (this.fullscreenChangeHandler_) { var changeHandler = this.fullscreenChangeHandler_; element.removeEventListener('fullscreenchange', changeHandler, false); element.removeEventListener('webkitfullscreenchange', changeHandler, false); document.removeEventListener('mozfullscreenchange', changeHandler, false); element.removeEventListener('msfullscreenchange', changeHandler, false); } if (this.fullscreenErrorHandler_) { var errorHandler = this.fullscreenErrorHandler_; element.removeEventListener('fullscreenerror', errorHandler, false); element.removeEventListener('webkitfullscreenerror', errorHandler, false); document.removeEventListener('mozfullscreenerror', errorHandler, false); element.removeEventListener('msfullscreenerror', errorHandler, false); } this.fullscreenEventTarget_ = null; this.fullscreenChangeHandler_ = null; this.fullscreenErrorHandler_ = null; }; VRDisplay.prototype.enableWakeLock = function () { if (this.wakelock_) { this.wakelock_.enable(); } }; VRDisplay.prototype.disableWakeLock = function () { if (this.wakelock_) { this.wakelock_.disable(); } }; VRDisplay.prototype.beginPresent_ = function () { }; VRDisplay.prototype.endPresent_ = function () { }; VRDisplay.prototype.submitFrame = function (pose) { }; VRDisplay.prototype.getEyeParameters = function (whichEye) { return null; }; var config = { ADDITIONAL_VIEWERS: [], DEFAULT_VIEWER: '', MOBILE_WAKE_LOCK: true, DEBUG: false, DPDB_URL: 'https://dpdb.webvr.rocks/dpdb.json', K_FILTER: 0.98, PREDICTION_TIME_S: 0.040, CARDBOARD_UI_DISABLED: false, ROTATE_INSTRUCTIONS_DISABLED: false, YAW_ONLY: false, BUFFER_SCALE: 0.5, DIRTY_SUBMIT_FRAME_BINDINGS: false }; var Eye = { LEFT: 'left', RIGHT: 'right' }; function CardboardVRDisplay(config$$1) { var defaults = extend({}, config); config$$1 = extend(defaults, config$$1 || {}); VRDisplay.call(this, { wakelock: config$$1.MOBILE_WAKE_LOCK }); this.config = config$$1; this.displayName = 'Cardboard VRDisplay'; this.capabilities = new VRDisplayCapabilities({ hasPosition: false, hasOrientation: true, hasExternalDisplay: false, canPresent: true, maxLayers: 1 }); this.stageParameters = null; this.bufferScale_ = this.config.BUFFER_SCALE; this.poseSensor_ = new PoseSensor(this.config); this.distorter_ = null; this.cardboardUI_ = null; this.dpdb_ = new Dpdb(this.config.DPDB_URL, this.onDeviceParamsUpdated_.bind(this)); this.deviceInfo_ = new DeviceInfo(this.dpdb_.getDeviceParams(), config$$1.ADDITIONAL_VIEWERS); this.viewerSelector_ = new ViewerSelector(config$$1.DEFAULT_VIEWER); this.viewerSelector_.onChange(this.onViewerChanged_.bind(this)); this.deviceInfo_.setViewer(this.viewerSelector_.getCurrentViewer()); if (!this.config.ROTATE_INSTRUCTIONS_DISABLED) { this.rotateInstructions_ = new RotateInstructions(); } if (isIOS()) { window.addEventListener('resize', this.onResize_.bind(this)); } } CardboardVRDisplay.prototype = Object.create(VRDisplay.prototype); CardboardVRDisplay.prototype._getPose = function () { return { position: null, orientation: this.poseSensor_.getOrientation(), linearVelocity: null, linearAcceleration: null, angularVelocity: null, angularAcceleration: null }; }; CardboardVRDisplay.prototype._resetPose = function () { if (this.poseSensor_.resetPose) { this.poseSensor_.resetPose(); } }; CardboardVRDisplay.prototype._getFieldOfView = function (whichEye) { var fieldOfView; if (whichEye == Eye.LEFT) { fieldOfView = this.deviceInfo_.getFieldOfViewLeftEye(); } else if (whichEye == Eye.RIGHT) { fieldOfView = this.deviceInfo_.getFieldOfViewRightEye(); } else { console.error('Invalid eye provided: %s', whichEye); return null; } return fieldOfView; }; CardboardVRDisplay.prototype._getEyeOffset = function (whichEye) { var offset; if (whichEye == Eye.LEFT) { offset = [-this.deviceInfo_.viewer.interLensDistance * 0.5, 0.0, 0.0]; } else if (whichEye == Eye.RIGHT) { offset = [this.deviceInfo_.viewer.interLensDistance * 0.5, 0.0, 0.0]; } else { console.error('Invalid eye provided: %s', whichEye); return null; } return offset; }; CardboardVRDisplay.prototype.getEyeParameters = function (whichEye) { var offset = this._getEyeOffset(whichEye); var fieldOfView = this._getFieldOfView(whichEye); var eyeParams = { offset: offset, renderWidth: this.deviceInfo_.device.width * 0.5 * this.bufferScale_, renderHeight: this.deviceInfo_.device.height * this.bufferScale_ }; Object.defineProperty(eyeParams, 'fieldOfView', { enumerable: true, get: function get() { deprecateWarning('VRFieldOfView', 'VRFrameData\'s projection matrices'); return fieldOfView; } }); return eyeParams; }; CardboardVRDisplay.prototype.onDeviceParamsUpdated_ = function (newParams) { if (this.config.DEBUG) { console.log('DPDB reported that device params were updated.'); } this.deviceInfo_.updateDeviceParams(newParams); if (this.distorter_) { this.distorter_.updateDeviceInfo(this.deviceInfo_); } }; CardboardVRDisplay.prototype.updateBounds_ = function () { if (this.layer_ && this.distorter_ && (this.layer_.leftBounds || this.layer_.rightBounds)) { this.distorter_.setTextureBounds(this.layer_.leftBounds, this.layer_.rightBounds); } }; CardboardVRDisplay.prototype.beginPresent_ = function () { var gl = this.layer_.source.getContext('webgl'); if (!gl) gl = this.layer_.source.getContext('experimental-webgl'); if (!gl) gl = this.layer_.source.getContext('webgl2'); if (!gl) return; if (this.layer_.predistorted) { if (!this.config.CARDBOARD_UI_DISABLED) { gl.canvas.width = getScreenWidth() * this.bufferScale_; gl.canvas.height = getScreenHeight() * this.bufferScale_; this.cardboardUI_ = new CardboardUI(gl); } } else { if (!this.config.CARDBOARD_UI_DISABLED) { this.cardboardUI_ = new CardboardUI(gl); } this.distorter_ = new CardboardDistorter(gl, this.cardboardUI_, this.config.BUFFER_SCALE, this.config.DIRTY_SUBMIT_FRAME_BINDINGS); this.distorter_.updateDeviceInfo(this.deviceInfo_); } if (this.cardboardUI_) { this.cardboardUI_.listen(function (e) { this.viewerSelector_.show(this.layer_.source.parentElement); e.stopPropagation(); e.preventDefault(); }.bind(this), function (e) { this.exitPresent(); e.stopPropagation(); e.preventDefault(); }.bind(this)); } if (this.rotateInstructions_) { if (isLandscapeMode() && isMobile()) { this.rotateInstructions_.showTemporarily(3000, this.layer_.source.parentElement); } else { this.rotateInstructions_.update(); } } this.orientationHandler = this.onOrientationChange_.bind(this); window.addEventListener('orientationchange', this.orientationHandler); this.vrdisplaypresentchangeHandler = this.updateBounds_.bind(this); window.addEventListener('vrdisplaypresentchange', this.vrdisplaypresentchangeHandler); this.fireVRDisplayDeviceParamsChange_(); }; CardboardVRDisplay.prototype.endPresent_ = function () { if (this.distorter_) { this.distorter_.destroy(); this.distorter_ = null; } if (this.cardboardUI_) { this.cardboardUI_.destroy(); this.cardboardUI_ = null; } if (this.rotateInstructions_) { this.rotateInstructions_.hide(); } this.viewerSelector_.hide(); window.removeEventListener('orientationchange', this.orientationHandler); window.removeEventListener('vrdisplaypresentchange', this.vrdisplaypresentchangeHandler); }; CardboardVRDisplay.prototype.updatePresent_ = function () { this.endPresent_(); this.beginPresent_(); }; CardboardVRDisplay.prototype.submitFrame = function (pose) { if (this.distorter_) { this.updateBounds_(); this.distorter_.submitFrame(); } else if (this.cardboardUI_ && this.layer_) { var canvas = this.layer_.source.getContext('webgl').canvas; if (canvas.width != this.lastWidth || canvas.height != this.lastHeight) { this.cardboardUI_.onResize(); } this.lastWidth = canvas.width; this.lastHeight = canvas.height; this.cardboardUI_.render(); } }; CardboardVRDisplay.prototype.onOrientationChange_ = function (e) { this.viewerSelector_.hide(); if (this.rotateInstructions_) { this.rotateInstructions_.update(); } this.onResize_(); }; CardboardVRDisplay.prototype.onResize_ = function (e) { if (this.layer_) { var gl = this.layer_.source.getContext('webgl'); var cssProperties = ['position: absolute', 'top: 0', 'left: 0', 'width: 100vw', 'height: 100vh', 'border: 0', 'margin: 0', 'padding: 0px', 'box-sizing: content-box']; gl.canvas.setAttribute('style', cssProperties.join('; ') + ';'); safariCssSizeWorkaround(gl.canvas); } }; CardboardVRDisplay.prototype.onViewerChanged_ = function (viewer) { this.deviceInfo_.setViewer(viewer); if (this.distorter_) { this.distorter_.updateDeviceInfo(this.deviceInfo_); } this.fireVRDisplayDeviceParamsChange_(); }; CardboardVRDisplay.prototype.fireVRDisplayDeviceParamsChange_ = function () { var event = new CustomEvent('vrdisplaydeviceparamschange', { detail: { vrdisplay: this, deviceInfo: this.deviceInfo_ } }); window.dispatchEvent(event); }; CardboardVRDisplay.VRFrameData = VRFrameData; CardboardVRDisplay.VRDisplay = VRDisplay; return CardboardVRDisplay; }))); }); var CardboardVRDisplay = unwrapExports(cardboardVrDisplay); var version = "0.10.10"; var DefaultConfig = { ADDITIONAL_VIEWERS: [], DEFAULT_VIEWER: '', PROVIDE_MOBILE_VRDISPLAY: true, MOBILE_WAKE_LOCK: true, DEBUG: false, DPDB_URL: 'https://dpdb.webvr.rocks/dpdb.json', K_FILTER: 0.98, PREDICTION_TIME_S: 0.040, CARDBOARD_UI_DISABLED: false, ROTATE_INSTRUCTIONS_DISABLED: false, YAW_ONLY: false, BUFFER_SCALE: 0.5, DIRTY_SUBMIT_FRAME_BINDINGS: false }; function WebVRPolyfill(config) { this.config = extend(extend({}, DefaultConfig), config); this.polyfillDisplays = []; this.enabled = false; this.hasNative = 'getVRDisplays' in navigator; this.native = {}; this.native.getVRDisplays = navigator.getVRDisplays; this.native.VRFrameData = window.VRFrameData; this.native.VRDisplay = window.VRDisplay; if (!this.hasNative || this.config.PROVIDE_MOBILE_VRDISPLAY && isMobile()) { this.enable(); this.getVRDisplays().then(function (displays) { if (displays && displays[0] && displays[0].fireVRDisplayConnect_) { displays[0].fireVRDisplayConnect_(); } }); } } WebVRPolyfill.prototype.getPolyfillDisplays = function () { if (this._polyfillDisplaysPopulated) { return this.polyfillDisplays; } if (isMobile()) { var vrDisplay = new CardboardVRDisplay({ ADDITIONAL_VIEWERS: this.config.ADDITIONAL_VIEWERS, DEFAULT_VIEWER: this.config.DEFAULT_VIEWER, MOBILE_WAKE_LOCK: this.config.MOBILE_WAKE_LOCK, DEBUG: this.config.DEBUG, DPDB_URL: this.config.DPDB_URL, CARDBOARD_UI_DISABLED: this.config.CARDBOARD_UI_DISABLED, K_FILTER: this.config.K_FILTER, PREDICTION_TIME_S: this.config.PREDICTION_TIME_S, ROTATE_INSTRUCTIONS_DISABLED: this.config.ROTATE_INSTRUCTIONS_DISABLED, YAW_ONLY: this.config.YAW_ONLY, BUFFER_SCALE: this.config.BUFFER_SCALE, DIRTY_SUBMIT_FRAME_BINDINGS: this.config.DIRTY_SUBMIT_FRAME_BINDINGS }); this.polyfillDisplays.push(vrDisplay); } this._polyfillDisplaysPopulated = true; return this.polyfillDisplays; }; WebVRPolyfill.prototype.enable = function () { this.enabled = true; if (this.hasNative && this.native.VRFrameData) { var NativeVRFrameData = this.native.VRFrameData; var nativeFrameData = new this.native.VRFrameData(); var nativeGetFrameData = this.native.VRDisplay.prototype.getFrameData; window.VRDisplay.prototype.getFrameData = function (frameData) { if (frameData instanceof NativeVRFrameData) { nativeGetFrameData.call(this, frameData); return; } nativeGetFrameData.call(this, nativeFrameData); frameData.pose = nativeFrameData.pose; copyArray(nativeFrameData.leftProjectionMatrix, frameData.leftProjectionMatrix); copyArray(nativeFrameData.rightProjectionMatrix, frameData.rightProjectionMatrix); copyArray(nativeFrameData.leftViewMatrix, frameData.leftViewMatrix); copyArray(nativeFrameData.rightViewMatrix, frameData.rightViewMatrix); }; } navigator.getVRDisplays = this.getVRDisplays.bind(this); window.VRDisplay = CardboardVRDisplay.VRDisplay; window.VRFrameData = CardboardVRDisplay.VRFrameData; }; WebVRPolyfill.prototype.getVRDisplays = function () { var _this = this; var config = this.config; if (!this.hasNative) { return Promise.resolve(this.getPolyfillDisplays()); } return this.native.getVRDisplays.call(navigator).then(function (nativeDisplays) { return nativeDisplays.length > 0 ? nativeDisplays : _this.getPolyfillDisplays(); }); }; WebVRPolyfill.version = version; WebVRPolyfill.VRFrameData = CardboardVRDisplay.VRFrameData; WebVRPolyfill.VRDisplay = CardboardVRDisplay.VRDisplay; var webvrPolyfill = Object.freeze({ default: WebVRPolyfill }); var require$$0 = ( webvrPolyfill && WebVRPolyfill ) || webvrPolyfill; if (typeof commonjsGlobal !== 'undefined' && commonjsGlobal.window) { if (!commonjsGlobal.document) { commonjsGlobal.document = commonjsGlobal.window.document; } if (!commonjsGlobal.navigator) { commonjsGlobal.navigator = commonjsGlobal.window.navigator; } } var src = require$$0; return src; }))); ",
    "var newline = /\n/ var newlineChar = '\n' var whitespace = /\s/ module.exports = function(text, opt) { var lines = module.exports.lines(text, opt) return lines.map(function(line) { return text.substring(line.start, line.end) }).join('\n') } module.exports.lines = function wordwrap(text, opt) { opt = opt||{} //zero width results in nothing visible if (opt.width === 0 && opt.mode !== 'nowrap') return [] text = text||'' var width = typeof opt.width === 'number' ? opt.width : Number.MAX_VALUE var start = Math.max(0, opt.start||0) var end = typeof opt.end === 'number' ? opt.end : text.length var mode = opt.mode var measure = opt.measure || monospace if (mode === 'pre') return pre(measure, text, start, end, width) else return greedy(measure, text, start, end, width, mode) } function idxOf(text, chr, start, end) { var idx = text.indexOf(chr, start) if (idx === -1 || idx > end) return end return idx } function isWhitespace(chr) { return whitespace.test(chr) } function pre(measure, text, start, end, width) { var lines = [] var lineStart = start for (var i=start; i<end && i<text.length; i++) { var chr = text.charAt(i) var isNewline = newline.test(chr) //If we've reached a newline, then step down a line //Or if we've reached the EOF if (isNewline || i===end-1) { var lineEnd = isNewline ? i : i+1 var measured = measure(text, lineStart, lineEnd, width) lines.push(measured) lineStart = i+1 } } return lines } function greedy(measure, text, start, end, width, mode) { //A greedy word wrapper based on LibGDX algorithm //https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java var lines = [] var testWidth = width //if 'nowrap' is specified, we only wrap on newline chars if (mode === 'nowrap') testWidth = Number.MAX_VALUE while (start < end && start < text.length) { //get next newline position var newLine = idxOf(text, newlineChar, start, end) //eat whitespace at start of line while (start < newLine) { if (!isWhitespace( text.charAt(start) )) break start++ } //determine visible # of glyphs for the available width var measured = measure(text, start, newLine, testWidth) var lineEnd = start + (measured.end-measured.start) var nextStart = lineEnd + newlineChar.length //if we had to cut the line before the next newline... if (lineEnd < newLine) { //find char to break on while (lineEnd > start) { if (isWhitespace(text.charAt(lineEnd))) break lineEnd-- } if (lineEnd === start) { if (nextStart > start + newlineChar.length) nextStart-- lineEnd = nextStart // If no characters to break, show all. } else { nextStart = lineEnd //eat whitespace at end of line while (lineEnd > start) { if (!isWhitespace(text.charAt(lineEnd - newlineChar.length))) break lineEnd-- } } } if (lineEnd >= start) { var result = measure(text, start, lineEnd, testWidth) lines.push(result) } start = nextStart } return lines } //determines the visible number of glyphs within a given width function monospace(text, start, end, width) { var glyphs = Math.min(width, end-start) return { start: start, end: start+glyphs } }",
    ""use strict"; var window = require("global/window") var isFunction = require("is-function") var parseHeaders = require("parse-headers") var xtend = require("xtend") module.exports = createXHR // Allow use of default import syntax in TypeScript module.exports.default = createXHR; createXHR.XMLHttpRequest = window.XMLHttpRequest || noop createXHR.XDomainRequest = "withCredentials" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest forEachArray(["get", "put", "post", "patch", "head", "delete"], function(method) { createXHR[method === "delete" ? "del" : method] = function(uri, options, callback) { options = initParams(uri, options, callback) options.method = method.toUpperCase() return _createXHR(options) } }) function forEachArray(array, iterator) { for (var i = 0; i < array.length; i++) { iterator(array[i]) } } function isEmpty(obj){ for(var i in obj){ if(obj.hasOwnProperty(i)) return false } return true } function initParams(uri, options, callback) { var params = uri if (isFunction(options)) { callback = options if (typeof uri === "string") { params = {uri:uri} } } else { params = xtend(options, {uri: uri}) } params.callback = callback return params } function createXHR(uri, options, callback) { options = initParams(uri, options, callback) return _createXHR(options) } function _createXHR(options) { if(typeof options.callback === "undefined"){ throw new Error("callback argument missing") } var called = false var callback = function cbOnce(err, response, body){ if(!called){ called = true options.callback(err, response, body) } } function readystatechange() { if (xhr.readyState === 4) { setTimeout(loadFunc, 0) } } function getBody() { // Chrome with requestType=blob throws errors arround when even testing access to responseText var body = undefined if (xhr.response) { body = xhr.response } else { body = xhr.responseText || getXml(xhr) } if (isJson) { try { body = JSON.parse(body) } catch (e) {} } return body } function errorFunc(evt) { clearTimeout(timeoutTimer) if(!(evt instanceof Error)){ evt = new Error("" + (evt || "Unknown XMLHttpRequest Error") ) } evt.statusCode = 0 return callback(evt, failureResponse) } // will load the data & process the response in a special response object function loadFunc() { if (aborted) return var status clearTimeout(timeoutTimer) if(options.useXDR && xhr.status===undefined) { //IE8 CORS GET successful response doesn't have a status field, but body is fine status = 200 } else { status = (xhr.status === 1223 ? 204 : xhr.status) } var response = failureResponse var err = null if (status !== 0){ response = { body: getBody(), statusCode: status, method: method, headers: {}, url: uri, rawRequest: xhr } if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE response.headers = parseHeaders(xhr.getAllResponseHeaders()) } } else { err = new Error("Internal XMLHttpRequest Error") } return callback(err, response, response.body) } var xhr = options.xhr || null if (!xhr) { if (options.cors || options.useXDR) { xhr = new createXHR.XDomainRequest() }else{ xhr = new createXHR.XMLHttpRequest() } } var key var aborted var uri = xhr.url = options.uri || options.url var method = xhr.method = options.method || "GET" var body = options.body || options.data var headers = xhr.headers = options.headers || {} var sync = !!options.sync var isJson = false var timeoutTimer var failureResponse = { body: undefined, headers: {}, statusCode: 0, method: method, url: uri, rawRequest: xhr } if ("json" in options && options.json !== false) { isJson = true headers["accept"] || headers["Accept"] || (headers["Accept"] = "application/json") //Don't override existing accept header declared by user if (method !== "GET" && method !== "HEAD") { headers["content-type"] || headers["Content-Type"] || (headers["Content-Type"] = "application/json") //Don't override existing accept header declared by user body = JSON.stringify(options.json === true ? body : options.json) } } xhr.onreadystatechange = readystatechange xhr.onload = loadFunc xhr.onerror = errorFunc // IE9 must have onprogress be set to a unique function. xhr.onprogress = function () { // IE must die } xhr.onabort = function(){ aborted = true; } xhr.ontimeout = errorFunc xhr.open(method, uri, !sync, options.username, options.password) //has to be after open if(!sync) { xhr.withCredentials = !!options.withCredentials } // Cannot set timeout with sync request // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent if (!sync && options.timeout > 0 ) { timeoutTimer = setTimeout(function(){ if (aborted) return aborted = true//IE9 may still call readystatechange xhr.abort("timeout") var e = new Error("XMLHttpRequest timeout") e.code = "ETIMEDOUT" errorFunc(e) }, options.timeout ) } if (xhr.setRequestHeader) { for(key in headers){ if(headers.hasOwnProperty(key)){ xhr.setRequestHeader(key, headers[key]) } } } else if (options.headers && !isEmpty(options.headers)) { throw new Error("Headers cannot be set on an XDomainRequest object") } if ("responseType" in options) { xhr.responseType = options.responseType } if ("beforeSend" in options && typeof options.beforeSend === "function" ) { options.beforeSend(xhr) } // Microsoft Edge browser sends "undefined" when send is called with undefined value. // XMLHttpRequest spec says to pass null as body to indicate no body // See https://github.com/naugtur/xhr/issues/100. xhr.send(body || null) return xhr } function getXml(xhr) { // xhr.responseXML will throw Exception "InvalidStateError" or "DOMException" // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML. try { if (xhr.responseType === "document") { return xhr.responseXML } var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === "parsererror" if (xhr.responseType === "" && !firefoxBugTakenEffect) { return xhr.responseXML } } catch (e) {} return null } function noop() {} ",
    "module.exports = (function xmlparser() { //common browsers if (typeof self.DOMParser !== 'undefined') { return function(str) { var parser = new self.DOMParser() return parser.parseFromString(str, 'application/xml') } } //IE8 fallback if (typeof self.ActiveXObject !== 'undefined' && new self.ActiveXObject('Microsoft.XMLDOM')) { return function(str) { var xmlDoc = new self.ActiveXObject("Microsoft.XMLDOM") xmlDoc.async = "false" xmlDoc.loadXML(str) return xmlDoc } } //last resort fallback return function(str) { var div = document.createElement('div') div.innerHTML = str return div } })() ",
    "module.exports = extend var hasOwnProperty = Object.prototype.hasOwnProperty; function extend() { var target = {} for (var i = 0; i < arguments.length; i++) { var source = arguments[i] for (var key in source) { if (hasOwnProperty.call(source, key)) { target[key] = source[key] } } } return target } ",
    "var anime = require('super-animejs'); var components = require('../core/component').components; var registerComponent = require('../core/component').registerComponent; var THREE = require('../lib/three'); var utils = require('../utils'); var colorHelperFrom = new THREE.Color(); var colorHelperTo = new THREE.Color(); var getComponentProperty = utils.entity.getComponentProperty; var setComponentProperty = utils.entity.setComponentProperty; var splitCache = {}; var TYPE_COLOR = 'color'; var PROP_POSITION = 'position'; var PROP_ROTATION = 'rotation'; var PROP_SCALE = 'scale'; var STRING_COMPONENTS = 'components'; var STRING_OBJECT3D = 'object3D'; /** * Animation component for A-Frame using anime.js. * * The component manually controls the tick by setting `autoplay: false` on anime.js and * manually * calling `animation.tick()` in the tick handler. To pause or resume, we toggle a * boolean * flag * `isAnimationPlaying`. * * anime.js animation config for tweenining Javascript objects and values works as: * * config = { * targets: {foo: 0.0, bar: '#000'}, * foo: 1.0, * bar: '#FFF' * } * * The above will tween each property in `targets`. The `to` values are set in the root of * the config. * * @member {object} animation - anime.js instance. * @member {boolean} animationIsPlaying - Control if animation is playing. */ module.exports.Component = registerComponent('animation', { schema: { autoplay: {default: true}, delay: {default: 0}, dir: {default: ''}, dur: {default: 1000}, easing: {default: 'easeInQuad'}, elasticity: {default: 400}, enabled: {default: true}, from: {default: ''}, loop: { default: 0, parse: function (value) { // Boolean or integer. if (value === true || value === 'true') { return true; } if (value === false || value === 'false') { return false; } return parseInt(value, 10); } }, property: {default: ''}, startEvents: {type: 'array'}, pauseEvents: {type: 'array'}, resumeEvents: {type: 'array'}, round: {default: false}, to: {default: ''}, type: {default: ''}, isRawProperty: {default: false} }, multiple: true, init: function () { var self = this; this.eventDetail = {name: this.attrName}; this.time = 0; this.animation = null; this.animationIsPlaying = false; this.onStartEvent = this.onStartEvent.bind(this); this.beginAnimation = this.beginAnimation.bind(this); this.pauseAnimation = this.pauseAnimation.bind(this); this.resumeAnimation = this.resumeAnimation.bind(this); this.fromColor = {}; this.toColor = {}; this.targets = {}; this.targetsArray = []; this.updateConfigForDefault = this.updateConfigForDefault.bind(this); this.updateConfigForRawColor = this.updateConfigForRawColor.bind(this); this.config = { complete: function () { self.animationIsPlaying = false; self.el.emit('animationcomplete', self.eventDetail, false); if (self.id) { self.el.emit('animationcomplete__' + self.id, self.eventDetail, false); } } }; }, update: function (oldData) { var config = this.config; var data = this.data; this.animationIsPlaying = false; if (!this.data.enabled) { return; } if (!data.property) { return; } // Base config. config.autoplay = false; config.direction = data.dir; config.duration = data.dur; config.easing = data.easing; config.elasticity = data.elasticity; config.loop = data.loop; config.round = data.round; // Start new animation. this.createAndStartAnimation(); }, tick: function (t, dt) { if (!this.animationIsPlaying) { return; } this.time += dt; this.animation.tick(this.time); }, remove: function () { this.pauseAnimation(); this.removeEventListeners(); }, pause: function () { this.paused = true; this.pausedWasPlaying = this.animationIsPlaying; this.pauseAnimation(); this.removeEventListeners(); }, /** * `play` handler only for resuming scene. */ play: function () { if (!this.paused) { return; } this.paused = false; this.addEventListeners(); if (this.pausedWasPlaying) { this.resumeAnimation(); this.pausedWasPlaying = false; } }, /** * Start animation from scratch. */ createAndStartAnimation: function () { var data = this.data; this.updateConfig(); this.animationIsPlaying = false; this.animation = anime(this.config); this.animation.began = true; this.removeEventListeners(); this.addEventListeners(); // Wait for start events for animation. if (!data.autoplay || data.startEvents && data.startEvents.length) { return; } // Delay animation. if (data.delay) { setTimeout(this.beginAnimation, data.delay); return; } // Play animation. this.beginAnimation(); }, /** * This is before animation start (including from startEvents). * Set to initial state (config.from, time = 0, seekTime = 0). */ beginAnimation: function () { this.updateConfig(); this.animation.began = true; this.time = 0; this.animationIsPlaying = true; this.stopRelatedAnimations(); this.el.emit('animationbegin', this.eventDetail, false); }, pauseAnimation: function () { this.animationIsPlaying = false; }, resumeAnimation: function () { this.animationIsPlaying = true; }, /** * startEvents callback. */ onStartEvent: function () { if (!this.data.enabled) { return; } this.updateConfig(); if (this.animation) { this.animation.pause(); } this.animation = anime(this.config); // Include the delay before each start event. if (this.data.delay) { setTimeout(this.beginAnimation, this.data.delay); return; } this.beginAnimation(); }, /** * rawProperty: true and type: color; */ updateConfigForRawColor: function () { var config = this.config; var data = this.data; var el = this.el; var from; var key; var to; if (this.waitComponentInitRawProperty(this.updateConfigForRawColor)) { return; } from = data.from === '' ? getRawProperty(el, data.property) : data.from; to = data.to; // Use r/g/b vector for color type. this.setColorConfig(from, to); from = this.fromColor; to = this.toColor; this.targetsArray.length = 0; this.targetsArray.push(from); config.targets = this.targetsArray; for (key in to) { config[key] = to[key]; } config.update = (function () { var lastValue = {}; return function (anim) { var value; value = anim.animatables[0].target; // For animation timeline. if (value.r === lastValue.r && value.g === lastValue.g && value.b === lastValue.b) { return; } setRawProperty(el, data.property, value, data.type); }; })(); }, /** * Stuff property into generic `property` key. */ updateConfigForDefault: function () { var config = this.config; var data = this.data; var el = this.el; var from; var isBoolean; var isNumber; var to; if (this.waitComponentInitRawProperty(this.updateConfigForDefault)) { return; } if (data.from === '') { // Infer from. from = isRawProperty(data) ? getRawProperty(el, data.property) : getComponentProperty(el, data.property); } else { // Explicit from. from = data.from; } to = data.to; isNumber = !isNaN(from || to); if (isNumber) { from = parseFloat(from); to = parseFloat(to); } else { from = from ? from.toString() : from; to = to ? to.toString() : to; } // Convert booleans to integer to allow boolean flipping. isBoolean = data.to === 'true' || data.to === 'false' || data.to === true || data.to === false; if (isBoolean) { from = data.from === 'true' || data.from === true ? 1 : 0; to = data.to === 'true' || data.to === true ? 1 : 0; } this.targets.aframeProperty = from; config.targets = this.targets; config.aframeProperty = to; config.update = (function () { var lastValue; return function (anim) { var value; value = anim.animatables[0].target.aframeProperty; // Need to do a last value check for animation timeline since all the tweening // begins simultaenously even if the value has not changed. Also better for perf // anyways. if (value === lastValue) { return; } lastValue = value; if (isBoolean) { value = value >= 1; } if (isRawProperty(data)) { setRawProperty(el, data.property, value, data.type); } else { setComponentProperty(el, data.property, value); } }; })(); }, /** * Extend x/y/z/w onto the config. * Update vector by modifying object3D. */ updateConfigForVector: function () { var config = this.config; var data = this.data; var el = this.el; var key; var from; var to; // Parse coordinates. from = data.from !== '' ? utils.coordinates.parse(data.from) // If data.from defined, use that. : getComponentProperty(el, data.property); // If data.from not defined, get on the fly. to = utils.coordinates.parse(data.to); if (data.property === PROP_ROTATION) { toRadians(from); toRadians(to); } // Set to and from. this.targetsArray.length = 0; this.targetsArray.push(from); config.targets = this.targetsArray; for (key in to) { config[key] = to[key]; } // If animating object3D transformation, run more optimized updater. if (data.property === PROP_POSITION || data.property === PROP_ROTATION || data.property === PROP_SCALE) { config.update = (function () { var lastValue = {}; return function (anim) { var value = anim.animatables[0].target; if (data.property === PROP_SCALE) { value.x = Math.max(0.0001, value.x); value.y = Math.max(0.0001, value.y); value.z = Math.max(0.0001, value.z); } // For animation timeline. if (value.x === lastValue.x && value.y === lastValue.y && value.z === lastValue.z) { return; } lastValue.x = value.x; lastValue.y = value.y; lastValue.z = value.z; el.object3D[data.property].set(value.x, value.y, value.z); }; })(); return; } // Animating some vector. config.update = (function () { var lastValue = {}; return function (anim) { var value = anim.animatables[0].target; // Animate rotation through radians. // For animation timeline. if (value.x === lastValue.x && value.y === lastValue.y && value.z === lastValue.z) { return; } lastValue.x = value.x; lastValue.y = value.y; lastValue.z = value.z; setComponentProperty(el, data.property, value); }; })(); }, /** * Update the config before each run. */ updateConfig: function () { var propType; // Route config type. propType = getPropertyType(this.el, this.data.property); if (isRawProperty(this.data) && this.data.type === TYPE_COLOR) { this.updateConfigForRawColor(); } else if (propType === 'vec2' || propType === 'vec3' || propType === 'vec4') { this.updateConfigForVector(); } else { this.updateConfigForDefault(); } }, /** * Wait for component to initialize. */ waitComponentInitRawProperty: function (cb) { var componentName; var data = this.data; var el = this.el; var self = this; if (data.from !== '') { return false; } if (!data.property.startsWith(STRING_COMPONENTS)) { return false; } componentName = splitDot(data.property)[1]; if (el.components[componentName]) { return false; } el.addEventListener('componentinitialized', function wait (evt) { if (evt.detail.name !== componentName) { return; } cb(); // Since the config was created async, create the animation now since we missed it // earlier. self.animation = anime(self.config); el.removeEventListener('componentinitialized', wait); }); return true; }, /** * Make sure two animations on the same property don't fight each other. * e.g., animation__mouseenter="property: material.opacity" * animation__mouseleave="property: material.opacity" */ stopRelatedAnimations: function () { var component; var componentName; for (componentName in this.el.components) { component = this.el.components[componentName]; if (componentName === this.attrName) { continue; } if (component.name !== 'animation') { continue; } if (!component.animationIsPlaying) { continue; } if (component.data.property !== this.data.property) { continue; } component.animationIsPlaying = false; } }, addEventListeners: function () { var data = this.data; var el = this.el; addEventListeners(el, data.startEvents, this.onStartEvent); addEventListeners(el, data.pauseEvents, this.pauseAnimation); addEventListeners(el, data.resumeEvents, this.resumeAnimation); }, removeEventListeners: function () { var data = this.data; var el = this.el; removeEventListeners(el, data.startEvents, this.onStartEvent); removeEventListeners(el, data.pauseEvents, this.pauseAnimation); removeEventListeners(el, data.resumeEvents, this.resumeAnimation); }, setColorConfig: function (from, to) { colorHelperFrom.set(from); colorHelperTo.set(to); from = this.fromColor; to = this.toColor; from.r = colorHelperFrom.r; from.g = colorHelperFrom.g; from.b = colorHelperFrom.b; to.r = colorHelperTo.r; to.g = colorHelperTo.g; to.b = colorHelperTo.b; } }); /** * Given property name, check schema to see what type we are animating. * We just care whether the property is a vector. */ function getPropertyType (el, property) { var component; var componentName; var split; var propertyName; split = property.split('.'); componentName = split[0]; propertyName = split[1]; component = el.components[componentName] || components[componentName]; // Primitives. if (!component) { return null; } // Dynamic schema. We only care about vectors anyways. if (propertyName && !component.schema[propertyName]) { return null; } // Multi-prop. if (propertyName) { return component.schema[propertyName].type; } // Single-prop. return component.schema.type; } /** * Convert object to radians. */ function toRadians (obj) { obj.x = THREE.Math.degToRad(obj.x); obj.y = THREE.Math.degToRad(obj.y); obj.z = THREE.Math.degToRad(obj.z); } function addEventListeners (el, eventNames, handler) { var i; for (i = 0; i < eventNames.length; i++) { el.addEventListener(eventNames[i], handler); } } function removeEventListeners (el, eventNames, handler) { var i; for (i = 0; i < eventNames.length; i++) { el.removeEventListener(eventNames[i], handler); } } function getRawProperty (el, path) { var i; var split; var value; split = splitDot(path); value = el; for (i = 0; i < split.length; i++) { value = value[split[i]]; } if (value === undefined) { console.log(el); throw new Error('[animation] property (' + path + ') could not be found'); } return value; } function setRawProperty (el, path, value, type) { var i; var split; var propertyName; var targetValue; if (path.startsWith('object3D.rotation')) { value = THREE.Math.degToRad(value); } // Walk. split = splitDot(path); targetValue = el; for (i = 0; i < split.length - 1; i++) { targetValue = targetValue[split[i]]; } propertyName = split[split.length - 1]; // Raw color. if (type === TYPE_COLOR) { if ('r' in targetValue[propertyName]) { targetValue[propertyName].r = value.r; targetValue[propertyName].g = value.g; targetValue[propertyName].b = value.b; } else { targetValue[propertyName].x = value.r; targetValue[propertyName].y = value.g; targetValue[propertyName].z = value.b; } return; } targetValue[propertyName] = value; } function splitDot (path) { if (path in splitCache) { return splitCache[path]; } splitCache[path] = path.split('.'); return splitCache[path]; } function isRawProperty (data) { return data.isRawProperty || data.property.startsWith(STRING_COMPONENTS) || data.property.startsWith(STRING_OBJECT3D); } ",
    "var registerComponent = require('../core/component').registerComponent; var THREE = require('../lib/three'); /** * Camera component. * Pairs along with camera system to handle tracking the active camera. */ module.exports.Component = registerComponent('camera', { schema: { active: {default: true}, far: {default: 10000}, fov: {default: 80, min: 0}, near: {default: 0.005, min: 0}, spectator: {default: false}, zoom: {default: 1, min: 0} }, /** * Initialize three.js camera and add it to the entity. * Add reference from scene to this entity as the camera. */ init: function () { var camera; var el = this.el; // Create camera. camera = this.camera = new THREE.PerspectiveCamera(); el.setObject3D('camera', camera); }, /** * Update three.js camera. */ update: function (oldData) { var data = this.data; var camera = this.camera; // Update properties. camera.aspect = data.aspect || (window.innerWidth / window.innerHeight); camera.far = data.far; camera.fov = data.fov; camera.near = data.near; camera.zoom = data.zoom; camera.updateProjectionMatrix(); this.updateActiveCamera(oldData); this.updateSpectatorCamera(oldData); }, updateActiveCamera: function (oldData) { var data = this.data; var el = this.el; var system = this.system; // Active property did not change. if (oldData && oldData.active === data.active || data.spectator) { return; } // If `active` property changes, or first update, handle active camera with system. if (data.active && system.activeCameraEl !== el) { // Camera enabled. Set camera to this camera. system.setActiveCamera(el); } else if (!data.active && system.activeCameraEl === el) { // Camera disabled. Set camera to another camera. system.disableActiveCamera(); } }, updateSpectatorCamera: function (oldData) { var data = this.data; var el = this.el; var system = this.system; // spectator property did not change. if (oldData && oldData.spectator === data.spectator) { return; } // If `spectator` property changes, or first update, handle spectator camera with system. if (data.spectator && system.spectatorCameraEl !== el) { // Camera enabled. Set camera to this camera. system.setSpectatorCamera(el); } else if (!data.spectator && system.spectatorCameraEl === el) { // Camera disabled. Set camera to another camera. system.disableSpectatorCamera(); } }, /** * Remove camera on remove (callback). */ remove: function () { this.el.removeObject3D('camera'); } }); ",
    "/* global THREE */ var registerComponent = require('../core/component').registerComponent; var utils = require('../utils/'); var bind = utils.bind; var EVENTS = { CLICK: 'click', FUSING: 'fusing', MOUSEENTER: 'mouseenter', MOUSEDOWN: 'mousedown', MOUSELEAVE: 'mouseleave', MOUSEUP: 'mouseup' }; var STATES = { FUSING: 'cursor-fusing', HOVERING: 'cursor-hovering', HOVERED: 'cursor-hovered' }; var CANVAS_EVENTS = { DOWN: ['mousedown', 'touchstart'], UP: ['mouseup', 'touchend'] }; var CANVAS_HOVER_CLASS = 'a-mouse-cursor-hover'; /** * Cursor component. Applies the raycaster component specifically for starting the raycaster * from the camera and pointing from camera's facing direction, and then only returning the * closest intersection. Cursor can be fine-tuned by setting raycaster properties. * * @member {object} fuseTimeout - Timeout to trigger fuse-click. * @member {Element} cursorDownEl - Entity that was last mousedowned during current click. * @member {object} intersection - Attributes of the current intersection event, including * 3D- and 2D-space coordinates. See: http://threejs.org/docs/api/core/Raycaster.html * @member {Element} intersectedEl - Currently-intersected entity. Used to keep track to * emit events when unintersecting. */ module.exports.Component = registerComponent('cursor', { dependencies: ['raycaster'], schema: { downEvents: {default: []}, fuse: {default: utils.device.isMobile()}, fuseTimeout: {default: 1500, min: 0}, mouseCursorStylesEnabled: {default: true}, upEvents: {default: []}, rayOrigin: {default: 'entity', oneOf: ['mouse', 'entity']} }, init: function () { var self = this; this.fuseTimeout = undefined; this.cursorDownEl = null; this.intersectedEl = null; this.canvasBounds = document.body.getBoundingClientRect(); // Debounce. this.updateCanvasBounds = utils.debounce(function updateCanvasBounds () { self.canvasBounds = self.el.sceneEl.canvas.getBoundingClientRect(); }, 500); this.eventDetail = {}; this.intersectedEventDetail = {cursorEl: this.el}; // Bind methods. this.onCursorDown = bind(this.onCursorDown, this); this.onCursorUp = bind(this.onCursorUp, this); this.onIntersection = bind(this.onIntersection, this); this.onIntersectionCleared = bind(this.onIntersectionCleared, this); this.onMouseMove = bind(this.onMouseMove, this); }, update: function (oldData) { if (this.data.rayOrigin === oldData.rayOrigin) { return; } this.updateMouseEventListeners(); }, play: function () { this.addEventListeners(); }, pause: function () { this.removeEventListeners(); }, remove: function () { var el = this.el; el.removeState(STATES.HOVERING); el.removeState(STATES.FUSING); clearTimeout(this.fuseTimeout); if (this.intersectedEl) { this.intersectedEl.removeState(STATES.HOVERED); } this.removeEventListeners(); }, addEventListeners: function () { var canvas; var data = this.data; var el = this.el; var self = this; function addCanvasListeners () { canvas = el.sceneEl.canvas; if (data.downEvents.length || data.upEvents.length) { return; } CANVAS_EVENTS.DOWN.forEach(function (downEvent) { canvas.addEventListener(downEvent, self.onCursorDown); }); CANVAS_EVENTS.UP.forEach(function (upEvent) { canvas.addEventListener(upEvent, self.onCursorUp); }); } canvas = el.sceneEl.canvas; if (canvas) { addCanvasListeners(); } else { el.sceneEl.addEventListener('render-target-loaded', addCanvasListeners); } data.downEvents.forEach(function (downEvent) { el.addEventListener(downEvent, self.onCursorDown); }); data.upEvents.forEach(function (upEvent) { el.addEventListener(upEvent, self.onCursorUp); }); el.addEventListener('raycaster-intersection', this.onIntersection); el.addEventListener('raycaster-intersection-cleared', this.onIntersectionCleared); el.sceneEl.addEventListener('rendererresize', this.updateCanvasBounds); window.addEventListener('resize', this.updateCanvasBounds); window.addEventListener('scroll', this.updateCanvasBounds); this.updateMouseEventListeners(); }, removeEventListeners: function () { var canvas; var data = this.data; var el = this.el; var self = this; canvas = el.sceneEl.canvas; if (canvas && !data.downEvents.length && !data.upEvents.length) { CANVAS_EVENTS.DOWN.forEach(function (downEvent) { canvas.removeEventListener(downEvent, self.onCursorDown); }); CANVAS_EVENTS.UP.forEach(function (upEvent) { canvas.removeEventListener(upEvent, self.onCursorUp); }); } data.downEvents.forEach(function (downEvent) { el.removeEventListener(downEvent, self.onCursorDown); }); data.upEvents.forEach(function (upEvent) { el.removeEventListener(upEvent, self.onCursorUp); }); el.removeEventListener('raycaster-intersection', this.onIntersection); el.removeEventListener('raycaster-intersection-cleared', this.onIntersectionCleared); canvas.removeEventListener('mousemove', this.onMouseMove); canvas.removeEventListener('touchstart', this.onMouseMove); canvas.removeEventListener('touchmove', this.onMouseMove); el.sceneEl.removeEventListener('rendererresize', this.updateCanvasBounds); window.removeEventListener('resize', this.updateCanvasBounds); window.removeEventListener('scroll', this.updateCanvasBounds); }, updateMouseEventListeners: function () { var canvas; var el = this.el; canvas = el.sceneEl.canvas; canvas.removeEventListener('mousemove', this.onMouseMove); canvas.removeEventListener('touchmove', this.onMouseMove); el.setAttribute('raycaster', 'useWorldCoordinates', false); if (this.data.rayOrigin !== 'mouse') { return; } canvas.addEventListener('mousemove', this.onMouseMove, false); canvas.addEventListener('touchmove', this.onMouseMove, false); el.setAttribute('raycaster', 'useWorldCoordinates', true); this.updateCanvasBounds(); }, onMouseMove: (function () { var direction = new THREE.Vector3(); var mouse = new THREE.Vector2(); var origin = new THREE.Vector3(); var rayCasterConfig = {origin: origin, direction: direction}; return function (evt) { var bounds = this.canvasBounds; var camera = this.el.sceneEl.camera; var left; var point; var top; camera.parent.updateMatrixWorld(); // Calculate mouse position based on the canvas element if (evt.type === 'touchmove' || evt.type === 'touchstart') { // Track the first touch for simplicity. point = evt.touches.item(0); } else { point = evt; } left = point.clientX - bounds.left; top = point.clientY - bounds.top; mouse.x = (left / bounds.width) * 2 - 1; mouse.y = -(top / bounds.height) * 2 + 1; origin.setFromMatrixPosition(camera.matrixWorld); direction.set(mouse.x, mouse.y, 0.5).unproject(camera).sub(origin).normalize(); this.el.setAttribute('raycaster', rayCasterConfig); if (evt.type === 'touchmove') { evt.preventDefault(); } }; })(), /** * Trigger mousedown and keep track of the mousedowned entity. */ onCursorDown: function (evt) { // Raycast again for touch. if (this.data.rayOrigin === 'mouse' && evt.type === 'touchstart') { this.onMouseMove(evt); this.el.components.raycaster.checkIntersections(); evt.preventDefault(); } this.twoWayEmit(EVENTS.MOUSEDOWN); this.cursorDownEl = this.intersectedEl; }, /** * Trigger mouseup if: * - Not fusing (mobile has no mouse). * - Currently intersecting an entity. * - Currently-intersected entity is the same as the one when mousedown was triggered, * in case user mousedowned one entity, dragged to another, and mouseupped. */ onCursorUp: function (evt) { var data = this.data; this.twoWayEmit(EVENTS.MOUSEUP); // If intersected entity has changed since the cursorDown, still emit mouseUp on the // previously cursorUp entity. if (this.cursorDownEl && this.cursorDownEl !== this.intersectedEl) { this.intersectedEventDetail.intersection = null; this.cursorDownEl.emit(EVENTS.MOUSEUP, this.intersectedEventDetail); } if ((!data.fuse || data.rayOrigin === 'mouse') && this.intersectedEl && this.cursorDownEl === this.intersectedEl) { this.twoWayEmit(EVENTS.CLICK); } this.cursorDownEl = null; if (evt.type === 'touchend') { evt.preventDefault(); } }, /** * Handle intersection. */ onIntersection: function (evt) { var currentIntersection; var cursorEl = this.el; var index; var intersectedEl; var intersection; // Select closest object, excluding the cursor. index = evt.detail.els[0] === cursorEl ? 1 : 0; intersection = evt.detail.intersections[index]; intersectedEl = evt.detail.els[index]; // If cursor is the only intersected object, ignore the event. if (!intersectedEl) { return; } // Already intersecting this entity. if (this.intersectedEl === intersectedEl) { return; } // Ignore events further away than active intersection. if (this.intersectedEl) { currentIntersection = this.el.components.raycaster.getIntersection(this.intersectedEl); if (currentIntersection && currentIntersection.distance <= intersection.distance) { return; } } // Unset current intersection. this.clearCurrentIntersection(true); this.setIntersection(intersectedEl, intersection); }, /** * Handle intersection cleared. */ onIntersectionCleared: function (evt) { var clearedEls = evt.detail.clearedEls; // Check if the current intersection has ended if (clearedEls.indexOf(this.intersectedEl) === -1) { return; } this.clearCurrentIntersection(); }, setIntersection: function (intersectedEl, intersection) { var cursorEl = this.el; var data = this.data; var self = this; // Already intersecting. if (this.intersectedEl === intersectedEl) { return; } // Set new intersection. this.intersectedEl = intersectedEl; // Hovering. cursorEl.addState(STATES.HOVERING); intersectedEl.addState(STATES.HOVERED); this.twoWayEmit(EVENTS.MOUSEENTER); if (this.data.mouseCursorStylesEnabled && this.data.rayOrigin === 'mouse') { this.el.sceneEl.canvas.classList.add(CANVAS_HOVER_CLASS); } // Begin fuse if necessary. if (data.fuseTimeout === 0 || !data.fuse) { return; } cursorEl.addState(STATES.FUSING); this.twoWayEmit(EVENTS.FUSING); this.fuseTimeout = setTimeout(function fuse () { cursorEl.removeState(STATES.FUSING); self.twoWayEmit(EVENTS.CLICK); }, data.fuseTimeout); }, clearCurrentIntersection: function (ignoreRemaining) { var index; var intersection; var intersections; var cursorEl = this.el; // Nothing to be cleared. if (!this.intersectedEl) { return; } // No longer hovering (or fusing). this.intersectedEl.removeState(STATES.HOVERED); cursorEl.removeState(STATES.HOVERING); cursorEl.removeState(STATES.FUSING); this.twoWayEmit(EVENTS.MOUSELEAVE); if (this.data.mouseCursorStylesEnabled && this.data.rayOrigin === 'mouse') { this.el.sceneEl.canvas.classList.remove(CANVAS_HOVER_CLASS); } // Unset intersected entity (after emitting the event). this.intersectedEl = null; // Clear fuseTimeout. clearTimeout(this.fuseTimeout); // Set intersection to another raycasted element if any. if (ignoreRemaining === true) { return; } intersections = this.el.components.raycaster.intersections; if (intersections.length === 0) { return; } // Exclude the cursor. index = intersections[0].object.el === cursorEl ? 1 : 0; intersection = intersections[index]; if (!intersection) { return; } this.setIntersection(intersection.object.el, intersection); }, /** * Helper to emit on both the cursor and the intersected entity (if exists). */ twoWayEmit: function (evtName) { var el = this.el; var intersectedEl = this.intersectedEl; var intersection; intersection = this.el.components.raycaster.getIntersection(intersectedEl); this.eventDetail.intersectedEl = intersectedEl; this.eventDetail.intersection = intersection; el.emit(evtName, this.eventDetail); if (!intersectedEl) { return; } this.intersectedEventDetail.intersection = intersection; intersectedEl.emit(evtName, this.intersectedEventDetail); } }); ",
    "var registerComponent = require('../core/component').registerComponent; var bind = require('../utils/bind'); var trackedControlsUtils = require('../utils/tracked-controls'); var checkControllerPresentAndSetup = trackedControlsUtils.checkControllerPresentAndSetup; var emitIfAxesChanged = trackedControlsUtils.emitIfAxesChanged; var onButtonEvent = trackedControlsUtils.onButtonEvent; var DAYDREAM_CONTROLLER_MODEL_BASE_URL = 'https://cdn.aframe.io/controllers/google/'; var DAYDREAM_CONTROLLER_MODEL_OBJ_URL = DAYDREAM_CONTROLLER_MODEL_BASE_URL + 'vr_controller_daydream.obj'; var DAYDREAM_CONTROLLER_MODEL_OBJ_MTL = DAYDREAM_CONTROLLER_MODEL_BASE_URL + 'vr_controller_daydream.mtl'; var GAMEPAD_ID_PREFIX = 'Daydream Controller'; /** * Daydream controls. * Interface with Daydream controller and map Gamepad events to * controller buttons: trackpad, menu, system * Load a controller model and highlight the pressed buttons. */ module.exports.Component = registerComponent('daydream-controls', { schema: { hand: {default: ''}, // This informs the degenerate arm model. buttonColor: {type: 'color', default: '#000000'}, buttonTouchedColor: {type: 'color', default: '#777777'}, buttonHighlightColor: {type: 'color', default: '#FFFFFF'}, model: {default: true}, orientationOffset: {type: 'vec3'}, armModel: {default: true} }, /** * Button IDs: * 0 - trackpad * 1 - menu (never dispatched on this layer) * 2 - system (never dispatched on this layer) */ mapping: { axes: {trackpad: [0, 1]}, buttons: ['trackpad', 'menu', 'system'] }, bindMethods: function () { this.onModelLoaded = bind(this.onModelLoaded, this); this.onControllersUpdate = bind(this.onControllersUpdate, this); this.checkIfControllerPresent = bind(this.checkIfControllerPresent, this); this.removeControllersUpdateListener = bind(this.removeControllersUpdateListener, this); this.onAxisMoved = bind(this.onAxisMoved, this); }, init: function () { var self = this; this.onButtonChanged = bind(this.onButtonChanged, this); this.onButtonDown = function (evt) { onButtonEvent(evt.detail.id, 'down', self); }; this.onButtonUp = function (evt) { onButtonEvent(evt.detail.id, 'up', self); }; this.onButtonTouchStart = function (evt) { onButtonEvent(evt.detail.id, 'touchstart', self); }; this.onButtonTouchEnd = function (evt) { onButtonEvent(evt.detail.id, 'touchend', self); }; this.controllerPresent = false; this.lastControllerCheck = 0; this.bindMethods(); }, addEventListeners: function () { var el = this.el; el.addEventListener('buttonchanged', this.onButtonChanged); el.addEventListener('buttondown', this.onButtonDown); el.addEventListener('buttonup', this.onButtonUp); el.addEventListener('touchstart', this.onButtonTouchStart); el.addEventListener('touchend', this.onButtonTouchEnd); el.addEventListener('model-loaded', this.onModelLoaded); el.addEventListener('axismove', this.onAxisMoved); this.controllerEventsActive = true; }, removeEventListeners: function () { var el = this.el; el.removeEventListener('buttonchanged', this.onButtonChanged); el.removeEventListener('buttondown', this.onButtonDown); el.removeEventListener('buttonup', this.onButtonUp); el.removeEventListener('touchstart', this.onButtonTouchStart); el.removeEventListener('touchend', this.onButtonTouchEnd); el.removeEventListener('model-loaded', this.onModelLoaded); el.removeEventListener('axismove', this.onAxisMoved); this.controllerEventsActive = false; }, checkIfControllerPresent: function () { checkControllerPresentAndSetup(this, GAMEPAD_ID_PREFIX, {hand: this.data.hand}); }, play: function () { this.checkIfControllerPresent(); this.addControllersUpdateListener(); }, pause: function () { this.removeEventListeners(); this.removeControllersUpdateListener(); }, injectTrackedControls: function () { var el = this.el; var data = this.data; el.setAttribute('tracked-controls', { armModel: data.armModel, hand: data.hand, idPrefix: GAMEPAD_ID_PREFIX, orientationOffset: data.orientationOffset }); if (!this.data.model) { return; } this.el.setAttribute('obj-model', { obj: DAYDREAM_CONTROLLER_MODEL_OBJ_URL, mtl: DAYDREAM_CONTROLLER_MODEL_OBJ_MTL }); }, addControllersUpdateListener: function () { this.el.sceneEl.addEventListener('controllersupdated', this.onControllersUpdate, false); }, removeControllersUpdateListener: function () { this.el.sceneEl.removeEventListener('controllersupdated', this.onControllersUpdate, false); }, onControllersUpdate: function () { this.checkIfControllerPresent(); }, onModelLoaded: function (evt) { var controllerObject3D = evt.detail.model; var buttonMeshes; if (!this.data.model) { return; } buttonMeshes = this.buttonMeshes = {}; buttonMeshes.menu = controllerObject3D.getObjectByName('AppButton_AppButton_Cylinder.004'); buttonMeshes.system = controllerObject3D.getObjectByName('HomeButton_HomeButton_Cylinder.005'); buttonMeshes.trackpad = controllerObject3D.getObjectByName('TouchPad_TouchPad_Cylinder.003'); // Offset pivot point. controllerObject3D.position.set(0, 0, -0.04); }, onAxisMoved: function (evt) { emitIfAxesChanged(this, this.mapping.axes, evt); }, onButtonChanged: function (evt) { var button = this.mapping.buttons[evt.detail.id]; if (!button) return; // Pass along changed event with button state, using button mapping for convenience. this.el.emit(button + 'changed', evt.detail.state); }, updateModel: function (buttonName, evtName) { if (!this.data.model) { return; } this.updateButtonModel(buttonName, evtName); }, updateButtonModel: function (buttonName, state) { var buttonMeshes = this.buttonMeshes; if (!buttonMeshes || !buttonMeshes[buttonName]) { return; } var color; switch (state) { case 'down': color = this.data.buttonHighlightColor; break; case 'touchstart': color = this.data.buttonTouchedColor; break; default: color = this.data.buttonColor; } buttonMeshes[buttonName].material.color.set(color); } }); ",
    "var registerComponent = require('../core/component').registerComponent; var bind = require('../utils/bind'); var trackedControlsUtils = require('../utils/tracked-controls'); var checkControllerPresentAndSetup = trackedControlsUtils.checkControllerPresentAndSetup; var emitIfAxesChanged = trackedControlsUtils.emitIfAxesChanged; var onButtonEvent = trackedControlsUtils.onButtonEvent; var GEARVR_CONTROLLER_MODEL_BASE_URL = 'https://cdn.aframe.io/controllers/samsung/'; var GEARVR_CONTROLLER_MODEL_OBJ_URL = GEARVR_CONTROLLER_MODEL_BASE_URL + 'gear_vr_controller.obj'; var GEARVR_CONTROLLER_MODEL_OBJ_MTL = GEARVR_CONTROLLER_MODEL_BASE_URL + 'gear_vr_controller.mtl'; var GAMEPAD_ID_PREFIX = 'Gear VR'; /** * Gear VR controls. * Interface with Gear VR controller and map Gamepad events to * controller buttons: trackpad, trigger * Load a controller model and highlight the pressed buttons. */ module.exports.Component = registerComponent('gearvr-controls', { schema: { hand: {default: ''}, // This informs the degenerate arm model. buttonColor: {type: 'color', default: '#000000'}, buttonTouchedColor: {type: 'color', default: '#777777'}, buttonHighlightColor: {type: 'color', default: '#FFFFFF'}, model: {default: true}, orientationOffset: {type: 'vec3'}, armModel: {default: true} }, /** * Button IDs: * 0 - trackpad * 1 - trigger */ mapping: { axes: {trackpad: [0, 1]}, buttons: ['trackpad', 'trigger'] }, bindMethods: function () { this.onModelLoaded = bind(this.onModelLoaded, this); this.onControllersUpdate = bind(this.onControllersUpdate, this); this.checkIfControllerPresent = bind(this.checkIfControllerPresent, this); this.removeControllersUpdateListener = bind(this.removeControllersUpdateListener, this); this.onAxisMoved = bind(this.onAxisMoved, this); }, init: function () { var self = this; this.onButtonChanged = bind(this.onButtonChanged, this); this.onButtonDown = function (evt) { onButtonEvent(evt.detail.id, 'down', self); }; this.onButtonUp = function (evt) { onButtonEvent(evt.detail.id, 'up', self); }; this.onButtonTouchStart = function (evt) { onButtonEvent(evt.detail.id, 'touchstart', self); }; this.onButtonTouchEnd = function (evt) { onButtonEvent(evt.detail.id, 'touchend', self); }; this.controllerPresent = false; this.lastControllerCheck = 0; this.bindMethods(); }, addEventListeners: function () { var el = this.el; el.addEventListener('buttonchanged', this.onButtonChanged); el.addEventListener('buttondown', this.onButtonDown); el.addEventListener('buttonup', this.onButtonUp); el.addEventListener('touchstart', this.onButtonTouchStart); el.addEventListener('touchend', this.onButtonTouchEnd); el.addEventListener('model-loaded', this.onModelLoaded); el.addEventListener('axismove', this.onAxisMoved); this.controllerEventsActive = true; }, removeEventListeners: function () { var el = this.el; el.removeEventListener('buttonchanged', this.onButtonChanged); el.removeEventListener('buttondown', this.onButtonDown); el.removeEventListener('buttonup', this.onButtonUp); el.removeEventListener('touchstart', this.onButtonTouchStart); el.removeEventListener('touchend', this.onButtonTouchEnd); el.removeEventListener('model-loaded', this.onModelLoaded); el.removeEventListener('axismove', this.onAxisMoved); this.controllerEventsActive = false; }, checkIfControllerPresent: function () { checkControllerPresentAndSetup(this, GAMEPAD_ID_PREFIX, this.data.hand ? {hand: this.data.hand} : {}); }, play: function () { this.checkIfControllerPresent(); this.addControllersUpdateListener(); }, pause: function () { this.removeEventListeners(); this.removeControllersUpdateListener(); }, injectTrackedControls: function () { var el = this.el; var data = this.data; el.setAttribute('tracked-controls', { armModel: data.armModel, idPrefix: GAMEPAD_ID_PREFIX, orientationOffset: data.orientationOffset }); if (!this.data.model) { return; } this.el.setAttribute('obj-model', { obj: GEARVR_CONTROLLER_MODEL_OBJ_URL, mtl: GEARVR_CONTROLLER_MODEL_OBJ_MTL }); }, addControllersUpdateListener: function () { this.el.sceneEl.addEventListener('controllersupdated', this.onControllersUpdate, false); }, removeControllersUpdateListener: function () { this.el.sceneEl.removeEventListener('controllersupdated', this.onControllersUpdate, false); }, onControllersUpdate: function () { this.checkIfControllerPresent(); }, // No need for onButtonChanged, since Gear VR controller has no analog buttons. onModelLoaded: function (evt) { var controllerObject3D = evt.detail.model; var buttonMeshes; if (!this.data.model) { return; } buttonMeshes = this.buttonMeshes = {}; buttonMeshes.trigger = controllerObject3D.children[2]; buttonMeshes.trackpad = controllerObject3D.children[1]; }, onButtonChanged: function (evt) { var button = this.mapping.buttons[evt.detail.id]; if (!button) return; // Pass along changed event with button state, using button mapping for convenience. this.el.emit(button + 'changed', evt.detail.state); }, onAxisMoved: function (evt) { emitIfAxesChanged(this, this.mapping.axes, evt); }, updateModel: function (buttonName, evtName) { if (!this.data.model) { return; } this.updateButtonModel(buttonName, evtName); }, updateButtonModel: function (buttonName, state) { var buttonMeshes = this.buttonMeshes; if (!buttonMeshes || !buttonMeshes[buttonName]) { return; } var color; switch (state) { case 'down': color = this.data.buttonHighlightColor; break; case 'touchstart': color = this.data.buttonTouchedColor; break; default: color = this.data.buttonColor; } buttonMeshes[buttonName].material.color.set(color); } }); ",
    "var geometries = require('../core/geometry').geometries; var geometryNames = require('../core/geometry').geometryNames; var registerComponent = require('../core/component').registerComponent; var THREE = require('../lib/three'); var dummyGeometry = new THREE.Geometry(); /** * Geometry component. Combined with material component to make a mesh in 3D object. * Extended with registered geometries. */ module.exports.Component = registerComponent('geometry', { schema: { buffer: {default: true}, primitive: {default: 'box', oneOf: geometryNames, schemaChange: true}, skipCache: {default: false} }, init: function () { this.geometry = null; }, /** * Talk to geometry system to get or create geometry. */ update: function (previousData) { var data = this.data; var el = this.el; var mesh; var system = this.system; // Dispose old geometry if we created one. if (this.geometry) { system.unuseGeometry(previousData); this.geometry = null; } // Create new geometry. this.geometry = system.getOrCreateGeometry(data); // Set on mesh. If mesh does not exist, create it. mesh = el.getObject3D('mesh'); if (mesh) { mesh.geometry = this.geometry; } else { mesh = new THREE.Mesh(); mesh.geometry = this.geometry; el.setObject3D('mesh', mesh); } }, /** * Tell geometry system that entity is no longer using the geometry. * Unset the geometry on the mesh */ remove: function () { this.system.unuseGeometry(this.data); this.el.getObject3D('mesh').geometry = dummyGeometry; this.geometry = null; }, /** * Update geometry component schema based on geometry type. */ updateSchema: function (data) { var currentGeometryType = this.oldData && this.oldData.primitive; var newGeometryType = data.primitive; var schema = geometries[newGeometryType] && geometries[newGeometryType].schema; // Geometry has no schema. if (!schema) { throw new Error('Unknown geometry schema `' + newGeometryType + '`'); } // Nothing has changed. if (currentGeometryType && currentGeometryType === newGeometryType) { return; } this.extendSchema(schema); } }); ",
    "var registerComponent = require('../core/component').registerComponent; var THREE = require('../lib/three'); var utils = require('../utils/'); var warn = utils.debug('components:gltf-model:warn'); /** * glTF model loader. */ module.exports.Component = registerComponent('gltf-model', { schema: {type: 'model'}, init: function () { var dracoLoader = this.system.getDRACOLoader(); this.model = null; this.loader = new THREE.GLTFLoader(); if (dracoLoader) { this.loader.setDRACOLoader(dracoLoader); } }, update: function () { var self = this; var el = this.el; var src = this.data; if (!src) { return; } this.remove(); this.loader.load(src, function gltfLoaded (gltfModel) { self.model = gltfModel.scene || gltfModel.scenes[0]; self.model.animations = gltfModel.animations; el.setObject3D('mesh', self.model); el.emit('model-loaded', {format: 'gltf', model: self.model}); }, undefined /* onProgress */, function gltfFailed (error) { var message = (error && error.message) ? error.message : 'Failed to load glTF model'; warn(message); el.emit('model-error', {format: 'gltf', src: src}); }); }, remove: function () { if (!this.model) { return; } this.el.removeObject3D('mesh'); } }); ",
    "/* global THREE */ var registerComponent = require('../core/component').registerComponent; // Found at https://github.com/aframevr/assets. var MODEL_URLS = { left: 'https://cdn.aframe.io/controllers/hands/leftHand.glb', right: 'https://cdn.aframe.io/controllers/hands/rightHand.glb' }; // Poses. var ANIMATIONS = { open: 'Open', // point: grip active, trackpad surface active, trigger inactive. point: 'Point', // pointThumb: grip active, trigger inactive, trackpad surface inactive. pointThumb: 'Point + Thumb', // fist: grip active, trigger active, trackpad surface active. fist: 'Fist', // hold: trigger active, grip inactive. hold: 'Hold', // thumbUp: grip active, trigger active, trackpad surface inactive. thumbUp: 'Thumb Up' }; // Map animation to public events for the API. var EVENTS = {}; EVENTS[ANIMATIONS.fist] = 'grip'; EVENTS[ANIMATIONS.thumbUp] = 'pistol'; EVENTS[ANIMATIONS.point] = 'pointing'; EVENTS[ANIMATIONS.thumb] = 'thumb'; /** * Hand controls component that abstracts 6DoF controls: * oculus-touch-controls, vive-controls, windows-motion-controls. * * Originally meant to be a sample implementation of applications-specific controls that * abstracts multiple types of controllers. * * Auto-detect appropriate controller. * Handle common events coming from the detected vendor-specific controls. * Translate button events to semantic hand-related event names: * (gripclose, gripopen, thumbup, thumbdown, pointup, pointdown) * Load hand model with gestures that are applied based on the button pressed. * * @property {string} Hand mapping (`left`, `right`). */ module.exports.Component = registerComponent('hand-controls', { schema: {default: 'left'}, init: function () { var self = this; var el = this.el; // Current pose. this.gesture = ANIMATIONS.open; // Active buttons populated by events provided by the attached controls. this.pressedButtons = {}; this.touchedButtons = {}; this.loader = new THREE.GLTFLoader(); this.loader.setCrossOrigin('anonymous'); this.onGripDown = function () { self.handleButton('grip', 'down'); }; this.onGripUp = function () { self.handleButton('grip', 'up'); }; this.onTrackpadDown = function () { self.handleButton('trackpad', 'down'); }; this.onTrackpadUp = function () { self.handleButton('trackpad', 'up'); }; this.onTrackpadTouchStart = function () { self.handleButton('trackpad', 'touchstart'); }; this.onTrackpadTouchEnd = function () { self.handleButton('trackpad', 'touchend'); }; this.onTriggerDown = function () { self.handleButton('trigger', 'down'); }; this.onTriggerUp = function () { self.handleButton('trigger', 'up'); }; this.onTriggerTouchStart = function () { self.handleButton('trigger', 'touchstart'); }; this.onTriggerTouchEnd = function () { self.handleButton('trigger', 'touchend'); }; this.onGripTouchStart = function () { self.handleButton('grip', 'touchstart'); }; this.onGripTouchEnd = function () { self.handleButton('grip', 'touchend'); }; this.onThumbstickDown = function () { self.handleButton('thumbstick', 'down'); }; this.onThumbstickUp = function () { self.handleButton('thumbstick', 'up'); }; this.onAorXTouchStart = function () { self.handleButton('AorX', 'touchstart'); }; this.onAorXTouchEnd = function () { self.handleButton('AorX', 'touchend'); }; this.onBorYTouchStart = function () { self.handleButton('BorY', 'touchstart'); }; this.onBorYTouchEnd = function () { self.handleButton('BorY', 'touchend'); }; this.onSurfaceTouchStart = function () { self.handleButton('surface', 'touchstart'); }; this.onSurfaceTouchEnd = function () { self.handleButton('surface', 'touchend'); }; el.addEventListener('controllerconnected', this.onControllerConnected); el.addEventListener('controllerdisconnected', this.onControllerDisconnected); // Hidden by default. el.object3D.visible = false; }, play: function () { this.addEventListeners(); }, pause: function () { this.removeEventListeners(); }, tick: function (time, delta) { var mesh = this.el.getObject3D('mesh'); if (!mesh || !mesh.mixer) { return; } mesh.mixer.update(delta / 1000); }, addEventListeners: function () { var el = this.el; el.addEventListener('gripdown', this.onGripDown); el.addEventListener('gripup', this.onGripUp); el.addEventListener('trackpaddown', this.onTrackpadDown); el.addEventListener('trackpadup', this.onTrackpadUp); el.addEventListener('trackpadtouchstart', this.onTrackpadTouchStart); el.addEventListener('trackpadtouchend', this.onTrackpadTouchEnd); el.addEventListener('triggerdown', this.onTriggerDown); el.addEventListener('triggerup', this.onTriggerUp); el.addEventListener('triggertouchstart', this.onTriggerTouchStart); el.addEventListener('triggertouchend', this.onTriggerTouchEnd); el.addEventListener('griptouchstart', this.onGripTouchStart); el.addEventListener('griptouchend', this.onGripTouchEnd); el.addEventListener('thumbstickdown', this.onThumbstickDown); el.addEventListener('thumbstickup', this.onThumbstickUp); el.addEventListener('abuttontouchstart', this.onAorXTouchStart); el.addEventListener('abuttontouchend', this.onAorXTouchEnd); el.addEventListener('bbuttontouchstart', this.onBorYTouchStart); el.addEventListener('bbuttontouchend', this.onBorYTouchEnd); el.addEventListener('xbuttontouchstart', this.onAorXTouchStart); el.addEventListener('xbuttontouchend', this.onAorXTouchEnd); el.addEventListener('ybuttontouchstart', this.onBorYTouchStart); el.addEventListener('ybuttontouchend', this.onBorYTouchEnd); el.addEventListener('surfacetouchstart', this.onSurfaceTouchStart); el.addEventListener('surfacetouchend', this.onSurfaceTouchEnd); }, removeEventListeners: function () { var el = this.el; el.removeEventListener('gripdown', this.onGripDown); el.removeEventListener('gripup', this.onGripUp); el.removeEventListener('trackpaddown', this.onTrackpadDown); el.removeEventListener('trackpadup', this.onTrackpadUp); el.removeEventListener('trackpadtouchstart', this.onTrackpadTouchStart); el.removeEventListener('trackpadtouchend', this.onTrackpadTouchEnd); el.removeEventListener('triggerdown', this.onTriggerDown); el.removeEventListener('triggerup', this.onTriggerUp); el.removeEventListener('triggertouchstart', this.onTriggerTouchStart); el.removeEventListener('triggertouchend', this.onTriggerTouchEnd); el.removeEventListener('griptouchstart', this.onGripTouchStart); el.removeEventListener('griptouchend', this.onGripTouchEnd); el.removeEventListener('thumbstickdown', this.onThumbstickDown); el.removeEventListener('thumbstickup', this.onThumbstickUp); el.removeEventListener('abuttontouchstart', this.onAorXTouchStart); el.removeEventListener('abuttontouchend', this.onAorXTouchEnd); el.removeEventListener('bbuttontouchstart', this.onBorYTouchStart); el.removeEventListener('bbuttontouchend', this.onBorYTouchEnd); el.removeEventListener('xbuttontouchstart', this.onAorXTouchStart); el.removeEventListener('xbuttontouchend', this.onAorXTouchEnd); el.removeEventListener('ybuttontouchstart', this.onBorYTouchStart); el.removeEventListener('ybuttontouchend', this.onBorYTouchEnd); el.removeEventListener('surfacetouchstart', this.onSurfaceTouchStart); el.removeEventListener('surfacetouchend', this.onSurfaceTouchEnd); }, /** * Update handler. More like the `init` handler since the only property is the hand, and * that won't be changing much. */ update: function (previousHand) { var controlConfiguration; var el = this.el; var hand = this.data; var self = this; // Get common configuration to abstract different vendor controls. controlConfiguration = { hand: hand, model: false, orientationOffset: {x: 0, y: 0, z: hand === 'left' ? 90 : -90} }; // Set model. if (hand !== previousHand) { this.loader.load(MODEL_URLS[hand], function (gltf) { var mesh = gltf.scene.children[0]; mesh.mixer = new THREE.AnimationMixer(mesh); self.clips = gltf.animations; el.setObject3D('mesh', mesh); mesh.position.set(0, 0, 0); mesh.rotation.set(0, 0, 0); el.setAttribute('vive-controls', controlConfiguration); el.setAttribute('oculus-touch-controls', controlConfiguration); el.setAttribute('windows-motion-controls', controlConfiguration); }); } }, remove: function () { this.el.removeObject3D('mesh'); }, /** * Play model animation, based on which button was pressed and which kind of event. * * 1. Process buttons. * 2. Determine gesture (this.determineGesture()). * 3. Animation gesture (this.animationGesture()). * 4. Emit gesture events (this.emitGestureEvents()). * * @param {string} button - Name of the button. * @param {string} evt - Type of event for the button (i.e., down/up/touchstart/touchend). */ handleButton: function (button, evt) { var lastGesture; var isPressed = evt === 'down'; var isTouched = evt === 'touchstart'; // Update objects. if (evt.indexOf('touch') === 0) { // Update touch object. if (isTouched === this.touchedButtons[button]) { return; } this.touchedButtons[button] = isTouched; } else { // Update button object. if (isPressed === this.pressedButtons[button]) { return; } this.pressedButtons[button] = isPressed; } // Determine the gesture. lastGesture = this.gesture; this.gesture = this.determineGesture(); // Same gesture. if (this.gesture === lastGesture) { return; } // Animate gesture. this.animateGesture(this.gesture, lastGesture); // Emit events. this.emitGestureEvents(this.gesture, lastGesture); }, /** * Determine which pose hand should be in considering active and touched buttons. */ determineGesture: function () { var gesture; var isGripActive = this.pressedButtons['grip']; var isSurfaceActive = this.pressedButtons['surface'] || this.touchedButtons['surface']; var isTrackpadActive = this.pressedButtons['trackpad'] || this.touchedButtons['trackpad']; var isTriggerActive = this.pressedButtons['trigger'] || this.touchedButtons['trigger']; var isABXYActive = this.touchedButtons['AorX'] || this.touchedButtons['BorY']; var isVive = isViveController(this.el.components['tracked-controls']); // Works well with Oculus Touch and Windows Motion Controls, but Vive needs tweaks. if (isVive) { if (isGripActive || isTriggerActive) { gesture = ANIMATIONS.fist; } else if (isTrackpadActive) { gesture = ANIMATIONS.point; } } else { if (isGripActive) { if (isSurfaceActive || isABXYActive || isTrackpadActive) { gesture = isTriggerActive ? ANIMATIONS.fist : ANIMATIONS.point; } else { gesture = isTriggerActive ? ANIMATIONS.thumbUp : ANIMATIONS.pointThumb; } } else if (isTriggerActive) { gesture = ANIMATIONS.hold; } } return gesture; }, /** * Play corresponding clip to a gesture */ getClip: function (gesture) { var clip; var i; for (i = 0; i < this.clips.length; i++) { clip = this.clips[i]; if (clip.name !== gesture) { continue; } return clip; } }, /** * Play gesture animation. * * @param {string} gesture - Which pose to animate to. If absent, then animate to open. * @param {string} lastGesture - Previous gesture, to reverse back to open if needed. */ animateGesture: function (gesture, lastGesture) { if (gesture) { this.playAnimation(gesture || ANIMATIONS.open, lastGesture, false); return; } // If no gesture, then reverse the current gesture back to open pose. this.playAnimation(lastGesture, lastGesture, true); }, /** * Emit `hand-controls`-specific events. */ emitGestureEvents: function (gesture, lastGesture) { var el = this.el; var eventName; if (lastGesture === gesture) { return; } // Emit event for lastGesture not inactive. eventName = getGestureEventName(lastGesture, false); if (eventName) { el.emit(eventName); } // Emit event for current gesture now active. eventName = getGestureEventName(gesture, true); if (eventName) { el.emit(eventName); } }, /** * Play hand animation based on button state. * * @param {string} gesture - Name of the animation as specified by the model. * @param {string} lastGesture - Previous pose. * @param {boolean} reverse - Whether animation should play in reverse. */ playAnimation: function (gesture, lastGesture, reverse) { var clip; var fromAction; var mesh = this.el.getObject3D('mesh'); var toAction; if (!mesh) { return; } // Stop all current animations. mesh.mixer.stopAllAction(); // Grab clip action. clip = this.getClip(gesture); toAction = mesh.mixer.clipAction(clip); toAction.clampWhenFinished = true; toAction.loop = THREE.LoopRepeat; toAction.repetitions = 0; toAction.timeScale = reverse ? -1 : 1; toAction.time = reverse ? clip.duration : 0; toAction.weight = 1; // No gesture to gesture or gesture to no gesture. if (!lastGesture || gesture === lastGesture) { // Stop all current animations. mesh.mixer.stopAllAction(); // Play animation. toAction.play(); return; } // Animate or crossfade from gesture to gesture. clip = this.getClip(lastGesture); fromAction = mesh.mixer.clipAction(clip); fromAction.weight = 0.15; fromAction.play(); toAction.play(); fromAction.crossFadeTo(toAction, 0.15, true); } }); /** * Suffix gestures based on toggle state (e.g., open/close, up/down, start/end). * * @param {string} gesture * @param {boolean} active */ function getGestureEventName (gesture, active) { var eventName; if (!gesture) { return; } eventName = EVENTS[gesture]; if (eventName === 'grip') { return eventName + (active ? 'close' : 'open'); } if (eventName === 'point' || eventName === 'thumb') { return eventName + (active ? 'up' : 'down'); } if (eventName === 'pointing' || eventName === 'pistol') { return eventName + (active ? 'start' : 'end'); } return; } function isViveController (trackedControls) { var controllerId = trackedControls && trackedControls.controller && trackedControls.controller.id; return controllerId && controllerId.indexOf('OpenVR ') === 0; } ",
    "require('./animation'); require('./camera'); require('./cursor'); require('./daydream-controls'); require('./gearvr-controls'); require('./geometry'); require('./gltf-model'); require('./hand-controls'); require('./laser-controls'); require('./light'); require('./line'); require('./link'); require('./look-controls'); require('./material'); require('./obj-model'); require('./oculus-go-controls'); require('./oculus-touch-controls'); require('./position'); require('./raycaster'); require('./rotation'); require('./scale'); require('./shadow'); require('./sound'); require('./text'); require('./tracked-controls'); require('./tracked-controls-webvr'); require('./tracked-controls-webxr'); require('./visible'); require('./vive-controls'); require('./vive-focus-controls'); require('./wasd-controls'); require('./windows-motion-controls'); require('./scene/background'); require('./scene/debug'); require('./scene/embedded'); require('./scene/inspector'); require('./scene/fog'); require('./scene/keyboard-shortcuts'); require('./scene/pool'); require('./scene/screenshot'); require('./scene/stats'); require('./scene/vr-mode-ui'); ",
    "var registerComponent = require('../core/component').registerComponent; var utils = require('../utils/'); registerComponent('laser-controls', { schema: { hand: {default: 'right'}, model: {default: true}, defaultModelColor: {type: 'color', default: 'grey'} }, init: function () { var config = this.config; var data = this.data; var el = this.el; var self = this; var modelEnabled = this.data.model && !this.el.sceneEl.hasWebXR; var controlsConfiguration = {hand: data.hand, model: modelEnabled}; // Set all controller models. el.setAttribute('daydream-controls', controlsConfiguration); el.setAttribute('gearvr-controls', controlsConfiguration); el.setAttribute('oculus-go-controls', controlsConfiguration); el.setAttribute('oculus-touch-controls', controlsConfiguration); el.setAttribute('vive-controls', controlsConfiguration); el.setAttribute('vive-focus-controls', controlsConfiguration); el.setAttribute('windows-motion-controls', controlsConfiguration); // WebXR doesn't allow to discriminate between controllers, a default model is used. if (this.data.model && this.el.sceneEl.hasWebXR) { this.initDefaultModel(); } // Wait for controller to connect, or have a valid pointing pose, before creating ray el.addEventListener('controllerconnected', createRay); el.addEventListener('controllerdisconnected', hideRay); el.addEventListener('controllermodelready', function (evt) { createRay(evt); self.modelReady = true; }); function createRay (evt) { var controllerConfig = config[evt.detail.name]; if (!controllerConfig) { return; } // Show the line unless a particular config opts to hide it, until a controllermodelready // event comes through. var raycasterConfig = utils.extend({ showLine: true }, controllerConfig.raycaster || {}); // The controllermodelready event contains a rayOrigin that takes into account // offsets specific to the loaded model. if (evt.detail.rayOrigin) { raycasterConfig.origin = evt.detail.rayOrigin.origin; raycasterConfig.direction = evt.detail.rayOrigin.direction; raycasterConfig.showLine = true; } // Only apply a default raycaster if it does not yet exist. This prevents it overwriting // config applied from a controllermodelready event. if (evt.detail.rayOrigin || !self.modelReady) { el.setAttribute('raycaster', raycasterConfig); } else { el.setAttribute('raycaster', 'showLine', true); } el.setAttribute('cursor', utils.extend({ fuse: false }, controllerConfig.cursor)); } function hideRay () { el.setAttribute('raycaster', 'showLine', false); } }, config: { 'daydream-controls': { cursor: {downEvents: ['trackpaddown', 'triggerdown'], upEvents: ['trackpadup', 'triggerup']} }, 'gearvr-controls': { cursor: {downEvents: ['triggerdown'], upEvents: ['triggerup']}, raycaster: {origin: {x: 0, y: 0.0005, z: 0}} }, 'oculus-go-controls': { cursor: {downEvents: ['triggerdown'], upEvents: ['triggerup']}, raycaster: {origin: {x: 0, y: 0.0005, z: 0}} }, 'oculus-touch-controls': { cursor: {downEvents: ['triggerdown'], upEvents: ['triggerup']}, raycaster: {origin: {x: 0, y: 0, z: 0}} }, 'vive-controls': { cursor: {downEvents: ['triggerdown'], upEvents: ['triggerup']} }, 'vive-focus-controls': { cursor: {downEvents: ['trackpaddown', 'triggerdown'], upEvents: ['trackpadup', 'triggerup']} }, 'windows-motion-controls': { cursor: {downEvents: ['triggerdown'], upEvents: ['triggerup']}, raycaster: {showLine: false} } }, initDefaultModel: function () { var modelEl = this.modelEl = document.createElement('a-entity'); modelEl.setAttribute('geometry', { primitive: 'sphere', radius: 0.03 }); modelEl.setAttribute('material', {color: this.data.color}); this.el.appendChild(modelEl); } }); ",
    "var bind = require('../utils/bind'); var diff = require('../utils').diff; var debug = require('../utils/debug'); var registerComponent = require('../core/component').registerComponent; var THREE = require('../lib/three'); var degToRad = THREE.Math.degToRad; var warn = debug('components:light:warn'); /** * Light component. */ module.exports.Component = registerComponent('light', { schema: { angle: {default: 60, if: {type: ['spot']}}, color: {type: 'color'}, groundColor: {type: 'color', if: {type: ['hemisphere']}}, decay: {default: 1, if: {type: ['point', 'spot']}}, distance: {default: 0.0, min: 0, if: {type: ['point', 'spot']}}, intensity: {default: 1.0, min: 0, if: {type: ['ambient', 'directional', 'hemisphere', 'point', 'spot']}}, penumbra: {default: 0, min: 0, max: 1, if: {type: ['spot']}}, type: { default: 'directional', oneOf: ['ambient', 'directional', 'hemisphere', 'point', 'spot'], schemaChange: true }, target: {type: 'selector', if: {type: ['spot', 'directional']}}, // Shadows. castShadow: {default: false, if: {type: ['point', 'spot', 'directional']}}, shadowBias: {default: 0, if: {castShadow: true}}, shadowCameraFar: {default: 500, if: {castShadow: true}}, shadowCameraFov: {default: 90, if: {castShadow: true}}, shadowCameraNear: {default: 0.5, if: {castShadow: true}}, shadowCameraTop: {default: 5, if: {castShadow: true}}, shadowCameraRight: {default: 5, if: {castShadow: true}}, shadowCameraBottom: {default: -5, if: {castShadow: true}}, shadowCameraLeft: {default: -5, if: {castShadow: true}}, shadowCameraVisible: {default: false, if: {castShadow: true}}, shadowMapHeight: {default: 512, if: {castShadow: true}}, shadowMapWidth: {default: 512, if: {castShadow: true}}, shadowRadius: {default: 1, if: {castShadow: true}} }, /** * Notifies scene a light has been added to remove default lighting. */ init: function () { var el = this.el; this.light = null; this.defaultTarget = null; this.rendererSystem = this.el.sceneEl.systems.renderer; this.system.registerLight(el); }, /** * (Re)create or update light. */ update: function (oldData) { var data = this.data; var diffData = diff(data, oldData); var light = this.light; var rendererSystem = this.rendererSystem; var self = this; // Existing light. if (light && !('type' in diffData)) { var shadowsLoaded = false; // Light type has not changed. Update light. Object.keys(diffData).forEach(function (key) { var value = data[key]; switch (key) { case 'color': { light.color.set(value); rendererSystem.applyColorCorrection(light.color); break; } case 'groundColor': { light.groundColor.set(value); rendererSystem.applyColorCorrection(light.groundColor); break; } case 'angle': { light.angle = degToRad(value); break; } case 'target': { // Reset target if selector is null. if (value === null) { if (data.type === 'spot' || data.type === 'directional') { light.target = self.defaultTarget; } } else { // Target specified, set target to entity's `object3D` when it is loaded. if (value.hasLoaded) { self.onSetTarget(value, light); } else { value.addEventListener('loaded', bind(self.onSetTarget, self, value, light)); } } break; } case 'castShadow': case 'shadowBias': case 'shadowCameraFar': case 'shadowCameraFov': case 'shadowCameraNear': case 'shadowCameraTop': case 'shadowCameraRight': case 'shadowCameraBottom': case 'shadowCameraLeft': case 'shadowCameraVisible': case 'shadowMapHeight': case 'shadowMapWidth': case 'shadowRadius': if (!shadowsLoaded) { self.updateShadow(); shadowsLoaded = true; } break; default: { light[key] = value; } } }); return; } // No light yet or light type has changed. Create and add light. this.setLight(this.data); this.updateShadow(); }, setLight: function (data) { var el = this.el; var newLight = this.getLight(data); if (newLight) { if (this.light) { el.removeObject3D('light'); } this.light = newLight; this.light.el = el; el.setObject3D('light', this.light); // HACK solution for issue #1624 if (data.type === 'spot' || data.type === 'directional' || data.type === 'hemisphere') { el.getObject3D('light').translateY(-1); } // set and position default lighttarget as a child to enable spotlight orientation if (data.type === 'spot') { el.setObject3D('light-target', this.defaultTarget); el.getObject3D('light-target').position.set(0, 0, -1); } } }, /** * Updates shadow-related properties on the current light. */ updateShadow: function () { var el = this.el; var data = this.data; var light = this.light; light.castShadow = data.castShadow; // Shadow camera helper. var cameraHelper = el.getObject3D('cameraHelper'); if (data.shadowCameraVisible && !cameraHelper) { el.setObject3D('cameraHelper', new THREE.CameraHelper(light.shadow.camera)); } else if (!data.shadowCameraVisible && cameraHelper) { el.removeObject3D('cameraHelper'); } if (!data.castShadow) { return light; } // Shadow appearance. light.shadow.bias = data.shadowBias; light.shadow.radius = data.shadowRadius; light.shadow.mapSize.height = data.shadowMapHeight; light.shadow.mapSize.width = data.shadowMapWidth; // Shadow camera. light.shadow.camera.near = data.shadowCameraNear; light.shadow.camera.far = data.shadowCameraFar; if (light.shadow.camera instanceof THREE.OrthographicCamera) { light.shadow.camera.top = data.shadowCameraTop; light.shadow.camera.right = data.shadowCameraRight; light.shadow.camera.bottom = data.shadowCameraBottom; light.shadow.camera.left = data.shadowCameraLeft; } else { light.shadow.camera.fov = data.shadowCameraFov; } light.shadow.camera.updateProjectionMatrix(); if (cameraHelper) { cameraHelper.update(); } }, /** * Creates a new three.js light object given data object defining the light. * * @param {object} data */ getLight: function (data) { var angle = data.angle; var color = new THREE.Color(data.color); this.rendererSystem.applyColorCorrection(color); color = color.getHex(); var decay = data.decay; var distance = data.distance; var groundColor = new THREE.Color(data.groundColor); this.rendererSystem.applyColorCorrection(groundColor); groundColor = groundColor.getHex(); var intensity = data.intensity; var type = data.type; var target = data.target; var light = null; switch (type.toLowerCase()) { case 'ambient': { return new THREE.AmbientLight(color, intensity); } case 'directional': { light = new THREE.DirectionalLight(color, intensity); this.defaultTarget = light.target; if (target) { if (target.hasLoaded) { this.onSetTarget(target, light); } else { target.addEventListener('loaded', bind(this.onSetTarget, this, target, light)); } } return light; } case 'hemisphere': { return new THREE.HemisphereLight(color, groundColor, intensity); } case 'point': { return new THREE.PointLight(color, intensity, distance, decay); } case 'spot': { light = new THREE.SpotLight(color, intensity, distance, degToRad(angle), data.penumbra, decay); this.defaultTarget = light.target; if (target) { if (target.hasLoaded) { this.onSetTarget(target, light); } else { target.addEventListener('loaded', bind(this.onSetTarget, this, target, light)); } } return light; } default: { warn('%s is not a valid light type. ' + 'Choose from ambient, directional, hemisphere, point, spot.', type); } } }, onSetTarget: function (targetEl, light) { light.target = targetEl.object3D; }, /** * Remove light on remove (callback). */ remove: function () { var el = this.el; el.removeObject3D('light'); if (el.getObject3D('cameraHelper')) { el.removeObject3D('cameraHelper'); } } }); ",
    "/* global THREE */ var registerComponent = require('../core/component').registerComponent; module.exports.Component = registerComponent('line', { schema: { start: {type: 'vec3', default: {x: 0, y: 0, z: 0}}, end: {type: 'vec3', default: {x: 0, y: 0, z: 0}}, color: {type: 'color', default: '#74BEC1'}, opacity: {type: 'number', default: 1}, visible: {default: true} }, multiple: true, init: function () { var data = this.data; var geometry; var material; this.rendererSystem = this.el.sceneEl.systems.renderer; material = this.material = new THREE.LineBasicMaterial({ color: data.color, opacity: data.opacity, transparent: data.opacity < 1, visible: data.visible }); geometry = this.geometry = new THREE.BufferGeometry(); geometry.addAttribute('position', new THREE.BufferAttribute(new Float32Array(2 * 3), 3)); this.rendererSystem.applyColorCorrection(material.color); this.line = new THREE.Line(geometry, material); this.el.setObject3D(this.attrName, this.line); }, update: function (oldData) { var data = this.data; var geometry = this.geometry; var geoNeedsUpdate = false; var material = this.material; var positionArray = geometry.attributes.position.array; // Update geometry. if (!isEqualVec3(data.start, oldData.start)) { positionArray[0] = data.start.x; positionArray[1] = data.start.y; positionArray[2] = data.start.z; geoNeedsUpdate = true; } if (!isEqualVec3(data.end, oldData.end)) { positionArray[3] = data.end.x; positionArray[4] = data.end.y; positionArray[5] = data.end.z; geoNeedsUpdate = true; } if (geoNeedsUpdate) { geometry.attributes.position.needsUpdate = true; geometry.computeBoundingSphere(); } material.color.setStyle(data.color); this.rendererSystem.applyColorCorrection(material.color); material.opacity = data.opacity; material.transparent = data.opacity < 1; material.visible = data.visible; }, remove: function () { this.el.removeObject3D('line', this.line); } }); function isEqualVec3 (a, b) { if (!a || !b) { return false; } return (a.x === b.x && a.y === b.y && a.z === b.z); } ",
    "var registerComponent = require('../core/component').registerComponent; var registerShader = require('../core/shader').registerShader; var THREE = require('../lib/three'); /** * Link component. Connect experiences and traverse between them in VR * * @member {object} hiddenEls - Store the hidden elements during peek mode. */ module.exports.Component = registerComponent('link', { schema: { backgroundColor: {default: 'red', type: 'color'}, borderColor: {default: 'white', type: 'color'}, highlighted: {default: false}, highlightedColor: {default: '#24CAFF', type: 'color'}, href: {default: ''}, image: {type: 'asset'}, on: {default: 'click'}, peekMode: {default: false}, title: {default: ''}, titleColor: {default: 'white', type: 'color'}, visualAspectEnabled: {default: false} }, init: function () { this.navigate = this.navigate.bind(this); this.previousQuaternion = undefined; this.quaternionClone = new THREE.Quaternion(); // Store hidden elements during peek mode so we can show them again later. this.hiddenEls = []; }, update: function (oldData) { var data = this.data; var el = this.el; var backgroundColor; var strokeColor; if (!data.visualAspectEnabled) { return; } this.initVisualAspect(); backgroundColor = data.highlighted ? data.highlightedColor : data.backgroundColor; strokeColor = data.highlighted ? data.highlightedColor : data.borderColor; el.setAttribute('material', 'backgroundColor', backgroundColor); el.setAttribute('material', 'strokeColor', strokeColor); if (data.on !== oldData.on) { this.updateEventListener(); } if (oldData.peekMode !== undefined && data.peekMode !== oldData.peekMode) { this.updatePeekMode(); } if (!data.image || oldData.image === data.image) { return; } el.setAttribute('material', 'pano', typeof data.image === 'string' ? data.image : data.image.src); }, /* * Toggle all elements and full 360 preview of the linked page. */ updatePeekMode: function () { var el = this.el; var sphereEl = this.sphereEl; if (this.data.peekMode) { this.hideAll(); el.getObject3D('mesh').visible = false; sphereEl.setAttribute('visible', true); } else { this.showAll(); el.getObject3D('mesh').visible = true; sphereEl.setAttribute('visible', false); } }, play: function () { this.updateEventListener(); }, pause: function () { this.removeEventListener(); }, updateEventListener: function () { var el = this.el; if (!el.isPlaying) { return; } this.removeEventListener(); el.addEventListener(this.data.on, this.navigate); }, removeEventListener: function () { var on = this.data.on; if (!on) { return; } this.el.removeEventListener(on, this.navigate); }, initVisualAspect: function () { var el = this.el; var semiSphereEl; var sphereEl; var textEl; if (!this.data.visualAspectEnabled || this.visualAspectInitialized) { return; } textEl = this.textEl = this.textEl || document.createElement('a-entity'); sphereEl = this.sphereEl = this.sphereEl || document.createElement('a-entity'); semiSphereEl = this.semiSphereEl = this.semiSphereEl || document.createElement('a-entity'); // Set portal. el.setAttribute('geometry', {primitive: 'circle', radius: 1.0, segments: 64}); el.setAttribute('material', {shader: 'portal', pano: this.data.image, side: 'double'}); // Set text that displays the link title and URL. textEl.setAttribute('text', { color: this.data.titleColor, align: 'center', font: 'kelsonsans', value: this.data.title || this.data.href, width: 4 }); textEl.setAttribute('position', '0 1.5 0'); el.appendChild(textEl); // Set sphere rendered when camera is close to portal to allow user to peek inside. semiSphereEl.setAttribute('geometry', { primitive: 'sphere', radius: 1.0, phiStart: 0, segmentsWidth: 64, segmentsHeight: 64, phiLength: 180, thetaStart: 0, thetaLength: 360 }); semiSphereEl.setAttribute('material', { shader: 'portal', borderEnabled: 0.0, pano: this.data.image, side: 'back' }); semiSphereEl.setAttribute('rotation', '0 180 0'); semiSphereEl.setAttribute('position', '0 0 0'); semiSphereEl.setAttribute('visible', false); el.appendChild(semiSphereEl); // Set sphere rendered when camera is close to portal to allow user to peek inside. sphereEl.setAttribute('geometry', { primitive: 'sphere', radius: 10, segmentsWidth: 64, segmentsHeight: 64 }); sphereEl.setAttribute('material', { shader: 'portal', borderEnabled: 0.0, pano: this.data.image, side: 'back' }); sphereEl.setAttribute('visible', false); el.appendChild(sphereEl); this.visualAspectInitialized = true; }, navigate: function () { window.location = this.data.href; }, /** * 1. Swap plane that represents portal with sphere with a hole when the camera is close * so user can peek inside portal. Sphere is rendered on oposite side of portal * from where user enters. * 2. Place the url/title above or inside portal depending on distance to camera. * 3. Face portal to camera when far away from user. */ tick: (function () { var cameraWorldPosition = new THREE.Vector3(); var elWorldPosition = new THREE.Vector3(); var quaternion = new THREE.Quaternion(); var scale = new THREE.Vector3(); return function () { var el = this.el; var object3D = el.object3D; var camera = el.sceneEl.camera; var cameraPortalOrientation; var distance; var textEl = this.textEl; if (!this.data.visualAspectEnabled) { return; } // Update matrices object3D.updateMatrixWorld(); camera.parent.updateMatrixWorld(); camera.updateMatrixWorld(); object3D.matrix.decompose(elWorldPosition, quaternion, scale); elWorldPosition.setFromMatrixPosition(object3D.matrixWorld); cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld); distance = elWorldPosition.distanceTo(cameraWorldPosition); if (distance > 20) { // Store original orientation to be restored when the portal stops facing the camera. if (!this.previousQuaternion) { this.quaternionClone.copy(quaternion); this.previousQuaternion = this.quaternionClone; } // If the portal is far away from the user, face portal to camera. object3D.lookAt(cameraWorldPosition); } else { // When portal is close to the user/camera. cameraPortalOrientation = this.calculateCameraPortalOrientation(); // If user gets very close to portal, replace with holed sphere they can peek in. if (distance < 0.5) { // Configure text size and sphere orientation depending side user approaches portal. if (this.semiSphereEl.getAttribute('visible') === true) { return; } textEl.setAttribute('text', 'width', 1.5); if (cameraPortalOrientation <= 0.0) { textEl.setAttribute('position', '0 0 0.75'); textEl.setAttribute('rotation', '0 180 0'); this.semiSphereEl.setAttribute('rotation', '0 0 0'); } else { textEl.setAttribute('position', '0 0 -0.75'); textEl.setAttribute('rotation', '0 0 0'); this.semiSphereEl.setAttribute('rotation', '0 180 0'); } el.getObject3D('mesh').visible = false; this.semiSphereEl.setAttribute('visible', true); this.peekCameraPortalOrientation = cameraPortalOrientation; } else { // Calculate wich side the camera is approaching the camera (back / front). // Adjust text orientation based on camera position. if (cameraPortalOrientation <= 0.0) { textEl.setAttribute('rotation', '0 180 0'); } else { textEl.setAttribute('rotation', '0 0 0'); } textEl.setAttribute('text', 'width', 5); textEl.setAttribute('position', '0 1.5 0'); el.getObject3D('mesh').visible = true; this.semiSphereEl.setAttribute('visible', false); this.peekCameraPortalOrientation = undefined; } if (this.previousQuaternion) { object3D.quaternion.copy(this.previousQuaternion); this.previousQuaternion = undefined; } } }; })(), hideAll: function () { var el = this.el; var hiddenEls = this.hiddenEls; var self = this; if (hiddenEls.length > 0) { return; } el.sceneEl.object3D.traverse(function (object) { if (object && object.el && object.el.hasAttribute('link-controls')) { return; } if (!object.el || object === el.sceneEl.object3D || object.el === el || object.el === self.sphereEl || object.el === el.sceneEl.cameraEl || object.el.getAttribute('visible') === false || object.el === self.textEl || object.el === self.semiSphereEl) { return; } object.el.setAttribute('visible', false); hiddenEls.push(object.el); }); }, showAll: function () { this.hiddenEls.forEach(function (el) { el.setAttribute('visible', true); }); this.hiddenEls = []; }, /** * Calculate whether the camera faces the front or back face of the portal. * @returns {number} > 0 if camera faces front of portal, < 0 if it faces back of portal. */ calculateCameraPortalOrientation: (function () { var mat4 = new THREE.Matrix4(); var cameraPosition = new THREE.Vector3(); var portalNormal = new THREE.Vector3(0, 0, 1); var portalPosition = new THREE.Vector3(0, 0, 0); return function () { var el = this.el; var camera = el.sceneEl.camera; // Reset tmp variables. cameraPosition.set(0, 0, 0); portalNormal.set(0, 0, 1); portalPosition.set(0, 0, 0); // Apply portal orientation to the normal. el.object3D.matrixWorld.extractRotation(mat4); portalNormal.applyMatrix4(mat4); // Calculate portal world position. el.object3D.updateMatrixWorld(); el.object3D.localToWorld(portalPosition); // Calculate camera world position. camera.parent.parent.updateMatrixWorld(); camera.parent.updateMatrixWorld(); camera.updateMatrixWorld(); camera.localToWorld(cameraPosition); // Calculate vector from portal to camera. // (portal) -------> (camera) cameraPosition.sub(portalPosition).normalize(); portalNormal.normalize(); // Side where camera approaches portal is given by sign of dot product of portal normal // and portal to camera vectors. return Math.sign(portalNormal.dot(cameraPosition)); }; })(), remove: function () { this.removeEventListener(); } }); /* eslint-disable */ registerShader('portal', { schema: { borderEnabled: {default: 1.0, type: 'int', is: 'uniform'}, backgroundColor: {default: 'red', type: 'color', is: 'uniform'}, pano: {type: 'map', is: 'uniform'}, strokeColor: {default: 'white', type: 'color', is: 'uniform'} }, vertexShader: [ 'vec3 portalPosition;', 'varying vec3 vWorldPosition;', 'varying float vDistanceToCenter;', 'varying float vDistance;', 'void main() {', 'vDistanceToCenter = clamp(length(position - vec3(0.0, 0.0, 0.0)), 0.0, 1.0);', 'portalPosition = (modelMatrix * vec4(0.0, 0.0, 0.0, 1.0)).xyz;', 'vDistance = length(portalPosition - cameraPosition);', 'vWorldPosition = (modelMatrix * vec4(position, 1.0)).xyz;', 'gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);', '}' ].join('\n'), fragmentShader: [ '#define RECIPROCAL_PI2 0.15915494', 'uniform sampler2D pano;', 'uniform vec3 strokeColor;', 'uniform vec3 backgroundColor;', 'uniform float borderEnabled;', 'varying float vDistanceToCenter;', 'varying float vDistance;', 'varying vec3 vWorldPosition;', 'void main() {', 'vec3 direction = normalize(vWorldPosition - cameraPosition);', 'vec2 sampleUV;', 'float borderThickness = clamp(exp(-vDistance / 50.0), 0.6, 0.95);', 'sampleUV.y = saturate(direction.y * 0.5 + 0.5);', 'sampleUV.x = atan(direction.z, -direction.x) * -RECIPROCAL_PI2 + 0.5;', 'if (vDistanceToCenter > borderThickness && borderEnabled == 1.0) {', 'gl_FragColor = vec4(strokeColor, 1.0);', '} else {', 'gl_FragColor = mix(texture2D(pano, sampleUV), vec4(backgroundColor, 1.0), clamp(pow((vDistance / 15.0), 2.0), 0.0, 1.0));', '}', '}' ].join('\n') }); /* eslint-enable */ ",
    "var registerComponent = require('../core/component').registerComponent; var THREE = require('../lib/three'); var utils = require('../utils/'); var bind = utils.bind; var PolyfillControls = require('../utils').device.PolyfillControls; // To avoid recalculation at every mouse movement tick var PI_2 = Math.PI / 2; /** * look-controls. Update entity pose, factoring mouse, touch, and WebVR API data. */ module.exports.Component = registerComponent('look-controls', { dependencies: ['position', 'rotation'], schema: { enabled: {default: true}, hmdEnabled: {default: true}, pointerLockEnabled: {default: false}, reverseMouseDrag: {default: false}, reverseTouchDrag: {default: false}, touchEnabled: {default: true} }, init: function () { this.previousHMDPosition = new THREE.Vector3(); this.hmdQuaternion = new THREE.Quaternion(); this.hmdEuler = new THREE.Euler(); this.position = new THREE.Vector3(); // To save / restore camera pose this.savedRotation = new THREE.Vector3(); this.savedPosition = new THREE.Vector3(); this.polyfillObject = new THREE.Object3D(); this.polyfillControls = new PolyfillControls(this.polyfillObject); this.rotation = {}; this.deltaRotation = {}; this.savedPose = null; this.pointerLocked = false; this.setupMouseControls(); this.bindMethods(); this.el.object3D.matrixAutoUpdate = false; this.el.object3D.updateMatrix(); this.savedPose = { position: new THREE.Vector3(), rotation: new THREE.Euler() }; // Call enter VR handler if the scene has entered VR before the event listeners attached. if (this.el.sceneEl.is('vr-mode')) { this.onEnterVR(); } }, update: function (oldData) { var data = this.data; // Disable grab cursor classes if no longer enabled. if (data.enabled !== oldData.enabled) { this.updateGrabCursor(data.enabled); } // Reset pitch and yaw if disabling HMD. if (oldData && !data.hmdEnabled && !oldData.hmdEnabled) { this.pitchObject.rotation.set(0, 0, 0); this.yawObject.rotation.set(0, 0, 0); } if (oldData && !data.pointerLockEnabled !== oldData.pointerLockEnabled) { this.removeEventListeners(); this.addEventListeners(); if (this.pointerLocked) { this.exitPointerLock(); } } }, tick: function (t) { var data = this.data; if (!data.enabled) { return; } this.updateOrientation(); }, play: function () { this.addEventListeners(); }, pause: function () { this.removeEventListeners(); if (this.pointerLocked) { this.exitPointerLock(); } }, remove: function () { this.removeEventListeners(); if (this.pointerLocked) { this.exitPointerLock(); } }, bindMethods: function () { this.onMouseDown = bind(this.onMouseDown, this); this.onMouseMove = bind(this.onMouseMove, this); this.onMouseUp = bind(this.onMouseUp, this); this.onTouchStart = bind(this.onTouchStart, this); this.onTouchMove = bind(this.onTouchMove, this); this.onTouchEnd = bind(this.onTouchEnd, this); this.onEnterVR = bind(this.onEnterVR, this); this.onExitVR = bind(this.onExitVR, this); this.onPointerLockChange = bind(this.onPointerLockChange, this); this.onPointerLockError = bind(this.onPointerLockError, this); }, /** * Set up states and Object3Ds needed to store rotation data. */ setupMouseControls: function () { this.mouseDown = false; this.pitchObject = new THREE.Object3D(); this.yawObject = new THREE.Object3D(); this.yawObject.position.y = 10; this.yawObject.add(this.pitchObject); }, /** * Add mouse and touch event listeners to canvas. */ addEventListeners: function () { var sceneEl = this.el.sceneEl; var canvasEl = sceneEl.canvas; // Wait for canvas to load. if (!canvasEl) { sceneEl.addEventListener('render-target-loaded', bind(this.addEventListeners, this)); return; } // Mouse events. canvasEl.addEventListener('mousedown', this.onMouseDown, false); window.addEventListener('mousemove', this.onMouseMove, false); window.addEventListener('mouseup', this.onMouseUp, false); // Touch events. canvasEl.addEventListener('touchstart', this.onTouchStart); window.addEventListener('touchmove', this.onTouchMove); window.addEventListener('touchend', this.onTouchEnd); // sceneEl events. sceneEl.addEventListener('enter-vr', this.onEnterVR); sceneEl.addEventListener('exit-vr', this.onExitVR); // Pointer Lock events. if (this.data.pointerLockEnabled) { document.addEventListener('pointerlockchange', this.onPointerLockChange, false); document.addEventListener('mozpointerlockchange', this.onPointerLockChange, false); document.addEventListener('pointerlockerror', this.onPointerLockError, false); } }, /** * Remove mouse and touch event listeners from canvas. */ removeEventListeners: function () { var sceneEl = this.el.sceneEl; var canvasEl = sceneEl && sceneEl.canvas; if (!canvasEl) { return; } // Mouse events. canvasEl.removeEventListener('mousedown', this.onMouseDown); window.removeEventListener('mousemove', this.onMouseMove); window.removeEventListener('mouseup', this.onMouseUp); // Touch events. canvasEl.removeEventListener('touchstart', this.onTouchStart); window.removeEventListener('touchmove', this.onTouchMove); window.removeEventListener('touchend', this.onTouchEnd); // sceneEl events. sceneEl.removeEventListener('enter-vr', this.onEnterVR); sceneEl.removeEventListener('exit-vr', this.onExitVR); // Pointer Lock events. document.removeEventListener('pointerlockchange', this.onPointerLockChange, false); document.removeEventListener('mozpointerlockchange', this.onPointerLockChange, false); document.removeEventListener('pointerlockerror', this.onPointerLockError, false); }, /** * Update orientation for mobile, mouse drag, and headset. * Mouse-drag only enabled if HMD is not active. */ updateOrientation: (function () { var poseMatrix = new THREE.Matrix4(); return function () { var hmdEuler = this.hmdEuler; var object3D = this.el.object3D; var pitchObject = this.pitchObject; var yawObject = this.yawObject; var pose; var sceneEl = this.el.sceneEl; // WebXR API updates applies headset pose to the object3D matrixWorld internally. // Reflect values back on position, rotation, scale so setAttribute returns expected values. if (sceneEl.is('vr-mode') && sceneEl.hasWebXR) { pose = sceneEl.renderer.vr.getCameraPose(); if (pose) { poseMatrix.elements = pose.poseModelMatrix; poseMatrix.decompose(object3D.position, object3D.rotation, object3D.scale); } } else { object3D.updateMatrix(); } // In VR mode, THREE is in charge of updating the camera rotation. if (sceneEl.is('vr-mode') && sceneEl.checkHeadsetConnected()) { return; } // Calculate polyfilled HMD quaternion. this.polyfillControls.update(); hmdEuler.setFromQuaternion(this.polyfillObject.quaternion, 'YXZ'); // On mobile, do camera rotation with touch events and sensors. object3D.rotation.x = hmdEuler.x + pitchObject.rotation.x; object3D.rotation.y = hmdEuler.y + yawObject.rotation.y; }; })(), /** * Translate mouse drag into rotation. * * Dragging up and down rotates the camera around the X-axis (yaw). * Dragging left and right rotates the camera around the Y-axis (pitch). */ onMouseMove: function (event) { var direction; var movementX; var movementY; var pitchObject = this.pitchObject; var previousMouseEvent = this.previousMouseEvent; var yawObject = this.yawObject; // Not dragging or not enabled. if (!this.data.enabled || (!this.mouseDown && !this.pointerLocked)) { return; } // Calculate delta. if (this.pointerLocked) { movementX = event.movementX || event.mozMovementX || 0; movementY = event.movementY || event.mozMovementY || 0; } else { movementX = event.screenX - previousMouseEvent.screenX; movementY = event.screenY - previousMouseEvent.screenY; } this.previousMouseEvent = event; // Calculate rotation. direction = this.data.reverseMouseDrag ? 1 : -1; yawObject.rotation.y += movementX * 0.002 * direction; pitchObject.rotation.x += movementY * 0.002 * direction; pitchObject.rotation.x = Math.max(-PI_2, Math.min(PI_2, pitchObject.rotation.x)); }, /** * Register mouse down to detect mouse drag. */ onMouseDown: function (evt) { if (!this.data.enabled) { return; } // Handle only primary button. if (evt.button !== 0) { return; } var sceneEl = this.el.sceneEl; var canvasEl = sceneEl && sceneEl.canvas; this.mouseDown = true; this.previousMouseEvent = evt; this.showGrabbingCursor(); if (this.data.pointerLockEnabled && !this.pointerLocked) { if (canvasEl.requestPointerLock) { canvasEl.requestPointerLock(); } else if (canvasEl.mozRequestPointerLock) { canvasEl.mozRequestPointerLock(); } } }, /** * Shows grabbing cursor on scene */ showGrabbingCursor: function () { this.el.sceneEl.canvas.style.cursor = 'grabbing'; }, /** * Hides grabbing cursor on scene */ hideGrabbingCursor: function () { this.el.sceneEl.canvas.style.cursor = ''; }, /** * Register mouse up to detect release of mouse drag. */ onMouseUp: function () { this.mouseDown = false; this.hideGrabbingCursor(); }, /** * Register touch down to detect touch drag. */ onTouchStart: function (evt) { if (evt.touches.length !== 1 || !this.data.touchEnabled) { return; } this.touchStart = { x: evt.touches[0].pageX, y: evt.touches[0].pageY }; this.touchStarted = true; }, /** * Translate touch move to Y-axis rotation. */ onTouchMove: function (evt) { var direction; var canvas = this.el.sceneEl.canvas; var deltaY; var yawObject = this.yawObject; if (!this.touchStarted || !this.data.touchEnabled) { return; } deltaY = 2 * Math.PI * (evt.touches[0].pageX - this.touchStart.x) / canvas.clientWidth; direction = this.data.reverseTouchDrag ? 1 : -1; // Limit touch orientaion to to yaw (y axis). yawObject.rotation.y -= deltaY * 0.5 * direction; this.touchStart = { x: evt.touches[0].pageX, y: evt.touches[0].pageY }; }, /** * Register touch end to detect release of touch drag. */ onTouchEnd: function () { this.touchStarted = false; }, /** * Save pose. */ onEnterVR: function () { if (!this.el.sceneEl.checkHeadsetConnected()) { return; } this.saveCameraPose(); this.el.object3D.position.set(0, 0, 0); this.el.object3D.updateMatrix(); }, /** * Restore the pose. */ onExitVR: function () { if (!this.el.sceneEl.checkHeadsetConnected()) { return; } this.restoreCameraPose(); this.previousHMDPosition.set(0, 0, 0); }, /** * Update Pointer Lock state. */ onPointerLockChange: function () { this.pointerLocked = !!(document.pointerLockElement || document.mozPointerLockElement); }, /** * Recover from Pointer Lock error. */ onPointerLockError: function () { this.pointerLocked = false; }, // Exits pointer-locked mode. exitPointerLock: function () { document.exitPointerLock(); this.pointerLocked = false; }, /** * Toggle the feature of showing/hiding the grab cursor. */ updateGrabCursor: function (enabled) { var sceneEl = this.el.sceneEl; function enableGrabCursor () { sceneEl.canvas.classList.add('a-grab-cursor'); } function disableGrabCursor () { sceneEl.canvas.classList.remove('a-grab-cursor'); } if (!sceneEl.canvas) { if (enabled) { sceneEl.addEventListener('render-target-loaded', enableGrabCursor); } else { sceneEl.addEventListener('render-target-loaded', disableGrabCursor); } return; } if (enabled) { enableGrabCursor(); return; } disableGrabCursor(); }, /** * Save camera pose before entering VR to restore later if exiting. */ saveCameraPose: function () { var el = this.el; this.savedPose.position.copy(el.object3D.position); this.savedPose.rotation.copy(el.object3D.rotation); this.hasSavedPose = true; }, /** * Reset camera pose to before entering VR. */ restoreCameraPose: function () { var el = this.el; var savedPose = this.savedPose; if (!this.hasSavedPose) { return; } // Reset camera orientation. el.object3D.position.copy(savedPose.position); el.object3D.rotation.copy(savedPose.rotation); this.hasSavedPose = false; } }); ",
    "/* global Promise */ var utils = require('../utils/'); var component = require('../core/component'); var THREE = require('../lib/three'); var shader = require('../core/shader'); var error = utils.debug('components:material:error'); var registerComponent = component.registerComponent; var shaders = shader.shaders; var shaderNames = shader.shaderNames; /** * Material component. * * @member {object} shader - Determines how material is shaded. Defaults to `standard`, * three.js's implementation of PBR. Another standard shading model is `flat` which * uses MeshBasicMaterial. */ module.exports.Component = registerComponent('material', { schema: { alphaTest: {default: 0.0, min: 0.0, max: 1.0}, depthTest: {default: true}, depthWrite: {default: true}, flatShading: {default: false}, npot: {default: false}, offset: {type: 'vec2', default: {x: 0, y: 0}}, opacity: {default: 1.0, min: 0.0, max: 1.0}, repeat: {type: 'vec2', default: {x: 1, y: 1}}, shader: {default: 'standard', oneOf: shaderNames, schemaChange: true}, side: {default: 'front', oneOf: ['front', 'back', 'double']}, transparent: {default: false}, vertexColors: {type: 'string', default: 'none', oneOf: ['face', 'vertex']}, visible: {default: true}, blending: {default: 'normal', oneOf: ['none', 'normal', 'additive', 'subtractive', 'multiply']} }, init: function () { this.material = null; }, /** * Update or create material. * * @param {object|null} oldData */ update: function (oldData) { var data = this.data; if (!this.shader || data.shader !== oldData.shader) { this.updateShader(data.shader); } this.shader.update(this.data); this.updateMaterial(oldData); }, updateSchema: function (data) { var currentShader; var newShader; var schema; var shader; newShader = data && data.shader; currentShader = this.oldData && this.oldData.shader; shader = newShader || currentShader; schema = shaders[shader] && shaders[shader].schema; if (!schema) { error('Unknown shader schema ' + shader); } if (currentShader && newShader === currentShader) { return; } this.extendSchema(schema); this.updateBehavior(); }, updateBehavior: function () { var key; var sceneEl = this.el.sceneEl; var schema = this.schema; var self = this; var tickProperties; function tickTime (time, delta) { var key; for (key in tickProperties) { tickProperties[key] = time; } self.shader.update(tickProperties); } this.tick = undefined; tickProperties = {}; for (key in schema) { if (schema[key].type === 'time') { this.tick = tickTime; tickProperties[key] = true; } } if (!sceneEl) { return; } if (this.tick) { sceneEl.addBehavior(this); } else { sceneEl.removeBehavior(this); } }, updateShader: function (shaderName) { var data = this.data; var Shader = shaders[shaderName] && shaders[shaderName].Shader; var shaderInstance; if (!Shader) { throw new Error('Unknown shader ' + shaderName); } // Get material from A-Frame shader. shaderInstance = this.shader = new Shader(); shaderInstance.el = this.el; shaderInstance.init(data); this.setMaterial(shaderInstance.material); this.updateSchema(data); }, /** * Set and update base material properties. * Set `needsUpdate` when needed. */ updateMaterial: function (oldData) { var data = this.data; var material = this.material; var oldDataHasKeys; // Base material properties. material.alphaTest = data.alphaTest; material.depthTest = data.depthTest !== false; material.depthWrite = data.depthWrite !== false; material.opacity = data.opacity; material.flatShading = data.flatShading; material.side = parseSide(data.side); material.transparent = data.transparent !== false || data.opacity < 1.0; material.vertexColors = parseVertexColors(data.vertexColors); material.visible = data.visible; material.blending = parseBlending(data.blending); // Check if material needs update. for (oldDataHasKeys in oldData) { break; } if (oldDataHasKeys && (oldData.alphaTest !== data.alphaTest || oldData.side !== data.side || oldData.vertexColors !== data.vertexColors)) { material.needsUpdate = true; } }, /** * Remove material on remove (callback). * Dispose of it from memory and unsubscribe from scene updates. */ remove: function () { var defaultMaterial = new THREE.MeshBasicMaterial(); var material = this.material; var object3D = this.el.getObject3D('mesh'); if (object3D) { object3D.material = defaultMaterial; } disposeMaterial(material, this.system); }, /** * (Re)create new material. Has side-effects of setting `this.material` and updating * material registration in scene. * * @param {object} data - Material component data. * @param {object} type - Material type to create. * @returns {object} Material. */ setMaterial: function (material) { var el = this.el; var mesh; var system = this.system; if (this.material) { disposeMaterial(this.material, system); } this.material = material; system.registerMaterial(material); // Set on mesh. If mesh does not exist, wait for it. mesh = el.getObject3D('mesh'); if (mesh) { mesh.material = material; } else { el.addEventListener('object3dset', function waitForMesh (evt) { if (evt.detail.type !== 'mesh' || evt.target !== el) { return; } el.getObject3D('mesh').material = material; el.removeEventListener('object3dset', waitForMesh); }); } } }); /** * Return a three.js constant determining which material face sides to render * based on the side parameter (passed as a component property). * * @param {string} [side=front] - `front`, `back`, or `double`. * @returns {number} THREE.FrontSide, THREE.BackSide, or THREE.DoubleSide. */ function parseSide (side) { switch (side) { case 'back': { return THREE.BackSide; } case 'double': { return THREE.DoubleSide; } default: { // Including case `front`. return THREE.FrontSide; } } } /** * Return a three.js constant determining vertex coloring. */ function parseVertexColors (coloring) { switch (coloring) { case 'face': { return THREE.FaceColors; } case 'vertex': { return THREE.VertexColors; } default: { return THREE.NoColors; } } } /** * Return a three.js constant determining blending * * @param {string} [blending=normal] * - `none`, additive`, `subtractive`,`multiply` or `normal`. * @returns {number} */ function parseBlending (blending) { switch (blending) { case 'none': { return THREE.NoBlending; } case 'additive': { return THREE.AdditiveBlending; } case 'subtractive': { return THREE.SubtractiveBlending; } case 'multiply': { return THREE.MultiplyBlending; } default: { return THREE.NormalBlending; } } } /** * Dispose of material from memory and unsubscribe material from scene updates like fog. */ function disposeMaterial (material, system) { material.dispose(); system.unregisterMaterial(material); } ",
    "var debug = require('../utils/debug'); var registerComponent = require('../core/component').registerComponent; var THREE = require('../lib/three'); var warn = debug('components:obj-model:warn'); module.exports.Component = registerComponent('obj-model', { schema: { mtl: {type: 'model'}, obj: {type: 'model'} }, init: function () { var self = this; this.model = null; this.objLoader = new THREE.OBJLoader(); this.mtlLoader = new THREE.MTLLoader(this.objLoader.manager); // Allow cross-origin images to be loaded. this.mtlLoader.crossOrigin = ''; this.el.addEventListener('componentinitialized', function (evt) { if (!self.model) { return; } if (evt.detail.name !== 'material') { return; } self.applyMaterial(); }); }, update: function () { var data = this.data; if (!data.obj) { return; } this.resetMesh(); this.loadObj(data.obj, data.mtl); }, remove: function () { if (!this.model) { return; } this.resetMesh(); }, resetMesh: function () { this.el.removeObject3D('mesh'); }, loadObj: function (objUrl, mtlUrl) { var self = this; var el = this.el; var mtlLoader = this.mtlLoader; var objLoader = this.objLoader; var rendererSystem = this.el.sceneEl.systems.renderer; var BASE_PATH = mtlUrl.substr(0, mtlUrl.lastIndexOf('/') + 1); if (mtlUrl) { // .OBJ with an .MTL. if (el.hasAttribute('material')) { warn('Material component properties are ignored when a .MTL is provided'); } mtlLoader.setResourcePath(BASE_PATH); mtlLoader.load(mtlUrl, function (materials) { materials.preload(); objLoader.setMaterials(materials); objLoader.load(objUrl, function (objModel) { self.model = objModel; self.model.traverse(function (object) { if (object.isMesh) { var material = object.material; if (material.color) rendererSystem.applyColorCorrection(material.color); if (material.map) rendererSystem.applyColorCorrection(material.map); if (material.emissive) rendererSystem.applyColorCorrection(material.emissive); if (material.emissiveMap) rendererSystem.applyColorCorrection(material.emissiveMap); } }); el.setObject3D('mesh', objModel); el.emit('model-loaded', {format: 'obj', model: objModel}); }); }); return; } // .OBJ only. objLoader.load(objUrl, function loadObjOnly (objModel) { self.model = objModel; self.applyMaterial(); el.setObject3D('mesh', objModel); el.emit('model-loaded', {format: 'obj', model: objModel}); }); }, /** * Apply material from material component recursively. */ applyMaterial: function () { var material = this.el.components.material; if (!material) { return; } this.model.traverse(function (child) { if (child instanceof THREE.Mesh) { child.material = material.material; } }); } }); ",
    "var registerComponent = require('../core/component').registerComponent; var bind = require('../utils/bind'); var trackedControlsUtils = require('../utils/tracked-controls'); var checkControllerPresentAndSetup = trackedControlsUtils.checkControllerPresentAndSetup; var emitIfAxesChanged = trackedControlsUtils.emitIfAxesChanged; var onButtonEvent = trackedControlsUtils.onButtonEvent; var GAMEPAD_ID_PREFIX = 'Oculus Go'; var OCULUS_GO_CONTROLLER_MODEL_URL = 'https://cdn.aframe.io/controllers/oculus/go/oculus-go-controller.gltf'; /** * Oculus Go controls. * Interface with Oculus Go controller and map Gamepad events to * controller buttons: trackpad, trigger * Load a controller model and highlight the pressed buttons. */ module.exports.Component = registerComponent('oculus-go-controls', { schema: { hand: {default: ''}, // This informs the degenerate arm model. buttonColor: {type: 'color', default: '#FFFFFF'}, buttonTouchedColor: {type: 'color', default: '#BBBBBB'}, buttonHighlightColor: {type: 'color', default: '#7A7A7A'}, model: {default: true}, orientationOffset: {type: 'vec3'}, armModel: {default: true} }, /** * Button IDs: * 0 - trackpad * 1 - trigger */ mapping: { axes: {trackpad: [0, 1]}, buttons: ['trackpad', 'trigger'] }, bindMethods: function () { this.onModelLoaded = bind(this.onModelLoaded, this); this.onControllersUpdate = bind(this.onControllersUpdate, this); this.checkIfControllerPresent = bind(this.checkIfControllerPresent, this); this.removeControllersUpdateListener = bind(this.removeControllersUpdateListener, this); this.onAxisMoved = bind(this.onAxisMoved, this); }, init: function () { var self = this; this.onButtonChanged = bind(this.onButtonChanged, this); this.onButtonDown = function (evt) { onButtonEvent(evt.detail.id, 'down', self); }; this.onButtonUp = function (evt) { onButtonEvent(evt.detail.id, 'up', self); }; this.onButtonTouchStart = function (evt) { onButtonEvent(evt.detail.id, 'touchstart', self); }; this.onButtonTouchEnd = function (evt) { onButtonEvent(evt.detail.id, 'touchend', self); }; this.controllerPresent = false; this.lastControllerCheck = 0; this.rendererSystem = this.el.sceneEl.systems.renderer; this.bindMethods(); }, addEventListeners: function () { var el = this.el; el.addEventListener('buttonchanged', this.onButtonChanged); el.addEventListener('buttondown', this.onButtonDown); el.addEventListener('buttonup', this.onButtonUp); el.addEventListener('touchstart', this.onButtonTouchStart); el.addEventListener('touchend', this.onButtonTouchEnd); el.addEventListener('model-loaded', this.onModelLoaded); el.addEventListener('axismove', this.onAxisMoved); this.controllerEventsActive = true; }, removeEventListeners: function () { var el = this.el; el.removeEventListener('buttonchanged', this.onButtonChanged); el.removeEventListener('buttondown', this.onButtonDown); el.removeEventListener('buttonup', this.onButtonUp); el.removeEventListener('touchstart', this.onButtonTouchStart); el.removeEventListener('touchend', this.onButtonTouchEnd); el.removeEventListener('model-loaded', this.onModelLoaded); el.removeEventListener('axismove', this.onAxisMoved); this.controllerEventsActive = false; }, checkIfControllerPresent: function () { checkControllerPresentAndSetup(this, GAMEPAD_ID_PREFIX, this.data.hand ? {hand: this.data.hand} : {}); }, play: function () { this.checkIfControllerPresent(); this.addControllersUpdateListener(); }, pause: function () { this.removeEventListeners(); this.removeControllersUpdateListener(); }, injectTrackedControls: function () { var el = this.el; var data = this.data; el.setAttribute('tracked-controls', { armModel: data.armModel, idPrefix: GAMEPAD_ID_PREFIX, orientationOffset: data.orientationOffset }); if (!this.data.model) { return; } this.el.setAttribute('gltf-model', OCULUS_GO_CONTROLLER_MODEL_URL); }, addControllersUpdateListener: function () { this.el.sceneEl.addEventListener('controllersupdated', this.onControllersUpdate, false); }, removeControllersUpdateListener: function () { this.el.sceneEl.removeEventListener('controllersupdated', this.onControllersUpdate, false); }, onControllersUpdate: function () { this.checkIfControllerPresent(); }, // No need for onButtonChanged, since Oculus Go controller has no analog buttons. onModelLoaded: function (evt) { var controllerObject3D = evt.detail.model; var buttonMeshes; if (!this.data.model) { return; } buttonMeshes = this.buttonMeshes = {}; buttonMeshes.trigger = controllerObject3D.getObjectByName('oculus_go_button_trigger'); buttonMeshes.trackpad = controllerObject3D.getObjectByName('oculus_go_touchpad'); }, onButtonChanged: function (evt) { var button = this.mapping.buttons[evt.detail.id]; if (!button) return; // Pass along changed event with button state, using button mapping for convenience. this.el.emit(button + 'changed', evt.detail.state); }, onAxisMoved: function (evt) { emitIfAxesChanged(this, this.mapping.axes, evt); }, updateModel: function (buttonName, evtName) { if (!this.data.model) { return; } this.updateButtonModel(buttonName, evtName); }, updateButtonModel: function (buttonName, state) { var buttonMeshes = this.buttonMeshes; if (!buttonMeshes || !buttonMeshes[buttonName]) { return; } var color; var button; switch (state) { case 'down': color = this.data.buttonHighlightColor; break; case 'touchstart': color = this.data.buttonTouchedColor; break; default: color = this.data.buttonColor; } button = buttonMeshes[buttonName]; button.material.color.set(color); this.rendererSystem.applyColorCorrection(button.material.color); } }); ",
    "var bind = require('../utils/bind'); var registerComponent = require('../core/component').registerComponent; var THREE = require('../lib/three'); var trackedControlsUtils = require('../utils/tracked-controls'); var checkControllerPresentAndSetup = trackedControlsUtils.checkControllerPresentAndSetup; var emitIfAxesChanged = trackedControlsUtils.emitIfAxesChanged; var onButtonEvent = trackedControlsUtils.onButtonEvent; var TOUCH_CONTROLLER_MODEL_BASE_URL = 'https://cdn.aframe.io/controllers/oculus/oculus-touch-controller-'; var TOUCH_CONTROLLER_MODEL_URL = { left: TOUCH_CONTROLLER_MODEL_BASE_URL + 'left.gltf', right: TOUCH_CONTROLLER_MODEL_BASE_URL + 'right.gltf' }; var GAMEPAD_ID_PREFIX = 'Oculus Touch'; var DEFAULT_MODEL_PIVOT_OFFSET = new THREE.Vector3(0, 0, -0.053); var RAY_ORIGIN = { left: {origin: {x: 0.008, y: -0.004, z: 0}, direction: {x: 0, y: -0.8, z: -1}}, right: {origin: {x: -0.008, y: -0.004, z: 0}, direction: {x: 0, y: -0.8, z: -1}} }; /** * Oculus Touch controls. * Interface with Oculus Touch controllers and map Gamepad events to * controller buttons: thumbstick, trigger, grip, xbutton, ybutton, surface * Load a controller model and highlight the pressed buttons. */ module.exports.Component = registerComponent('oculus-touch-controls', { schema: { hand: {default: 'left'}, buttonColor: {type: 'color', default: '#999'}, // Off-white. buttonTouchColor: {type: 'color', default: '#8AB'}, buttonHighlightColor: {type: 'color', default: '#2DF'}, // Light blue. model: {default: true}, orientationOffset: {type: 'vec3', default: {x: 43, y: 0, z: 0}} }, /** * Button IDs: * 0 - thumbstick (which has separate axismove / thumbstickmoved events) * 1 - trigger (with analog value, which goes up to 1) * 2 - grip (with analog value, which goes up to 1) * 3 - X (left) or A (right) * 4 - Y (left) or B (right) * 5 - surface (touch only) */ mapping: { left: { axes: {thumbstick: [0, 1]}, buttons: ['thumbstick', 'trigger', 'grip', 'xbutton', 'ybutton', 'surface'] }, right: { axes: {thumbstick: [0, 1]}, buttons: ['thumbstick', 'trigger', 'grip', 'abutton', 'bbutton', 'surface'] } }, bindMethods: function () { this.onModelLoaded = bind(this.onModelLoaded, this); this.onControllersUpdate = bind(this.onControllersUpdate, this); this.checkIfControllerPresent = bind(this.checkIfControllerPresent, this); this.onAxisMoved = bind(this.onAxisMoved, this); }, init: function () { var self = this; this.onButtonChanged = bind(this.onButtonChanged, this); this.onButtonDown = function (evt) { onButtonEvent(evt.detail.id, 'down', self, self.data.hand); }; this.onButtonUp = function (evt) { onButtonEvent(evt.detail.id, 'up', self, self.data.hand); }; this.onButtonTouchStart = function (evt) { onButtonEvent(evt.detail.id, 'touchstart', self, self.data.hand); }; this.onButtonTouchEnd = function (evt) { onButtonEvent(evt.detail.id, 'touchend', self, self.data.hand); }; this.controllerPresent = false; this.lastControllerCheck = 0; this.previousButtonValues = {}; this.rendererSystem = this.el.sceneEl.systems.renderer; this.bindMethods(); }, addEventListeners: function () { var el = this.el; el.addEventListener('buttonchanged', this.onButtonChanged); el.addEventListener('buttondown', this.onButtonDown); el.addEventListener('buttonup', this.onButtonUp); el.addEventListener('touchstart', this.onButtonTouchStart); el.addEventListener('touchend', this.onButtonTouchEnd); el.addEventListener('axismove', this.onAxisMoved); el.addEventListener('model-loaded', this.onModelLoaded); this.controllerEventsActive = true; }, removeEventListeners: function () { var el = this.el; el.removeEventListener('buttonchanged', this.onButtonChanged); el.removeEventListener('buttondown', this.onButtonDown); el.removeEventListener('buttonup', this.onButtonUp); el.removeEventListener('touchstart', this.onButtonTouchStart); el.removeEventListener('touchend', this.onButtonTouchEnd); el.removeEventListener('axismove', this.onAxisMoved); el.removeEventListener('model-loaded', this.onModelLoaded); this.controllerEventsActive = false; }, checkIfControllerPresent: function () { checkControllerPresentAndSetup(this, GAMEPAD_ID_PREFIX, { hand: this.data.hand }); }, play: function () { this.checkIfControllerPresent(); this.addControllersUpdateListener(); }, pause: function () { this.removeEventListeners(); this.removeControllersUpdateListener(); }, loadModel: function () { var data = this.data; if (!data.model) { return; } this.el.setAttribute('gltf-model', 'url(' + TOUCH_CONTROLLER_MODEL_URL[data.hand] + ')'); }, injectTrackedControls: function () { var data = this.data; this.el.setAttribute('tracked-controls', { id: data.hand === 'right' ? 'Oculus Touch (Right)' : 'Oculus Touch (Left)', controller: 0, hand: data.hand, orientationOffset: data.orientationOffset }); this.loadModel(); }, addControllersUpdateListener: function () { this.el.sceneEl.addEventListener('controllersupdated', this.onControllersUpdate, false); }, removeControllersUpdateListener: function () { this.el.sceneEl.removeEventListener('controllersupdated', this.onControllersUpdate, false); }, onControllersUpdate: function () { // Note that due to gamepadconnected event propagation issues, we don't rely on events. this.checkIfControllerPresent(); }, onButtonChanged: function (evt) { var button = this.mapping[this.data.hand].buttons[evt.detail.id]; var buttonMeshes = this.buttonMeshes; var analogValue; if (!button) { return; } if (button === 'trigger' || button === 'grip') { analogValue = evt.detail.state.value; } // Update trigger and/or grip meshes, if any. if (buttonMeshes) { if (button === 'trigger' && buttonMeshes.trigger) { buttonMeshes.trigger.rotation.x = this.originalXRotationTrigger - analogValue * (Math.PI / 26); } if (button === 'grip' && buttonMeshes.grip) { buttonMeshes.grip.position.x = this.originalXPositionGrip + (this.data.hand === 'left' ? -1 : 1) * analogValue * 0.004; } } // Pass along changed event with button state, using the buttom mapping for convenience. this.el.emit(button + 'changed', evt.detail.state); }, onModelLoaded: function (evt) { var controllerObject3D = evt.detail.model; var buttonMeshes; if (!this.data.model) { return; } buttonMeshes = this.buttonMeshes = {}; buttonMeshes.grip = controllerObject3D.getObjectByName('buttonHand'); this.originalXPositionGrip = buttonMeshes.grip.position.x; buttonMeshes.thumbstick = controllerObject3D.getObjectByName('stick'); buttonMeshes.trigger = controllerObject3D.getObjectByName('buttonTrigger'); this.originalXRotationTrigger = buttonMeshes.trigger.rotation.x; buttonMeshes.xbutton = controllerObject3D.getObjectByName('buttonX'); buttonMeshes.abutton = controllerObject3D.getObjectByName('buttonA'); buttonMeshes.ybutton = controllerObject3D.getObjectByName('buttonY'); buttonMeshes.bbutton = controllerObject3D.getObjectByName('buttonB'); // Offset pivot point controllerObject3D.position.copy(DEFAULT_MODEL_PIVOT_OFFSET); this.el.emit('controllermodelready', { name: 'oculus-touch-controls', model: this.data.model, rayOrigin: RAY_ORIGIN[this.data.hand] }); }, onAxisMoved: function (evt) { emitIfAxesChanged(this, this.mapping[this.data.hand].axes, evt); }, updateModel: function (buttonName, evtName) { if (!this.data.model) { return; } this.updateButtonModel(buttonName, evtName); }, updateButtonModel: function (buttonName, state) { var button; var color = (state === 'up' || state === 'touchend') ? this.data.buttonColor : state === 'touchstart' ? this.data.buttonTouchColor : this.data.buttonHighlightColor; var buttonMeshes = this.buttonMeshes; if (!this.data.model) { return; } if (buttonMeshes && buttonMeshes[buttonName]) { button = buttonMeshes[buttonName]; button.material.color.set(color); this.rendererSystem.applyColorCorrection(button.material.color); } } }); ",
    "var registerComponent = require('../core/component').registerComponent; module.exports.Component = registerComponent('position', { schema: {type: 'vec3'}, update: function () { var object3D = this.el.object3D; var data = this.data; object3D.position.set(data.x, data.y, data.z); }, remove: function () { // Pretty much for mixins. this.el.object3D.position.set(0, 0, 0); } }); ",
    "/* global MutationObserver */ var registerComponent = require('../core/component').registerComponent; var THREE = require('../lib/three'); var utils = require('../utils/'); var warn = utils.debug('components:raycaster:warn'); // Defines selectors that should be 'safe' for the MutationObserver used to // refresh the whitelist. Matches classnames, IDs, and presence of attributes. // Selectors for the value of an attribute, like [position=0 2 0], cannot be // reliably detected and are therefore disallowed. var OBSERVER_SELECTOR_RE = /^[\w\s-.,[\]#]*$/; // Configuration for the MutationObserver used to refresh the whitelist. // Listens for addition/removal of elements and attributes within the scene. var OBSERVER_CONFIG = { childList: true, attributes: true, subtree: true }; var EVENTS = { INTERSECT: 'raycaster-intersected', INTERSECTION: 'raycaster-intersection', INTERSECT_CLEAR: 'raycaster-intersected-cleared', INTERSECTION_CLEAR: 'raycaster-intersection-cleared' }; /** * Raycaster component. * * Pass options to three.js Raycaster including which objects to test. * Poll for intersections. * Emit event on origin entity and on target entity on intersect. * * @member {array} intersectedEls - List of currently intersected entities. * @member {array} objects - Cached list of meshes to intersect. * @member {number} prevCheckTime - Previous time intersection was checked. To help interval. * @member {object} raycaster - three.js Raycaster. */ module.exports.Component = registerComponent('raycaster', { schema: { autoRefresh: {default: true}, direction: {type: 'vec3', default: {x: 0, y: 0, z: -1}}, enabled: {default: true}, far: {default: 1000}, interval: {default: 0}, near: {default: 0}, objects: {default: ''}, origin: {type: 'vec3'}, showLine: {default: false}, useWorldCoordinates: {default: false} }, multiple: true, init: function () { this.clearedIntersectedEls = []; this.unitLineEndVec3 = new THREE.Vector3(); this.intersectedEls = []; this.intersections = []; this.newIntersectedEls = []; this.newIntersections = []; this.objects = []; this.prevCheckTime = undefined; this.prevIntersectedEls = []; this.rawIntersections = []; this.raycaster = new THREE.Raycaster(); this.updateOriginDirection(); this.setDirty = this.setDirty.bind(this); this.updateLine = this.updateLine.bind(this); this.observer = new MutationObserver(this.setDirty); this.dirty = true; this.lineEndVec3 = new THREE.Vector3(); this.otherLineEndVec3 = new THREE.Vector3(); this.lineData = {end: this.lineEndVec3}; this.getIntersection = this.getIntersection.bind(this); this.intersectedDetail = {el: this.el, getIntersection: this.getIntersection}; this.intersectedClearedDetail = {el: this.el}; this.intersectionClearedDetail = {clearedEls: this.clearedIntersectedEls}; this.intersectionDetail = {}; }, /** * Create or update raycaster object. */ update: function (oldData) { var data = this.data; var el = this.el; var raycaster = this.raycaster; // Set raycaster properties. raycaster.far = data.far; raycaster.near = data.near; // Draw line. if (data.showLine && (data.far !== oldData.far || data.origin !== oldData.origin || data.direction !== oldData.direction || !oldData.showLine)) { // Calculate unit vector for line direction. Can be multiplied via scalar to performantly // adjust line length. this.unitLineEndVec3.copy(data.origin).add(data.direction).normalize(); this.drawLine(); } if (!data.showLine && oldData.showLine) { el.removeAttribute('line'); } if (data.objects !== oldData.objects && !OBSERVER_SELECTOR_RE.test(data.objects)) { warn('[raycaster] Selector "' + data.objects + '" may not update automatically with DOM changes.'); } if (!data.objects) { warn('[raycaster] For performance, please define raycaster.objects when using ' + 'raycaster or cursor components to whitelist which entities to intersect with. ' + 'e.g., raycaster="objects: [data-raycastable]".'); } if (data.autoRefresh !== oldData.autoRefresh && el.isPlaying) { data.autoRefresh ? this.addEventListeners() : this.removeEventListeners(); } if (oldData.enabled && !data.enabled) { this.clearAllIntersections(); } this.setDirty(); }, play: function () { this.addEventListeners(); }, pause: function () { this.removeEventListeners(); }, remove: function () { if (this.data.showLine) { this.el.removeAttribute('line'); } this.clearAllIntersections(); }, addEventListeners: function () { if (!this.data.autoRefresh) { return; } this.observer.observe(this.el.sceneEl, OBSERVER_CONFIG); this.el.sceneEl.addEventListener('object3dset', this.setDirty); this.el.sceneEl.addEventListener('object3dremove', this.setDirty); }, removeEventListeners: function () { this.observer.disconnect(); this.el.sceneEl.removeEventListener('object3dset', this.setDirty); this.el.sceneEl.removeEventListener('object3dremove', this.setDirty); }, /** * Mark the object list as dirty, to be refreshed before next raycast. */ setDirty: function () { this.dirty = true; }, /** * Update list of objects to test for intersection. */ refreshObjects: function () { var data = this.data; var els; // If objects not defined, intersect with everything. els = data.objects ? this.el.sceneEl.querySelectorAll(data.objects) : this.el.sceneEl.querySelectorAll('*'); this.objects = this.flattenObject3DMaps(els); this.dirty = false; }, /** * Check for intersections and cleared intersections on an interval. */ tick: function (time) { var data = this.data; var prevCheckTime = this.prevCheckTime; if (!data.enabled) { return; } // Only check for intersection if interval time has passed. if (prevCheckTime && (time - prevCheckTime < data.interval)) { return; } // Update check time. this.prevCheckTime = time; this.checkIntersections(); }, /** * Raycast for intersections and emit events for current and cleared inersections. */ checkIntersections: function () { var clearedIntersectedEls = this.clearedIntersectedEls; var el = this.el; var data = this.data; var i; var intersectedEls = this.intersectedEls; var intersection; var intersections = this.intersections; var newIntersectedEls = this.newIntersectedEls; var newIntersections = this.newIntersections; var prevIntersectedEls = this.prevIntersectedEls; var rawIntersections = this.rawIntersections; // Refresh the object whitelist if needed. if (this.dirty) { this.refreshObjects(); } // Store old previously intersected entities. copyArray(this.prevIntersectedEls, this.intersectedEls); // Raycast. this.updateOriginDirection(); rawIntersections.length = 0; this.raycaster.intersectObjects(this.objects, true, rawIntersections); // Only keep intersections against objects that have a reference to an entity. intersections.length = 0; intersectedEls.length = 0; for (i = 0; i < rawIntersections.length; i++) { intersection = rawIntersections[i]; // Don't intersect with own line. if (data.showLine && intersection.object === el.getObject3D('line')) { continue; } if (intersection.object.el) { intersections.push(intersection); intersectedEls.push(intersection.object.el); } } // Get newly intersected entities. newIntersections.length = 0; newIntersectedEls.length = 0; for (i = 0; i < intersections.length; i++) { if (prevIntersectedEls.indexOf(intersections[i].object.el) === -1) { newIntersections.push(intersections[i]); newIntersectedEls.push(intersections[i].object.el); } } // Emit intersection cleared on both entities per formerly intersected entity. clearedIntersectedEls.length = 0; for (i = 0; i < prevIntersectedEls.length; i++) { if (intersectedEls.indexOf(prevIntersectedEls[i]) !== -1) { continue; } prevIntersectedEls[i].emit(EVENTS.INTERSECT_CLEAR, this.intersectedClearedDetail); clearedIntersectedEls.push(prevIntersectedEls[i]); } if (clearedIntersectedEls.length) { el.emit(EVENTS.INTERSECTION_CLEAR, this.intersectionClearedDetail); } // Emit intersected on intersected entity per intersected entity. for (i = 0; i < newIntersectedEls.length; i++) { newIntersectedEls[i].emit(EVENTS.INTERSECT, this.intersectedDetail); } // Emit all intersections at once on raycasting entity. if (newIntersections.length) { this.intersectionDetail.els = newIntersectedEls; this.intersectionDetail.intersections = newIntersections; el.emit(EVENTS.INTERSECTION, this.intersectionDetail); } // Update line length. setTimeout(this.updateLine); }, updateLine: function () { var el = this.el; var intersections = this.intersections; var lineLength; if (this.data.showLine) { if (intersections.length) { if (intersections[0].object.el === el && intersections[1]) { lineLength = intersections[1].distance; } else { lineLength = intersections[0].distance; } } this.drawLine(lineLength); } }, /** * Return the most recent intersection details for a given entity, if any. * @param {AEntity} el * @return {Object} */ getIntersection: function (el) { var i; var intersection; for (i = 0; i < this.intersections.length; i++) { intersection = this.intersections[i]; if (intersection.object.el === el) { return intersection; } } return null; }, /** * Update origin and direction of raycaster using entity transforms and supplied origin or * direction offsets. */ updateOriginDirection: (function () { var direction = new THREE.Vector3(); var originVec3 = new THREE.Vector3(); // Closure to make quaternion/vector3 objects private. return function updateOriginDirection () { var el = this.el; var data = this.data; if (data.useWorldCoordinates) { this.raycaster.set(data.origin, data.direction); return; } // Grab the position and rotation. (As a side effect, this updates el.object3D.matrixWorld.) el.object3D.getWorldPosition(originVec3); // If non-zero origin, translate the origin into world space. if (data.origin.x !== 0 || data.origin.y !== 0 || data.origin.z !== 0) { originVec3 = el.object3D.localToWorld(originVec3.copy(data.origin)); } // three.js raycaster direction is relative to 0, 0, 0 NOT the origin / offset we // provide. Apply the offset to the direction, then rotation from the object, // and normalize. direction.copy(data.direction).transformDirection(el.object3D.matrixWorld).normalize(); // Apply offset and direction, in world coordinates. this.raycaster.set(originVec3, direction); }; })(), /** * Create or update line to give raycaster visual representation. * Customize the line through through line component. * We draw the line in the raycaster component to customize the line to the * raycaster's origin, direction, and far. * * Unlike the raycaster, we create the line as a child of the object. The line will * be affected by the transforms of the objects, so we don't have to calculate transforms * like we do with the raycaster. * * @param {number} length - Length of line. Pass in to shorten the line to the intersection * point. If not provided, length will default to the max length, `raycaster.far`. */ drawLine: function (length) { var data = this.data; var el = this.el; var endVec3; // Switch each time vector so line update triggered and to avoid unnecessary vector clone. endVec3 = this.lineData.end === this.lineEndVec3 ? this.otherLineEndVec3 : this.lineEndVec3; // Treat Infinity as 1000m for the line. if (length === undefined) { length = data.far === Infinity ? 1000 : data.far; } // Update the length of the line if given. `unitLineEndVec3` is the direction // given by data.direction, then we apply a scalar to give it a length. this.lineData.start = data.origin; this.lineData.end = endVec3.copy(this.unitLineEndVec3).multiplyScalar(length); el.setAttribute('line', this.lineData); }, /** * Return A-Frame attachments of each element's object3D group (e.g., mesh). * Children are flattened by one level, removing the THREE.Group wrapper, * so that non-recursive raycasting remains useful. * * Only push children defined as component attachemnts (e.g., setObject3D), * NOT actual children in the scene graph hierarchy. * * @param {Array<Element>} els * @return {Array<THREE.Object3D>} */ flattenObject3DMaps: function (els) { var key; var i; var objects = this.objects; // Push meshes and other attachments onto list of objects to intersect. objects.length = 0; for (i = 0; i < els.length; i++) { if (els[i].isEntity && els[i].object3D) { for (key in els[i].object3DMap) { objects.push(els[i].getObject3D(key)); } } } return objects; }, clearAllIntersections: function () { var i; for (i = 0; i < this.intersectedEls.length; i++) { this.intersectedEls[i].emit(EVENTS.INTERSECT_CLEAR, this.intersectedClearedDetail); } copyArray(this.clearedIntersectedEls, this.intersectedEls); this.intersectedEls.length = 0; this.intersections.length = 0; this.el.emit(EVENTS.INTERSECTION_CLEAR, this.intersectionClearedDetail); } }); /** * Copy contents of one array to another without allocating new array. */ function copyArray (a, b) { var i; a.length = b.length; for (i = 0; i < b.length; i++) { a[i] = b[i]; } } ",
    "var degToRad = require('../lib/three').Math.degToRad; var registerComponent = require('../core/component').registerComponent; module.exports.Component = registerComponent('rotation', { schema: {type: 'vec3'}, /** * Updates object3D rotation. */ update: function () { var data = this.data; var object3D = this.el.object3D; object3D.rotation.set(degToRad(data.x), degToRad(data.y), degToRad(data.z)); object3D.rotation.order = 'YXZ'; }, remove: function () { // Pretty much for mixins. this.el.object3D.rotation.set(0, 0, 0); } }); ",
    "var registerComponent = require('../core/component').registerComponent; // Avoids triggering a zero-determinant which makes object3D matrix non-invertible. var zeroScale = 0.00001; module.exports.Component = registerComponent('scale', { schema: { type: 'vec3', default: {x: 1, y: 1, z: 1} }, update: function () { var data = this.data; var object3D = this.el.object3D; var x = data.x === 0 ? zeroScale : data.x; var y = data.y === 0 ? zeroScale : data.y; var z = data.z === 0 ? zeroScale : data.z; object3D.scale.set(x, y, z); }, remove: function () { // Pretty much for mixins. this.el.object3D.scale.set(1, 1, 1); } }); ",
    "/* global THREE */ var register = require('../../core/component').registerComponent; module.exports.Component = register('background', { schema: { color: {type: 'color', default: 'black'}, transparent: {default: false} }, update: function () { var data = this.data; var object3D = this.el.object3D; if (data.transparent) { object3D.background = null; return; } object3D.background = new THREE.Color(data.color); } }); ",
    "var register = require('../../core/component').registerComponent; module.exports.Component = register('debug', { schema: {default: true} }); ",
    "var registerComponent = require('../../core/component').registerComponent; /** * Component to embed an a-frame scene within the layout of a 2D page. */ module.exports.Component = registerComponent('embedded', { dependencies: ['vr-mode-ui'], schema: {default: true}, update: function () { var sceneEl = this.el; var enterVREl = sceneEl.querySelector('.a-enter-vr'); if (this.data === true) { if (enterVREl) { enterVREl.classList.add('embedded'); } sceneEl.removeFullScreenStyles(); } else { if (enterVREl) { enterVREl.classList.remove('embedded'); } sceneEl.addFullScreenStyles(); } } }); ",
    "var register = require('../../core/component').registerComponent; var THREE = require('../../lib/three'); var debug = require('../../utils/debug'); var warn = debug('components:fog:warn'); /** * Fog component. * Applies only to the scene entity. */ module.exports.Component = register('fog', { schema: { color: {type: 'color', default: '#000'}, density: {default: 0.00025}, far: {default: 1000, min: 0}, near: {default: 1, min: 0}, type: {default: 'linear', oneOf: ['linear', 'exponential']} }, update: function () { var data = this.data; var el = this.el; var fog = this.el.object3D.fog; if (!el.isScene) { warn('Fog component can only be applied to <a-scene>'); return; } // (Re)create fog if fog doesn't exist or fog type changed. if (!fog || data.type !== fog.name) { el.object3D.fog = getFog(data); el.systems.material.updateMaterials(); return; } // Fog data changed. Update fog. Object.keys(this.schema).forEach(function (key) { var value = data[key]; if (key === 'color') { value = new THREE.Color(value); } fog[key] = value; }); }, /** * Remove fog on remove (callback). */ remove: function () { var fog = this.el.object3D.fog; if (!fog) { return; } fog.far = 0; fog.near = 0.1; } }); /** * Creates a fog object. Sets fog.name to be able to detect fog type changes. * * @param {object} data - Fog data. * @returns {object} fog */ function getFog (data) { var fog; if (data.type === 'exponential') { fog = new THREE.FogExp2(data.color, data.density); } else { fog = new THREE.Fog(data.color, data.near, data.far); } fog.name = data.type; return fog; } ",
    "/* global AFRAME */ var AFRAME_INJECTED = require('../../constants').AFRAME_INJECTED; var pkg = require('../../../package'); var registerComponent = require('../../core/component').registerComponent; var utils = require('../../utils/'); /** * 0.4.2 to 0.4.x * Will need to update this when A-Frame goes to 1.x.x. */ function getFuzzyPatchVersion (version) { var split = version.split('.'); split[2] = 'x'; return split.join('.'); } var INSPECTOR_DEV_URL = 'https://aframe.io/aframe-inspector/dist/aframe-inspector.js'; var INSPECTOR_RELEASE_URL = 'https://unpkg.com/aframe-inspector@' + getFuzzyPatchVersion(pkg.version) + '/dist/aframe-inspector.min.js'; var INSPECTOR_URL = process.env.INSPECTOR_VERSION === 'dev' ? INSPECTOR_DEV_URL : INSPECTOR_RELEASE_URL; var LOADING_MESSAGE = 'Loading Inspector'; var LOADING_ERROR_MESSAGE = 'Error loading Inspector'; module.exports.Component = registerComponent('inspector', { schema: { url: {default: INSPECTOR_URL} }, init: function () { this.firstPlay = true; this.onKeydown = this.onKeydown.bind(this); this.onMessage = this.onMessage.bind(this); this.initOverlay(); window.addEventListener('keydown', this.onKeydown); window.addEventListener('message', this.onMessage); }, play: function () { var urlParam; if (!this.firstPlay) { return; } urlParam = utils.getUrlParameter('inspector'); if (urlParam !== 'false' && !!urlParam) { this.openInspector(); this.firstPlay = false; } }, initOverlay: function () { var dotsHTML = '<span class="dots"><span>.</span><span>.</span><span>.</span></span>'; this.loadingMessageEl = document.createElement('div'); this.loadingMessageEl.classList.add('a-inspector-loader'); this.loadingMessageEl.innerHTML = LOADING_MESSAGE + dotsHTML; }, remove: function () { this.removeEventListeners(); }, /** * <ctrl> + <alt> + i keyboard shortcut. */ onKeydown: function (evt) { var shortcutPressed = evt.keyCode === 73 && evt.ctrlKey && evt.altKey; if (!shortcutPressed) { return; } this.openInspector(); }, showLoader: function () { document.body.appendChild(this.loadingMessageEl); }, hideLoader: function () { document.body.removeChild(this.loadingMessageEl); }, /** * postMessage. aframe.io uses this to create a button on examples to open Inspector. */ onMessage: function (evt) { if (evt.data === 'INJECT_AFRAME_INSPECTOR') { this.openInspector(); } }, openInspector: function (focusEl) { var self = this; var script; // Already injected. Open. if (AFRAME.INSPECTOR || AFRAME.inspectorInjected) { AFRAME.INSPECTOR.open(focusEl); return; } this.showLoader(); // Inject. script = document.createElement('script'); script.src = this.data.url; script.setAttribute('data-name', 'aframe-inspector'); script.setAttribute(AFRAME_INJECTED, ''); script.onload = function () { AFRAME.INSPECTOR.open(focusEl); self.hideLoader(); self.removeEventListeners(); }; script.onerror = function () { self.loadingMessageEl.innerHTML = LOADING_ERROR_MESSAGE; }; document.head.appendChild(script); AFRAME.inspectorInjected = true; }, removeEventListeners: function () { window.removeEventListener('keydown', this.onKeydown); window.removeEventListener('message', this.onMessage); } }); ",
    "var registerComponent = require('../../core/component').registerComponent; var shouldCaptureKeyEvent = require('../../utils/').shouldCaptureKeyEvent; module.exports.Component = registerComponent('keyboard-shortcuts', { schema: { enterVR: {default: true}, exitVR: {default: true} }, init: function () { this.onKeyup = this.onKeyup.bind(this); }, update: function (oldData) { var data = this.data; this.enterVREnabled = data.enterVR; }, play: function () { window.addEventListener('keyup', this.onKeyup, false); }, pause: function () { window.removeEventListener('keyup', this.onKeyup); }, onKeyup: function (evt) { var scene = this.el; if (!shouldCaptureKeyEvent(evt)) { return; } if (this.enterVREnabled && evt.keyCode === 70) { // f. scene.enterVR(); } if (this.enterVREnabled && evt.keyCode === 27) { // escape. scene.exitVR(); } } }); ",
    "var debug = require('../../utils/debug'); var registerComponent = require('../../core/component').registerComponent; var warn = debug('components:pool:warn'); /** * Pool component to reuse entities. * Avoids creating and destroying the same kind of entities. * Helps reduce GC pauses. For example in a game to reuse enemies entities. * * @member {array} availableEls - Available entities in the pool. * @member {array} usedEls - Entities of the pool in use. */ module.exports.Component = registerComponent('pool', { schema: { container: {default: ''}, mixin: {default: ''}, size: {default: 0}, dynamic: {default: false} }, multiple: true, initPool: function () { var i; this.availableEls = []; this.usedEls = []; if (!this.data.mixin) { warn('No mixin provided for pool component.'); } if (this.data.container) { this.container = document.querySelector(this.data.container); if (!this.container) { warn('Container ' + this.data.container + ' not found.'); } } this.container = this.container || this.el; for (i = 0; i < this.data.size; ++i) { this.createEntity(); } }, update: function (oldData) { var data = this.data; if (oldData.mixin !== data.mixin || oldData.size !== data.size) { this.initPool(); } }, /** * Add a new entity to the list of available entities. */ createEntity: function () { var el; el = document.createElement('a-entity'); el.play = this.wrapPlay(el.play); el.setAttribute('mixin', this.data.mixin); el.object3D.visible = false; el.pause(); this.container.appendChild(el); this.availableEls.push(el); }, /** * Play wrapper for pooled entities. When pausing and playing a scene, don't want to play * entities that are not in use. */ wrapPlay: function (playMethod) { var usedEls = this.usedEls; return function () { if (usedEls.indexOf(this) === -1) { return; } playMethod.call(this); }; }, /** * Used to request one of the available entities of the pool. */ requestEntity: function () { var el; if (this.availableEls.length === 0) { if (this.data.dynamic === false) { warn('Requested entity from empty pool: ' + this.attrName); return; } else { warn('Requested entity from empty pool. This pool is dynamic and will resize ' + 'automatically. You might want to increase its initial size: ' + this.attrName); } this.createEntity(); } el = this.availableEls.shift(); this.usedEls.push(el); el.object3D.visible = true; return el; }, /** * Used to return a used entity to the pool. */ returnEntity: function (el) { var index = this.usedEls.indexOf(el); if (index === -1) { warn('The returned entity was not previously pooled from ' + this.attrName); return; } this.usedEls.splice(index, 1); this.availableEls.push(el); el.object3D.visible = false; el.pause(); return el; } }); ",
    "/* global ImageData, URL */ var registerComponent = require('../../core/component').registerComponent; var THREE = require('../../lib/three'); var VERTEX_SHADER = [ 'attribute vec3 position;', 'attribute vec2 uv;', 'uniform mat4 projectionMatrix;', 'uniform mat4 modelViewMatrix;', 'varying vec2 vUv;', 'void main() {', ' vUv = vec2( 1.- uv.x, uv.y );', ' gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}' ].join('\n'); var FRAGMENT_SHADER = [ 'precision mediump float;', 'uniform samplerCube map;', 'varying vec2 vUv;', '#define M_PI 3.141592653589793238462643383279', 'void main() {', ' vec2 uv = vUv;', ' float longitude = uv.x * 2. * M_PI - M_PI + M_PI / 2.;', ' float latitude = uv.y * M_PI;', ' vec3 dir = vec3(', ' - sin( longitude ) * sin( latitude ),', ' cos( latitude ),', ' - cos( longitude ) * sin( latitude )', ' );', ' normalize( dir );', ' gl_FragColor = vec4( textureCube( map, dir ).rgb, 1.0 );', '}' ].join('\n'); /** * Component to take screenshots of the scene using a keboard shortcut (alt+s). * It can be configured to either take 360&deg; captures (`equirectangular`) * or regular screenshots (`projection`) * * This is based on https://github.com/spite/THREE.CubemapToEquirectangular * To capture an equirectangular projection of the scene a THREE.CubeCamera is used * The cube map produced by the CubeCamera is projected on a quad and then rendered to * WebGLRenderTarget with an ortographic camera. */ module.exports.Component = registerComponent('screenshot', { schema: { width: {default: 4096}, height: {default: 2048}, camera: {type: 'selector'} }, init: function () { var el = this.el; var self = this; if (el.renderer) { setup(); } else { el.addEventListener('render-target-loaded', setup); } function setup () { var gl = el.renderer.getContext(); if (!gl) { return; } self.cubeMapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE); self.material = new THREE.RawShaderMaterial({ uniforms: {map: {type: 't', value: null}}, vertexShader: VERTEX_SHADER, fragmentShader: FRAGMENT_SHADER, side: THREE.DoubleSide }); self.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry(1, 1), self.material ); self.quad.visible = false; self.camera = new THREE.OrthographicCamera(-1 / 2, 1 / 2, 1 / 2, -1 / 2, -10000, 10000); self.canvas = document.createElement('canvas'); self.ctx = self.canvas.getContext('2d'); el.object3D.add(self.quad); self.onKeyDown = self.onKeyDown.bind(self); } }, getRenderTarget: function (width, height) { return new THREE.WebGLRenderTarget(width, height, { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, wrapS: THREE.ClampToEdgeWrapping, wrapT: THREE.ClampToEdgeWrapping, format: THREE.RGBAFormat, type: THREE.UnsignedByteType }); }, resize: function (width, height) { // Resize quad. this.quad.scale.set(width, height, 1); // Resize camera. this.camera.left = -1 * width / 2; this.camera.right = width / 2; this.camera.top = height / 2; this.camera.bottom = -1 * height / 2; this.camera.updateProjectionMatrix(); // Resize canvas. this.canvas.width = width; this.canvas.height = height; }, play: function () { window.addEventListener('keydown', this.onKeyDown); }, /** * <ctrl> + <alt> + s = Regular screenshot. * <ctrl> + <alt> + <shift> + s = Equirectangular screenshot. */ onKeyDown: function (evt) { var shortcutPressed = evt.keyCode === 83 && evt.ctrlKey && evt.altKey; if (!this.data || !shortcutPressed) { return; } var projection = evt.shiftKey ? 'equirectangular' : 'perspective'; this.capture(projection); }, /** * Capture a screenshot of the scene. * * @param {string} projection - Screenshot projection (equirectangular or perspective). */ setCapture: function (projection) { var el = this.el; var size; var camera; var cubeCamera; // Configure camera. if (projection === 'perspective') { // Quad is only used in equirectangular mode. Hide it in this case. this.quad.visible = false; // Use scene camera. camera = (this.data.camera && this.data.camera.components.camera.camera) || el.camera; size = {width: this.data.width, height: this.data.height}; } else { // Use ortho camera. camera = this.camera; // Create cube camera and copy position from scene camera. cubeCamera = new THREE.CubeCamera(el.camera.near, el.camera.far, Math.min(this.cubeMapSize, 2048)); // Copy camera position into cube camera; el.camera.getWorldPosition(cubeCamera.position); el.camera.getWorldQuaternion(cubeCamera.quaternion); // Render scene with cube camera. cubeCamera.update(el.renderer, el.object3D); this.quad.material.uniforms.map.value = cubeCamera.renderTarget.texture; size = {width: this.data.width, height: this.data.height}; // Use quad to project image taken by the cube camera. this.quad.visible = true; } return { camera: camera, size: size, projection: projection }; }, /** * Maintained for backwards compatibility. */ capture: function (projection) { var isVREnabled = this.el.renderer.vr.enabled; var renderer = this.el.renderer; var params; // Disable VR. renderer.vr.enabled = false; params = this.setCapture(projection); this.renderCapture(params.camera, params.size, params.projection); // Trigger file download. this.saveCapture(); // Restore VR. renderer.vr.enabled = isVREnabled; }, /** * Return canvas instead of triggering download (e.g., for uploading blob to server). */ getCanvas: function (projection) { var params = this.setCapture(projection); this.renderCapture(params.camera, params.size, params.projection); return this.canvas; }, renderCapture: function (camera, size, projection) { var autoClear = this.el.renderer.autoClear; var el = this.el; var imageData; var output; var pixels; var renderer = el.renderer; // Create rendering target and buffer to store the read pixels. output = this.getRenderTarget(size.width, size.height); pixels = new Uint8Array(4 * size.width * size.height); // Resize quad, camera, and canvas. this.resize(size.width, size.height); // Render scene to render target. renderer.autoClear = true; renderer.render(el.object3D, camera, output, true); renderer.autoClear = autoClear; // Read image pizels back. renderer.readRenderTargetPixels(output, 0, 0, size.width, size.height, pixels); if (projection === 'perspective') { pixels = this.flipPixelsVertically(pixels, size.width, size.height); } imageData = new ImageData(new Uint8ClampedArray(pixels), size.width, size.height); // Hide quad after projecting the image. this.quad.visible = false; // Copy pixels into canvas. this.ctx.putImageData(imageData, 0, 0); }, flipPixelsVertically: function (pixels, width, height) { var flippedPixels = pixels.slice(0); for (var x = 0; x < width; ++x) { for (var y = 0; y < height; ++y) { flippedPixels[x * 4 + y * width * 4] = pixels[x * 4 + (height - y) * width * 4]; flippedPixels[x * 4 + 1 + y * width * 4] = pixels[x * 4 + 1 + (height - y) * width * 4]; flippedPixels[x * 4 + 2 + y * width * 4] = pixels[x * 4 + 2 + (height - y) * width * 4]; flippedPixels[x * 4 + 3 + y * width * 4] = pixels[x * 4 + 3 + (height - y) * width * 4]; } } return flippedPixels; }, /** * Download capture to file. */ saveCapture: function () { this.canvas.toBlob(function (blob) { var fileName = 'screenshot-' + document.title.toLowerCase() + '-' + Date.now() + '.png'; var linkEl = document.createElement('a'); var url = URL.createObjectURL(blob); linkEl.href = url; linkEl.setAttribute('download', fileName); linkEl.innerHTML = 'downloading...'; linkEl.style.display = 'none'; document.body.appendChild(linkEl); setTimeout(function () { linkEl.click(); document.body.removeChild(linkEl); }, 1); }, 'image/png'); } }); ",
    "var registerComponent = require('../../core/component').registerComponent; var RStats = require('../../../vendor/rStats'); var utils = require('../../utils'); require('../../../vendor/rStats.extras'); require('../../lib/rStatsAframe'); var AFrameStats = window.aframeStats; var bind = utils.bind; var HIDDEN_CLASS = 'a-hidden'; var ThreeStats = window.threeStats; /** * Stats appended to document.body by RStats. */ module.exports.Component = registerComponent('stats', { schema: {default: true}, init: function () { var scene = this.el; if (utils.getUrlParameter('stats') === 'false') { return; } this.stats = createStats(scene); this.statsEl = document.querySelector('.rs-base'); this.hideBound = bind(this.hide, this); this.showBound = bind(this.show, this); scene.addEventListener('enter-vr', this.hideBound); scene.addEventListener('exit-vr', this.showBound); }, update: function () { if (!this.stats) { return; } return (!this.data) ? this.hide() : this.show(); }, remove: function () { this.el.removeEventListener('enter-vr', this.hideBound); this.el.removeEventListener('exit-vr', this.showBound); if (!this.statsEl) { return; } // Scene detached. this.statsEl.parentNode.removeChild(this.statsEl); }, tick: function () { var stats = this.stats; if (!stats) { return; } stats('rAF').tick(); stats('FPS').frame(); stats().update(); }, hide: function () { this.statsEl.classList.add(HIDDEN_CLASS); }, show: function () { this.statsEl.classList.remove(HIDDEN_CLASS); } }); function createStats (scene) { var threeStats = new ThreeStats(scene.renderer); var aframeStats = new AFrameStats(scene); var plugins = scene.isMobile ? [] : [threeStats, aframeStats]; return new RStats({ css: [], // Our stylesheet is injected from `src/index.js`. values: { fps: {caption: 'fps', below: 30} }, groups: [ {caption: 'Framerate', values: ['fps', 'raf']} ], plugins: plugins }); } ",
    "var registerComponent = require('../../core/component').registerComponent; var constants = require('../../constants/'); var utils = require('../../utils/'); var bind = utils.bind; var ENTER_VR_CLASS = 'a-enter-vr'; var ENTER_VR_BTN_CLASS = 'a-enter-vr-button'; var HIDDEN_CLASS = 'a-hidden'; var ORIENTATION_MODAL_CLASS = 'a-orientation-modal'; /** * UI for entering VR mode. */ module.exports.Component = registerComponent('vr-mode-ui', { dependencies: ['canvas'], schema: { enabled: {default: true}, enterVRButton: {default: ''} }, init: function () { var self = this; var sceneEl = this.el; if (utils.getUrlParameter('ui') === 'false') { return; } this.insideLoader = false; this.enterVREl = null; this.orientationModalEl = null; this.bindMethods(); // Hide/show VR UI when entering/exiting VR mode. sceneEl.addEventListener('enter-vr', this.updateEnterVRInterface); sceneEl.addEventListener('exit-vr', this.updateEnterVRInterface); window.addEventListener('message', function (event) { if (event.data.type === 'loaderReady') { self.insideLoader = true; self.remove(); } }); // Modal that tells the user to change orientation if in portrait. window.addEventListener('orientationchange', this.toggleOrientationModalIfNeeded); }, bindMethods: function () { this.onEnterVRButtonClick = bind(this.onEnterVRButtonClick, this); this.onModalClick = bind(this.onModalClick, this); this.toggleOrientationModalIfNeeded = bind(this.toggleOrientationModalIfNeeded, this); this.updateEnterVRInterface = bind(this.updateEnterVRInterface, this); }, /** * Exit VR when modal clicked. */ onModalClick: function () { this.el.exitVR(); }, /** * Enter VR when modal clicked. */ onEnterVRButtonClick: function () { this.el.enterVR(); }, update: function () { var data = this.data; var sceneEl = this.el; if (!data.enabled || this.insideLoader || utils.getUrlParameter('ui') === 'false') { return this.remove(); } if (this.enterVREl || this.orientationModalEl) { return; } // Add UI if enabled and not already present. if (data.enterVRButton) { // Custom button. this.enterVREl = document.querySelector(data.enterVRButton); this.enterVREl.addEventListener('click', this.onEnterVRButtonClick); } else { this.enterVREl = createEnterVRButton(this.onEnterVRButtonClick); sceneEl.appendChild(this.enterVREl); } this.orientationModalEl = createOrientationModal(this.onModalClick); sceneEl.appendChild(this.orientationModalEl); this.updateEnterVRInterface(); }, remove: function () { [this.enterVREl, this.orientationModalEl].forEach(function (uiElement) { if (uiElement && uiElement.parentNode) { uiElement.parentNode.removeChild(uiElement); } }); }, updateEnterVRInterface: function () { this.toggleEnterVRButtonIfNeeded(); this.toggleOrientationModalIfNeeded(); }, toggleEnterVRButtonIfNeeded: function () { var sceneEl = this.el; if (!this.enterVREl) { return; } if (sceneEl.is('vr-mode')) { this.enterVREl.classList.add(HIDDEN_CLASS); } else { this.enterVREl.classList.remove(HIDDEN_CLASS); } }, toggleOrientationModalIfNeeded: function () { var sceneEl = this.el; var orientationModalEl = this.orientationModalEl; if (!orientationModalEl || !sceneEl.isMobile) { return; } if (!utils.device.isLandscape() && sceneEl.is('vr-mode')) { // Show if in VR mode on portrait. orientationModalEl.classList.remove(HIDDEN_CLASS); } else { orientationModalEl.classList.add(HIDDEN_CLASS); } } }); /** * Create a button that when clicked will enter into stereo-rendering mode for VR. * * Structure: <div><button></div> * * @param {function} onClick - click event handler * @returns {Element} Wrapper <div>. */ function createEnterVRButton (onClick) { var vrButton; var wrapper; // Create elements. wrapper = document.createElement('div'); wrapper.classList.add(ENTER_VR_CLASS); wrapper.setAttribute(constants.AFRAME_INJECTED, ''); vrButton = document.createElement('button'); vrButton.className = ENTER_VR_BTN_CLASS; vrButton.setAttribute('title', 'Enter VR mode with a headset or fullscreen mode on a desktop. ' + 'Visit https://webvr.rocks or https://webvr.info for more information.'); vrButton.setAttribute(constants.AFRAME_INJECTED, ''); // Insert elements. wrapper.appendChild(vrButton); vrButton.addEventListener('click', function (evt) { onClick(); evt.stopPropagation(); }); return wrapper; } /** * Creates a modal dialog to request the user to switch to landscape orientation. * * @param {function} onClick - click event handler * @returns {Element} Wrapper <div>. */ function createOrientationModal (onClick) { var modal = document.createElement('div'); modal.className = ORIENTATION_MODAL_CLASS; modal.classList.add(HIDDEN_CLASS); modal.setAttribute(constants.AFRAME_INJECTED, ''); var exit = document.createElement('button'); exit.setAttribute(constants.AFRAME_INJECTED, ''); exit.innerHTML = 'Exit VR'; // Exit VR on close. exit.addEventListener('click', onClick); modal.appendChild(exit); return modal; } ",
    "var component = require('../core/component'); var THREE = require('../lib/three'); var bind = require('../utils/bind'); var registerComponent = component.registerComponent; /** * Shadow component. * * When applied to an entity, that entity's geometry and any descendants will cast or receive * shadows as specified by the `cast` and `receive` properties. */ module.exports.Component = registerComponent('shadow', { schema: { cast: {default: true}, receive: {default: true} }, init: function () { this.onMeshChanged = bind(this.update, this); this.el.addEventListener('object3dset', this.onMeshChanged); this.system.setShadowMapEnabled(true); }, update: function () { var data = this.data; this.updateDescendants(data.cast, data.receive); }, remove: function () { var el = this.el; el.removeEventListener('object3dset', this.onMeshChanged); this.updateDescendants(false, false); }, updateDescendants: function (cast, receive) { var sceneEl = this.el.sceneEl; this.el.object3D.traverse(function (node) { if (!(node instanceof THREE.Mesh)) { return; } node.castShadow = cast; node.receiveShadow = receive; // If scene has already rendered, materials must be updated. if (sceneEl.hasLoaded && node.material) { var materials = Array.isArray(node.material) ? node.material : [node.material]; for (var i = 0; i < materials.length; i++) { materials[i].needsUpdate = true; } } }); } }); ",
    "var registerComponent = require('../core/component').registerComponent; var debug = require('../utils/debug'); var THREE = require('../lib/three'); var warn = debug('components:sound:warn'); /** * Sound component. */ module.exports.Component = registerComponent('sound', { schema: { autoplay: {default: false}, distanceModel: {default: 'inverse', oneOf: ['linear', 'inverse', 'exponential']}, loop: {default: false}, maxDistance: {default: 10000}, on: {default: ''}, poolSize: {default: 1}, positional: {default: true}, refDistance: {default: 1}, rolloffFactor: {default: 1}, src: {type: 'audio'}, volume: {default: 1} }, multiple: true, init: function () { var self = this; this.listener = null; this.audioLoader = new THREE.AudioLoader(); this.pool = new THREE.Group(); this.loaded = false; this.mustPlay = false; // Don't pass evt because playSound takes a function as parameter. this.playSoundBound = function () { self.playSound(); }; }, update: function (oldData) { var data = this.data; var i; var sound; var srcChanged = data.src !== oldData.src; // Create new sound if not yet created or changing `src`. if (srcChanged) { if (!data.src) { return; } this.setupSound(); } for (i = 0; i < this.pool.children.length; i++) { sound = this.pool.children[i]; if (data.positional) { sound.setDistanceModel(data.distanceModel); sound.setMaxDistance(data.maxDistance); sound.setRefDistance(data.refDistance); sound.setRolloffFactor(data.rolloffFactor); } sound.setLoop(data.loop); sound.setVolume(data.volume); sound.isPaused = false; } if (data.on !== oldData.on) { this.updateEventListener(oldData.on); } // All sound values set. Load in `src`. if (srcChanged) { var self = this; this.loaded = false; this.audioLoader.load(data.src, function (buffer) { for (i = 0; i < self.pool.children.length; i++) { sound = self.pool.children[i]; sound.setBuffer(buffer); } self.loaded = true; // Remove this key from cache, otherwise we can't play it again THREE.Cache.remove(data.src); if (self.data.autoplay || self.mustPlay) { self.playSound(); } self.el.emit('sound-loaded', self.evtDetail, false); }); } }, pause: function () { this.stopSound(); this.removeEventListener(); }, play: function () { if (this.data.autoplay) { this.playSound(); } this.updateEventListener(); }, remove: function () { var i; var sound; this.removeEventListener(); if (this.el.getObject3D(this.attrName)) { this.el.removeObject3D(this.attrName); } try { for (i = 0; i < this.pool.children.length; i++) { sound = this.pool.children[i]; sound.disconnect(); } } catch (e) { // disconnect() will throw if it was never connected initially. warn('Audio source not properly disconnected'); } }, /** * Update listener attached to the user defined on event. */ updateEventListener: function (oldEvt) { var el = this.el; if (oldEvt) { el.removeEventListener(oldEvt, this.playSoundBound); } el.addEventListener(this.data.on, this.playSoundBound); }, removeEventListener: function () { this.el.removeEventListener(this.data.on, this.playSoundBound); }, /** * Removes current sound object, creates new sound object, adds to entity. * * @returns {object} sound */ setupSound: function () { var el = this.el; var i; var sceneEl = el.sceneEl; var self = this; var sound; if (this.pool.children.length > 0) { this.stopSound(); el.removeObject3D('sound'); } // Only want one AudioListener. Cache it on the scene. var listener = this.listener = sceneEl.audioListener || new THREE.AudioListener(); sceneEl.audioListener = listener; if (sceneEl.camera) { sceneEl.camera.add(listener); } // Wait for camera if necessary. sceneEl.addEventListener('camera-set-active', function (evt) { evt.detail.cameraEl.getObject3D('camera').add(listener); }); // Create [poolSize] audio instances and attach them to pool this.pool = new THREE.Group(); for (i = 0; i < this.data.poolSize; i++) { sound = this.data.positional ? new THREE.PositionalAudio(listener) : new THREE.Audio(listener); this.pool.add(sound); } el.setObject3D(this.attrName, this.pool); for (i = 0; i < this.pool.children.length; i++) { sound = this.pool.children[i]; sound.onEnded = function () { this.isPlaying = false; self.el.emit('sound-ended', self.evtDetail, false); }; } }, /** * Pause all the sounds in the pool. */ pauseSound: function () { var i; var sound; this.isPlaying = false; for (i = 0; i < this.pool.children.length; i++) { sound = this.pool.children[i]; if (!sound.source || !sound.source.buffer || !sound.isPlaying || sound.isPaused) { continue; } sound.isPaused = true; sound.pause(); } }, /** * Look for an unused sound in the pool and play it if found. */ playSound: function (processSound) { var found; var i; var sound; if (!this.loaded) { warn('Sound not loaded yet. It will be played once it finished loading'); this.mustPlay = true; return; } found = false; this.isPlaying = true; for (i = 0; i < this.pool.children.length; i++) { sound = this.pool.children[i]; if (!sound.isPlaying && sound.buffer && !found) { if (processSound) { processSound(sound); } sound.play(); sound.isPaused = false; found = true; continue; } } if (!found) { warn('All the sounds are playing. If you need to play more sounds simultaneously ' + 'consider increasing the size of pool with the `poolSize` attribute.', this.el); return; } this.mustPlay = false; }, /** * Stop all the sounds in the pool. */ stopSound: function () { var i; var sound; this.isPlaying = false; for (i = 0; i < this.pool.children.length; i++) { sound = this.pool.children[i]; if (!sound.source || !sound.source.buffer) { return; } sound.stop(); } } }); ",
    "var createTextGeometry = require('three-bmfont-text'); var loadBMFont = require('load-bmfont'); var registerComponent = require('../core/component').registerComponent; var coreShader = require('../core/shader'); var THREE = require('../lib/three'); var utils = require('../utils/'); var error = utils.debug('components:text:error'); var shaders = coreShader.shaders; var warn = utils.debug('components:text:warn'); // 1 to match other A-Frame default widths. var DEFAULT_WIDTH = 1; // @bryik set anisotropy to 16. Improves look of large amounts of text when viewed from angle. var MAX_ANISOTROPY = 16; var FONT_BASE_URL = 'https://cdn.aframe.io/fonts/'; var FONTS = { aileronsemibold: FONT_BASE_URL + 'Aileron-Semibold.fnt', dejavu: FONT_BASE_URL + 'DejaVu-sdf.fnt', exo2bold: FONT_BASE_URL + 'Exo2Bold.fnt', exo2semibold: FONT_BASE_URL + 'Exo2SemiBold.fnt', kelsonsans: FONT_BASE_URL + 'KelsonSans.fnt', monoid: FONT_BASE_URL + 'Monoid.fnt', mozillavr: FONT_BASE_URL + 'mozillavr.fnt', roboto: FONT_BASE_URL + 'Roboto-msdf.json', sourcecodepro: FONT_BASE_URL + 'SourceCodePro.fnt' }; var MSDF_FONTS = ['roboto']; var DEFAULT_FONT = 'roboto'; module.exports.FONTS = FONTS; var cache = new PromiseCache(); var fontWidthFactors = {}; var textures = {}; // Regular expression for detecting a URLs with a protocol prefix. var protocolRe = /^\w+:/; /** * SDF-based text component. * Based on https://github.com/Jam3/three-bmfont-text. * * All the stock fonts are for the `sdf` registered shader, an improved version of jam3's * original `sdf` shader. */ module.exports.Component = registerComponent('text', { multiple: true, schema: { align: {type: 'string', default: 'left', oneOf: ['left', 'right', 'center']}, alphaTest: {default: 0.5}, // `anchor` defaults to center to match geometries. anchor: {default: 'center', oneOf: ['left', 'right', 'center', 'align']}, baseline: {default: 'center', oneOf: ['top', 'center', 'bottom']}, color: {type: 'color', default: '#FFF'}, font: {type: 'string', default: DEFAULT_FONT}, // `fontImage` defaults to the font name as a .png (e.g., mozillavr.fnt -> mozillavr.png). fontImage: {type: 'string'}, // `height` has no default, will be populated at layout. height: {type: 'number'}, letterSpacing: {type: 'number', default: 0}, // `lineHeight` defaults to font's `lineHeight` value. lineHeight: {type: 'number'}, // `negate` must be true for fonts generated with older versions of msdfgen (white background). negate: {type: 'boolean', default: true}, opacity: {type: 'number', default: 1.0}, shader: {default: 'sdf', oneOf: shaders}, side: {default: 'front', oneOf: ['front', 'back', 'double']}, tabSize: {default: 4}, transparent: {default: true}, value: {type: 'string'}, whiteSpace: {default: 'normal', oneOf: ['normal', 'pre', 'nowrap']}, // `width` defaults to geometry width if present, else `DEFAULT_WIDTH`. width: {type: 'number'}, // `wrapCount` units are about one default font character. Wrap roughly at this number. wrapCount: {type: 'number', default: 40}, // `wrapPixels` will wrap using bmfont pixel units (e.g., dejavu's is 32 pixels). wrapPixels: {type: 'number'}, // `xOffset` to add padding. xOffset: {type: 'number', default: 0}, // `yOffset` to adjust generated fonts from tools that may have incorrect metrics. yOffset: {type: 'number', default: 0}, // `zOffset` will provide a small z offset to avoid z-fighting. zOffset: {type: 'number', default: 0.001} }, init: function () { this.shaderData = {}; this.geometry = createTextGeometry(); this.createOrUpdateMaterial(); this.mesh = new THREE.Mesh(this.geometry, this.material); this.el.setObject3D(this.attrName, this.mesh); }, update: function (oldData) { var data = this.data; var font = this.currentFont; if (textures[data.font]) { this.texture = textures[data.font]; } else { // Create texture per font. this.texture = textures[data.font] = new THREE.Texture(); this.texture.anisotropy = MAX_ANISOTROPY; } // Update material. this.createOrUpdateMaterial(); // New font. `updateFont` will later change data and layout. if (oldData.font !== data.font) { this.updateFont(); return; } // Update geometry and layout. if (font) { this.updateGeometry(this.geometry, font); this.updateLayout(); } }, /** * Clean up geometry, material, texture, mesh, objects. */ remove: function () { this.geometry.dispose(); this.geometry = null; this.el.removeObject3D(this.attrName); this.material.dispose(); this.material = null; this.texture.dispose(); this.texture = null; if (this.shaderObject) { delete this.shaderObject; } }, /** * Update the shader of the material. */ createOrUpdateMaterial: function () { var data = this.data; var hasChangedShader; var material = this.material; var NewShader; var shaderData = this.shaderData; var shaderName; // Infer shader if using a stock font (or from `-msdf` filename convention). shaderName = data.shader; if (MSDF_FONTS.indexOf(data.font) !== -1 || data.font.indexOf('-msdf.') >= 0) { shaderName = 'msdf'; } else if (data.font in FONTS && MSDF_FONTS.indexOf(data.font) === -1) { shaderName = 'sdf'; } hasChangedShader = (this.shaderObject && this.shaderObject.name) !== shaderName; shaderData.alphaTest = data.alphaTest; shaderData.color = data.color; shaderData.map = this.texture; shaderData.opacity = data.opacity; shaderData.side = parseSide(data.side); shaderData.transparent = data.transparent; shaderData.negate = data.negate; // Shader has not changed, do an update. if (!hasChangedShader) { // Update shader material. this.shaderObject.update(shaderData); // Apparently, was not set on `init` nor `update`. material.transparent = shaderData.transparent; material.side = shaderData.side; return; } // Shader has changed. Create a shader material. NewShader = createShader(this.el, shaderName, shaderData); this.material = NewShader.material; this.shaderObject = NewShader.shader; // Set new shader material. this.material.side = shaderData.side; if (this.mesh) { this.mesh.material = this.material; } }, /** * Load font for geometry, load font image for material, and apply. */ updateFont: function () { var data = this.data; var el = this.el; var fontSrc; var geometry = this.geometry; var self = this; if (!data.font) { warn('No font specified. Using the default font.'); } // Make invisible during font swap. this.mesh.visible = false; // Look up font URL to use, and perform cached load. fontSrc = this.lookupFont(data.font || DEFAULT_FONT) || data.font; cache.get(fontSrc, function doLoadFont () { return loadFont(fontSrc, data.yOffset); }).then(function setFont (font) { var fontImgSrc; if (font.pages.length !== 1) { throw new Error('Currently only single-page bitmap fonts are supported.'); } if (!fontWidthFactors[fontSrc]) { font.widthFactor = fontWidthFactors[font] = computeFontWidthFactor(font); } // Update geometry given font metrics. self.updateGeometry(geometry, font); // Set font and update layout. self.currentFont = font; self.updateLayout(); // Look up font image URL to use, and perform cached load. fontImgSrc = self.getFontImageSrc(); cache.get(fontImgSrc, function () { return loadTexture(fontImgSrc); }).then(function (image) { // Make mesh visible and apply font image as texture. var texture = self.texture; texture.image = image; texture.needsUpdate = true; textures[data.font] = texture; self.texture = texture; self.mesh.visible = true; el.emit('textfontset', {font: data.font, fontObj: font}); }).catch(function (err) { error(err.message); error(err.stack); }); }).catch(function (err) { error(err.message); error(err.stack); }); }, getFontImageSrc: function () { if (this.data.fontImage) { return this.data.fontImage; } var fontSrc = this.lookupFont(this.data.font || DEFAULT_FONT) || this.data.font; var imageSrc = this.currentFont.pages[0]; // If the image URL contains a non-HTTP(S) protocol, assume it's an absolute // path on disk and try to infer the path from the font source instead. if (imageSrc.match(protocolRe) && imageSrc.indexOf('http') !== 0) { return fontSrc.replace(/(\.fnt)|(\.json)/, '.png'); } return THREE.LoaderUtils.extractUrlBase(fontSrc) + imageSrc; }, /** * Update layout with anchor, alignment, baseline, and considering any meshes. */ updateLayout: function () { var anchor; var baseline; var el = this.el; var data = this.data; var geometry = this.geometry; var geometryComponent; var height; var layout; var mesh = this.mesh; var textRenderWidth; var textScale; var width; var x; var y; if (!geometry.layout) { return; } // Determine width to use (defined width, geometry's width, or default width). geometryComponent = el.getAttribute('geometry'); width = data.width || (geometryComponent && geometryComponent.width) || DEFAULT_WIDTH; // Determine wrap pixel count. Either specified or by experimental fudge factor. // Note that experimental factor will never be correct for variable width fonts. textRenderWidth = computeWidth(data.wrapPixels, data.wrapCount, this.currentFont.widthFactor); textScale = width / textRenderWidth; // Determine height to use. layout = geometry.layout; height = textScale * (layout.height + layout.descender); // Update geometry dimensions to match text layout if width and height are set to 0. // For example, scales a plane to fit text. if (geometryComponent && geometryComponent.primitive === 'plane') { if (!geometryComponent.width) { el.setAttribute('geometry', 'width', width); } if (!geometryComponent.height) { el.setAttribute('geometry', 'height', height); } } // Calculate X position to anchor text left, center, or right. anchor = data.anchor === 'align' ? data.align : data.anchor; if (anchor === 'left') { x = 0; } else if (anchor === 'right') { x = -1 * layout.width; } else if (anchor === 'center') { x = -1 * layout.width / 2; } else { throw new TypeError('Invalid text.anchor property value', anchor); } // Calculate Y position to anchor text top, center, or bottom. baseline = data.baseline; if (baseline === 'bottom') { y = 0; } else if (baseline === 'top') { y = -1 * layout.height + layout.ascender; } else if (baseline === 'center') { y = -1 * layout.height / 2; } else { throw new TypeError('Invalid text.baseline property value', baseline); } // Position and scale mesh to apply layout. mesh.position.x = x * textScale + data.xOffset; mesh.position.y = y * textScale; // Place text slightly in front to avoid Z-fighting. mesh.position.z = data.zOffset; mesh.scale.set(textScale, -1 * textScale, textScale); }, /** * Grab font from the constant. * Set as a method for test stubbing purposes. */ lookupFont: function (key) { return FONTS[key]; }, /** * Update the text geometry using `three-bmfont-text.update`. */ updateGeometry: (function () { var geometryUpdateBase = {}; var geometryUpdateData = {}; var newLineRegex = /\\n/g; var tabRegex = /\\t/g; return function (geometry, font) { var data = this.data; geometryUpdateData.font = font; geometryUpdateData.lineHeight = data.lineHeight && isFinite(data.lineHeight) ? data.lineHeight : font.common.lineHeight; geometryUpdateData.text = data.value.toString().replace(newLineRegex, '\n') .replace(tabRegex, '\t'); geometryUpdateData.width = computeWidth(data.wrapPixels, data.wrapCount, font.widthFactor); geometry.update(utils.extend(geometryUpdateBase, data, geometryUpdateData)); }; })() }); /** * Due to using negative scale, we return the opposite side specified. * https://github.com/mrdoob/three.js/pull/12787/ */ function parseSide (side) { switch (side) { case 'back': { return THREE.FrontSide; } case 'double': { return THREE.DoubleSide; } default: { return THREE.BackSide; } } } /** * @returns {Promise} */ function loadFont (src, yOffset) { return new Promise(function (resolve, reject) { loadBMFont(src, function (err, font) { if (err) { error('Error loading font', src); reject(err); return; } // Fix negative Y offsets for Roboto MSDF font from tool. Experimentally determined. if (src.indexOf('/Roboto-msdf.json') >= 0) { yOffset = 30; } if (yOffset) { font.chars.map(function doOffset (ch) { ch.yoffset += yOffset; }); } resolve(font); }); }); } /** * @returns {Promise} */ function loadTexture (src) { return new Promise(function (resolve, reject) { new THREE.ImageLoader().load(src, function (image) { resolve(image); }, undefined, function () { error('Error loading font image', src); reject(null); }); }); } function createShader (el, shaderName, data) { var shader; var shaderObject; // Set up Shader. shaderObject = new shaders[shaderName].Shader(); shaderObject.el = el; shaderObject.init(data); shaderObject.update(data); // Get material. shader = shaderObject.material; // Apparently, was not set on `init` nor `update`. shader.transparent = data.transparent; return { material: shader, shader: shaderObject }; } /** * Determine wrap pixel count. Either specified or by experimental fudge factor. * Note that experimental factor will never be correct for variable width fonts. */ function computeWidth (wrapPixels, wrapCount, widthFactor) { return wrapPixels || ((0.5 + wrapCount) * widthFactor); } /** * Compute default font width factor to use. */ function computeFontWidthFactor (font) { var sum = 0; var digitsum = 0; var digits = 0; font.chars.map(function (ch) { sum += ch.xadvance; if (ch.id >= 48 && ch.id <= 57) { digits++; digitsum += ch.xadvance; } }); return digits ? digitsum / digits : sum / font.chars.length; } /** * Get or create a promise given a key and promise generator. * @todo Move to a utility and use in other parts of A-Frame. */ function PromiseCache () { var cache = this.cache = {}; this.get = function (key, promiseGenerator) { if (key in cache) { return cache[key]; } cache[key] = promiseGenerator(); return cache[key]; }; } ",
    "var registerComponent = require('../core/component').registerComponent; var controllerUtils = require('../utils/tracked-controls'); var DEFAULT_CAMERA_HEIGHT = require('../constants').DEFAULT_CAMERA_HEIGHT; var THREE = require('../lib/three'); var DEFAULT_HANDEDNESS = require('../constants').DEFAULT_HANDEDNESS; // Vector from eyes to elbow (divided by user height). var EYES_TO_ELBOW = {x: 0.175, y: -0.3, z: -0.03}; // Vector from eyes to elbow (divided by user height). var FOREARM = {x: 0, y: 0, z: -0.175}; // Due to unfortunate name collision, add empty touches array to avoid Daydream error. var EMPTY_DAYDREAM_TOUCHES = {touches: []}; var EVENTS = { AXISMOVE: 'axismove', BUTTONCHANGED: 'buttonchanged', BUTTONDOWN: 'buttondown', BUTTONUP: 'buttonup', TOUCHSTART: 'touchstart', TOUCHEND: 'touchend' }; /** * Tracked controls component. * Wrap the gamepad API for pose and button states. * Select the appropriate controller and apply pose to the entity. * Observe button states and emit appropriate events. * * @property {number} controller - Index of controller in array returned by Gamepad API. * Only used if hand property is not set. * @property {string} id - Selected controller among those returned by Gamepad API. * @property {number} hand - If multiple controllers found with id, choose the one with the * given value for hand. If set, we ignore 'controller' property */ module.exports.Component = registerComponent('tracked-controls-webvr', { schema: { autoHide: {default: true}, controller: {default: 0}, id: {type: 'string', default: ''}, hand: {type: 'string', default: ''}, idPrefix: {type: 'string', default: ''}, orientationOffset: {type: 'vec3'}, // Arm model parameters when not 6DoF. armModel: {default: true}, headElement: {type: 'selector'} }, init: function () { // Copy variables back to tracked-controls for backwards compatibility. // Some 3rd components rely on them. this.axis = this.el.components['tracked-controls'].axis = [0, 0, 0]; this.buttonStates = this.el.components['tracked-controls'].buttonStates = {}; this.changedAxes = []; this.targetControllerNumber = this.data.controller; this.axisMoveEventDetail = {axis: this.axis, changed: this.changedAxes}; this.deltaControllerPosition = new THREE.Vector3(); this.controllerQuaternion = new THREE.Quaternion(); this.controllerEuler = new THREE.Euler(); this.updateGamepad(); this.buttonEventDetails = {}; }, tick: function (time, delta) { var mesh = this.el.getObject3D('mesh'); // Update mesh animations. if (mesh && mesh.update) { mesh.update(delta / 1000); } this.updateGamepad(); this.updatePose(); this.updateButtons(); }, /** * Return default user height to use for non-6DOF arm model. */ defaultUserHeight: function () { return DEFAULT_CAMERA_HEIGHT; }, /** * Return head element to use for non-6DOF arm model. */ getHeadElement: function () { return this.data.headElement || this.el.sceneEl.camera.el; }, /** * Handle update controller match criteria (such as `id`, `idPrefix`, `hand`, `controller`) */ updateGamepad: function () { var data = this.data; var controller = controllerUtils.findMatchingControllerWebVR( this.system.controllers, data.id, data.idPrefix, data.hand, data.controller ); this.controller = controller; // Legacy handle to the controller for old components. this.el.components['tracked-controls'].controller = controller; if (this.data.autoHide) { this.el.object3D.visible = !!this.controller; } }, /** * Applies an artificial arm model to simulate elbow to wrist positioning * based on the orientation of the controller. * * @param {object} controllerPosition - Existing vector to update with controller position. */ applyArmModel: function (controllerPosition) { // Use controllerPosition and deltaControllerPosition to avoid creating variables. var controller = this.controller; var controllerEuler = this.controllerEuler; var controllerQuaternion = this.controllerQuaternion; var deltaControllerPosition = this.deltaControllerPosition; var hand; var headEl; var headObject3D; var pose; var userHeight; headEl = this.getHeadElement(); headObject3D = headEl.object3D; userHeight = this.defaultUserHeight(); pose = controller.pose; hand = (controller ? controller.hand : undefined) || DEFAULT_HANDEDNESS; // Use camera position as head position. controllerPosition.copy(headObject3D.position); // Set offset for degenerate "arm model" to elbow. deltaControllerPosition.set( EYES_TO_ELBOW.x * (hand === 'left' ? -1 : hand === 'right' ? 1 : 0), EYES_TO_ELBOW.y, // Lower than our eyes. EYES_TO_ELBOW.z); // Slightly out in front. // Scale offset by user height. deltaControllerPosition.multiplyScalar(userHeight); // Apply camera Y rotation (not X or Z, so you can look down at your hand). deltaControllerPosition.applyAxisAngle(headObject3D.up, headObject3D.rotation.y); // Apply rotated offset to position. controllerPosition.add(deltaControllerPosition); // Set offset for degenerate "arm model" forearm. Forearm sticking out from elbow. deltaControllerPosition.set(FOREARM.x, FOREARM.y, FOREARM.z); // Scale offset by user height. deltaControllerPosition.multiplyScalar(userHeight); // Apply controller X/Y rotation (tilting up/down/left/right is usually moving the arm). if (pose.orientation) { controllerQuaternion.fromArray(pose.orientation); } else { controllerQuaternion.copy(headObject3D.quaternion); } controllerEuler.setFromQuaternion(controllerQuaternion); controllerEuler.set(controllerEuler.x, controllerEuler.y, 0); deltaControllerPosition.applyEuler(controllerEuler); // Apply rotated offset to position. controllerPosition.add(deltaControllerPosition); }, /** * Read pose from controller (from Gamepad API), apply transforms, apply to entity. */ updatePose: function () { var controller = this.controller; var data = this.data; var object3D = this.el.object3D; var pose; var vrDisplay = this.system.vrDisplay; var standingMatrix; if (!controller) { return; } // Compose pose from Gamepad. pose = controller.pose; if (pose.position) { object3D.position.fromArray(pose.position); } else { // Controller not 6DOF, apply arm model. if (data.armModel) { this.applyArmModel(object3D.position); } } if (pose.orientation) { object3D.quaternion.fromArray(pose.orientation); } // Apply transforms, if 6DOF and in VR. if (vrDisplay && pose.position) { standingMatrix = this.el.sceneEl.renderer.vr.getStandingMatrix(); object3D.matrix.compose(object3D.position, object3D.quaternion, object3D.scale); object3D.matrix.multiplyMatrices(standingMatrix, object3D.matrix); object3D.matrix.decompose(object3D.position, object3D.quaternion, object3D.scale); } object3D.rotateX(this.data.orientationOffset.x * THREE.Math.DEG2RAD); object3D.rotateY(this.data.orientationOffset.y * THREE.Math.DEG2RAD); object3D.rotateZ(this.data.orientationOffset.z * THREE.Math.DEG2RAD); }, /** * Handle button changes including axes, presses, touches, values. */ updateButtons: function () { var buttonState; var controller = this.controller; var id; if (!controller) { return; } // Check every button. for (id = 0; id < controller.buttons.length; ++id) { // Initialize button state. if (!this.buttonStates[id]) { this.buttonStates[id] = {pressed: false, touched: false, value: 0}; } if (!this.buttonEventDetails[id]) { this.buttonEventDetails[id] = {id: id, state: this.buttonStates[id]}; } buttonState = controller.buttons[id]; this.handleButton(id, buttonState); } // Check axes. this.handleAxes(); }, /** * Handle presses and touches for a single button. * * @param {number} id - Index of button in Gamepad button array. * @param {number} buttonState - Value of button state from 0 to 1. * @returns {boolean} Whether button has changed in any way. */ handleButton: function (id, buttonState) { var changed; changed = this.handlePress(id, buttonState) | this.handleTouch(id, buttonState) | this.handleValue(id, buttonState); if (!changed) { return false; } this.el.emit(EVENTS.BUTTONCHANGED, this.buttonEventDetails[id], false); return true; }, /** * An axis is an array of values from -1 (up, left) to 1 (down, right). * Compare each component of the axis to the previous value to determine change. * * @returns {boolean} Whether axes changed. */ handleAxes: function () { var changed = false; var controllerAxes = this.controller.axes; var i; var previousAxis = this.axis; var changedAxes = this.changedAxes; // Check if axis changed. this.changedAxes.length = 0; for (i = 0; i < controllerAxes.length; ++i) { changedAxes.push(previousAxis[i] !== controllerAxes[i]); if (changedAxes[i]) { changed = true; } } if (!changed) { return false; } this.axis.length = 0; for (i = 0; i < controllerAxes.length; i++) { this.axis.push(controllerAxes[i]); } this.el.emit(EVENTS.AXISMOVE, this.axisMoveEventDetail, false); return true; }, /** * Determine whether a button press has occured and emit events as appropriate. * * @param {string} id - ID of the button to check. * @param {object} buttonState - State of the button to check. * @returns {boolean} Whether button press state changed. */ handlePress: function (id, buttonState) { var evtName; var previousButtonState = this.buttonStates[id]; // Not changed. if (buttonState.pressed === previousButtonState.pressed) { return false; } evtName = buttonState.pressed ? EVENTS.BUTTONDOWN : EVENTS.BUTTONUP; this.el.emit(evtName, this.buttonEventDetails[id], false); previousButtonState.pressed = buttonState.pressed; return true; }, /** * Determine whether a button touch has occured and emit events as appropriate. * * @param {string} id - ID of the button to check. * @param {object} buttonState - State of the button to check. * @returns {boolean} Whether button touch state changed. */ handleTouch: function (id, buttonState) { var evtName; var previousButtonState = this.buttonStates[id]; // Not changed. if (buttonState.touched === previousButtonState.touched) { return false; } evtName = buttonState.touched ? EVENTS.TOUCHSTART : EVENTS.TOUCHEND; this.el.emit(evtName, this.buttonEventDetails[id], false, EMPTY_DAYDREAM_TOUCHES); previousButtonState.touched = buttonState.touched; return true; }, /** * Determine whether a button value has changed. * * @param {string} id - Id of the button to check. * @param {object} buttonState - State of the button to check. * @returns {boolean} Whether button value changed. */ handleValue: function (id, buttonState) { var previousButtonState = this.buttonStates[id]; // Not changed. if (buttonState.value === previousButtonState.value) { return false; } previousButtonState.value = buttonState.value; return true; } }); ",
    "var controllerUtils = require('../utils/tracked-controls'); var registerComponent = require('../core/component').registerComponent; module.exports.Component = registerComponent('tracked-controls-webxr', { schema: { hand: {type: 'string', default: ''} }, init: function () { this.addSessionEventListeners = this.addSessionEventListeners.bind(this); this.updateController = this.updateController.bind(this); this.emitButtonUpEvent = this.emitButtonUpEvent.bind(this); this.emitButtonDownEvent = this.emitButtonDownEvent.bind(this); this.buttonEventDetails = {id: 'trigger', state: {pressed: false}}; }, play: function () { var sceneEl = this.el.sceneEl; this.updateController(); this.addSessionEventListeners(); sceneEl.addEventListener('enter-vr', this.addSessionEventListeners); sceneEl.addEventListener('controllersupdated', this.updateController); }, pause: function () { var sceneEl = this.el.sceneEl; this.removeSessionEventListeners(); sceneEl.removeEventListener('enter-vr', this.addSessionEventListeners); sceneEl.removeEventListener('controllersupdated', this.updateController); }, addSessionEventListeners: function () { var sceneEl = this.el.sceneEl; if (!sceneEl.xrSession) { return; } sceneEl.xrSession.addEventListener('selectstart', this.emitButtonDownEvent); sceneEl.xrSession.addEventListener('selectend', this.emitButtonUpEvent); }, removeSessionEventListeners: function () { var sceneEl = this.el.sceneEl; if (!sceneEl.xrSession) { return; } sceneEl.xrSession.addEventListener('selectstart', this.emitButtonDownEvent); sceneEl.xrSession.addEventListener('selectend', this.emitButtonUpEvent); }, emitButtonDownEvent: function (evt) { if (!this.controller || evt.inputSource.handedness !== this.data.hand) { return; } this.buttonEventDetails.state.pressed = true; this.el.emit('buttondown', this.buttonEventDetails); this.el.emit('buttonchanged', this.buttonEventDetails); this.el.emit('triggerdown'); }, emitButtonUpEvent: function (evt) { if (!this.controller || evt.inputSource.handedness !== this.data.hand) { return; } this.buttonEventDetails.state.pressed = false; this.el.emit('buttonup', this.buttonEventDetails); this.el.emit('buttonchanged', this.buttonEventDetails); this.el.emit('triggerup'); }, /** * Handle update controller match criteria (such as `id`, `idPrefix`, `hand`, `controller`) */ updateController: function () { this.controller = controllerUtils.findMatchingControllerWebXR( this.system.controllers, this.data.hand ); // Legacy handle to the controller for old components. this.el.components['tracked-controls'].controller = this.controller; if (this.data.autoHide) { this.el.object3D.visible = !!this.controller; } }, tick: function () { var pose; var sceneEl = this.el.sceneEl; var object3D = this.el.object3D; if (!this.controller || !sceneEl.frame) { return; } pose = sceneEl.frame.getInputPose(this.controller, sceneEl.frameOfReference); if (!pose) { return; } object3D.matrix.elements = pose.targetRay.transformMatrix; object3D.matrix.decompose(object3D.position, object3D.rotation, object3D.scale); } }); ",
    "var registerComponent = require('../core/component').registerComponent; /** * Tracked controls. * Abstract controls that decide if the WebVR or WebXR version is going to be applied. * * @property {number} controller - Index of controller in array returned by Gamepad API. * Only used if hand property is not set. * @property {string} id - Selected controller among those returned by Gamepad API. * @property {number} hand - If multiple controllers found with id, choose the one with the * given value for hand. If set, we ignore 'controller' property */ module.exports.Component = registerComponent('tracked-controls', { schema: { autoHide: {default: true}, controller: {default: 0}, id: {type: 'string', default: ''}, hand: {type: 'string', default: ''}, idPrefix: {type: 'string', default: ''}, orientationOffset: {type: 'vec3'}, // Arm model parameters when not 6DoF. armModel: {default: true}, headElement: {type: 'selector'} }, update: function () { var data = this.data; var el = this.el; if (el.sceneEl.hasWebXR) { el.setAttribute('tracked-controls-webxr', data); } else { el.setAttribute('tracked-controls-webvr', data); } } }); ",
    "var registerComponent = require('../core/component').registerComponent; /** * Visibility component. */ module.exports.Component = registerComponent('visible', { schema: {default: true}, update: function () { this.el.object3D.visible = this.data; } }); ",
    "var registerComponent = require('../core/component').registerComponent; var bind = require('../utils/bind'); var trackedControlsUtils = require('../utils/tracked-controls'); var checkControllerPresentAndSetup = trackedControlsUtils.checkControllerPresentAndSetup; var emitIfAxesChanged = trackedControlsUtils.emitIfAxesChanged; var onButtonEvent = trackedControlsUtils.onButtonEvent; var VIVE_CONTROLLER_MODEL_OBJ_URL = 'https://cdn.aframe.io/controllers/vive/vr_controller_vive.obj'; var VIVE_CONTROLLER_MODEL_OBJ_MTL = 'https://cdn.aframe.io/controllers/vive/vr_controller_vive.mtl'; var GAMEPAD_ID_PREFIX = 'OpenVR '; /** * Vive controls. * Interface with Vive controllers and map Gamepad events to controller buttons: * trackpad, trigger, grip, menu, system * Load a controller model and highlight the pressed buttons. */ module.exports.Component = registerComponent('vive-controls', { schema: { hand: {default: 'left'}, buttonColor: {type: 'color', default: '#FAFAFA'}, // Off-white. buttonHighlightColor: {type: 'color', default: '#22D1EE'}, // Light blue. model: {default: true}, orientationOffset: {type: 'vec3'} }, /** * Button IDs: * 0 - trackpad * 1 - trigger (intensity value from 0.5 to 1) * 2 - grip * 3 - menu (dispatch but better for menu options) * 4 - system (never dispatched on this layer) */ mapping: { axes: {trackpad: [0, 1]}, buttons: ['trackpad', 'trigger', 'grip', 'menu', 'system'] }, init: function () { var self = this; this.controllerPresent = false; this.lastControllerCheck = 0; this.onButtonChanged = bind(this.onButtonChanged, this); this.onButtonDown = function (evt) { onButtonEvent(evt.detail.id, 'down', self); }; this.onButtonUp = function (evt) { onButtonEvent(evt.detail.id, 'up', self); }; this.onButtonTouchEnd = function (evt) { onButtonEvent(evt.detail.id, 'touchend', self); }; this.onButtonTouchStart = function (evt) { onButtonEvent(evt.detail.id, 'touchstart', self); }; this.previousButtonValues = {}; this.rendererSystem = this.el.sceneEl.systems.renderer; this.bindMethods(); }, play: function () { this.checkIfControllerPresent(); this.addControllersUpdateListener(); }, pause: function () { this.removeEventListeners(); this.removeControllersUpdateListener(); }, bindMethods: function () { this.onModelLoaded = bind(this.onModelLoaded, this); this.onControllersUpdate = bind(this.onControllersUpdate, this); this.checkIfControllerPresent = bind(this.checkIfControllerPresent, this); this.removeControllersUpdateListener = bind(this.removeControllersUpdateListener, this); this.onAxisMoved = bind(this.onAxisMoved, this); }, addEventListeners: function () { var el = this.el; el.addEventListener('buttonchanged', this.onButtonChanged); el.addEventListener('buttondown', this.onButtonDown); el.addEventListener('buttonup', this.onButtonUp); el.addEventListener('touchend', this.onButtonTouchEnd); el.addEventListener('touchstart', this.onButtonTouchStart); el.addEventListener('model-loaded', this.onModelLoaded); el.addEventListener('axismove', this.onAxisMoved); this.controllerEventsActive = true; }, removeEventListeners: function () { var el = this.el; el.removeEventListener('buttonchanged', this.onButtonChanged); el.removeEventListener('buttondown', this.onButtonDown); el.removeEventListener('buttonup', this.onButtonUp); el.removeEventListener('touchend', this.onButtonTouchEnd); el.removeEventListener('touchstart', this.onButtonTouchStart); el.removeEventListener('model-loaded', this.onModelLoaded); el.removeEventListener('axismove', this.onAxisMoved); this.controllerEventsActive = false; }, /** * Once OpenVR returns correct hand data in supporting browsers, we can use hand property. * var isPresent = checkControllerPresentAndSetup(this.el.sceneEl, GAMEPAD_ID_PREFIX, { hand: data.hand }); * Until then, use hardcoded index. */ checkIfControllerPresent: function () { var data = this.data; var controllerIndex = data.hand === 'right' ? 0 : data.hand === 'left' ? 1 : 2; checkControllerPresentAndSetup(this, GAMEPAD_ID_PREFIX, {index: controllerIndex}); }, injectTrackedControls: function () { var el = this.el; var data = this.data; // If we have an OpenVR Gamepad, use the fixed mapping. el.setAttribute('tracked-controls', { idPrefix: GAMEPAD_ID_PREFIX, // Hand IDs: 1 = right, 0 = left, 2 = anything else. controller: data.hand === 'right' ? 1 : data.hand === 'left' ? 0 : 2, orientationOffset: data.orientationOffset }); // Load model. if (!this.data.model) { return; } this.el.setAttribute('obj-model', { obj: VIVE_CONTROLLER_MODEL_OBJ_URL, mtl: VIVE_CONTROLLER_MODEL_OBJ_MTL }); }, addControllersUpdateListener: function () { this.el.sceneEl.addEventListener('controllersupdated', this.onControllersUpdate, false); }, removeControllersUpdateListener: function () { this.el.sceneEl.removeEventListener('controllersupdated', this.onControllersUpdate, false); }, onControllersUpdate: function () { this.checkIfControllerPresent(); }, /** * Rotate the trigger button based on how hard the trigger is pressed. */ onButtonChanged: function (evt) { var button = this.mapping.buttons[evt.detail.id]; var buttonMeshes = this.buttonMeshes; var analogValue; if (!button) { return; } if (button === 'trigger') { analogValue = evt.detail.state.value; // Update trigger rotation depending on button value. if (buttonMeshes && buttonMeshes.trigger) { buttonMeshes.trigger.rotation.x = -analogValue * (Math.PI / 12); } } // Pass along changed event with button state, using button mapping for convenience. this.el.emit(button + 'changed', evt.detail.state); }, onModelLoaded: function (evt) { var buttonMeshes; var controllerObject3D = evt.detail.model; var self = this; if (!this.data.model) { return; } // Store button meshes object to be able to change their colors. buttonMeshes = this.buttonMeshes = {}; buttonMeshes.grip = { left: controllerObject3D.getObjectByName('leftgrip'), right: controllerObject3D.getObjectByName('rightgrip') }; buttonMeshes.menu = controllerObject3D.getObjectByName('menubutton'); buttonMeshes.system = controllerObject3D.getObjectByName('systembutton'); buttonMeshes.trackpad = controllerObject3D.getObjectByName('touchpad'); buttonMeshes.trigger = controllerObject3D.getObjectByName('trigger'); // Set default colors. Object.keys(buttonMeshes).forEach(function (buttonName) { self.setButtonColor(buttonName, self.data.buttonColor); }); // Offset pivot point. controllerObject3D.position.set(0, -0.015, 0.04); }, onAxisMoved: function (evt) { emitIfAxesChanged(this, this.mapping.axes, evt); }, updateModel: function (buttonName, evtName) { var color; var isTouch; if (!this.data.model) { return; } isTouch = evtName.indexOf('touch') !== -1; // Don't change color for trackpad touch. if (isTouch) { return; } // Update colors. color = evtName === 'up' ? this.data.buttonColor : this.data.buttonHighlightColor; this.setButtonColor(buttonName, color); }, setButtonColor: function (buttonName, color) { var buttonMeshes = this.buttonMeshes; var rendererSystem = this.rendererSystem; if (!buttonMeshes) { return; } // Need to do both left and right sides for grip. if (buttonName === 'grip') { buttonMeshes.grip.left.material.color.set(color); buttonMeshes.grip.right.material.color.set(color); rendererSystem.applyColorCorrection(buttonMeshes.grip.left.material.color); rendererSystem.applyColorCorrection(buttonMeshes.grip.right.material.color); return; } buttonMeshes[buttonName].material.color.set(color); rendererSystem.applyColorCorrection(buttonMeshes[buttonName].material.color); } }); ",
    "var registerComponent = require('../core/component').registerComponent; var bind = require('../utils/bind'); var trackedControlsUtils = require('../utils/tracked-controls'); var checkControllerPresentAndSetup = trackedControlsUtils.checkControllerPresentAndSetup; var emitIfAxesChanged = trackedControlsUtils.emitIfAxesChanged; var onButtonEvent = trackedControlsUtils.onButtonEvent; var GAMEPAD_ID_PREFIX = 'HTC Vive Focus'; var VIVE_FOCUS_CONTROLLER_MODEL_URL = 'https://cdn.aframe.io/controllers/vive/focus-controller/focus-controller.gltf'; /** * Vive Focus controls. * Interface with Vive Focus controller and map Gamepad events to * controller buttons: trackpad, trigger * Load a controller model and highlight the pressed buttons. */ module.exports.Component = registerComponent('vive-focus-controls', { schema: { hand: {default: ''}, // This informs the degenerate arm model. buttonTouchedColor: {type: 'color', default: '#BBBBBB'}, buttonHighlightColor: {type: 'color', default: '#7A7A7A'}, model: {default: true}, orientationOffset: {type: 'vec3'}, armModel: {default: true} }, /** * Button IDs: * 0 - trackpad * 1 - trigger */ mapping: { axes: {trackpad: [0, 1]}, buttons: ['trigger', 'trackpad'] }, bindMethods: function () { this.onModelLoaded = bind(this.onModelLoaded, this); this.onControllersUpdate = bind(this.onControllersUpdate, this); this.checkIfControllerPresent = bind(this.checkIfControllerPresent, this); this.removeControllersUpdateListener = bind(this.removeControllersUpdateListener, this); this.onAxisMoved = bind(this.onAxisMoved, this); }, init: function () { var self = this; this.onButtonChanged = bind(this.onButtonChanged, this); this.onButtonDown = function (evt) { onButtonEvent(evt.detail.id, 'down', self); }; this.onButtonUp = function (evt) { onButtonEvent(evt.detail.id, 'up', self); }; this.onButtonTouchStart = function (evt) { onButtonEvent(evt.detail.id, 'touchstart', self); }; this.onButtonTouchEnd = function (evt) { onButtonEvent(evt.detail.id, 'touchend', self); }; this.controllerPresent = false; this.lastControllerCheck = 0; this.bindMethods(); }, addEventListeners: function () { var el = this.el; el.addEventListener('buttonchanged', this.onButtonChanged); el.addEventListener('buttondown', this.onButtonDown); el.addEventListener('buttonup', this.onButtonUp); el.addEventListener('touchstart', this.onButtonTouchStart); el.addEventListener('touchend', this.onButtonTouchEnd); el.addEventListener('model-loaded', this.onModelLoaded); el.addEventListener('axismove', this.onAxisMoved); this.controllerEventsActive = true; this.addControllersUpdateListener(); }, removeEventListeners: function () { var el = this.el; el.removeEventListener('buttonchanged', this.onButtonChanged); el.removeEventListener('buttondown', this.onButtonDown); el.removeEventListener('buttonup', this.onButtonUp); el.removeEventListener('touchstart', this.onButtonTouchStart); el.removeEventListener('touchend', this.onButtonTouchEnd); el.removeEventListener('model-loaded', this.onModelLoaded); el.removeEventListener('axismove', this.onAxisMoved); this.controllerEventsActive = false; this.removeControllersUpdateListener(); }, checkIfControllerPresent: function () { checkControllerPresentAndSetup(this, GAMEPAD_ID_PREFIX, this.data.hand ? {hand: this.data.hand} : {}); }, play: function () { this.checkIfControllerPresent(); this.addControllersUpdateListener(); }, pause: function () { this.removeEventListeners(); this.removeControllersUpdateListener(); }, injectTrackedControls: function () { var el = this.el; var data = this.data; el.setAttribute('tracked-controls', { armModel: data.armModel, idPrefix: GAMEPAD_ID_PREFIX, orientationOffset: data.orientationOffset }); if (!this.data.model) { return; } this.el.setAttribute('gltf-model', VIVE_FOCUS_CONTROLLER_MODEL_URL); }, addControllersUpdateListener: function () { this.el.sceneEl.addEventListener('controllersupdated', this.onControllersUpdate, false); }, removeControllersUpdateListener: function () { this.el.sceneEl.removeEventListener('controllersupdated', this.onControllersUpdate, false); }, onControllersUpdate: function () { this.checkIfControllerPresent(); }, onModelLoaded: function (evt) { var controllerObject3D = evt.detail.model; var buttonMeshes; if (!this.data.model) { return; } buttonMeshes = this.buttonMeshes = {}; buttonMeshes.trigger = controllerObject3D.getObjectByName('BumperKey'); buttonMeshes.triggerPressed = controllerObject3D.getObjectByName('BumperKey_Press'); if (buttonMeshes.triggerPressed) { buttonMeshes.triggerPressed.visible = false; } buttonMeshes.trackpad = controllerObject3D.getObjectByName('TouchPad'); buttonMeshes.trackpadPressed = controllerObject3D.getObjectByName('TouchPad_Press'); if (buttonMeshes.trackpadPressed) { buttonMeshes.trackpadPressed.visible = false; } }, // No analog buttons, only emits 0/1 values onButtonChanged: function (evt) { var button = this.mapping.buttons[evt.detail.id]; if (!button) return; // Pass along changed event with button state, using button mapping for convenience. this.el.emit(button + 'changed', evt.detail.state); }, onAxisMoved: function (evt) { emitIfAxesChanged(this, this.mapping.axes, evt); }, updateModel: function (buttonName, evtName) { if (!this.data.model) { return; } this.updateButtonModel(buttonName, evtName); }, updateButtonModel: function (buttonName, state) { var buttonMeshes = this.buttonMeshes; var pressedName = buttonName + 'Pressed'; if (!buttonMeshes || !buttonMeshes[buttonName] || !buttonMeshes[pressedName]) { return; } var color; switch (state) { case 'down': color = this.data.buttonHighlightColor; break; case 'touchstart': color = this.data.buttonTouchedColor; break; } if (color) { buttonMeshes[pressedName].material.color.set(color); } buttonMeshes[pressedName].visible = !!color; buttonMeshes[buttonName].visible = !color; } }); ",
    "var KEYCODE_TO_CODE = require('../constants').keyboardevent.KEYCODE_TO_CODE; var registerComponent = require('../core/component').registerComponent; var THREE = require('../lib/three'); var utils = require('../utils/'); var bind = utils.bind; var shouldCaptureKeyEvent = utils.shouldCaptureKeyEvent; var CLAMP_VELOCITY = 0.00001; var MAX_DELTA = 0.2; var KEYS = [ 'KeyW', 'KeyA', 'KeyS', 'KeyD', 'ArrowUp', 'ArrowLeft', 'ArrowRight', 'ArrowDown' ]; /** * WASD component to control entities using WASD keys. */ module.exports.Component = registerComponent('wasd-controls', { schema: { acceleration: {default: 65}, adAxis: {default: 'x', oneOf: ['x', 'y', 'z']}, adEnabled: {default: true}, adInverted: {default: false}, enabled: {default: true}, fly: {default: false}, wsAxis: {default: 'z', oneOf: ['x', 'y', 'z']}, wsEnabled: {default: true}, wsInverted: {default: false} }, init: function () { // To keep track of the pressed keys. this.keys = {}; this.easing = 1.1; this.velocity = new THREE.Vector3(); // Bind methods and add event listeners. this.onBlur = bind(this.onBlur, this); this.onFocus = bind(this.onFocus, this); this.onKeyDown = bind(this.onKeyDown, this); this.onKeyUp = bind(this.onKeyUp, this); this.onVisibilityChange = bind(this.onVisibilityChange, this); this.attachVisibilityEventListeners(); }, tick: function (time, delta) { var data = this.data; var el = this.el; var velocity = this.velocity; if (!velocity[data.adAxis] && !velocity[data.wsAxis] && isEmptyObject(this.keys)) { return; } // Update velocity. delta = delta / 1000; this.updateVelocity(delta); if (!velocity[data.adAxis] && !velocity[data.wsAxis]) { return; } // Get movement vector and translate position. el.object3D.position.add(this.getMovementVector(delta)); }, remove: function () { this.removeKeyEventListeners(); this.removeVisibilityEventListeners(); }, play: function () { this.attachKeyEventListeners(); }, pause: function () { this.keys = {}; this.removeKeyEventListeners(); }, updateVelocity: function (delta) { var acceleration; var adAxis; var adSign; var data = this.data; var keys = this.keys; var velocity = this.velocity; var wsAxis; var wsSign; adAxis = data.adAxis; wsAxis = data.wsAxis; // If FPS too low, reset velocity. if (delta > MAX_DELTA) { velocity[adAxis] = 0; velocity[wsAxis] = 0; return; } // https://gamedev.stackexchange.com/questions/151383/frame-rate-independant-movement-with-acceleration var scaledEasing = Math.pow(1 / this.easing, delta * 60); // Velocity Easing. if (velocity[adAxis] !== 0) { velocity[adAxis] -= velocity[adAxis] * scaledEasing; } if (velocity[wsAxis] !== 0) { velocity[wsAxis] -= velocity[wsAxis] * scaledEasing; } // Clamp velocity easing. if (Math.abs(velocity[adAxis]) < CLAMP_VELOCITY) { velocity[adAxis] = 0; } if (Math.abs(velocity[wsAxis]) < CLAMP_VELOCITY) { velocity[wsAxis] = 0; } if (!data.enabled) { return; } // Update velocity using keys pressed. acceleration = data.acceleration; if (data.adEnabled) { adSign = data.adInverted ? -1 : 1; if (keys.KeyA || keys.ArrowLeft) { velocity[adAxis] -= adSign * acceleration * delta; } if (keys.KeyD || keys.ArrowRight) { velocity[adAxis] += adSign * acceleration * delta; } } if (data.wsEnabled) { wsSign = data.wsInverted ? -1 : 1; if (keys.KeyW || keys.ArrowUp) { velocity[wsAxis] -= wsSign * acceleration * delta; } if (keys.KeyS || keys.ArrowDown) { velocity[wsAxis] += wsSign * acceleration * delta; } } }, getMovementVector: (function () { var directionVector = new THREE.Vector3(0, 0, 0); var rotationEuler = new THREE.Euler(0, 0, 0, 'YXZ'); return function (delta) { var rotation = this.el.getAttribute('rotation'); var velocity = this.velocity; var xRotation; directionVector.copy(velocity); directionVector.multiplyScalar(delta); // Absolute. if (!rotation) { return directionVector; } xRotation = this.data.fly ? rotation.x : 0; // Transform direction relative to heading. rotationEuler.set(THREE.Math.degToRad(xRotation), THREE.Math.degToRad(rotation.y), 0); directionVector.applyEuler(rotationEuler); return directionVector; }; })(), attachVisibilityEventListeners: function () { window.addEventListener('blur', this.onBlur); window.addEventListener('focus', this.onFocus); document.addEventListener('visibilitychange', this.onVisibilityChange); }, removeVisibilityEventListeners: function () { window.removeEventListener('blur', this.onBlur); window.removeEventListener('focus', this.onFocus); document.removeEventListener('visibilitychange', this.onVisibilityChange); }, attachKeyEventListeners: function () { window.addEventListener('keydown', this.onKeyDown); window.addEventListener('keyup', this.onKeyUp); }, removeKeyEventListeners: function () { window.removeEventListener('keydown', this.onKeyDown); window.removeEventListener('keyup', this.onKeyUp); }, onBlur: function () { this.pause(); }, onFocus: function () { this.play(); }, onVisibilityChange: function () { if (document.hidden) { this.onBlur(); } else { this.onFocus(); } }, onKeyDown: function (event) { var code; if (!shouldCaptureKeyEvent(event)) { return; } code = event.code || KEYCODE_TO_CODE[event.keyCode]; if (KEYS.indexOf(code) !== -1) { this.keys[code] = true; } }, onKeyUp: function (event) { var code; code = event.code || KEYCODE_TO_CODE[event.keyCode]; delete this.keys[code]; } }); function isEmptyObject (keys) { var key; for (key in keys) { return false; } return true; } ",
    "/* global THREE */ var registerComponent = require('../core/component').registerComponent; var bind = require('../utils/bind'); var trackedControlsUtils = require('../utils/tracked-controls'); var checkControllerPresentAndSetup = trackedControlsUtils.checkControllerPresentAndSetup; var emitIfAxesChanged = trackedControlsUtils.emitIfAxesChanged; var onButtonEvent = trackedControlsUtils.onButtonEvent; var utils = require('../utils/'); var debug = utils.debug('components:windows-motion-controls:debug'); var warn = utils.debug('components:windows-motion-controls:warn'); var DEFAULT_HANDEDNESS = require('../constants').DEFAULT_HANDEDNESS; var MODEL_BASE_URL = 'https://cdn.aframe.io/controllers/microsoft/'; var MODEL_FILENAMES = { left: 'left.glb', right: 'right.glb', default: 'universal.glb' }; var GAMEPAD_ID_PREFIX = 'Spatial Controller (Spatial Interaction Source) '; var GAMEPAD_ID_PATTERN = /([0-9a-zA-Z]+-[0-9a-zA-Z]+)$/; /** * Windows Motion Controller controls. * Interface with Windows Motion Controller controllers and map Gamepad events to * controller buttons: trackpad, trigger, grip, menu, thumbstick * Load a controller model and transform the pressed buttons. */ module.exports.Component = registerComponent('windows-motion-controls', { schema: { hand: {default: DEFAULT_HANDEDNESS}, // It is possible to have multiple pairs of controllers attached (a pair has both left and right). // Set this to 1 to use a controller from the second pair, 2 from the third pair, etc. pair: {default: 0}, // If true, loads the controller glTF asset. model: {default: true}, // If true, will hide the model from the scene if no matching gamepad (based on ID & hand) is connected. hideDisconnected: {default: true} }, mapping: { // A-Frame specific semantic axis names axes: {'thumbstick': [0, 1], 'trackpad': [2, 3]}, // A-Frame specific semantic button names buttons: ['thumbstick', 'trigger', 'grip', 'menu', 'trackpad'], // A mapping of the semantic name to node name in the glTF model file, // that should be transformed by axis value. // This array mirrors the browser Gamepad.axes array, such that // the mesh corresponding to axis 0 is in this array index 0. axisMeshNames: [ 'THUMBSTICK_X', 'THUMBSTICK_Y', 'TOUCHPAD_TOUCH_X', 'TOUCHPAD_TOUCH_Y' ], // A mapping of the semantic name to button node name in the glTF model file, // that should be transformed by button value. buttonMeshNames: { 'trigger': 'SELECT', 'menu': 'MENU', 'grip': 'GRASP', 'thumbstick': 'THUMBSTICK_PRESS', 'trackpad': 'TOUCHPAD_PRESS' }, pointingPoseMeshName: 'POINTING_POSE' }, bindMethods: function () { this.onModelError = bind(this.onModelError, this); this.onModelLoaded = bind(this.onModelLoaded, this); this.onControllersUpdate = bind(this.onControllersUpdate, this); this.checkIfControllerPresent = bind(this.checkIfControllerPresent, this); this.onAxisMoved = bind(this.onAxisMoved, this); }, init: function () { var self = this; var el = this.el; this.onButtonChanged = bind(this.onButtonChanged, this); this.onButtonDown = function (evt) { onButtonEvent(evt.detail.id, 'down', self); }; this.onButtonUp = function (evt) { onButtonEvent(evt.detail.id, 'up', self); }; this.onButtonTouchStart = function (evt) { onButtonEvent(evt.detail.id, 'touchstart', self); }; this.onButtonTouchEnd = function (evt) { onButtonEvent(evt.detail.id, 'touchend', self); }; this.onControllerConnected = function () { self.setModelVisibility(true); }; this.onControllerDisconnected = function () { self.setModelVisibility(false); }; this.controllerPresent = false; this.lastControllerCheck = 0; this.previousButtonValues = {}; this.bindMethods(); // Cache for submeshes that we have looked up by name. this.loadedMeshInfo = { buttonMeshes: null, axisMeshes: null }; // Pointing poses this.rayOrigin = { origin: new THREE.Vector3(), direction: new THREE.Vector3(0, 0, -1), createdFromMesh: false }; el.addEventListener('controllerconnected', this.onControllerConnected); el.addEventListener('controllerdisconnected', this.onControllerDisconnected); }, addEventListeners: function () { var el = this.el; el.addEventListener('buttonchanged', this.onButtonChanged); el.addEventListener('buttondown', this.onButtonDown); el.addEventListener('buttonup', this.onButtonUp); el.addEventListener('touchstart', this.onButtonTouchStart); el.addEventListener('touchend', this.onButtonTouchEnd); el.addEventListener('axismove', this.onAxisMoved); el.addEventListener('model-error', this.onModelError); el.addEventListener('model-loaded', this.onModelLoaded); this.controllerEventsActive = true; }, removeEventListeners: function () { var el = this.el; el.removeEventListener('buttonchanged', this.onButtonChanged); el.removeEventListener('buttondown', this.onButtonDown); el.removeEventListener('buttonup', this.onButtonUp); el.removeEventListener('touchstart', this.onButtonTouchStart); el.removeEventListener('touchend', this.onButtonTouchEnd); el.removeEventListener('axismove', this.onAxisMoved); el.removeEventListener('model-error', this.onModelError); el.removeEventListener('model-loaded', this.onModelLoaded); this.controllerEventsActive = false; }, checkIfControllerPresent: function () { checkControllerPresentAndSetup(this, GAMEPAD_ID_PREFIX, { hand: this.data.hand, index: this.data.pair }); }, play: function () { this.checkIfControllerPresent(); this.addControllersUpdateListener(); }, pause: function () { this.removeEventListeners(); this.removeControllersUpdateListener(); }, updateControllerModel: function () { // If we do not want to load a model, or, have already loaded the model, emit the controllermodelready event. if (!this.data.model || this.rayOrigin.createdFromMesh) { this.modelReady(); return; } var sourceUrl = this.createControllerModelUrl(); this.loadModel(sourceUrl); }, /** * Helper function that constructs a URL from the controller ID suffix, for future proofed * art assets. */ createControllerModelUrl: function (forceDefault) { // Determine the device specific folder based on the ID suffix var trackedControlsComponent = this.el.components['tracked-controls']; var controller = trackedControlsComponent ? trackedControlsComponent.controller : null; var device = 'default'; var hand = this.data.hand; var filename; if (controller) { // Read hand directly from the controller, rather than this.data, as in the case that the controller // is unhanded this.data will still have 'left' or 'right' (depending on what the user inserted in to the scene). // In this case, we want to load the universal model, so need to get the '' from the controller. hand = controller.hand; if (!forceDefault) { var match = controller.id.match(GAMEPAD_ID_PATTERN); device = ((match && match[0]) || device); } } // Hand filename = MODEL_FILENAMES[hand] || MODEL_FILENAMES.default; // Final url return MODEL_BASE_URL + device + '/' + filename; }, injectTrackedControls: function () { var data = this.data; this.el.setAttribute('tracked-controls', { idPrefix: GAMEPAD_ID_PREFIX, controller: data.pair, hand: data.hand, armModel: false }); this.updateControllerModel(); }, addControllersUpdateListener: function () { this.el.sceneEl.addEventListener('controllersupdated', this.onControllersUpdate, false); }, removeControllersUpdateListener: function () { this.el.sceneEl.removeEventListener('controllersupdated', this.onControllersUpdate, false); }, onControllersUpdate: function () { this.checkIfControllerPresent(); }, onModelError: function (evt) { var defaultUrl = this.createControllerModelUrl(true); if (evt.detail.src !== defaultUrl) { warn('Failed to load controller model for device, attempting to load default.'); this.loadModel(defaultUrl); } else { warn('Failed to load default controller model.'); } }, loadModel: function (url) { // The model is loaded by the gltf-model compoent when this attribute is initially set, // removed and re-loaded if the given url changes. this.el.setAttribute('gltf-model', 'url(' + url + ')'); }, onModelLoaded: function (evt) { var rootNode = this.controllerModel = evt.detail.model; var loadedMeshInfo = this.loadedMeshInfo; var i; var meshName; var mesh; var meshInfo; debug('Processing model'); // Reset the caches loadedMeshInfo.buttonMeshes = {}; loadedMeshInfo.axisMeshes = {}; // Cache our meshes so we aren't traversing the hierarchy per frame if (rootNode) { // Button Meshes for (i = 0; i < this.mapping.buttons.length; i++) { meshName = this.mapping.buttonMeshNames[this.mapping.buttons[i]]; if (!meshName) { debug('Skipping unknown button at index: ' + i + ' with mapped name: ' + this.mapping.buttons[i]); continue; } mesh = rootNode.getObjectByName(meshName); if (!mesh) { warn('Missing button mesh with name: ' + meshName); continue; } meshInfo = { index: i, value: getImmediateChildByName(mesh, 'VALUE'), pressed: getImmediateChildByName(mesh, 'PRESSED'), unpressed: getImmediateChildByName(mesh, 'UNPRESSED') }; if (meshInfo.value && meshInfo.pressed && meshInfo.unpressed) { loadedMeshInfo.buttonMeshes[this.mapping.buttons[i]] = meshInfo; } else { // If we didn't find the mesh, it simply means this button won't have transforms applied as mapped button value changes. warn('Missing button submesh under mesh with name: ' + meshName + '(VALUE: ' + !!meshInfo.value + ', PRESSED: ' + !!meshInfo.pressed + ', UNPRESSED:' + !!meshInfo.unpressed + ')'); } } // Axis Meshes for (i = 0; i < this.mapping.axisMeshNames.length; i++) { meshName = this.mapping.axisMeshNames[i]; if (!meshName) { debug('Skipping unknown axis at index: ' + i); continue; } mesh = rootNode.getObjectByName(meshName); if (!mesh) { warn('Missing axis mesh with name: ' + meshName); continue; } meshInfo = { index: i, value: getImmediateChildByName(mesh, 'VALUE'), min: getImmediateChildByName(mesh, 'MIN'), max: getImmediateChildByName(mesh, 'MAX') }; if (meshInfo.value && meshInfo.min && meshInfo.max) { loadedMeshInfo.axisMeshes[i] = meshInfo; } else { // If we didn't find the mesh, it simply means this axis won't have transforms applied as mapped axis values change. warn('Missing axis submesh under mesh with name: ' + meshName + '(VALUE: ' + !!meshInfo.value + ', MIN: ' + !!meshInfo.min + ', MAX:' + !!meshInfo.max + ')'); } } this.calculateRayOriginFromMesh(rootNode); // Determine if the model has to be visible or not. this.setModelVisibility(); } debug('Model load complete.'); // Look through only immediate children. This will return null if no mesh exists with the given name. function getImmediateChildByName (object3d, value) { for (var i = 0, l = object3d.children.length; i < l; i++) { var obj = object3d.children[i]; if (obj && obj['name'] === value) { return obj; } } return undefined; } }, calculateRayOriginFromMesh: (function () { var quaternion = new THREE.Quaternion(); return function (rootNode) { var mesh; // Calculate the pointer pose (used for rays), by applying the world transform of th POINTER_POSE node // in the glTF (assumes that root node is at world origin) this.rayOrigin.origin.set(0, 0, 0); this.rayOrigin.direction.set(0, 0, -1); this.rayOrigin.createdFromMesh = true; // Try to read Pointing pose from the source model mesh = rootNode.getObjectByName(this.mapping.pointingPoseMeshName); if (mesh) { var parent = rootNode.parent; // We need to read pose transforms accumulated from the root of the glTF, not the scene. if (parent) { rootNode.parent = null; rootNode.updateMatrixWorld(true); rootNode.parent = parent; } mesh.getWorldPosition(this.rayOrigin.origin); mesh.getWorldQuaternion(quaternion); this.rayOrigin.direction.applyQuaternion(quaternion); // Recalculate the world matrices now that the rootNode is re-attached to the parent. if (parent) { rootNode.updateMatrixWorld(true); } } else { debug('Mesh does not contain pointing origin data, defaulting to none.'); } // Emit event stating that our pointing ray is now accurate. this.modelReady(); }; })(), lerpAxisTransform: (function () { var quaternion = new THREE.Quaternion(); return function (axis, axisValue) { var axisMeshInfo = this.loadedMeshInfo.axisMeshes[axis]; if (!axisMeshInfo) return; var min = axisMeshInfo.min; var max = axisMeshInfo.max; var target = axisMeshInfo.value; // Convert from gamepad value range (-1 to +1) to lerp range (0 to 1) var lerpValue = axisValue * 0.5 + 0.5; target.setRotationFromQuaternion(quaternion.copy(min.quaternion).slerp(max.quaternion, lerpValue)); target.position.lerpVectors(min.position, max.position, lerpValue); }; })(), lerpButtonTransform: (function () { var quaternion = new THREE.Quaternion(); return function (buttonName, buttonValue) { var buttonMeshInfo = this.loadedMeshInfo.buttonMeshes[buttonName]; if (!buttonMeshInfo) return; var min = buttonMeshInfo.unpressed; var max = buttonMeshInfo.pressed; var target = buttonMeshInfo.value; target.setRotationFromQuaternion(quaternion.copy(min.quaternion).slerp(max.quaternion, buttonValue)); target.position.lerpVectors(min.position, max.position, buttonValue); }; })(), modelReady: function () { this.el.emit('controllermodelready', { name: 'windows-motion-controls', model: this.data.model, rayOrigin: this.rayOrigin }); }, onButtonChanged: function (evt) { var buttonName = this.mapping.buttons[evt.detail.id]; if (buttonName) { // Update the button mesh transform if (this.loadedMeshInfo && this.loadedMeshInfo.buttonMeshes) { this.lerpButtonTransform(buttonName, evt.detail.state.value); } // Only emit events for buttons that we know how to map from index to name this.el.emit(buttonName + 'changed', evt.detail.state); } }, onAxisMoved: function (evt) { var numAxes = this.mapping.axisMeshNames.length; // Only attempt to update meshes if we have valid data. if (this.loadedMeshInfo && this.loadedMeshInfo.axisMeshes) { for (var axis = 0; axis < numAxes; axis++) { // Update the button mesh transform this.lerpAxisTransform(axis, evt.detail.axis[axis] || 0.0); } } emitIfAxesChanged(this, this.mapping.axes, evt); }, setModelVisibility: function (visible) { var model = this.el.getObject3D('mesh'); visible = visible !== undefined ? visible : this.modelVisible; this.modelVisible = visible; if (!model) { return; } model.visible = visible; } }); ",
    "module.exports = { AFRAME_INJECTED: 'aframe-injected', DEFAULT_CAMERA_HEIGHT: 1.6, DEFAULT_HANDEDNESS: 'right', keyboardevent: require('./keyboardevent') }; ",
    "module.exports = { // Tiny KeyboardEvent.code polyfill. KEYCODE_TO_CODE: { '38': 'ArrowUp', '37': 'ArrowLeft', '40': 'ArrowDown', '39': 'ArrowRight', '87': 'KeyW', '65': 'KeyA', '83': 'KeyS', '68': 'KeyD' } }; ",
    "var ANode = require('./a-node'); var bind = require('../utils/bind'); var debug = require('../utils/debug'); var registerElement = require('./a-register-element').registerElement; var THREE = require('../lib/three'); var fileLoader = new THREE.FileLoader(); var warn = debug('core:a-assets:warn'); /** * Asset management system. Handles blocking on asset loading. */ module.exports = registerElement('a-assets', { prototype: Object.create(ANode.prototype, { createdCallback: { value: function () { this.isAssets = true; this.fileLoader = fileLoader; this.timeout = null; } }, attachedCallback: { value: function () { var self = this; var i; var loaded = []; var mediaEl; var mediaEls; var imgEl; var imgEls; var timeout; if (!this.parentNode.isScene) { throw new Error('<a-assets> must be a child of a <a-scene>.'); } // Wait for <img>s. imgEls = this.querySelectorAll('img'); for (i = 0; i < imgEls.length; i++) { imgEl = fixUpMediaElement(imgEls[i]); loaded.push(new Promise(function (resolve, reject) { // Set in cache because we won't be needing to call three.js loader if we have. // a loaded media element. THREE.Cache.files[imgEls[i].getAttribute('src')] = imgEl; imgEl.onload = resolve; imgEl.onerror = reject; })); } // Wait for <audio>s and <video>s. mediaEls = this.querySelectorAll('audio, video'); for (i = 0; i < mediaEls.length; i++) { mediaEl = fixUpMediaElement(mediaEls[i]); if (!mediaEl.src && !mediaEl.srcObject) { warn('Audio/video asset has neither `src` nor `srcObject` attributes.'); } loaded.push(mediaElementLoaded(mediaEl)); } // Trigger loaded for scene to start rendering. Promise.all(loaded).then(bind(this.load, this)); // Timeout to start loading anyways. timeout = parseInt(this.getAttribute('timeout'), 10) || 3000; this.timeout = setTimeout(function () { if (self.hasLoaded) { return; } warn('Asset loading timed out in ', timeout, 'ms'); self.emit('timeout'); self.load(); }, timeout); } }, detachedCallback: { value: function () { if (this.timeout) { clearTimeout(this.timeout); } } }, load: { value: function () { ANode.prototype.load.call(this, null, function waitOnFilter (el) { return el.isAssetItem && el.hasAttribute('src'); }); } } }) }); /** * Preload using XHRLoader for any type of asset. */ registerElement('a-asset-item', { prototype: Object.create(ANode.prototype, { createdCallback: { value: function () { this.data = null; this.isAssetItem = true; } }, attachedCallback: { value: function () { var self = this; var src = this.getAttribute('src'); fileLoader.setResponseType( this.getAttribute('response-type') || inferResponseType(src)); fileLoader.load(src, function handleOnLoad (response) { self.data = response; /* Workaround for a Chrome bug. If another XHR is sent to the same url before the previous one closes, the second request never finishes. setTimeout finishes the first request and lets the logic triggered by load open subsequent requests. setTimeout can be removed once the fix for the bug below ships: https://bugs.chromium.org/p/chromium/issues/detail?id=633696&q=component%3ABlink%3ENetwork%3EXHR%20&colspec=ID%20Pri%20M%20Stars%20ReleaseBlock%20Component%20Status%20Owner%20Summary%20OS%20Modified */ setTimeout(function load () { ANode.prototype.load.call(self); }); }, function handleOnProgress (xhr) { self.emit('progress', { loadedBytes: xhr.loaded, totalBytes: xhr.total, xhr: xhr }); }, function handleOnError (xhr) { self.emit('error', {xhr: xhr}); }); } } }) }); /** * Create a Promise that resolves once the media element has finished buffering. * * @param {Element} el - HTMLMediaElement. * @returns {Promise} */ function mediaElementLoaded (el) { if (!el.hasAttribute('autoplay') && el.getAttribute('preload') !== 'auto') { return; } // If media specifies autoplay or preload, wait until media is completely buffered. return new Promise(function (resolve, reject) { if (el.readyState === 4) { return resolve(); } // Already loaded. if (el.error) { return reject(); } // Error. el.addEventListener('loadeddata', checkProgress, false); el.addEventListener('progress', checkProgress, false); el.addEventListener('error', reject, false); function checkProgress () { // Add up the seconds buffered. var secondsBuffered = 0; for (var i = 0; i < el.buffered.length; i++) { secondsBuffered += el.buffered.end(i) - el.buffered.start(i); } // Compare seconds buffered to media duration. if (secondsBuffered >= el.duration) { // Set in cache because we won't be needing to call three.js loader if we have. // a loaded media element. // Store video elements only. three.js loader is used for audio elements. // See assetParse too. if (el.tagName === 'VIDEO') { THREE.Cache.files[el.getAttribute('src')] = el; } resolve(); } } }); } /** * Automatically add attributes to media elements where convenient. * crossorigin, playsinline. */ function fixUpMediaElement (mediaEl) { // Cross-origin. var newMediaEl = setCrossOrigin(mediaEl); // Plays inline for mobile. if (newMediaEl.tagName && newMediaEl.tagName.toLowerCase() === 'video') { newMediaEl.setAttribute('playsinline', ''); newMediaEl.setAttribute('webkit-playsinline', ''); } if (newMediaEl !== mediaEl) { mediaEl.parentNode.appendChild(newMediaEl); mediaEl.parentNode.removeChild(mediaEl); } return newMediaEl; } /** * Automatically set `crossorigin` if not defined on the media element. * If it is not defined, we must create and re-append a new media element <img> and * have the browser re-request it with `crossorigin` set. * * @param {Element} Media element (e.g., <img>, <audio>, <video>). * @returns {Element} Media element to be used to listen to for loaded events. */ function setCrossOrigin (mediaEl) { var newMediaEl; var src; // Already has crossorigin set. if (mediaEl.hasAttribute('crossorigin')) { return mediaEl; } src = mediaEl.getAttribute('src'); if (src !== null) { // Does not have protocol. if (src.indexOf('://') === -1) { return mediaEl; } // Determine if cross origin is actually needed. if (extractDomain(src) === window.location.host) { return mediaEl; } } warn('Cross-origin element (e.g., <img>) was requested without `crossorigin` set. ' + 'A-Frame will re-request the asset with `crossorigin` attribute set. ' + 'Please set `crossorigin` on the element (e.g., <img crossorigin="anonymous">)', src); mediaEl.crossOrigin = 'anonymous'; newMediaEl = mediaEl.cloneNode(true); return newMediaEl; } /** * Extract domain out of URL. * * @param {string} url * @returns {string} */ function extractDomain (url) { // Find and remove protocol (e.g., http, ftp, etc.) to get domain. var domain = url.indexOf('://') > -1 ? url.split('/')[2] : url.split('/')[0]; // Find and remove port number. return domain.substring(0, domain.indexOf(':')); } /** * Infer response-type attribute from src. * Default is text(default XMLHttpRequest.responseType) * but we use arraybuffer for .gltf and .glb files * because of THREE.GLTFLoader specification. * * @param {string} src * @returns {string} */ function inferResponseType (src) { var dotLastIndex = src.lastIndexOf('.'); if (dotLastIndex >= 0) { var extension = src.slice(dotLastIndex, src.length); if (extension === '.gltf' || extension === '.glb') { return 'arraybuffer'; } } return 'text'; } module.exports.inferResponseType = inferResponseType; ",
    "var debug = require('../utils/debug'); var registerElement = require('./a-register-element').registerElement; var warn = debug('core:cubemap:warn'); /** * Cubemap element that handles validation and exposes list of URLs. * Does not listen to updates. */ module.exports = registerElement('a-cubemap', { prototype: Object.create(window.HTMLElement.prototype, { /** * Calculates this.srcs. */ attachedCallback: { value: function () { this.srcs = this.validate(); }, writable: window.debug }, /** * Checks for exactly six elements with [src]. * Does not check explicitly for <img>s in case user does not want * prefetching. * * @returns {Array|null} - six URLs if valid, else null. */ validate: { value: function () { var elements = this.querySelectorAll('[src]'); var i; var srcs = []; if (elements.length === 6) { for (i = 0; i < elements.length; i++) { srcs.push(elements[i].getAttribute('src')); } return srcs; } // Else if there are not six elements, throw a warning. warn( '<a-cubemap> did not contain exactly six elements each with a ' + '`src` attribute.'); }, writable: window.debug } }) }); ",
    "var ANode = require('./a-node'); var COMPONENTS = require('./component').components; var registerElement = require('./a-register-element').registerElement; var THREE = require('../lib/three'); var utils = require('../utils/'); var AEntity; var debug = utils.debug('core:a-entity:debug'); var warn = utils.debug('core:a-entity:warn'); var MULTIPLE_COMPONENT_DELIMITER = '__'; var OBJECT3D_COMPONENTS = ['position', 'rotation', 'scale', 'visible']; var ONCE = {once: true}; /** * Entity is a container object that components are plugged into to comprise everything in * the scene. In A-Frame, they inherently have position, rotation, and scale. * * To be able to take components, the scene element inherits from the entity definition. * * @member {object} components - entity's currently initialized components. * @member {object} object3D - three.js object. * @member {array} states * @member {boolean} isPlaying - false if dynamic behavior of the entity is paused. */ var proto = Object.create(ANode.prototype, { createdCallback: { value: function () { this.components = {}; // To avoid double initializations and infinite loops. this.initializingComponents = {}; this.componentsToUpdate = {}; this.isEntity = true; this.isPlaying = false; this.object3D = new THREE.Group(); this.object3D.el = this; this.object3DMap = {}; this.parentEl = null; this.rotationObj = {}; this.states = []; } }, /** * Handle changes coming from the browser DOM inspector. */ attributeChangedCallback: { value: function (attr, oldVal, newVal) { var component = this.components[attr]; // If the empty string is passed by the component initialization // logic we ignore the component update. if (component && component.justInitialized && newVal === '') { delete component.justInitialized; return; } // When a component is removed after calling el.removeAttribute('material') if (!component && newVal === null) { return; } this.setEntityAttribute(attr, oldVal, newVal); } }, /** * Add to parent, load, play. */ attachedCallback: { value: function () { var assetsEl; // Asset management system element. var sceneEl = this.sceneEl; var self = this; // Component. this.addToParent(); // Don't .load() scene on attachedCallback. if (this.isScene) { return; } // Gracefully not error when outside of <a-scene> (e.g., tests). if (!sceneEl) { this.load(); return; } // Wait for asset management system to finish before loading. assetsEl = sceneEl.querySelector('a-assets'); if (assetsEl && !assetsEl.hasLoaded) { assetsEl.addEventListener('loaded', function () { self.load(); }); return; } this.load(); } }, /** * Tell parent to remove this element's object3D from its object3D. * Do not call on scene element because that will cause a call to document.body.remove(). */ detachedCallback: { value: function () { var componentName; if (!this.parentEl) { return; } // Remove components. for (componentName in this.components) { this.removeComponent(componentName, false); } if (this.isScene) { return; } this.removeFromParent(); ANode.prototype.detachedCallback.call(this); // Remove cyclic reference. this.object3D.el = null; } }, getObject3D: { value: function (type) { return this.object3DMap[type]; } }, /** * Set a THREE.Object3D into the map. * * @param {string} type - Developer-set name of the type of object, will be unique per type. * @param {object} obj - A THREE.Object3D. */ setObject3D: { value: function (type, obj) { var oldObj; var self = this; if (!(obj instanceof THREE.Object3D)) { throw new Error( '`Entity.setObject3D` was called with an object that was not an instance of ' + 'THREE.Object3D.' ); } // Remove existing object of the type. oldObj = this.getObject3D(type); if (oldObj) { this.object3D.remove(oldObj); } // Set references to A-Frame entity. obj.el = this; if (obj.children.length) { obj.traverse(function bindEl (child) { child.el = self; }); } // Add. this.object3D.add(obj); this.object3DMap[type] = obj; this.emit('object3dset', {object: obj, type: type}); } }, /** * Remove object from scene and entity object3D map. */ removeObject3D: { value: function (type) { var obj = this.getObject3D(type); if (!obj) { warn('Tried to remove `Object3D` of type:', type, 'which was not defined.'); return; } this.object3D.remove(obj); delete this.object3DMap[type]; this.emit('object3dremove', {type: type}); } }, /** * Gets or creates an object3D of a given type. * * @param {string} type - Type of the object3D. * @param {string} Constructor - Constructor to use to create the object3D if needed. * @returns {object} */ getOrCreateObject3D: { value: function (type, Constructor) { var object3D = this.getObject3D(type); if (!object3D && Constructor) { object3D = new Constructor(); this.setObject3D(type, object3D); } warn('`getOrCreateObject3D` has been deprecated. Use `setObject3D()` ' + 'and `object3dset` event instead.'); return object3D; } }, /** * Add child entity. * * @param {Element} el - Child entity. */ add: { value: function (el) { if (!el.object3D) { throw new Error("Trying to add an element that doesn't have an `object3D`"); } this.object3D.add(el.object3D); this.emit('child-attached', {el: el}); } }, /** * Tell parentNode to add this entity to itself. */ addToParent: { value: function () { var parentNode = this.parentEl = this.parentNode; // `!parentNode` check primarily for unit tests. if (!parentNode || !parentNode.add || this.attachedToParent) { return; } parentNode.add(this); this.attachedToParent = true; // To prevent multiple attachments to same parent. } }, /** * Tell parentNode to remove this entity from itself. */ removeFromParent: { value: function () { var parentEl = this.parentEl; this.parentEl.remove(this); this.attachedToParent = false; this.parentEl = null; parentEl.emit('child-detached', {el: this}); } }, load: { value: function () { var self = this; if (this.hasLoaded || !this.parentEl) { return; } ANode.prototype.load.call(this, function entityLoadCallback () { // Check if entity was detached while it was waiting to load. if (!self.parentEl) { return; } self.updateComponents(); if (self.isScene || self.parentEl.isPlaying) { self.play(); } }); }, writable: window.debug }, /** * Remove child entity. * * @param {Element} el - Child entity. */ remove: { value: function (el) { if (el) { this.object3D.remove(el.object3D); } else { this.parentNode.removeChild(this); } } }, /** * @returns {array} Direct children that are entities. */ getChildEntities: { value: function () { var children = this.children; var childEntities = []; for (var i = 0; i < children.length; i++) { var child = children[i]; if (child instanceof AEntity) { childEntities.push(child); } } return childEntities; } }, /** * Initialize component. * * @param {string} attrName - Attribute name asociated to the component. * @param {object} data - Component data * @param {boolean} isDependency - True if the component is a dependency. */ initComponent: { value: function (attrName, data, isDependency) { var component; var componentId; var componentInfo; var componentName; var isComponentDefined; componentInfo = utils.split(attrName, MULTIPLE_COMPONENT_DELIMITER); componentName = componentInfo[0]; componentId = componentInfo.length > 2 ? componentInfo.slice(1).join('__') : componentInfo[1]; // Not a registered component. if (!COMPONENTS[componentName]) { return; } // Component is not a dependency and is undefined. // If a component is a dependency, then it is okay to have no data. isComponentDefined = checkComponentDefined(this, attrName) || data !== undefined; if (!isComponentDefined && !isDependency) { return; } // Component already initialized. if (attrName in this.components) { return; } // Initialize dependencies first this.initComponentDependencies(componentName); // If component name has an id we check component type multiplic if (componentId && !COMPONENTS[componentName].multiple) { throw new Error('Trying to initialize multiple ' + 'components of type `' + componentName + '`. There can only be one component of this type per entity.'); } component = new COMPONENTS[componentName].Component(this, data, componentId); if (this.isPlaying) { component.play(); } // Components are reflected in the DOM as attributes but the state is not shown // hence we set the attribute to empty string. // The flag justInitialized is for attributeChangedCallback to not overwrite // the component with the empty string. if (!this.hasAttribute(attrName)) { component.justInitialized = true; window.HTMLElement.prototype.setAttribute.call(this, attrName, ''); } debug('Component initialized: %s', attrName); }, writable: window.debug }, /** * Initialize dependencies of a component. * * @param {string} name - Root component name. */ initComponentDependencies: { value: function (name) { var self = this; var component = COMPONENTS[name]; var dependencies; var i; // Not a component. if (!component) { return; } // No dependencies. dependencies = COMPONENTS[name].dependencies; if (!dependencies) { return; } // Initialize dependencies. for (i = 0; i < dependencies.length; i++) { // Call getAttribute to initialize the data from the DOM. self.initComponent( dependencies[i], window.HTMLElement.prototype.getAttribute.call(self, dependencies[i]) || undefined, true ); } } }, removeComponent: { value: function (name, destroy) { var component; component = this.components[name]; if (!component) { return; } // Wait for component to initialize. if (!component.initialized) { this.addEventListener('componentinitialized', function tryRemoveLater (evt) { if (evt.detail.name !== name) { return; } this.removeComponent(name, destroy); this.removeEventListener('componentinitialized', tryRemoveLater); }); return; } component.pause(); component.remove(); // Keep component attached to entity in case of just full entity detach. if (destroy) { component.destroy(); delete this.components[name]; } this.emit('componentremoved', component.evtDetail, false); }, writable: window.debug }, /** * Initialize or update all components. * Build data using initial components, defined attributes, mixins, and defaults. * Update default components before the rest. * * @member {function} getExtraComponents - Can be implemented to include component data * from other sources (e.g., implemented by primitives). */ updateComponents: { value: function () { var data; var extraComponents; var i; var name; var componentsToUpdate = this.componentsToUpdate; if (!this.hasLoaded) { return; } // Gather mixin-defined components. for (i = 0; i < this.mixinEls.length; i++) { for (name in this.mixinEls[i].componentCache) { if (isComponent(name)) { componentsToUpdate[name] = true; } } } // Gather from extra initial component data if defined (e.g., primitives). if (this.getExtraComponents) { extraComponents = this.getExtraComponents(); for (name in extraComponents) { if (isComponent(name)) { componentsToUpdate[name] = true; } } } // Gather entity-defined components. for (i = 0; i < this.attributes.length; ++i) { name = this.attributes[i].name; if (OBJECT3D_COMPONENTS.indexOf(name) !== -1) { continue; } if (isComponent(name)) { componentsToUpdate[name] = true; } } // object3D components first (position, rotation, scale, visible). for (i = 0; i < OBJECT3D_COMPONENTS.length; i++) { name = OBJECT3D_COMPONENTS[i]; if (!this.hasAttribute(name)) { continue; } this.updateComponent(name, this.getDOMAttribute(name)); } // Initialize or update rest of components. for (name in componentsToUpdate) { data = mergeComponentData(this.getDOMAttribute(name), extraComponents && extraComponents[name]); this.updateComponent(name, data); delete componentsToUpdate[name]; } }, writable: window.debug }, /** * Initialize, update, or remove a single component. * * When initializing, we set the component on `this.components`. * * @param {string} attr - Component name. * @param {object} attrValue - Value of the DOM attribute. * @param {boolean} clobber - If new attrValue completely replaces previous properties. */ updateComponent: { value: function (attr, attrValue, clobber) { var component = this.components[attr]; if (component) { // Remove component. if (attrValue === null && !checkComponentDefined(this, attr)) { this.removeComponent(attr, true); return; } // Component already initialized. Update component. component.updateProperties(attrValue, clobber); return; } // Component not yet initialized. Initialize component. this.initComponent(attr, attrValue, false); } }, /** * If `attr` is a component name, detach the component from the entity. * * If `propertyName` is given, reset the component property value to its default. * * @param {string} attr - Attribute name, which could also be a component name. * @param {string} propertyName - Component prop name, if resetting an individual prop. */ removeAttribute: { value: function (attr, propertyName) { var component = this.components[attr]; // Remove component. if (component && propertyName === undefined) { this.removeComponent(attr, true); } // Reset component property value. if (component && propertyName !== undefined) { component.resetProperty(propertyName); return; } // Remove mixins. if (attr === 'mixin') { this.mixinUpdate(''); } window.HTMLElement.prototype.removeAttribute.call(this, attr); } }, /** * Start dynamic behavior associated with entity such as dynamic components and animations. * Tell all children entities to also play. */ play: { value: function () { var entities; var i; var key; // Already playing. if (this.isPlaying || !this.hasLoaded) { return; } this.isPlaying = true; // Wake up all components. for (key in this.components) { this.components[key].play(); } // Tell all child entities to play. entities = this.getChildEntities(); for (i = 0; i < entities.length; i++) { entities[i].play(); } this.emit('play'); }, writable: true }, /** * Pause dynamic behavior associated with entity such as dynamic components and animations. * Tell all children entities to also pause. */ pause: { value: function () { var entities; var i; var key; if (!this.isPlaying) { return; } this.isPlaying = false; // Sleep all components. for (key in this.components) { this.components[key].pause(); } // Tell all child entities to pause. entities = this.getChildEntities(); for (i = 0; i < entities.length; i++) { entities[i].pause(); } this.emit('pause'); }, writable: true }, /** * Deals with updates on entity-specific attributes (i.e., components and mixins). * * @param {string} attr * @param {string} oldVal * @param {string|object} newVal */ setEntityAttribute: { value: function (attr, oldVal, newVal) { if (COMPONENTS[attr] || this.components[attr]) { this.updateComponent(attr, newVal); return; } if (attr === 'mixin') { // Ignore if `<a-node>` code is just updating computed mixin in the DOM. if (newVal === this.computedMixinStr) { return; } this.mixinUpdate(newVal, oldVal); } } }, /** * When mixins updated, trigger init or optimized-update of relevant components. */ mixinUpdate: { value: (function () { var componentsUpdated = []; return function (newMixins, oldMixins) { var component; var mixinEl; var mixinIds; var i; var self = this; if (!this.hasLoaded) { this.addEventListener('loaded', function () { self.mixinUpdate(newMixins, oldMixins); }, ONCE); return; } oldMixins = oldMixins || this.getAttribute('mixin'); mixinIds = this.updateMixins(newMixins, oldMixins); // Loop over current mixins. componentsUpdated.length = 0; for (i = 0; i < this.mixinEls.length; i++) { for (component in this.mixinEls[i].componentCache) { if (componentsUpdated.indexOf(component) === -1) { if (this.components[component]) { // Update. Just rebuild data. this.components[component].handleMixinUpdate(); } else { // Init. buildData will gather mixin values. this.initComponent(component, null); } componentsUpdated.push(component); } } } // Loop over old mixins to call for data rebuild. for (i = 0; i < mixinIds.oldMixinIds.length; i++) { mixinEl = document.getElementById(mixinIds.oldMixinIds[i]); if (!mixinEl) { continue; } for (component in mixinEl.componentCache) { if (componentsUpdated.indexOf(component) === -1) { if (this.components[component]) { if (this.getDOMAttribute(component)) { // Update component if explicitly defined. this.components[component].handleMixinUpdate(); } else { // Remove component if not explicitly defined. this.removeComponent(component, true); } } } } } }; })() }, /** * setAttribute can: * * 1. Set a single property of a multi-property component. * 2. Set multiple properties of a multi-property component. * 3. Replace properties of a multi-property component. * 4. Set a value for a single-property component, mixin, or normal HTML attribute. * * @param {string} attrName - Component or attribute name. * @param {*} arg1 - Can be a value, property name, CSS-style property string, or * object of properties. * @param {*|bool} arg2 - If arg1 is a property name, this should be a value. Otherwise, * it is a boolean indicating whether to clobber previous values (defaults to false). */ setAttribute: { value: (function () { var singlePropUpdate = {}; return function (attrName, arg1, arg2) { var newAttrValue; var clobber; var componentName; var delimiterIndex; var isDebugMode; var key; delimiterIndex = attrName.indexOf(MULTIPLE_COMPONENT_DELIMITER); componentName = delimiterIndex > 0 ? attrName.substring(0, delimiterIndex) : attrName; // Not a component. Normal set attribute. if (!COMPONENTS[componentName]) { if (attrName === 'mixin') { this.mixinUpdate(arg1); } ANode.prototype.setAttribute.call(this, attrName, arg1); return; } // Initialize component first if not yet initialized. if (!this.components[attrName] && this.hasAttribute(attrName)) { this.updateComponent( attrName, window.HTMLElement.prototype.getAttribute.call(this, attrName)); } // Determine new attributes from the arguments if (typeof arg2 !== 'undefined' && typeof arg1 === 'string' && arg1.length > 0 && typeof utils.styleParser.parse(arg1) === 'string') { // Update a single property of a multi-property component for (key in singlePropUpdate) { delete singlePropUpdate[key]; } newAttrValue = singlePropUpdate; newAttrValue[arg1] = arg2; clobber = false; } else { // Update with a value, object, or CSS-style property string, with the possiblity // of clobbering previous values. newAttrValue = arg1; clobber = (arg2 === true); } // Update component this.updateComponent(attrName, newAttrValue, clobber); // In debug mode, write component data up to the DOM. isDebugMode = this.sceneEl && this.sceneEl.getAttribute('debug'); if (isDebugMode) { this.components[attrName].flushToDOM(); } }; })(), writable: window.debug }, /** * Reflect component data in the DOM (as seen from the browser DOM Inspector). * * @param {bool} recursive - Also flushToDOM on the children. **/ flushToDOM: { value: function (recursive) { var components = this.components; var child; var children = this.children; var i; var key; // Flush entity's components to DOM. for (key in components) { components[key].flushToDOM(); } // Recurse. if (!recursive) { return; } for (i = 0; i < children.length; ++i) { child = children[i]; if (!child.flushToDOM) { continue; } child.flushToDOM(recursive); } } }, /** * If `attr` is a component, returns ALL component data including applied mixins and * defaults. * * If `attr` is not a component, fall back to HTML getAttribute. * * @param {string} attr * @returns {object|string} Object if component, else string. */ getAttribute: { value: function (attr) { // If component, return component data. var component; if (attr === 'position') { return this.object3D.position; } if (attr === 'rotation') { return getRotation(this); } if (attr === 'scale') { return this.object3D.scale; } if (attr === 'visible') { return this.object3D.visible; } component = this.components[attr]; if (component) { return component.data; } return window.HTMLElement.prototype.getAttribute.call(this, attr); }, writable: window.debug }, /** * If `attr` is a component, returns JUST the component data defined on the entity. * Like a partial version of `getComputedAttribute` as returned component data * does not include applied mixins or defaults. * * If `attr` is not a component, fall back to HTML getAttribute. * * @param {string} attr * @returns {object|string} Object if component, else string. */ getDOMAttribute: { value: function (attr) { // If cached value exists, return partial component data. var component = this.components[attr]; if (component) { return component.attrValue; } return window.HTMLElement.prototype.getAttribute.call(this, attr); }, writable: window.debug }, addState: { value: function (state) { if (this.is(state)) { return; } this.states.push(state); this.emit('stateadded', state); } }, removeState: { value: function (state) { var stateIndex = this.states.indexOf(state); if (stateIndex === -1) { return; } this.states.splice(stateIndex, 1); this.emit('stateremoved', state); } }, /** * Checks if the element is in a given state. e.g. el.is('alive'); * @type {string} state - Name of the state we want to check */ is: { value: function (state) { return this.states.indexOf(state) !== -1; } }, /** * Open Inspector to this entity. */ inspect: { value: function () { this.sceneEl.components.inspector.openInspector(this); } }, /** * Clean up memory and return memory to object pools. */ destroy: { value: function () { var key; if (this.parentNode) { warn('Entity can only be destroyed if detached from scenegraph.'); return; } for (key in this.components) { this.components[key].destroy(); } } } }); /** * Check if a component is *defined* for an entity, including defaults and mixins. * Does not check whether the component has been *initialized* for an entity. * * @param {string} el - Entity. * @param {string} name - Component name. * @returns {boolean} */ function checkComponentDefined (el, name) { // Check if element contains the component. if (el.components[name] && el.components[name].attrValue) { return true; } return isComponentMixedIn(name, el.mixinEls); } /** * Check if any mixins contains a component. * * @param {string} name - Component name. * @param {array} mixinEls - Array of <a-mixin>s. */ function isComponentMixedIn (name, mixinEls) { var i; var inMixin = false; for (i = 0; i < mixinEls.length; ++i) { inMixin = mixinEls[i].hasAttribute(name); if (inMixin) { break; } } return inMixin; } /** * Given entity defined value, merge in extra data if necessary. * Handle both single and multi-property components. * * @param {string} attrValue - Entity data. * @param extraData - Entity data from another source to merge in. */ function mergeComponentData (attrValue, extraData) { // Extra data not defined, just return attrValue. if (!extraData) { return attrValue; } // Merge multi-property data. if (extraData.constructor === Object) { return utils.extend(extraData, utils.styleParser.parse(attrValue || {})); } // Return data, precendence to the defined value. return attrValue || extraData; } function isComponent (componentName) { if (componentName.indexOf(MULTIPLE_COMPONENT_DELIMITER) !== -1) { componentName = utils.split(componentName, MULTIPLE_COMPONENT_DELIMITER)[0]; } if (!COMPONENTS[componentName]) { return false; } return true; } function getRotation (entityEl) { var radToDeg = THREE.Math.radToDeg; var rotation = entityEl.object3D.rotation; var rotationObj = entityEl.rotationObj; rotationObj.x = radToDeg(rotation.x); rotationObj.y = radToDeg(rotation.y); rotationObj.z = radToDeg(rotation.z); return rotationObj; } AEntity = registerElement('a-entity', {prototype: proto}); module.exports = AEntity; ",
    "var ANode = require('./a-node'); var registerElement = require('./a-register-element').registerElement; var components = require('./component').components; var utils = require('../utils'); var MULTIPLE_COMPONENT_DELIMITER = '__'; /** * @member {object} componentCache - Cache of pre-parsed values. An object where the keys * are component names and the values are already parsed by the component. */ module.exports = registerElement('a-mixin', { prototype: Object.create(ANode.prototype, { createdCallback: { value: function () { this.componentCache = {}; this.id = this.getAttribute('id'); this.isMixin = true; } }, attributeChangedCallback: { value: function (attr, oldVal, newVal) { this.cacheAttribute(attr, newVal); this.updateEntities(); } }, attachedCallback: { value: function () { this.sceneEl = this.closestScene(); this.cacheAttributes(); this.updateEntities(); this.load(); } }, /** * setAttribute that parses and caches component values. */ setAttribute: { value: function (attr, value) { window.HTMLElement.prototype.setAttribute.call(this, attr, value); this.cacheAttribute(attr, value); } }, /** * If `attr` is a component, then parse the value using the schema and store it. */ cacheAttribute: { value: function (attr, value) { var component; var componentName; // Get component data. componentName = utils.split(attr, MULTIPLE_COMPONENT_DELIMITER)[0]; component = components[componentName]; if (!component) { return; } if (value === undefined) { value = window.HTMLElement.prototype.getAttribute.call(this, attr); } this.componentCache[attr] = component.parseAttrValueForCache(value); } }, /** * If `attr` is a component, then grab pre-parsed value from the cache. * Else do a normal getAttribute. */ getAttribute: { value: function (attr) { return this.componentCache[attr] || window.HTMLElement.prototype.getAttribute.call(this, attr); } }, /** * Parse and cache every component defined on the mixin. */ cacheAttributes: { value: function () { var attributes = this.attributes; var attrName; var i; for (i = 0; i < attributes.length; i++) { attrName = attributes[i].name; this.cacheAttribute(attrName); } } }, /** * For entities that already have been loaded by the time the mixin was attached, tell * those entities to register the mixin and refresh their component data. */ updateEntities: { value: function () { var entity; var entities; var i; if (!this.sceneEl) { return; } entities = this.sceneEl.querySelectorAll('[mixin~=' + this.id + ']'); for (i = 0; i < entities.length; i++) { entity = entities[i]; if (!entity.hasLoaded || entity.isMixin) { continue; } entity.mixinUpdate(this.id); } } } }) }); ",
    "/* global CustomEvent */ var registerElement = require('./a-register-element').registerElement; var isNode = require('./a-register-element').isNode; var utils = require('../utils/'); var warn = utils.debug('core:a-node:warn'); var error = utils.debug('core:a-node:error'); /** * Base class for A-Frame that manages loading of objects. * * Nodes can be modified using mixins. * Nodes emit a `loaded` event when they and their children have initialized. */ module.exports = registerElement('a-node', { prototype: Object.create(window.HTMLElement.prototype, { createdCallback: { value: function () { this.computedMixinStr = ''; this.hasLoaded = false; this.isNode = true; this.mixinEls = []; }, writable: window.debug }, attachedCallback: { value: function () { var mixins; this.sceneEl = this.closestScene(); if (!this.sceneEl) { warn('You are attempting to attach <' + this.tagName + '> outside of an A-Frame ' + 'scene. Append this element to `<a-scene>` instead.'); } this.hasLoaded = false; this.emit('nodeready', undefined, false); if (!this.isMixin) { mixins = this.getAttribute('mixin'); if (mixins) { this.updateMixins(mixins); } } }, writable: window.debug }, /** * Handle mixin. */ attributeChangedCallback: { value: function (attr, oldVal, newVal) { // Ignore if `<a-node>` code is just updating computed mixin in the DOM. if (newVal === this.computedMixinStr) { return; } if (attr === 'mixin' && !this.isMixin) { this.updateMixins(newVal, oldVal); } } }, /** * Returns the first scene by traversing up the tree starting from and * including receiver element. */ closestScene: { value: function closest () { var element = this; while (element) { if (element.isScene) { break; } element = element.parentElement; } return element; } }, /** * Returns first element matching a selector by traversing up the tree starting * from and including receiver element. * * @param {string} selector - Selector of element to find. */ closest: { value: function closest (selector) { var matches = this.matches || this.mozMatchesSelector || this.msMatchesSelector || this.oMatchesSelector || this.webkitMatchesSelector; var element = this; while (element) { if (matches.call(element, selector)) { break; } element = element.parentElement; } return element; } }, detachedCallback: { value: function () { this.hasLoaded = false; } }, /** * Wait for children to load, if any. * Then emit `loaded` event and set `hasLoaded`. */ load: { value: function (cb, childFilter) { var children; var childrenLoaded; var self = this; if (this.hasLoaded) { return; } // Default to waiting for all nodes. childFilter = childFilter || isNode; // Wait for children to load (if any), then load. children = this.getChildren(); childrenLoaded = children.filter(childFilter).map(function (child) { return new Promise(function waitForLoaded (resolve) { if (child.hasLoaded) { return resolve(); } child.addEventListener('loaded', resolve); }); }); Promise.all(childrenLoaded).then(function emitLoaded () { self.hasLoaded = true; if (cb) { cb(); } self.emit('loaded', undefined, false); }).catch(function (err) { error('Failure loading node: ', err); }); }, writable: true }, getChildren: { value: function () { return Array.prototype.slice.call(this.children, 0); } }, /** * Unregister old mixins and listeners. * Register new mixins and listeners. * Registering means to update `this.mixinEls` with listeners. */ updateMixins: { value: (function () { var newMixinIdArray = []; var oldMixinIdArray = []; var mixinIds = {}; return function (newMixins, oldMixins) { var i; var newMixinIds; var oldMixinIds; newMixinIdArray.length = 0; oldMixinIdArray.length = 0; newMixinIds = newMixins ? utils.split(newMixins.trim(), /\s+/) : newMixinIdArray; oldMixinIds = oldMixins ? utils.split(oldMixins.trim(), /\s+/) : oldMixinIdArray; mixinIds.newMixinIds = newMixinIds; mixinIds.oldMixinIds = oldMixinIds; // Unregister old mixins. for (i = 0; i < oldMixinIds.length; i++) { if (newMixinIds.indexOf(oldMixinIds[i]) === -1) { this.unregisterMixin(oldMixinIds[i]); } } // Register new mixins. this.computedMixinStr = ''; this.mixinEls.length = 0; for (i = 0; i < newMixinIds.length; i++) { this.registerMixin(document.getElementById(newMixinIds[i])); } // Update DOM. Keep track of `computedMixinStr` to not recurse back here after // update. if (this.computedMixinStr) { this.computedMixinStr = this.computedMixinStr.trim(); window.HTMLElement.prototype.setAttribute.call(this, 'mixin', this.computedMixinStr); } return mixinIds; }; })() }, /** * From mixin ID, add mixin element to `mixinEls`. * * @param {Element} mixinEl */ registerMixin: { value: function (mixinEl) { var compositedMixinIds; var i; var mixin; if (!mixinEl) { return; } // Register composited mixins (if mixin has mixins). mixin = mixinEl.getAttribute('mixin'); if (mixin) { compositedMixinIds = utils.split(mixin.trim(), /\s+/); for (i = 0; i < compositedMixinIds.length; i++) { this.registerMixin(document.getElementById(compositedMixinIds[i])); } } // Register mixin. this.computedMixinStr = this.computedMixinStr + ' ' + mixinEl.id; this.mixinEls.push(mixinEl); } }, setAttribute: { value: function (attr, newValue) { if (attr === 'mixin') { this.updateMixins(newValue); } window.HTMLElement.prototype.setAttribute.call(this, attr, newValue); } }, unregisterMixin: { value: function (mixinId) { var i; var mixinEls = this.mixinEls; var mixinEl; for (i = 0; i < mixinEls.length; ++i) { mixinEl = mixinEls[i]; if (mixinId === mixinEl.id) { mixinEls.splice(i, 1); break; } } } }, /** * Emit a DOM event. * * @param {string} name - Name of event. * @param {object} [detail={}] - Custom data to pass as `detail` to the event. * @param {boolean} [bubbles=true] - Whether the event should bubble. * @param {object} [extraData] - Extra data to pass to the event, if any. */ emit: { value: (function () { var data = {}; return function (name, detail, bubbles, extraData) { if (bubbles === undefined) { bubbles = true; } data.bubbles = !!bubbles; data.detail = detail; // If extra data is present, we need to create a new object. if (extraData) { data = utils.extend({}, extraData, data); } this.dispatchEvent(new CustomEvent(name, data)); }; })(), writable: window.debug } }) }); ",
    "/* ------------------------------------------------------------ ------------- WARNING WARNING WARNING WARNING -------------- ------------------------------------------------------------ This module wraps registerElement to deal with components that inherit from `ANode` and `AEntity`. It's a pass through in any other case. It wraps some of the prototype methods of the created element to make sure that the corresponding functions in the base prototypes (`AEntity` and `ANode`) are also invoked. The method in the base prototype is always called before the one in the derived prototype. */ // Polyfill `document.registerElement`. require('document-register-element'); var ANode; // Must declare before AEntity. Initialized at the bottom. var AEntity; var knownTags = module.exports.knownTags = {}; function addTagName (tagName) { knownTags[tagName.toLowerCase()] = true; } /** * Return whether the element type is one of our known registered ones. * * @param {string} node - The name of the tag to register. * @returns {boolean} Whether the tag name matches that of our registered custom elements. */ module.exports.isNode = function (node) { return node.tagName.toLowerCase() in knownTags || node.isNode; }; /** * @param {string} tagName - The name of the tag to register. * @param {object} obj - The prototype of the new element. * @returns {object} The prototype of the new element. */ module.exports.registerElement = function (tagName, obj) { var proto = Object.getPrototypeOf(obj.prototype); var newObj = obj; var isANode = ANode && proto === ANode.prototype; var isAEntity = AEntity && proto === AEntity.prototype; if (isANode || isAEntity) { addTagName(tagName); } // Wrap if element inherits from `ANode`. if (isANode) { newObj = wrapANodeMethods(obj.prototype); newObj = {prototype: Object.create(proto, newObj)}; } // Wrap if element inherits from `AEntity`. if (isAEntity) { newObj = wrapAEntityMethods(obj.prototype); newObj = {prototype: Object.create(proto, newObj)}; } // Give all functions their proper name. Object.getOwnPropertyNames(newObj.prototype).forEach(function (propName) { var propVal = newObj.prototype[propName]; if (typeof propVal === 'function') { propVal.displayName = propName; } }); return document.registerElement(tagName, newObj); }; /** * Wrap some obj methods to call those on `ANode` base prototype. * * @param {object} obj - Object that contains the methods that will be wrapped. * @return {object} An object with the same properties as the input parameter but * with some of methods wrapped. */ function wrapANodeMethods (obj) { var newObj = {}; var ANodeMethods = [ 'attachedCallback', 'attributeChangedCallback', 'createdCallback', 'detachedCallback' ]; wrapMethods(newObj, ANodeMethods, obj, ANode.prototype); copyProperties(obj, newObj); return newObj; } /** * This wraps some of the obj methods to call those on `AEntity` base prototype. * * @param {object} obj - The objects that contains the methods that will be wrapped. * @return {object} - An object with the same properties as the input parameter but * with some of methods wrapped. */ function wrapAEntityMethods (obj) { var newObj = {}; var ANodeMethods = [ 'attachedCallback', 'attributeChangedCallback', 'createdCallback', 'detachedCallback' ]; var AEntityMethods = [ 'attachedCallback', 'attributeChangedCallback', 'createdCallback', 'detachedCallback' ]; wrapMethods(newObj, ANodeMethods, obj, ANode.prototype); wrapMethods(newObj, AEntityMethods, obj, AEntity.prototype); // Copies the remaining properties into the new object. copyProperties(obj, newObj); return newObj; } /** * Wrap a list a methods to ensure that those in the base prototype are called * before the derived one. * * @param {object} targetObj - Object that will contain the wrapped methods. * @param {array} methodList - List of methods from the derivedObj that will be wrapped. * @param {object} derivedObject - Object that inherits from the baseObj. * @param {object} baseObj - Object that derivedObj inherits from. */ function wrapMethods (targetObj, methodList, derivedObj, baseObj) { methodList.forEach(function (methodName) { wrapMethod(targetObj, methodName, derivedObj, baseObj); }); } module.exports.wrapMethods = wrapMethods; /** * Wrap one method to ensure that the one in the base prototype is called before * the one in the derived one. * * @param {object} obj - Object that will contain the wrapped method. * @param {string} methodName - The name of the method that will be wrapped. * @param {object} derivedObject - Object that inherits from the baseObj. * @param {object} baseObj - Object that derivedObj inherits from. */ function wrapMethod (obj, methodName, derivedObj, baseObj) { var derivedMethod = derivedObj[methodName]; var baseMethod = baseObj[methodName]; // Derived prototype does not define method, no need to wrap. if (!derivedMethod || !baseMethod) { return; } // Derived prototype doesn't override the one in the base one, no need to wrap. if (derivedMethod === baseMethod) { return; } // Wrap to ensure the base method is called before the one in the derived prototype. obj[methodName] = { value: function wrappedMethod () { baseMethod.apply(this, arguments); return derivedMethod.apply(this, arguments); }, writable: window.debug }; } /** * It copies the properties from source to destination object if they don't * exist already. * * @param {object} source - The object where properties are copied from. * @param {type} destination - The object where properties are copied to. */ function copyProperties (source, destination) { var props = Object.getOwnPropertyNames(source); props.forEach(function (prop) { var desc; if (!destination[prop]) { desc = Object.getOwnPropertyDescriptor(source, prop); destination[prop] = {value: source[prop], writable: desc.writable}; } }); } ANode = require('./a-node'); AEntity = require('./a-entity'); ",
    "/* global Node */ var schema = require('./schema'); var scenes = require('./scene/scenes'); var systems = require('./system'); var utils = require('../utils/'); var components = module.exports.components = {}; // Keep track of registered components. var parseProperties = schema.parseProperties; var parseProperty = schema.parseProperty; var processSchema = schema.process; var isSingleProp = schema.isSingleProperty; var stringifyProperties = schema.stringifyProperties; var stringifyProperty = schema.stringifyProperty; var styleParser = utils.styleParser; var warn = utils.debug('core:component:warn'); var aframeScript = document.currentScript; var upperCaseRegExp = new RegExp('[A-Z]+'); // Object pools by component, created upon registration. var objectPools = {}; /** * Component class definition. * * Components configure appearance, modify behavior, or add functionality to * entities. The behavior and appearance of an entity can be changed at runtime * by adding, removing, or updating components. Entities do not share instances * of components. * * @member {object} el - Reference to the entity element. * @member {string} attrValue - Value of the corresponding HTML attribute. * @member {object} data - Component data populated by parsing the * mapped attribute of the component plus applying defaults and mixins. */ var Component = module.exports.Component = function (el, attrValue, id) { var self = this; this.el = el; this.id = id; this.attrName = this.name + (id ? '__' + id : ''); this.evtDetail = {id: this.id, name: this.name}; this.initialized = false; this.isSingleProperty = isSingleProp(this.schema); this.isSinglePropertyObject = this.isSingleProperty && isObject(parseProperty(undefined, this.schema)) && !(this.schema.default instanceof window.HTMLElement); this.isObjectBased = !this.isSingleProperty || this.isSinglePropertyObject; this.el.components[this.attrName] = this; this.objectPool = objectPools[this.name]; eventsBind(this, this.events); // Store component data from previous update call. this.attrValue = undefined; if (this.isObjectBased) { this.nextData = this.objectPool.use(); // Drop any properties added by dynamic schemas in previous use utils.objectPool.removeUnusedKeys(this.nextData, this.schema); this.oldData = this.objectPool.use(); utils.objectPool.removeUnusedKeys(this.oldData, this.schema); this.previousOldData = this.objectPool.use(); utils.objectPool.removeUnusedKeys(this.previousOldData, this.schema); this.parsingAttrValue = this.objectPool.use(); utils.objectPool.removeUnusedKeys(this.parsingAttrValue, this.schema); } else { this.nextData = undefined; this.oldData = undefined; this.previousOldData = undefined; this.parsingAttrValue = undefined; } // Last value passed to updateProperties. this.throttledEmitComponentChanged = utils.throttle(function emitChange () { el.emit('componentchanged', self.evtDetail, false); }, 200); this.updateProperties(attrValue); }; Component.prototype = { /** * Contains the type schema and defaults for the data values. * Data is coerced into the types of the values of the defaults. */ schema: {}, /** * Init handler. Similar to attachedCallback. * Called during component initialization and is only run once. * Components can use this to set initial state. */ init: function () { /* no-op */ }, /** * Map of event names to binded event handlers that will be lifecycle-handled. * Will be detached on pause / remove. * Will be attached on play. */ events: {}, /** * Update handler. Similar to attributeChangedCallback. * Called whenever component's data changes. * Also called on component initialization when the component receives initial data. * * @param {object} prevData - Previous attributes of the component. */ update: function (prevData) { /* no-op */ }, updateSchema: undefined, /** * Tick handler. * Called on each tick of the scene render loop. * Affected by play and pause. * * @param {number} time - Scene tick time. * @param {number} timeDelta - Difference in current render time and previous render time. */ tick: undefined, /** * Tock handler. * Called on each tock of the scene render loop. * Affected by play and pause. * * @param {number} time - Scene tick time. * @param {number} timeDelta - Difference in current render time and previous render time. * @param {object} camera - Camera used to render the last frame. */ tock: undefined, /** * Called to start any dynamic behavior (e.g., animation, AI, events, physics). */ play: function () { /* no-op */ }, /** * Called to stop any dynamic behavior (e.g., animation, AI, events, physics). */ pause: function () { /* no-op */ }, /** * Remove handler. Similar to detachedCallback. * Called whenever component is removed from the entity (i.e., removeAttribute). * Components can use this to reset behavior on the entity. */ remove: function () { /* no-op */ }, /** * Parses each property based on property type. * If component is single-property, then parses the single property value. * * @param {string} value - HTML attribute value. * @param {boolean} silent - Suppress warning messages. * @returns {object} Component data. */ parse: function (value, silent) { var schema = this.schema; if (this.isSingleProperty) { return parseProperty(value, schema); } return parseProperties(styleParser.parse(value), schema, true, this.name, silent); }, /** * Stringify properties if necessary. * * Only called from `Entity.setAttribute` for properties whose parsers accept a non-string * value (e.g., selector, vec3 property types). * * @param {object} data - Complete component data. * @returns {string} */ stringify: function (data) { var schema = this.schema; if (typeof data === 'string') { return data; } if (this.isSingleProperty) { return stringifyProperty(data, schema); } data = stringifyProperties(data, schema); return styleParser.stringify(data); }, /** * Update the cache of the pre-parsed attribute value. * * @param {string} value - New data. * @param {boolean } clobber - Whether to wipe out and replace previous data. */ updateCachedAttrValue: function (value, clobber) { var newAttrValue; var tempObject; var property; if (value === undefined) { return; } // If null value is the new attribute value, make the attribute value falsy. if (value === null) { if (this.isObjectBased && this.attrValue) { this.objectPool.recycle(this.attrValue); } this.attrValue = undefined; return; } if (value instanceof Object && !(value instanceof window.HTMLElement)) { // If value is an object, copy it to our pooled newAttrValue object to use to update // the attrValue. tempObject = this.objectPool.use(); newAttrValue = utils.extend(tempObject, value); } else { newAttrValue = this.parseAttrValueForCache(value); } // Merge new data with previous `attrValue` if updating and not clobbering. if (this.isObjectBased && !clobber && this.attrValue) { for (property in this.attrValue) { if (newAttrValue[property] === undefined) { newAttrValue[property] = this.attrValue[property]; } } } // Update attrValue. if (this.isObjectBased && !this.attrValue) { this.attrValue = this.objectPool.use(); } utils.objectPool.clearObject(this.attrValue); this.attrValue = extendProperties(this.attrValue, newAttrValue, this.isObjectBased); utils.objectPool.clearObject(tempObject); }, /** * Given an HTML attribute value parses the string based on the component schema. * To avoid double parsings of strings into strings we store the original instead * of the parsed one * * @param {string} value - HTML attribute value */ parseAttrValueForCache: function (value) { var parsedValue; if (typeof value !== 'string') { return value; } if (this.isSingleProperty) { parsedValue = this.schema.parse(value); /** * To avoid bogus double parsings. Cached values will be parsed when building * component data. For instance when parsing a src id to its url, we want to cache * original string and not the parsed one (#monster -> models/monster.dae) * so when building data we parse the expected value. */ if (typeof parsedValue === 'string') { parsedValue = value; } } else { // Parse using the style parser to avoid double parsing of individual properties. utils.objectPool.clearObject(this.parsingAttrValue); parsedValue = styleParser.parse(value, this.parsingAttrValue); } return parsedValue; }, /** * Write cached attribute data to the entity DOM element. * * @param {boolean} isDefault - Whether component is a default component. Always flush for * default components. */ flushToDOM: function (isDefault) { var attrValue = isDefault ? this.data : this.attrValue; if (attrValue === null || attrValue === undefined) { return; } window.HTMLElement.prototype.setAttribute.call(this.el, this.attrName, this.stringify(attrValue)); }, /** * Apply new component data if data has changed (from setAttribute). * * @param {string} attrValue - HTML attribute value. * If undefined, use the cached attribute value and continue updating properties. * @param {boolean} clobber - The previous component data is overwritten by the atrrValue */ updateProperties: function (attrValue, clobber) { var el = this.el; // Just cache the attribute if the entity has not loaded // Components are not initialized until the entity has loaded if (!el.hasLoaded) { this.updateCachedAttrValue(attrValue); return; } // Parse the attribute value. // Cache current attrValue for future updates. Updates `this.attrValue`. // `null` means no value on purpose, do not set a default value, let mixins take over. if (attrValue !== null) { attrValue = this.parseAttrValueForCache(attrValue); } // Cache current attrValue for future updates. this.updateCachedAttrValue(attrValue, clobber); if (this.initialized) { this.updateComponent(attrValue, clobber); this.callUpdateHandler(); } else { this.initComponent(); } }, initComponent: function () { var el = this.el; var initialOldData; // Build data. if (this.updateSchema) { this.updateSchema(this.buildData(this.attrValue, false, true)); } this.data = this.buildData(this.attrValue); // Component is being already initialized. if (el.initializingComponents[this.name]) { return; } // Prevent infinite loop in case of init method setting same component on the entity. el.initializingComponents[this.name] = true; // Initialize component. this.init(); this.initialized = true; delete el.initializingComponents[this.name]; // Store current data as previous data for future updates. this.oldData = extendProperties(this.oldData, this.data, this.isObjectBased); // For oldData, pass empty object to multiple-prop schemas or object single-prop schema. // Pass undefined to rest of types. initialOldData = this.isObjectBased ? this.objectPool.use() : undefined; this.update(initialOldData); if (this.isObjectBased) { this.objectPool.recycle(initialOldData); } // Play the component if the entity is playing. if (el.isPlaying) { this.play(); } el.emit('componentinitialized', this.evtDetail, false); }, /** * @param attrValue - Passed argument from setAttribute. */ updateComponent: function (attrValue, clobber) { var key; var mayNeedSchemaUpdate; if (clobber) { // Clobber. Rebuild. if (this.updateSchema) { this.updateSchema(this.buildData(this.attrValue, true, true)); } this.data = this.buildData(this.attrValue, true, false); return; } // Apply new value to this.data in place since direct update. if (this.isSingleProperty) { if (this.isObjectBased) { parseProperty(attrValue, this.schema); } // Single-property (already parsed). this.data = attrValue; return; } parseProperties(attrValue, this.schema, true, this.name); // Check if we need to update schema. if (this.schemaChangeKeys.length) { for (key in attrValue) { if (this.schema[key].schemaChange) { mayNeedSchemaUpdate = true; break; } } } if (mayNeedSchemaUpdate) { // Rebuild data if need schema update. if (this.updateSchema) { this.updateSchema(this.buildData(this.attrValue, true, true)); } this.data = this.buildData(this.attrValue, true, false); return; } // Normal update. for (key in attrValue) { if (attrValue[key] === undefined) { continue; } this.data[key] = attrValue[key]; } }, /** * Check if component should fire update and fire update lifecycle handler. */ callUpdateHandler: function () { var hasComponentChanged; // Store the previous old data before we calculate the new oldData. if (this.previousOldData instanceof Object) { utils.objectPool.clearObject(this.previousOldData); } if (this.isObjectBased) { copyData(this.previousOldData, this.oldData); } else { this.previousOldData = this.oldData; } hasComponentChanged = !utils.deepEqual(this.oldData, this.data); // Don't update if properties haven't changed. // Always update rotation, position, scale. if (!this.isPositionRotationScale && !hasComponentChanged) { return; } // Store current data as previous data for future updates. // Reuse `this.oldData` object to try not to allocate another one. if (this.oldData instanceof Object) { utils.objectPool.clearObject(this.oldData); } this.oldData = extendProperties(this.oldData, this.data, this.isObjectBased); // Update component with the previous old data. this.update(this.previousOldData); this.throttledEmitComponentChanged(); }, handleMixinUpdate: function () { this.data = this.buildData(this.attrValue); this.callUpdateHandler(); }, /** * Reset value of a property to the property's default value. * If single-prop component, reset value to component's default value. * * @param {string} propertyName - Name of property to reset. */ resetProperty: function (propertyName) { if (this.isObjectBased) { if (!(propertyName in this.attrValue)) { return; } delete this.attrValue[propertyName]; this.data[propertyName] = this.schema[propertyName].default; } else { this.attrValue = this.schema.default; this.data = this.schema.default; } this.updateProperties(this.attrValue); }, /** * Extend schema of component given a partial schema. * * Some components might want to mutate their schema based on certain properties. * e.g., Material component changes its schema based on `shader` to account for different * uniforms * * @param {object} schemaAddon - Schema chunk that extend base schema. */ extendSchema: function (schemaAddon) { var extendedSchema; // Clone base schema. extendedSchema = utils.extend({}, components[this.name].schema); // Extend base schema with new schema chunk. utils.extend(extendedSchema, schemaAddon); this.schema = processSchema(extendedSchema); this.el.emit('schemachanged', this.evtDetail); }, /** * Build component data from the current state of the entity.data. * * Precedence: * 1. Defaults data * 2. Mixin data. * 3. Attribute data. * * Finally coerce the data to the types of the defaults. * * @param {object} newData - Element new data. * @param {boolean} clobber - The previous data is completely replaced by the new one. * @param {boolean} silent - Suppress warning messages. * @return {object} The component data */ buildData: function (newData, clobber, silent) { var componentDefined; var data; var defaultValue; var key; var mixinData; var nextData = this.nextData; var schema = this.schema; var i; var mixinEls = this.el.mixinEls; var previousData; // Whether component has a defined value. For arrays, treat empty as not defined. componentDefined = newData && newData.constructor === Array ? newData.length : newData !== undefined && newData !== null; if (this.isObjectBased) { utils.objectPool.clearObject(nextData); } // 1. Gather default values (lowest precendence). if (this.isSingleProperty) { if (this.isObjectBased) { // If object-based single-prop, then copy over the data to our pooled object. data = copyData(nextData, schema.default); } else { // If is plain single-prop, copy by value the default. data = isObjectOrArray(schema.default) ? utils.clone(schema.default) : schema.default; } } else { // Preserve previously set properties if clobber not enabled. previousData = !clobber && this.attrValue; // Clone default value if object so components don't share object data = previousData instanceof Object ? copyData(nextData, previousData) : nextData; // Apply defaults. for (key in schema) { defaultValue = schema[key].default; if (data[key] !== undefined) { continue; } // Clone default value if object so components don't share object data[key] = isObjectOrArray(defaultValue) ? utils.clone(defaultValue) : defaultValue; } } // 2. Gather mixin values. for (i = 0; i < mixinEls.length; i++) { mixinData = mixinEls[i].getAttribute(this.attrName); if (!mixinData) { continue; } data = extendProperties(data, mixinData, this.isObjectBased); } // 3. Gather attribute values (highest precendence). if (componentDefined) { if (this.isSingleProperty) { // If object-based, copy the value to not modify the original. if (isObject(newData)) { copyData(this.parsingAttrValue, newData); return parseProperty(this.parsingAttrValue, schema); } return parseProperty(newData, schema); } data = extendProperties(data, newData, this.isObjectBased); } else { // Parse and coerce using the schema. if (this.isSingleProperty) { return parseProperty(data, schema); } } return parseProperties(data, schema, undefined, this.name, silent); }, /** * Attach events from component-defined events map. */ eventsAttach: function () { var eventName; // Safety detach to prevent double-registration. this.eventsDetach(); for (eventName in this.events) { this.el.addEventListener(eventName, this.events[eventName]); } }, /** * Detach events from component-defined events map. */ eventsDetach: function () { var eventName; for (eventName in this.events) { this.el.removeEventListener(eventName, this.events[eventName]); } }, /** * Release and free memory. */ destroy: function () { this.objectPool.recycle(this.attrValue); this.objectPool.recycle(this.oldData); this.objectPool.recycle(this.parsingAttrValue); this.attrValue = this.oldData = this.parsingAttrValue = undefined; } }; function eventsBind (component, events) { var eventName; for (eventName in events) { events[eventName] = events[eventName].bind(component); } } // For testing. if (window.debug) { var registrationOrderWarnings = module.exports.registrationOrderWarnings = {}; } /** * Register a component to A-Frame. * * @param {string} name - Component name. * @param {object} definition - Component schema and lifecycle method handlers. * @returns {object} Component. */ module.exports.registerComponent = function (name, definition) { var NewComponent; var propertyName; var proto = {}; var schema; var schemaIsSingleProp; // Warning if component is statically registered after the scene. if (document.currentScript && document.currentScript !== aframeScript) { scenes.forEach(function checkPosition (sceneEl) { // Okay to register component after the scene at runtime. if (sceneEl.hasLoaded) { return; } // Check that component is declared before the scene. if (document.currentScript.compareDocumentPosition(sceneEl) === Node.DOCUMENT_POSITION_FOLLOWING) { return; } warn('The component `' + name + '` was registered in a <script> tag after the scene. ' + 'Component <script> tags in an HTML file should be declared *before* the scene ' + 'such that the component is available to entities during scene initialization.'); // For testing. if (window.debug) { registrationOrderWarnings[name] = true; } }); } if (upperCaseRegExp.test(name) === true) { warn('The component name `' + name + '` contains uppercase characters, but ' + 'HTML will ignore the capitalization of attribute names. ' + 'Change the name to be lowercase: `' + name.toLowerCase() + '`'); } if (name.indexOf('__') !== -1) { throw new Error('The component name `' + name + '` is not allowed. ' + 'The sequence __ (double underscore) is reserved to specify an id' + ' for multiple components of the same type'); } // Format definition object to prototype object. Object.keys(definition).forEach(function (key) { proto[key] = { value: definition[key], writable: true }; }); if (components[name]) { throw new Error('The component `' + name + '` has been already registered. ' + 'Check that you are not loading two versions of the same component ' + 'or two different components of the same name.'); } NewComponent = function (el, attr, id) { Component.call(this, el, attr, id); }; NewComponent.prototype = Object.create(Component.prototype, proto); NewComponent.prototype.name = name; NewComponent.prototype.isPositionRotationScale = name === 'position' || name === 'rotation' || name === 'scale'; NewComponent.prototype.constructor = NewComponent; NewComponent.prototype.system = systems && systems.systems[name]; NewComponent.prototype.play = wrapPlay(NewComponent.prototype.play); NewComponent.prototype.pause = wrapPause(NewComponent.prototype.pause); schema = utils.extend(processSchema(NewComponent.prototype.schema, NewComponent.prototype.name)); schemaIsSingleProp = isSingleProp(NewComponent.prototype.schema); // Keep track of keys that may potentially change the schema. if (!schemaIsSingleProp) { NewComponent.prototype.schemaChangeKeys = []; for (propertyName in schema) { if (schema[propertyName].schemaChange) { NewComponent.prototype.schemaChangeKeys.push(propertyName); } } } // Create object pool for class of components. objectPools[name] = utils.objectPool.createPool(); components[name] = { Component: NewComponent, dependencies: NewComponent.prototype.dependencies, isSingleProp: schemaIsSingleProp, multiple: NewComponent.prototype.multiple, name: name, parse: NewComponent.prototype.parse, parseAttrValueForCache: NewComponent.prototype.parseAttrValueForCache, schema: schema, stringify: NewComponent.prototype.stringify, type: NewComponent.prototype.type }; return NewComponent; }; /** * Clone component data. * Clone only the properties that are plain objects while keeping a reference for the rest. * * @param data - Component data to clone. * @returns Cloned data. */ function copyData (dest, sourceData) { var parsedProperty; var key; for (key in sourceData) { if (sourceData[key] === undefined) { continue; } parsedProperty = sourceData[key]; dest[key] = isObjectOrArray(parsedProperty) ? utils.clone(parsedProperty) : parsedProperty; } return dest; } /** * Object extending with checking for single-property schema. * * @param dest - Destination object or value. * @param source - Source object or value * @param {boolean} isObjectBased - Whether values are objects. * @returns Overridden object or value. */ function extendProperties (dest, source, isObjectBased) { var key; if (isObjectBased && source.constructor === Object) { for (key in source) { if (source[key] === undefined) { continue; } if (source[key] && source[key].constructor === Object) { dest[key] = utils.clone(source[key]); } else { dest[key] = source[key]; } } return dest; } return source; } /** * Checks if a component has defined a method that needs to run every frame. */ function hasBehavior (component) { return component.tick || component.tock; } /** * Wrapper for defined pause method. * Pause component by removing tick behavior and calling user's pause method. * * @param pauseMethod {function} */ function wrapPause (pauseMethod) { return function pause () { var sceneEl = this.el.sceneEl; if (!this.isPlaying) { return; } pauseMethod.call(this); this.isPlaying = false; this.eventsDetach(); // Remove tick behavior. if (!hasBehavior(this)) { return; } sceneEl.removeBehavior(this); }; } /** * Wrapper for defined play method. * Play component by adding tick behavior and calling user's play method. * * @param playMethod {function} */ function wrapPlay (playMethod) { return function play () { var sceneEl = this.el.sceneEl; var shouldPlay = this.el.isPlaying && !this.isPlaying; if (!this.initialized || !shouldPlay) { return; } playMethod.call(this); this.isPlaying = true; this.eventsAttach(); // Add tick behavior. if (!hasBehavior(this)) { return; } sceneEl.addBehavior(this); }; } function isObject (value) { return value && value.constructor === Object && !(value instanceof window.HTMLElement); } function isObjectOrArray (value) { return value && (value.constructor === Object || value.constructor === Array) && !(value instanceof window.HTMLElement); } ",
    "var schema = require('./schema'); var processSchema = schema.process; var geometries = module.exports.geometries = {}; // Registered geometries. var geometryNames = module.exports.geometryNames = []; // Names of registered geometries. var THREE = require('../lib/three'); /** * Geometry class definition. * * Geometries extend the geometry component API to create and register geometry types. */ var Geometry = module.exports.Geometry = function () {}; Geometry.prototype = { /** * Contains the type schema and defaults for the data values. * Data is coerced into the types of the values of the defaults. */ schema: {}, /** * Init handler. Similar to attachedCallback. * Called during shader initialization and is only run once. */ init: function (data) { this.geometry = new THREE.Geometry(); return this.geometry; }, /** * Update handler. Similar to attributeChangedCallback. * Called whenever the associated geometry data changes. * * @param {object} data - New geometry data. */ update: function (data) { /* no-op */ } }; /** * Registers a geometry to A-Frame. * * @param {string} name - Geometry name. * @param {object} definition - Geometry property and methods. * @returns {object} Geometry. */ module.exports.registerGeometry = function (name, definition) { var NewGeometry; var proto = {}; // Format definition object to prototype object. Object.keys(definition).forEach(function expandDefinition (key) { proto[key] = { value: definition[key], writable: true }; }); if (geometries[name]) { throw new Error('The geometry `' + name + '` has been already registered'); } NewGeometry = function () { Geometry.call(this); }; NewGeometry.prototype = Object.create(Geometry.prototype, proto); NewGeometry.prototype.name = name; NewGeometry.prototype.constructor = NewGeometry; geometries[name] = { Geometry: NewGeometry, schema: processSchema(NewGeometry.prototype.schema) }; geometryNames.push(name); return NewGeometry; }; ",
    "var coordinates = require('../utils/coordinates'); var debug = require('debug'); var error = debug('core:propertyTypes:warn'); var warn = debug('core:propertyTypes:warn'); var propertyTypes = module.exports.propertyTypes = {}; var nonCharRegex = /[,> .[\]:]/; var urlRegex = /\url\((.+)\)/; // Built-in property types. registerPropertyType('audio', '', assetParse); registerPropertyType('array', [], arrayParse, arrayStringify); registerPropertyType('asset', '', assetParse); registerPropertyType('boolean', false, boolParse); registerPropertyType('color', '#FFF', defaultParse, defaultStringify); registerPropertyType('int', 0, intParse); registerPropertyType('number', 0, numberParse); registerPropertyType('map', '', assetParse); registerPropertyType('model', '', assetParse); registerPropertyType('selector', null, selectorParse, selectorStringify); registerPropertyType('selectorAll', null, selectorAllParse, selectorAllStringify); registerPropertyType('src', '', srcParse); registerPropertyType('string', '', defaultParse, defaultStringify); registerPropertyType('time', 0, intParse); registerPropertyType('vec2', {x: 0, y: 0}, vecParse, coordinates.stringify); registerPropertyType('vec3', {x: 0, y: 0, z: 0}, vecParse, coordinates.stringify); registerPropertyType('vec4', {x: 0, y: 0, z: 0, w: 1}, vecParse, coordinates.stringify); /** * Register a parser for re-use such that when someone uses `type` in the schema, * `schema.process` will set the property `parse` and `stringify`. * * @param {string} type - Type name. * @param [defaultValue=null] - * Default value to use if component does not define default value. * @param {function} [parse=defaultParse] - Parse string function. * @param {function} [stringify=defaultStringify] - Stringify to DOM function. */ function registerPropertyType (type, defaultValue, parse, stringify) { if ('type' in propertyTypes) { error('Property type ' + type + ' is already registered.'); return; } propertyTypes[type] = { default: defaultValue, parse: parse || defaultParse, stringify: stringify || defaultStringify }; } module.exports.registerPropertyType = registerPropertyType; function arrayParse (value) { if (Array.isArray(value)) { return value; } if (!value || typeof value !== 'string') { return []; } return value.split(',').map(trim); function trim (str) { return str.trim(); } } function arrayStringify (value) { return value.join(', '); } /** * For general assets. * * @param {string} value - Can either be `url(<value>)`, an ID selector to an asset, or * just string. * @returns {string} Parsed value from `url(<value>)`, src from `<someasset src>`, or * just string. */ function assetParse (value) { var el; var parsedUrl; // If an element was provided (e.g. canvas or video), just return it. if (typeof value !== 'string') { return value; } // Wrapped `url()` in case of data URI. parsedUrl = value.match(urlRegex); if (parsedUrl) { return parsedUrl[1]; } // ID. if (value.charAt(0) === '#') { el = document.getElementById(value.substring(1)); if (el) { // Pass through media elements. If we have the elements, we don't have to call // three.js loaders which would re-request the assets. if (el.tagName === 'CANVAS' || el.tagName === 'VIDEO' || el.tagName === 'IMG') { return el; } return el.getAttribute('src'); } warn('"' + value + '" asset not found.'); return; } // Non-wrapped url(). return value; } function defaultParse (value) { return value; } function defaultStringify (value) { if (value === null) { return 'null'; } return value.toString(); } function boolParse (value) { return value !== 'false' && value !== false; } function intParse (value) { return parseInt(value, 10); } function numberParse (value) { return parseFloat(value, 10); } function selectorParse (value) { if (!value) { return null; } if (typeof value !== 'string') { return value; } if (value[0] === '#' && !nonCharRegex.test(value)) { // When selecting element by ID only, use getElementById for better performance. // Don't match like #myId .child. return document.getElementById(value.substring(1)); } return document.querySelector(value); } function selectorAllParse (value) { if (!value) { return null; } if (typeof value !== 'string') { return value; } return Array.prototype.slice.call(document.querySelectorAll(value), 0); } function selectorStringify (value) { if (value.getAttribute) { return '#' + value.getAttribute('id'); } return defaultStringify(value); } function selectorAllStringify (value) { if (value instanceof Array) { return value.map(function (element) { return '#' + element.getAttribute('id'); }).join(', '); } return defaultStringify(value); } function srcParse (value) { warn('`src` property type is deprecated. Use `asset` instead.'); return assetParse(value); } function vecParse (value) { return coordinates.parse(value, this.default); } /** * Validate the default values in a schema to match their type. * * @param {string} type - Property type name. * @param defaultVal - Property type default value. * @returns {boolean} Whether default value is accurate given the type. */ function isValidDefaultValue (type, defaultVal) { if (type === 'audio' && typeof defaultVal !== 'string') { return false; } if (type === 'array' && !Array.isArray(defaultVal)) { return false; } if (type === 'asset' && typeof defaultVal !== 'string') { return false; } if (type === 'boolean' && typeof defaultVal !== 'boolean') { return false; } if (type === 'color' && typeof defaultVal !== 'string') { return false; } if (type === 'int' && typeof defaultVal !== 'number') { return false; } if (type === 'number' && typeof defaultVal !== 'number') { return false; } if (type === 'map' && typeof defaultVal !== 'string') { return false; } if (type === 'model' && typeof defaultVal !== 'string') { return false; } if (type === 'selector' && typeof defaultVal !== 'string' && defaultVal !== null) { return false; } if (type === 'selectorAll' && typeof defaultVal !== 'string' && defaultVal !== null) { return false; } if (type === 'src' && typeof defaultVal !== 'string') { return false; } if (type === 'string' && typeof defaultVal !== 'string') { return false; } if (type === 'time' && typeof defaultVal !== 'number') { return false; } if (type === 'vec2') { return isValidDefaultCoordinate(defaultVal, 2); } if (type === 'vec3') { return isValidDefaultCoordinate(defaultVal, 3); } if (type === 'vec4') { return isValidDefaultCoordinate(defaultVal, 4); } return true; } module.exports.isValidDefaultValue = isValidDefaultValue; /** * Checks if default coordinates are valid. * * @param possibleCoordinates * @param {number} dimensions - 2 for 2D Vector, 3 for 3D vector. * @returns {boolean} Whether coordinates are parsed correctly. */ function isValidDefaultCoordinate (possibleCoordinates, dimensions) { if (possibleCoordinates === null) { return true; } if (typeof possibleCoordinates !== 'object') { return false; } if (Object.keys(possibleCoordinates).length !== dimensions) { return false; } else { var x = possibleCoordinates.x; var y = possibleCoordinates.y; var z = possibleCoordinates.z; var w = possibleCoordinates.w; if (typeof x !== 'number' || typeof y !== 'number') { return false; } if (dimensions > 2 && typeof z !== 'number') { return false; } if (dimensions > 3 && typeof w !== 'number') { return false; } } return true; } module.exports.isValidDefaultCoordinate = isValidDefaultCoordinate; ",
    "/* global Promise, screen */ var initMetaTags = require('./metaTags').inject; var initWakelock = require('./wakelock'); var loadingScreen = require('./loadingScreen'); var re = require('../a-register-element'); var scenes = require('./scenes'); var systems = require('../system').systems; var THREE = require('../../lib/three'); var utils = require('../../utils/'); // Require after. var AEntity = require('../a-entity'); var ANode = require('../a-node'); var initPostMessageAPI = require('./postMessage'); var bind = utils.bind; var isIOS = utils.device.isIOS(); var isMobile = utils.device.isMobile(); var isWebXRAvailable = utils.device.isWebXRAvailable; var registerElement = re.registerElement; var warn = utils.debug('core:a-scene:warn'); /** * Scene element, holds all entities. * * @member {array} behaviors - Component instances that have registered themselves to be updated on every tick. * @member {object} camera - three.js Camera object. * @member {object} canvas * @member {bool} isScene - Differentiates as scene entity as opposed to other entites. * @member {bool} isMobile - Whether browser is mobile (via UA detection). * @member {object} object3D - Root three.js Scene object. * @member {object} renderer * @member {bool} renderStarted * @member {object} systems - Registered instantiated systems. * @member {number} time */ module.exports.AScene = registerElement('a-scene', { prototype: Object.create(AEntity.prototype, { createdCallback: { value: function () { this.clock = new THREE.Clock(); this.isIOS = isIOS; this.isMobile = isMobile; this.hasWebXR = isWebXRAvailable; this.isScene = true; this.object3D = new THREE.Scene(); var self = this; this.object3D.onAfterRender = function (renderer, scene, camera) { // THREE may swap the camera used for the rendering if in VR, so we pass it to tock if (self.isPlaying) { self.tock(self.time, self.delta, camera); } }; this.render = bind(this.render, this); this.systems = {}; this.systemNames = []; this.time = this.delta = 0; this.behaviors = {tick: [], tock: []}; this.hasLoaded = false; this.isPlaying = false; this.originalHTML = this.innerHTML; // Default components. this.setAttribute('inspector', ''); this.setAttribute('keyboard-shortcuts', ''); this.setAttribute('screenshot', ''); this.setAttribute('vr-mode-ui', ''); } }, addFullScreenStyles: { value: function () { document.documentElement.classList.add('a-fullscreen'); } }, removeFullScreenStyles: { value: function () { document.documentElement.classList.remove('a-fullscreen'); } }, attachedCallback: { value: function () { var self = this; // Renderer initialization setupCanvas(this); this.setupRenderer(); this.resize(); this.addFullScreenStyles(); initPostMessageAPI(this); initMetaTags(this); initWakelock(this); // Handler to exit VR (e.g., Oculus Browser back button). this.onVRPresentChangeBound = bind(this.onVRPresentChange, this); window.addEventListener('vrdisplaypresentchange', this.onVRPresentChangeBound); // Bind functions. this.enterVRBound = function () { self.enterVR(); }; this.exitVRBound = function () { self.exitVR(); }; this.exitVRTrueBound = function () { self.exitVR(true); }; this.pointerRestrictedBound = function () { self.pointerRestricted(); }; this.pointerUnrestrictedBound = function () { self.pointerUnrestricted(); }; if (!isWebXRAvailable) { // Exit VR on `vrdisplaydeactivate` (e.g. taking off Rift headset). window.addEventListener('vrdisplaydeactivate', this.exitVRBound); // Exit VR on `vrdisplaydisconnect` (e.g. unplugging Rift headset). window.addEventListener('vrdisplaydisconnect', this.exitVRTrueBound); // Register for mouse restricted events while in VR // (e.g. mouse no longer available on desktop 2D view) window.addEventListener('vrdisplaypointerrestricted', this.pointerRestrictedBound); // Register for mouse unrestricted events while in VR // (e.g. mouse once again available on desktop 2D view) window.addEventListener('vrdisplaypointerunrestricted', this.pointerUnrestrictedBound); } // Camera set up by camera system. this.addEventListener('cameraready', function () { self.attachedCallbackPostCamera(); }); this.initSystems(); } }, attachedCallbackPostCamera: { value: function () { var resize; var self = this; resize = bind(this.resize, this); window.addEventListener('load', resize); window.addEventListener('resize', function () { // Workaround for a Webkit bug (https://bugs.webkit.org/show_bug.cgi?id=170595) // where the window does not contain the correct viewport size // after an orientation change. The window size is correct if the operation // is postponed a few milliseconds. // self.resize can be called directly once the bug above is fixed. if (self.isIOS) { setTimeout(resize, 100); } else { resize(); } }); this.play(); // Add to scene index. scenes.push(this); }, writable: window.debug }, /** * Initialize all systems. */ initSystems: { value: function () { var name; // Initialize camera system first. this.initSystem('camera'); for (name in systems) { if (name === 'camera') { continue; } this.initSystem(name); } } }, /** * Initialize a system. */ initSystem: { value: function (name) { if (this.systems[name]) { return; } this.systems[name] = new systems[name](this); this.systemNames.push(name); } }, /** * Shut down scene on detach. */ detachedCallback: { value: function () { // Remove from scene index. var sceneIndex = scenes.indexOf(this); scenes.splice(sceneIndex, 1); window.removeEventListener('vrdisplaypresentchange', this.onVRPresentChangeBound); window.removeEventListener('vrdisplayactivate', this.enterVRBound); window.removeEventListener('vrdisplaydeactivate', this.exitVRBound); window.removeEventListener('vrdisplayconnect', this.enterVRBound); window.removeEventListener('vrdisplaydisconnect', this.exitVRTrueBound); window.removeEventListener('vrdisplaypointerrestricted', this.pointerRestrictedBound); window.removeEventListener('vrdisplaypointerunrestricted', this.pointerUnrestrictedBound); } }, /** * Add ticks and tocks. * * @param {object} behavior - A component. */ addBehavior: { value: function (behavior) { var behaviorArr; var behaviors = this.behaviors; var behaviorType; // Check if behavior has tick and/or tock and add the behavior to the appropriate list. for (behaviorType in behaviors) { if (!behavior[behaviorType]) { continue; } behaviorArr = this.behaviors[behaviorType]; if (behaviorArr.indexOf(behavior) === -1) { behaviorArr.push(behavior); } } } }, /** * For tests. */ getPointerLockElement: { value: function () { return document.pointerLockElement; }, writable: window.debug }, /** * For tests. */ checkHeadsetConnected: { value: utils.device.checkHeadsetConnected, writable: window.debug }, /** * Call `requestPresent` if WebVR or WebVR polyfill. * Call `requestFullscreen` on desktop. * Handle events, states, fullscreen styles. * * @returns {Promise} */ enterVR: { value: function () { var self = this; var vrDisplay; var vrManager = self.renderer.vr; // Don't enter VR if already in VR. if (this.is('vr-mode')) { return Promise.resolve('Already in VR.'); } // Has VR. if (this.checkHeadsetConnected() || this.isMobile) { vrDisplay = utils.device.getVRDisplay(); vrManager.enabled = true; vrManager.setDevice(vrDisplay); if (this.hasWebXR) { // XR API. if (this.xrSession) { this.xrSession.removeEventListener('end', this.exitVRBound); } vrDisplay.requestSession({ immersive: true, exclusive: true }).then(function requestSuccess (xrSession) { self.xrSession = xrSession; vrManager.setSession(xrSession); xrSession.addEventListener('end', self.exitVRBound); xrSession.requestFrameOfReference('stage').then(function (frameOfReference) { self.frameOfReference = frameOfReference; }); enterVRSuccess(); }); } else { if (vrDisplay.isPresenting && !window.hasNativeWebVRImplementation) { enterVRSuccess(); return Promise.resolve(); } var rendererSystem = this.getAttribute('renderer'); var presentationAttributes = { highRefreshRate: rendererSystem.highRefreshRate, foveationLevel: rendererSystem.foveationLevel }; return vrDisplay.requestPresent([{ source: this.canvas, attributes: presentationAttributes }]).then(enterVRSuccess, enterVRFailure); } return Promise.resolve(); } // No VR. enterVRSuccess(); return Promise.resolve(); // Callback that happens on enter VR success or enter fullscreen (any API). function enterVRSuccess () { self.addState('vr-mode'); self.emit('enter-vr', {target: self}); // Lock to landscape orientation on mobile. if (self.isMobile && screen.orientation && screen.orientation.lock) { screen.orientation.lock('landscape'); } self.addFullScreenStyles(); // On mobile, the polyfill handles fullscreen. // TODO: 07/16 Chromium builds break when `requestFullscreen`ing on a canvas // that we are also `requestPresent`ing. Until then, don't fullscreen if headset // connected. if (!self.isMobile && !self.checkHeadsetConnected()) { requestFullscreen(self.canvas); } self.renderer.setAnimationLoop(self.render); self.resize(); } function enterVRFailure (err) { if (err && err.message) { throw new Error('Failed to enter VR mode (`requestPresent`): ' + err.message); } else { throw new Error('Failed to enter VR mode (`requestPresent`).'); } } }, writable: true }, /** * Call `exitPresent` if WebVR / WebXR or WebVR polyfill. * Handle events, states, fullscreen styles. * * @returns {Promise} */ exitVR: { value: function () { var self = this; var vrDisplay; var vrManager = this.renderer.vr; // Don't exit VR if not in VR. if (!this.is('vr-mode')) { return Promise.resolve('Not in VR.'); } // Handle exiting VR if not yet already and in a headset or polyfill. if (this.checkHeadsetConnected() || this.isMobile) { vrManager.enabled = false; vrDisplay = utils.device.getVRDisplay(); if (this.hasWebXR) { this.xrSession.removeEventListener('end', this.exitVRBound); this.xrSession.end(); vrManager.setSession(null); } else { if (vrDisplay.isPresenting) { return vrDisplay.exitPresent().then(exitVRSuccess, exitVRFailure); } } } else { exitFullscreen(); } // Handle exiting VR in all other cases (2D fullscreen, external exit VR event). exitVRSuccess(); return Promise.resolve(); function exitVRSuccess () { self.removeState('vr-mode'); // Lock to landscape orientation on mobile. if (self.isMobile && screen.orientation && screen.orientation.unlock) { screen.orientation.unlock(); } // Exiting VR in embedded mode, no longer need fullscreen styles. if (self.hasAttribute('embedded')) { self.removeFullScreenStyles(); } self.resize(); if (self.isIOS) { utils.forceCanvasResizeSafariMobile(self.canvas); } self.emit('exit-vr', {target: self}); } function exitVRFailure (err) { if (err && err.message) { throw new Error('Failed to exit VR mode (`exitPresent`): ' + err.message); } else { throw new Error('Failed to exit VR mode (`exitPresent`).'); } } }, writable: true }, pointerRestricted: { value: function () { if (this.canvas) { var pointerLockElement = this.getPointerLockElement(); if (pointerLockElement && pointerLockElement !== this.canvas && document.exitPointerLock) { // Recreate pointer lock on the canvas, if taken on another element. document.exitPointerLock(); } if (this.canvas.requestPointerLock) { this.canvas.requestPointerLock(); } } } }, pointerUnrestricted: { value: function () { var pointerLockElement = this.getPointerLockElement(); if (pointerLockElement && pointerLockElement === this.canvas && document.exitPointerLock) { document.exitPointerLock(); } } }, /** * Handle `vrdisplaypresentchange` event for exiting VR through other means than * `<ESC>` key. For example, GearVR back button on Oculus Browser. */ onVRPresentChange: { value: function (evt) { // Polyfill places display inside the detail property var display = evt.display || evt.detail.display; // Entering VR. if (display.isPresenting) { this.enterVR(); return; } // Exiting VR. this.exitVR(); } }, /** * Wraps Entity.getAttribute to take into account for systems. * If system exists, then return system data rather than possible component data. */ getAttribute: { value: function (attr) { var system = this.systems[attr]; if (system) { return system.data; } return AEntity.prototype.getAttribute.call(this, attr); } }, /** * `getAttribute` used to be `getDOMAttribute` and `getComputedAttribute` used to be * what `getAttribute` is now. Now legacy code. */ getComputedAttribute: { value: function (attr) { warn('`getComputedAttribute` is deprecated. Use `getAttribute` instead.'); this.getAttribute(attr); } }, /** * Wraps Entity.getDOMAttribute to take into account for systems. * If system exists, then return system data rather than possible component data. */ getDOMAttribute: { value: function (attr) { var system = this.systems[attr]; if (system) { return system.data; } return AEntity.prototype.getDOMAttribute.call(this, attr); } }, /** * Wrap Entity.setAttribute to take into account for systems. * If system exists, then skip component initialization checks and do a normal * setAttribute. */ setAttribute: { value: function (attr, value, componentPropValue) { var system = this.systems[attr]; if (system) { ANode.prototype.setAttribute.call(this, attr, value); system.updateProperties(value); return; } AEntity.prototype.setAttribute.call(this, attr, value, componentPropValue); } }, /** * @param {object} behavior - A component. */ removeBehavior: { value: function (behavior) { var behaviorArr; var behaviorType; var behaviors = this.behaviors; var index; // Check if behavior has tick and/or tock and remove the behavior from the appropriate // array. for (behaviorType in behaviors) { if (!behavior[behaviorType]) { continue; } behaviorArr = this.behaviors[behaviorType]; index = behaviorArr.indexOf(behavior); if (index !== -1) { behaviorArr.splice(index, 1); } } } }, resize: { value: function () { var camera = this.camera; var canvas = this.canvas; var embedded; var isVRPresenting; var size; var vrDevice; vrDevice = this.renderer.vr.getDevice(); isVRPresenting = this.renderer.vr.enabled && vrDevice && vrDevice.isPresenting; // Do not update renderer, if a camera or a canvas have not been injected. // In VR mode, three handles canvas resize based on the dimensions returned by // the getEyeParameters function of the WebVR API. These dimensions are independent of // the window size, therefore should not be overwritten with the window's width and // height, // except when in fullscreen mode. if (!camera || !canvas || (this.is('vr-mode') && (this.isMobile || isVRPresenting))) { return; } // Update camera. embedded = this.getAttribute('embedded') && !this.is('vr-mode'); size = getCanvasSize(canvas, embedded, this.maxCanvasSize, this.is('vr-mode')); camera.aspect = size.width / size.height; camera.updateProjectionMatrix(); // Notify renderer of size change. this.renderer.setSize(size.width, size.height, false); this.emit('rendererresize', null, false); }, writable: true }, setupRenderer: { value: function () { var self = this; var renderer; var rendererAttr; var rendererAttrString; var rendererConfig; rendererConfig = { alpha: true, antialias: !isMobile, canvas: this.canvas, logarithmicDepthBuffer: false }; this.maxCanvasSize = {height: 1920, width: 1920}; if (this.hasAttribute('renderer')) { rendererAttrString = this.getAttribute('renderer'); rendererAttr = utils.styleParser.parse(rendererAttrString); if (rendererAttr.precision) { rendererConfig.precision = rendererAttr.precision + 'p'; } if (rendererAttr.antialias && rendererAttr.antialias !== 'auto') { rendererConfig.antialias = rendererAttr.antialias === 'true'; } if (rendererAttr.logarithmicDepthBuffer && rendererAttr.logarithmicDepthBuffer !== 'auto') { rendererConfig.logarithmicDepthBuffer = rendererAttr.logarithmicDepthBuffer === 'true'; } if (rendererAttr.alpha) { rendererConfig.alpha = rendererAttr.alpha === 'true'; } this.maxCanvasSize = { width: rendererAttr.maxCanvasWidth ? parseInt(rendererAttr.maxCanvasWidth) : this.maxCanvasSize.width, height: rendererAttr.maxCanvasHeight ? parseInt(rendererAttr.maxCanvasHeight) : this.maxCanvasSize.height }; } renderer = this.renderer = new THREE.WebGLRenderer(rendererConfig); renderer.setPixelRatio(window.devicePixelRatio); renderer.sortObjects = false; if (this.camera) { renderer.vr.setPoseTarget(this.camera.el.object3D); } this.addEventListener('camera-set-active', function () { renderer.vr.setPoseTarget(self.camera.el.object3D); }); loadingScreen.setup(this, getCanvasSize); }, writable: window.debug }, /** * Handler attached to elements to help scene know when to kick off. * Scene waits for all entities to load. */ play: { value: function () { var self = this; var sceneEl = this; if (this.renderStarted) { AEntity.prototype.play.call(this); return; } this.addEventListener('loaded', function () { var renderer = this.renderer; var vrDisplay; var vrManager = this.renderer.vr; AEntity.prototype.play.call(this); // .play() *before* render. if (sceneEl.renderStarted) { return; } sceneEl.resize(); // Kick off render loop. if (sceneEl.renderer) { if (window.performance) { window.performance.mark('render-started'); } loadingScreen.remove(); vrDisplay = utils.device.getVRDisplay(); if (vrDisplay && vrDisplay.isPresenting) { vrManager.setDevice(vrDisplay); vrManager.enabled = true; sceneEl.enterVR(); } renderer.setAnimationLoop(this.render); sceneEl.renderStarted = true; sceneEl.emit('renderstart'); } }); // setTimeout to wait for all nodes to attach and run their callbacks. setTimeout(function () { AEntity.prototype.load.call(self); }); } }, /** * Wrap `updateComponent` to not initialize the component if the component has a system * (aframevr/aframe#2365). */ updateComponent: { value: function (componentName) { if (componentName in systems) { return; } AEntity.prototype.updateComponent.apply(this, arguments); } }, /** * Behavior-updater meant to be called from scene render. * Abstracted to a different function to facilitate unit testing (`scene.tick()`) without * needing to render. */ tick: { value: function (time, timeDelta) { var i; var systems = this.systems; // Components. for (i = 0; i < this.behaviors.tick.length; i++) { if (!this.behaviors.tick[i].el.isPlaying) { continue; } this.behaviors.tick[i].tick(time, timeDelta); } // Systems. for (i = 0; i < this.systemNames.length; i++) { if (!systems[this.systemNames[i]].tick) { continue; } systems[this.systemNames[i]].tick(time, timeDelta); } } }, /** * Behavior-updater meant to be called after scene render for post processing purposes. * Abstracted to a different function to facilitate unit testing (`scene.tock()`) without * needing to render. */ tock: { value: function (time, timeDelta, camera) { var i; var systems = this.systems; // Components. for (i = 0; i < this.behaviors.tock.length; i++) { if (!this.behaviors.tock[i].el.isPlaying) { continue; } this.behaviors.tock[i].tock(time, timeDelta, camera); } // Systems. for (i = 0; i < this.systemNames.length; i++) { if (!systems[this.systemNames[i]].tock) { continue; } systems[this.systemNames[i]].tock(time, timeDelta, camera); } } }, /** * The render loop. * * Updates animations. * Updates behaviors. * Renders with request animation frame. */ render: { value: function (time, frame) { var renderer = this.renderer; this.frame = frame; this.delta = this.clock.getDelta() * 1000; this.time = this.clock.elapsedTime * 1000; if (this.isPlaying) { this.tick(this.time, this.delta); } renderer.render(this.object3D, this.camera); }, writable: true } }) }); /** * Return the canvas size where the scene will be rendered. * Will be always the window size except when the scene is embedded. * The parent size (less than max size) will be returned in that case. * * @param {object} canvasEl - the canvas element * @param {boolean} embedded - Is the scene embedded? * @param {object} max - Max size parameters * @param {boolean} isVR - If in VR */ function getCanvasSize (canvasEl, embedded, maxSize, isVR) { if (embedded) { return { height: canvasEl.parentElement.offsetHeight, width: canvasEl.parentElement.offsetWidth }; } return getMaxSize(maxSize, isVR); } /** * Return the canvas size. Will be the window size unless that size is greater than the * maximum size (1920x1920 by default). The constrained size will be returned in that case, * maintaining aspect ratio * * @param {object} maxSize - Max size parameters (width and height). * @param {boolean} isVR - If in VR. * @returns {object} Width and height. */ function getMaxSize (maxSize, isVR) { var aspectRatio; var size; var pixelRatio = window.devicePixelRatio; size = {height: document.body.offsetHeight, width: document.body.offsetWidth}; if (!maxSize || isVR || (maxSize.width === -1 && maxSize.height === -1)) { return size; } if (size.width * pixelRatio < maxSize.width && size.height * pixelRatio < maxSize.height) { return size; } aspectRatio = size.width / size.height; if ((size.width * pixelRatio) > maxSize.width && maxSize.width !== -1) { size.width = Math.round(maxSize.width / pixelRatio); size.height = Math.round(maxSize.width / aspectRatio / pixelRatio); } if ((size.height * pixelRatio) > maxSize.height && maxSize.height !== -1) { size.height = Math.round(maxSize.height / pixelRatio); size.width = Math.round(maxSize.height * aspectRatio / pixelRatio); } return size; } function requestFullscreen (canvas) { var requestFullscreen = canvas.requestFullscreen || canvas.webkitRequestFullscreen || canvas.mozRequestFullScreen || // The capitalized `S` is not a typo. canvas.msRequestFullscreen; // Hide navigation buttons on Android. requestFullscreen.apply(canvas, [{navigationUI: 'hide'}]); } function exitFullscreen () { var fullscreenEl = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement; if (!fullscreenEl) { return; } if (document.exitFullscreen) { document.exitFullscreen(); } else if (document.mozCancelFullScreen) { document.mozCancelFullScreen(); } else if (document.webkitExitFullscreen) { document.webkitExitFullscreen(); } } function setupCanvas (sceneEl) { var canvasEl; canvasEl = document.createElement('canvas'); canvasEl.classList.add('a-canvas'); // Mark canvas as provided/injected by A-Frame. canvasEl.dataset.aframeCanvas = true; sceneEl.appendChild(canvasEl); document.addEventListener('fullscreenchange', onFullScreenChange); document.addEventListener('mozfullscreenchange', onFullScreenChange); document.addEventListener('webkitfullscreenchange', onFullScreenChange); // Prevent overscroll on mobile. canvasEl.addEventListener('touchmove', function (event) { event.preventDefault(); }); // Set canvas on scene. sceneEl.canvas = canvasEl; sceneEl.emit('render-target-loaded', {target: canvasEl}); // For unknown reasons a synchronous resize does not work on desktop when // entering/exiting fullscreen. setTimeout(bind(sceneEl.resize, sceneEl), 0); function onFullScreenChange () { var fullscreenEl = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement; // No fullscren element === exit fullscreen if (!fullscreenEl) { sceneEl.exitVR(); } document.activeElement.blur(); document.body.focus(); } } module.exports.setupCanvas = setupCanvas; // For testing. ",
    "/* global THREE */ var utils = require('../../utils/'); var styleParser = utils.styleParser; var sceneEl; var titleEl; var getSceneCanvasSize; var ATTR_NAME = 'loading-screen'; var LOADER_TITLE_CLASS = 'a-loader-title'; module.exports.setup = function setup (el, getCanvasSize) { sceneEl = el; getSceneCanvasSize = getCanvasSize; var loaderAttribute = sceneEl.hasAttribute(ATTR_NAME) ? styleParser.parse(sceneEl.getAttribute(ATTR_NAME)) : undefined; var dotsColor = loaderAttribute && loaderAttribute.dotsColor || 'white'; var backgroundColor = loaderAttribute && loaderAttribute.backgroundColor || '#24CAFF'; var loaderEnabled = loaderAttribute === undefined || loaderAttribute.enabled === true || loaderAttribute.enabled === undefined; // true default var loaderScene; var sphereGeometry; var sphereMaterial; var sphereMesh1; var sphereMesh2; var sphereMesh3; var camera; var clock; var time; var render; if (!loaderEnabled) { return; } // Setup Scene. loaderScene = new THREE.Scene(); sphereGeometry = new THREE.SphereGeometry(0.20, 36, 18, 0, 2 * Math.PI, 0, Math.PI); sphereMaterial = new THREE.MeshBasicMaterial({color: dotsColor}); sphereMesh1 = new THREE.Mesh(sphereGeometry, sphereMaterial); sphereMesh2 = sphereMesh1.clone(); sphereMesh3 = sphereMesh1.clone(); camera = new THREE.PerspectiveCamera(80, window.innerWidth / window.innerHeight, 0.0005, 10000); clock = new THREE.Clock(); time = 0; render = function () { sceneEl.renderer.render(loaderScene, camera); time = clock.getElapsedTime() % 4; sphereMesh1.visible = time >= 1; sphereMesh2.visible = time >= 2; sphereMesh3.visible = time >= 3; }; loaderScene.background = new THREE.Color(backgroundColor); loaderScene.add(camera); sphereMesh1.position.set(-1, 0, -15); sphereMesh2.position.set(0, 0, -15); sphereMesh3.position.set(1, 0, -15); camera.add(sphereMesh1); camera.add(sphereMesh2); camera.add(sphereMesh3); setupTitle(); // Delay 200ms to avoid loader flashes. setTimeout(function () { if (sceneEl.hasLoaded) { return; } resize(camera); titleEl.style.display = 'block'; window.addEventListener('resize', function () { resize(camera); }); sceneEl.renderer.setAnimationLoop(render); }, 200); }; module.exports.remove = function remove () { window.removeEventListener('resize', resize); if (!titleEl) { return; } // Hide title. titleEl.style.display = 'none'; }; function resize (camera) { var size = getSceneCanvasSize(sceneEl.canvas, false, sceneEl.maxCanvasSize, sceneEl.is('vr-mode')); camera.aspect = size.width / size.height; camera.updateProjectionMatrix(); // Notify renderer of size change. sceneEl.renderer.setSize(size.width, size.height, false); } function setupTitle () { titleEl = document.createElement('div'); titleEl.className = LOADER_TITLE_CLASS; titleEl.innerHTML = document.title; titleEl.style.display = 'none'; sceneEl.appendChild(titleEl); } ",
    "var constants = require('../../constants/'); var extend = require('../../utils').extend; var MOBILE_HEAD_TAGS = module.exports.MOBILE_HEAD_TAGS = [ Meta({name: 'viewport', content: 'width=device-width,initial-scale=1,maximum-scale=1,shrink-to-fit=no,user-scalable=no,minimal-ui,viewport-fit=cover'}), // W3C-standardised meta tags. Meta({name: 'mobile-web-app-capable', content: 'yes'}), Meta({name: 'theme-color', content: 'black'}) ]; var MOBILE_IOS_HEAD_TAGS = [ // iOS-specific meta tags for fullscreen when pinning to homescreen. Meta({name: 'apple-mobile-web-app-capable', content: 'yes'}), Meta({name: 'apple-mobile-web-app-status-bar-style', content: 'black'}), Link({rel: 'apple-touch-icon', href: 'https://aframe.io/images/aframe-logo-152.png'}) ]; function Meta (attrs) { return { tagName: 'meta', attributes: attrs, exists: function () { return document.querySelector('meta[name="' + attrs.name + '"]'); } }; } function Link (attrs) { return { tagName: 'link', attributes: attrs, exists: function () { return document.querySelector('link[rel="' + attrs.rel + '"]'); } }; } /** * Injects the necessary metatags in the document for mobile support: * 1. Prevent the user to zoom in the document. * 2. Ensure that window.innerWidth and window.innerHeight have the correct * values and the canvas is properly scaled. * 3. To allow fullscreen mode when pinning a web app on the home screen on * iOS. * Adapted from https://www.reddit.com/r/web_design/comments/3la04p/ * * @param {object} scene - Scene element * @returns {Array} */ module.exports.inject = function injectHeadTags (scene) { var headEl = document.head; var headScriptEl = headEl.querySelector('script'); var tag; var headTags = []; MOBILE_HEAD_TAGS.forEach(createAndInjectTag); if (scene.isIOS) { MOBILE_IOS_HEAD_TAGS.forEach(createAndInjectTag); } return headTags; function createAndInjectTag (tagObj) { if (!tagObj || tagObj.exists()) { return; } tag = createTag(tagObj); if (!tag) { return; } if (headScriptEl) { headScriptEl.parentNode.insertBefore(tag, headScriptEl); } else { headEl.appendChild(tag); } headTags.push(tag); } }; function createTag (tagObj) { if (!tagObj || !tagObj.tagName) { return; } var meta = document.createElement(tagObj.tagName); meta.setAttribute(constants.AFRAME_INJECTED, ''); return extend(meta, tagObj.attributes); } ",
    "var bind = require('../../utils/bind'); var isIframed = require('../../utils/').isIframed; /** * Provides a post message API for scenes contained * in an iframe. */ module.exports = function initPostMessageAPI (scene) { // Handles fullscreen behavior when inside an iframe. if (!isIframed()) { return; } // postMessage API handler window.addEventListener('message', bind(postMessageAPIHandler, scene)); }; function postMessageAPIHandler (event) { var scene = this; if (!event.data) { return; } switch (event.data.type) { case 'vr': { switch (event.data.data) { case 'enter': scene.enterVR(); break; case 'exit': scene.exitVR(); break; } } } } ",
    "/* Scene index for keeping track of created scenes. */ module.exports = []; ",
    "var Wakelock = require('../../../vendor/wakelock/wakelock'); module.exports = function initWakelock (scene) { if (!scene.isMobile) { return; } var wakelock = scene.wakelock = new Wakelock(); scene.addEventListener('enter-vr', function () { wakelock.request(); }); scene.addEventListener('exit-vr', function () { wakelock.release(); }); }; ",
    "var utils = require('../utils/'); var PropertyTypes = require('./propertyTypes'); var debug = utils.debug; var isValidDefaultValue = PropertyTypes.isValidDefaultValue; var propertyTypes = PropertyTypes.propertyTypes; var warn = debug('core:schema:warn'); /** * A schema is classified as a schema for a single property if: * - `type` is defined on the schema as a string. * - OR `default` is defined on the schema, as a reserved keyword. * - OR schema is empty. */ function isSingleProperty (schema) { if ('type' in schema) { return typeof schema.type === 'string'; } return 'default' in schema; } module.exports.isSingleProperty = isSingleProperty; /** * Build step to schema to use `type` to inject default value, parser, and stringifier. * * @param {object} schema * @param {string} componentName * @returns {object} Schema. */ module.exports.process = function (schema, componentName) { var propName; // For single property schema, run processPropDefinition over the whole schema. if (isSingleProperty(schema)) { return processPropertyDefinition(schema, componentName); } // For multi-property schema, run processPropDefinition over each property definition. for (propName in schema) { schema[propName] = processPropertyDefinition(schema[propName], componentName); } return schema; }; /** * Inject default value, parser, stringifier for single property. * * @param {object} propDefinition * @param {string} componentName */ function processPropertyDefinition (propDefinition, componentName) { var defaultVal = propDefinition.default; var isCustomType; var propType; var typeName = propDefinition.type; // Type inference. if (!propDefinition.type) { if (defaultVal !== undefined && (typeof defaultVal === 'boolean' || typeof defaultVal === 'number')) { // Type inference. typeName = typeof defaultVal; } else if (Array.isArray(defaultVal)) { typeName = 'array'; } else { // Fall back to string. typeName = 'string'; } } else if (propDefinition.type === 'bool') { typeName = 'boolean'; } else if (propDefinition.type === 'float') { typeName = 'number'; } propType = propertyTypes[typeName]; if (!propType) { warn('Unknown property type for component `' + componentName + '`: ' + typeName); } // Fill in parse and stringify using property types. isCustomType = !!propDefinition.parse; propDefinition.parse = propDefinition.parse || propType.parse; propDefinition.stringify = propDefinition.stringify || propType.stringify; // Fill in type name. propDefinition.type = typeName; // Check that default value exists. if ('default' in propDefinition) { // Check that default values are valid. if (!isCustomType && !isValidDefaultValue(typeName, defaultVal)) { warn('Default value `' + defaultVal + '` does not match type `' + typeName + '` in component `' + componentName + '`'); } } else { // Fill in default value. propDefinition.default = propType.default; } return propDefinition; } module.exports.processPropertyDefinition = processPropertyDefinition; /** * Parse propData using schema. Use default values if not existing in propData. * * @param {object} propData - Unparsed properties. * @param {object} schema - Property types definition. * @param {boolean} getPartialData - Whether to return full component data or just the data * with keys in `propData`. * @param {string } componentName - Name of the component, used for the property warning. * @param {boolean} silent - Suppress warning messages. */ module.exports.parseProperties = (function () { var propNames = []; return function (propData, schema, getPartialData, componentName, silent) { var i; var propName; var propDefinition; var propValue; propNames.length = 0; for (propName in (getPartialData ? propData : schema)) { if (getPartialData && propData[propName] === undefined) { continue; } propNames.push(propName); } if (propData === null || typeof propData !== 'object') { return propData; } // Validation errors. for (propName in propData) { if (propData[propName] !== undefined && !schema[propName] && !silent) { warn('Unknown property `' + propName + '` for component/system `' + componentName + '`.'); } } for (i = 0; i < propNames.length; i++) { propName = propNames[i]; propDefinition = schema[propName]; propValue = propData[propName]; if (!(schema[propName])) { return; } propData[propName] = parseProperty(propValue, propDefinition); } return propData; }; })(); /** * Deserialize a single property. */ function parseProperty (value, propDefinition) { // Use default value if value is falsy. if (value === undefined || value === null || value === '') { value = propDefinition.default; if (Array.isArray(value)) { value = value.slice(); } } // Invoke property type parser. return propDefinition.parse(value, propDefinition.default); } module.exports.parseProperty = parseProperty; /** * Serialize a group of properties. */ module.exports.stringifyProperties = function (propData, schema) { var propName; var propDefinition; var propValue; var stringifiedData = {}; var value; for (propName in propData) { propDefinition = schema[propName]; propValue = propData[propName]; value = propValue; if (typeof value === 'object') { value = stringifyProperty(propValue, propDefinition); if (!propDefinition) { warn('Unknown component property: ' + propName); } } stringifiedData[propName] = value; } return stringifiedData; }; /** * Serialize a single property. */ function stringifyProperty (value, propDefinition) { // This function stringifies but it's used in a context where // there's always second stringification pass. By returning the original // value when it's not an object we save one unnecessary call // to JSON.stringify. if (typeof value !== 'object') { return value; } // if there's no schema for the property we use standar JSON stringify if (!propDefinition || value === null) { return JSON.stringify(value); } return propDefinition.stringify(value); } module.exports.stringifyProperty = stringifyProperty; ",
    "var schema = require('./schema'); var processSchema = schema.process; var shaders = module.exports.shaders = {}; // Keep track of registered shaders. var shaderNames = module.exports.shaderNames = []; // Keep track of the names of registered shaders. var THREE = require('../lib/three'); var utils = require('../utils'); // A-Frame properties to three.js uniform types. var propertyToThreeMapping = { array: 'v3', color: 'v3', int: 'i', number: 'f', map: 't', time: 'f', vec2: 'v2', vec3: 'v3', vec4: 'v4' }; /** * Shader class definition. * * Shaders extend the material component API so you can create your own library * of customized materials * */ var Shader = module.exports.Shader = function () {}; Shader.prototype = { /** * Contains the type schema and defaults for the data values. * Data is coerced into the types of the values of the defaults. */ schema: {}, vertexShader: 'void main() {' + 'gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);' + '}', fragmentShader: 'void main() {' + 'gl_FragColor = vec4(1.0, 0.0, 1.0, 1.0);' + '}', /** * Init handler. Similar to attachedCallback. * Called during shader initialization and is only run once. */ init: function (data) { this.attributes = this.initVariables(data, 'attribute'); this.uniforms = this.initVariables(data, 'uniform'); this.material = new (this.raw ? THREE.RawShaderMaterial : THREE.ShaderMaterial)({ // attributes: this.attributes, uniforms: this.uniforms, vertexShader: this.vertexShader, fragmentShader: this.fragmentShader }); return this.material; }, initVariables: function (data, type) { var key; var schema = this.schema; var variables = {}; var varType; for (key in schema) { if (schema[key].is !== type) { continue; } varType = propertyToThreeMapping[schema[key].type]; variables[key] = { type: varType, value: undefined // Let updateVariables handle setting these. }; } return variables; }, /** * Update handler. Similar to attributeChangedCallback. * Called whenever the associated material data changes. * * @param {object} data - New material data. */ update: function (data) { this.updateVariables(data, 'attribute'); this.updateVariables(data, 'uniform'); }, updateVariables: function (data, type) { var key; var materialKey; var schema = this.schema; var variables; variables = type === 'uniform' ? this.uniforms : this.attributes; for (key in data) { if (!schema[key] || schema[key].is !== type) { continue; } if (schema[key].type === 'map') { // If data unchanged, get out early. if (!variables[key] || variables[key].value === data[key]) { continue; } // Special handling is needed for textures. materialKey = '_texture_' + key; // We can't actually set the variable correctly until we've loaded the texture. this.setMapOnTextureLoad(variables, key, materialKey); // Kick off the texture update now that handler is added. utils.material.updateMapMaterialFromData(materialKey, key, this, data); continue; } variables[key].value = this.parseValue(schema[key].type, data[key]); variables[key].needsUpdate = true; } }, parseValue: function (type, value) { var color; switch (type) { case 'vec2': { return new THREE.Vector2(value.x, value.y); } case 'vec3': { return new THREE.Vector3(value.x, value.y, value.z); } case 'vec4': { return new THREE.Vector4(value.x, value.y, value.z, value.w); } case 'color': { color = new THREE.Color(value); return new THREE.Vector3(color.r, color.g, color.b); } case 'map': { return THREE.ImageUtils.loadTexture(value); } default: { return value; } } }, setMapOnTextureLoad: function (variables, key, materialKey) { var self = this; this.el.addEventListener('materialtextureloaded', function () { variables[key].value = self.material[materialKey]; variables[key].needsUpdate = true; }); } }; /** * Registers a shader to A-Frame. * * @param {string} name - shader name. * @param {object} definition - shader property and methods. * @returns {object} Shader. */ module.exports.registerShader = function (name, definition) { var NewShader; var proto = {}; // Format definition object to prototype object. Object.keys(definition).forEach(function (key) { proto[key] = { value: definition[key], writable: true }; }); if (shaders[name]) { throw new Error('The shader ' + name + ' has been already registered'); } NewShader = function () { Shader.call(this); }; NewShader.prototype = Object.create(Shader.prototype, proto); NewShader.prototype.name = name; NewShader.prototype.constructor = NewShader; shaders[name] = { Shader: NewShader, schema: processSchema(NewShader.prototype.schema) }; shaderNames.push(name); return NewShader; }; ",
    "var components = require('./component'); var schema = require('./schema'); var utils = require('../utils/'); var parseProperties = schema.parseProperties; var parseProperty = schema.parseProperty; var processSchema = schema.process; var isSingleProp = schema.isSingleProperty; var styleParser = utils.styleParser; var systems = module.exports.systems = {}; // Keep track of registered systems. /** * System class definition. * * Systems provide global scope and services to a group of instantiated components of the * same class. They can also help abstract logic away from components such that components * only have to worry about data. * * For example, a physics component that creates a physics world that oversees * all entities with a physics or rigid body component. * * TODO: Have the System prototype reuse the Component prototype. Most code is copied * and some pieces are missing from the Component facilities (e.g., attribute caching, * setAttribute behavior). * * @member {string} name - Name that system is registered under. * @member {Element} sceneEl - Handle to the scene element where system applies to. */ var System = module.exports.System = function (sceneEl) { var component = components && components.components[this.name]; // Set reference to scene. this.el = sceneEl; this.sceneEl = sceneEl; // Set reference to matching component (if exists). if (component) { component.Component.prototype.system = this; } // Process system configuration. this.buildData(); this.init(); this.update({}); }; System.prototype = { /** * Schema to configure system. */ schema: {}, /** * Init handler. Called during scene initialization and is only run once. * Systems can use this to set initial state. */ init: function () { /* no-op */ }, /** * Update handler. Called during scene attribute updates. * Systems can use this to dynamically update their state. */ update: function (oldData) { /* no-op */ }, /** * Build data and call update handler. * * @private */ updateProperties: function (rawData) { var oldData = this.data; if (!Object.keys(schema).length) { return; } this.buildData(rawData); this.update(oldData); }, /** * Parse data. */ buildData: function (rawData) { var schema = this.schema; if (!Object.keys(schema).length) { return; } rawData = rawData || window.HTMLElement.prototype.getAttribute.call(this.sceneEl, this.name); if (isSingleProp(schema)) { this.data = parseProperty(rawData, schema); } else { this.data = parseProperties(styleParser.parse(rawData) || {}, schema); } }, /** * Tick handler. * Called on each tick of the scene render loop. * Affected by play and pause. * * @param {number} time - Scene tick time. * @param {number} timeDelta - Difference in current render time and previous render time. */ tick: undefined, /** * Tock handler. * Called on each tock of the scene render loop. * Affected by play and pause. * * @param {number} time - Scene tick time. * @param {number} timeDelta - Difference in current render time and previous render time. */ tock: undefined, /** * Called to start any dynamic behavior (e.g., animation, AI, events, physics). */ play: function () { /* no-op */ }, /** * Called to stop any dynamic behavior (e.g., animation, AI, events, physics). */ pause: function () { /* no-op */ } }; /** * Registers a system to A-Frame. * * @param {string} name - Component name. * @param {object} definition - Component property and methods. * @returns {object} Component. */ module.exports.registerSystem = function (name, definition) { var i; var NewSystem; var proto = {}; var scenes = utils.findAllScenes(document); // Format definition object to prototype object. Object.keys(definition).forEach(function (key) { proto[key] = { value: definition[key], writable: true }; }); if (systems[name]) { throw new Error('The system `' + name + '` has been already registered. ' + 'Check that you are not loading two versions of the same system ' + 'or two different systems of the same name.'); } NewSystem = function (sceneEl) { System.call(this, sceneEl); }; NewSystem.prototype = Object.create(System.prototype, proto); NewSystem.prototype.name = name; NewSystem.prototype.constructor = NewSystem; NewSystem.prototype.schema = utils.extend(processSchema(NewSystem.prototype.schema)); systems[name] = NewSystem; // Initialize systems for existing scenes for (i = 0; i < scenes.length; i++) { scenes[i].initSystem(name); } }; ",
    "require('./pivot'); ",
    "var registerComponent = require('../../core/component').registerComponent; var THREE = require('../../lib/three'); var originalPosition = new THREE.Vector3(); var originalRotation = new THREE.Vector3(); /** * Wrap el.object3D within an outer group. Apply pivot to el.object3D as position. */ registerComponent('pivot', { dependencies: ['position'], schema: {type: 'vec3'}, init: function () { var data = this.data; var el = this.el; var originalParent = el.object3D.parent; var originalGroup = el.object3D; var outerGroup = new THREE.Group(); originalPosition.copy(originalGroup.position); originalRotation.copy(originalGroup.rotation); // Detach current group from parent. originalParent.remove(originalGroup); outerGroup.add(originalGroup); // Set new group as the outer group. originalParent.add(outerGroup); // Set outer group as new object3D. el.object3D = outerGroup; // Apply pivot to original group. originalGroup.position.set(-1 * data.x, -1 * data.y, -1 * data.z); // Offset the pivot so that world position not affected. // And restore position onto outer group. outerGroup.position.set(data.x + originalPosition.x, data.y + originalPosition.y, data.z + originalPosition.z); // Transfer rotation to outer group. outerGroup.rotation.copy(originalGroup.rotation); originalGroup.rotation.set(0, 0, 0); } }); ",
    "/** * Common mesh defaults, mappings, and transforms. */ var components = require('../../core/component').components; var shaders = require('../../core/shader').shaders; var utils = require('../../utils/'); var materialMappings = {}; Object.keys(components.material.schema).forEach(addMapping); Object.keys(shaders.standard.schema).forEach(addMapping); function addMapping (prop) { // To hyphenated. var htmlAttrName = prop.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase(); if (prop === 'fog') { htmlAttrName = 'material-fog'; } if (prop === 'visible') { htmlAttrName = 'material-visible'; } materialMappings[htmlAttrName] = 'material.' + prop; } module.exports = function getMeshMixin () { return { defaultComponents: {material: {}}, mappings: utils.extend({}, materialMappings) }; }; ",
    "require('./primitives/a-camera'); require('./primitives/a-cursor'); require('./primitives/a-curvedimage'); require('./primitives/a-gltf-model'); require('./primitives/a-image'); require('./primitives/a-light'); require('./primitives/a-link'); require('./primitives/a-obj-model'); require('./primitives/a-sky'); require('./primitives/a-sound'); require('./primitives/a-text'); require('./primitives/a-video'); require('./primitives/a-videosphere'); require('./primitives/meshPrimitives'); ",
    "var AEntity = require('../../core/a-entity'); var components = require('../../core/component').components; var registerElement = require('../../core/a-register-element').registerElement; var utils = require('../../utils/'); var debug = utils.debug; var setComponentProperty = utils.entity.setComponentProperty; var log = debug('extras:primitives:debug'); var warn = debug('extras:primitives:warn'); var primitives = module.exports.primitives = {}; module.exports.registerPrimitive = function registerPrimitive (name, definition) { name = name.toLowerCase(); log('Registering <%s>', name); // Deprecation warning for defaultAttributes usage. if (definition.defaultAttributes) { warn("The 'defaultAttributes' object is deprecated. Use 'defaultComponents' instead."); } var primitive = registerElement(name, { prototype: Object.create(AEntity.prototype, { defaultComponentsFromPrimitive: { value: definition.defaultComponents || definition.defaultAttributes || {} }, deprecated: {value: definition.deprecated || null}, deprecatedMappings: {value: definition.deprecatedMappings || {}}, mappings: {value: definition.mappings || {}}, createdCallback: { value: function () { if (definition.deprecated) { console.warn(definition.deprecated); } this.resolveMappingCollisions(); } }, /** * If a mapping collides with a registered component name * it renames the mapping to componentname-property */ resolveMappingCollisions: { value: function () { var mappings = this.mappings; var self = this; Object.keys(mappings).forEach(function resolveCollision (key) { var newAttribute; if (key !== key.toLowerCase()) { warn('Mapping keys should be specified in lower case. The mapping key ' + key + ' may not be recognized'); } if (components[key]) { newAttribute = mappings[key].replace('.', '-'); mappings[newAttribute] = mappings[key]; delete mappings[key]; console.warn('The primitive ' + self.tagName.toLowerCase() + ' has a mapping collision. ' + 'The attribute ' + key + ' has the same name as a registered component and' + ' has been renamed to ' + newAttribute); } }); } }, getExtraComponents: { value: function () { var attr; var data; var i; var mapping; var mixins; var path; var self = this; // Gather component data from default components. data = utils.clone(this.defaultComponentsFromPrimitive); // Factor in mixins to overwrite default components. mixins = this.getAttribute('mixin'); if (mixins) { mixins = mixins.trim().split(' '); mixins.forEach(function applyMixin (mixinId) { var mixinComponents = self.sceneEl.querySelector('#' + mixinId).componentCache; Object.keys(mixinComponents).forEach(function setComponent (name) { data[name] = extend(data[name], mixinComponents[name]); }); }); } // Gather component data from mappings. for (i = 0; i < this.attributes.length; i++) { attr = this.attributes[i]; mapping = this.mappings[attr.name]; if (mapping) { path = utils.entity.getComponentPropertyPath(mapping); if (path.constructor === Array) { data[path[0]] = data[path[0]] || {}; data[path[0]][path[1]] = attr.value.trim(); } else { data[path] = attr.value.trim(); } continue; } } return data; /** * For the base to be extensible, both objects must be pure JavaScript objects. * The function assumes that base is undefined, or null or a pure object. */ function extend (base, extension) { if (isUndefined(base)) { return copy(extension); } if (isUndefined(extension)) { return copy(base); } if (isPureObject(base) && isPureObject(extension)) { return utils.extendDeep(base, extension); } return copy(extension); } function isUndefined (value) { return typeof value === 'undefined'; } function copy (value) { if (isPureObject(value)) { return utils.extendDeep({}, value); } return value; } function isPureObject (value) { return value !== null && value.constructor === Object; } } }, /** * Sync to attribute to component property whenever mapped attribute changes. * If attribute is mapped to a component property, set the component property using * the attribute value. */ attributeChangedCallback: { value: function (attr, oldVal, value) { var componentName = this.mappings[attr]; if (attr in this.deprecatedMappings) { console.warn(this.deprecatedMappings[attr]); } if (!attr || !componentName) { return; } // Set value. setComponentProperty(this, componentName, value); } } }) }); // Store. primitives[name] = primitive; return primitive; }; /** * Add component mappings using schema. */ function addComponentMapping (componentName, mappings) { var schema = components[componentName].schema; Object.keys(schema).map(function (prop) { // Hyphenate where there is camelCase. var attrName = prop.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase(); // If there is a mapping collision, prefix with component name and hyphen. if (mappings[attrName] !== undefined) { attrName = componentName + '-' + prop; } mappings[attrName] = componentName + '.' + prop; }); } /** * Helper to define a primitive, building mappings using a component schema. */ function definePrimitive (tagName, defaultComponents, mappings) { // If no initial mappings provided, start from empty map. mappings = mappings || {}; // From the default components, add mapping automagically. Object.keys(defaultComponents).map(function buildMappings (componentName) { addComponentMapping(componentName, mappings); }); // Register the primitive. module.exports.registerPrimitive(tagName, utils.extendDeep({}, null, { defaultComponents: defaultComponents, mappings: mappings })); } module.exports.definePrimitive = definePrimitive; ",
    "var registerPrimitive = require('../primitives').registerPrimitive; registerPrimitive('a-camera', { defaultComponents: { 'camera': {}, 'look-controls': {}, 'wasd-controls': {}, 'position': {x: 0, y: 1.6, z: 0} }, mappings: { active: 'camera.active', far: 'camera.far', fov: 'camera.fov', 'look-controls-enabled': 'look-controls.enabled', near: 'camera.near', 'pointer-lock-enabled': 'look-controls.pointerLockEnabled', 'wasd-controls-enabled': 'wasd-controls.enabled', 'reverse-mouse-drag': 'look-controls.reverseMouseDrag', zoom: 'camera.zoom' } }); ",
    "var getMeshMixin = require('../getMeshMixin'); var registerPrimitive = require('../primitives').registerPrimitive; var utils = require('../../../utils/'); registerPrimitive('a-cursor', utils.extendDeep({}, getMeshMixin(), { defaultComponents: { cursor: {}, geometry: { primitive: 'ring', radiusOuter: 0.016, radiusInner: 0.01, segmentsTheta: 32 }, material: { color: '#000', shader: 'flat', opacity: 0.8 }, position: { x: 0, y: 0, z: -1 } }, mappings: { far: 'raycaster.far', fuse: 'cursor.fuse', 'fuse-timeout': 'cursor.fuseTimeout', interval: 'raycaster.interval', objects: 'raycaster.objects' } })); ",
    "var getMeshMixin = require('../getMeshMixin'); var registerPrimitive = require('../primitives').registerPrimitive; var utils = require('../../../utils/'); registerPrimitive('a-curvedimage', utils.extendDeep({}, getMeshMixin(), { defaultComponents: { geometry: { height: 1, primitive: 'cylinder', radius: 2, segmentsRadial: 48, thetaLength: 270, openEnded: true, thetaStart: 0 }, material: { color: '#FFF', shader: 'flat', side: 'double', transparent: true, repeat: '-1 1' } }, mappings: { height: 'geometry.height', 'open-ended': 'geometry.openEnded', radius: 'geometry.radius', segments: 'geometry.segmentsRadial', start: 'geometry.thetaStart', 'theta-length': 'geometry.thetaLength', 'theta-start': 'geometry.thetaStart', 'width': 'geometry.thetaLength' } })); ",
    "var registerPrimitive = require('../primitives').registerPrimitive; registerPrimitive('a-gltf-model', { mappings: { src: 'gltf-model' } }); ",
    "var getMeshMixin = require('../getMeshMixin'); var registerPrimitive = require('../primitives').registerPrimitive; var utils = require('../../../utils/'); registerPrimitive('a-image', utils.extendDeep({}, getMeshMixin(), { defaultComponents: { geometry: { primitive: 'plane' }, material: { color: '#FFF', shader: 'flat', side: 'double', transparent: true } }, mappings: { height: 'geometry.height', width: 'geometry.width' } })); ",
    "var registerPrimitive = require('../primitives').registerPrimitive; registerPrimitive('a-light', { defaultComponents: { light: {} }, mappings: { angle: 'light.angle', color: 'light.color', 'ground-color': 'light.groundColor', decay: 'light.decay', distance: 'light.distance', intensity: 'light.intensity', penumbra: 'light.penumbra', type: 'light.type', target: 'light.target' } }); ",
    "var registerPrimitive = require('../primitives').registerPrimitive; registerPrimitive('a-link', { defaultComponents: { link: { visualAspectEnabled: true } }, mappings: { href: 'link.href', image: 'link.image', title: 'link.title' } }); ",
    "var meshMixin = require('../getMeshMixin')(); var registerPrimitive = require('../primitives').registerPrimitive; var utils = require('../../../utils/'); registerPrimitive('a-obj-model', utils.extendDeep({}, meshMixin, { defaultComponents: { 'obj-model': {} }, mappings: { src: 'obj-model.obj', mtl: 'obj-model.mtl' } })); ",
    "var getMeshMixin = require('../getMeshMixin'); var registerPrimitive = require('../primitives').registerPrimitive; var utils = require('../../../utils/'); var meshPrimitives = require('./meshPrimitives'); registerPrimitive('a-sky', utils.extendDeep({}, getMeshMixin(), { defaultComponents: { geometry: { primitive: 'sphere', radius: 5000, segmentsWidth: 64, segmentsHeight: 32 }, material: { color: '#FFF', side: 'back', shader: 'flat', npot: true }, scale: '-1 1 1' }, mappings: utils.extendDeep({}, meshPrimitives['a-sphere'].prototype.mappings) })); ",
    "var registerPrimitive = require('../primitives').registerPrimitive; registerPrimitive('a-sound', { defaultComponents: { sound: {} }, mappings: { src: 'sound.src', on: 'sound.on', autoplay: 'sound.autoplay', loop: 'sound.loop', volume: 'sound.volume' } }); ",
    "// <a-text> using `definePrimitive` helper. var definePrimitive = require('../primitives').definePrimitive; definePrimitive('a-text', {text: {anchor: 'align', width: 5}}); ",
    "var getMeshMixin = require('../getMeshMixin'); var registerPrimitive = require('../primitives').registerPrimitive; var utils = require('../../../utils/'); registerPrimitive('a-video', utils.extendDeep({}, getMeshMixin(), { defaultComponents: { geometry: { primitive: 'plane' }, material: { color: '#FFF', shader: 'flat', side: 'double', transparent: true } }, mappings: { height: 'geometry.height', width: 'geometry.width' } })); ",
    "var getMeshMixin = require('../getMeshMixin'); var registerPrimitive = require('../primitives').registerPrimitive; var utils = require('../../../utils/'); registerPrimitive('a-videosphere', utils.extendDeep({}, getMeshMixin(), { defaultComponents: { geometry: { primitive: 'sphere', radius: 5000, segmentsWidth: 64, segmentsHeight: 32 }, material: { color: '#FFF', shader: 'flat', side: 'back', npot: true }, scale: '-1 1 1' }, mappings: { radius: 'geometry.radius', 'segments-height': 'geometry.segmentsHeight', 'segments-width': 'geometry.segmentsWidth' } })); ",
    "/** * Automated mesh primitive registration. */ var getMeshMixin = require('../getMeshMixin'); var geometries = require('../../../core/geometry').geometries; var geometryNames = require('../../../core/geometry').geometryNames; var registerPrimitive = require('../primitives').registerPrimitive; var utils = require('../../../utils/'); // For testing. var meshPrimitives = module.exports = {}; // Generate primitive for each geometry type. geometryNames.forEach(function registerMeshPrimitive (geometryName) { var geometry = geometries[geometryName]; var geometryHyphened = unCamelCase(geometryName); // Generate mappings. var mappings = {}; Object.keys(geometry.schema).forEach(function createMapping (property) { mappings[unCamelCase(property)] = 'geometry.' + property; }); // Register. var tagName = 'a-' + geometryHyphened; var primitive = registerPrimitive(tagName, utils.extendDeep({}, getMeshMixin(), { defaultComponents: {geometry: {primitive: geometryName}}, mappings: mappings })); meshPrimitives[tagName] = primitive; }); /** * camelCase to hyphened-string. */ function unCamelCase (str) { return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase(); } ",
    "var registerGeometry = require('../core/geometry').registerGeometry; var THREE = require('../lib/three'); registerGeometry('box', { schema: { depth: {default: 1, min: 0}, height: {default: 1, min: 0}, width: {default: 1, min: 0}, segmentsHeight: {default: 1, min: 1, max: 20, type: 'int'}, segmentsWidth: {default: 1, min: 1, max: 20, type: 'int'}, segmentsDepth: {default: 1, min: 1, max: 20, type: 'int'} }, init: function (data) { this.geometry = new THREE.BoxGeometry( data.width, data.height, data.depth, data.segmentsWidth, data.segmentsHeight, data.segmentsDepth); } }); ",
    "var registerGeometry = require('../core/geometry').registerGeometry; var THREE = require('../lib/three'); var degToRad = THREE.Math.degToRad; registerGeometry('circle', { schema: { radius: {default: 1, min: 0}, segments: {default: 32, min: 3, type: 'int'}, thetaLength: {default: 360, min: 0}, thetaStart: {default: 0} }, init: function (data) { this.geometry = new THREE.CircleGeometry( data.radius, data.segments, degToRad(data.thetaStart), degToRad(data.thetaLength)); } }); ",
    "var registerGeometry = require('../core/geometry').registerGeometry; var THREE = require('../lib/three'); var degToRad = THREE.Math.degToRad; registerGeometry('cone', { schema: { height: {default: 1, min: 0}, openEnded: {default: false}, radiusBottom: {default: 1, min: 0}, radiusTop: {default: 0.01, min: 0}, segmentsHeight: {default: 18, min: 1, type: 'int'}, segmentsRadial: {default: 36, min: 3, type: 'int'}, thetaLength: {default: 360, min: 0}, thetaStart: {default: 0} }, init: function (data) { this.geometry = new THREE.CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.segmentsRadial, data.segmentsHeight, data.openEnded, degToRad(data.thetaStart), degToRad(data.thetaLength)); } }); ",
    "var registerGeometry = require('../core/geometry').registerGeometry; var THREE = require('../lib/three'); var degToRad = THREE.Math.degToRad; registerGeometry('cylinder', { schema: { height: {default: 1, min: 0}, openEnded: {default: false}, radius: {default: 1, min: 0}, segmentsHeight: {default: 18, min: 1, type: 'int'}, segmentsRadial: {default: 36, min: 3, type: 'int'}, thetaLength: {default: 360, min: 0}, thetaStart: {default: 0} }, init: function (data) { this.geometry = new THREE.CylinderGeometry( data.radius, data.radius, data.height, data.segmentsRadial, data.segmentsHeight, data.openEnded, degToRad(data.thetaStart), degToRad(data.thetaLength)); } }); ",
    "var registerGeometry = require('../core/geometry').registerGeometry; var THREE = require('../lib/three'); registerGeometry('dodecahedron', { schema: { detail: {default: 0, min: 0, max: 5, type: 'int'}, radius: {default: 1, min: 0} }, init: function (data) { this.geometry = new THREE.DodecahedronGeometry(data.radius, data.detail); } }); ",
    "var registerGeometry = require('../core/geometry').registerGeometry; var THREE = require('../lib/three'); registerGeometry('icosahedron', { schema: { detail: {default: 0, min: 0, max: 5, type: 'int'}, radius: {default: 1, min: 0} }, init: function (data) { this.geometry = new THREE.IcosahedronGeometry(data.radius, data.detail); } }); ",
    "require('./box.js'); require('./circle.js'); require('./cone.js'); require('./cylinder.js'); require('./dodecahedron.js'); require('./icosahedron.js'); require('./octahedron.js'); require('./plane.js'); require('./ring.js'); require('./sphere.js'); require('./tetrahedron.js'); require('./torus.js'); require('./torusKnot.js'); require('./triangle.js'); ",
    "var registerGeometry = require('../core/geometry').registerGeometry; var THREE = require('../lib/three'); registerGeometry('octahedron', { schema: { detail: {default: 0, min: 0, max: 5, type: 'int'}, radius: {default: 1, min: 0} }, init: function (data) { this.geometry = new THREE.OctahedronGeometry(data.radius, data.detail); } }); ",
    "var registerGeometry = require('../core/geometry').registerGeometry; var THREE = require('../lib/three'); registerGeometry('plane', { schema: { height: {default: 1, min: 0}, width: {default: 1, min: 0}, segmentsHeight: {default: 1, min: 1, max: 20, type: 'int'}, segmentsWidth: {default: 1, min: 1, max: 20, type: 'int'} }, init: function (data) { this.geometry = new THREE.PlaneGeometry(data.width, data.height, data.segmentsWidth, data.segmentsHeight); } }); ",
    "var registerGeometry = require('../core/geometry').registerGeometry; var THREE = require('../lib/three'); var degToRad = THREE.Math.degToRad; registerGeometry('ring', { schema: { radiusInner: {default: 0.8, min: 0}, radiusOuter: {default: 1.2, min: 0}, segmentsPhi: {default: 10, min: 1, type: 'int'}, segmentsTheta: {default: 32, min: 3, type: 'int'}, thetaLength: {default: 360, min: 0}, thetaStart: {default: 0} }, init: function (data) { this.geometry = new THREE.RingGeometry( data.radiusInner, data.radiusOuter, data.segmentsTheta, data.segmentsPhi, degToRad(data.thetaStart), degToRad(data.thetaLength)); } }); ",
    "var registerGeometry = require('../core/geometry').registerGeometry; var THREE = require('../lib/three'); var degToRad = THREE.Math.degToRad; registerGeometry('sphere', { schema: { radius: {default: 1, min: 0}, phiLength: {default: 360}, phiStart: {default: 0, min: 0}, thetaLength: {default: 180, min: 0}, thetaStart: {default: 0}, segmentsHeight: {default: 18, min: 2, type: 'int'}, segmentsWidth: {default: 36, min: 3, type: 'int'} }, init: function (data) { this.geometry = new THREE.SphereGeometry( data.radius, data.segmentsWidth, data.segmentsHeight, degToRad(data.phiStart), degToRad(data.phiLength), degToRad(data.thetaStart), degToRad(data.thetaLength)); } }); ",
    "var registerGeometry = require('../core/geometry').registerGeometry; var THREE = require('../lib/three'); registerGeometry('tetrahedron', { schema: { detail: {default: 0, min: 0, max: 5, type: 'int'}, radius: {default: 1, min: 0} }, init: function (data) { this.geometry = new THREE.TetrahedronGeometry(data.radius, data.detail); } }); ",
    "var registerGeometry = require('../core/geometry').registerGeometry; var THREE = require('../lib/three'); var degToRad = THREE.Math.degToRad; registerGeometry('torus', { schema: { arc: {default: 360}, radius: {default: 1, min: 0}, radiusTubular: {default: 0.2, min: 0}, segmentsRadial: {default: 36, min: 2, type: 'int'}, segmentsTubular: {default: 32, min: 3, type: 'int'} }, init: function (data) { this.geometry = new THREE.TorusGeometry( data.radius, data.radiusTubular * 2, data.segmentsRadial, data.segmentsTubular, degToRad(data.arc)); } }); ",
    "var registerGeometry = require('../core/geometry').registerGeometry; var THREE = require('../lib/three'); registerGeometry('torusKnot', { schema: { p: {default: 2, min: 1}, q: {default: 3, min: 1}, radius: {default: 1, min: 0}, radiusTubular: {default: 0.2, min: 0}, segmentsRadial: {default: 8, min: 3, type: 'int'}, segmentsTubular: {default: 100, min: 3, type: 'int'} }, init: function (data) { this.geometry = new THREE.TorusKnotGeometry( data.radius, data.radiusTubular * 2, data.segmentsTubular, data.segmentsRadial, data.p, data.q); } }); ",
    "var registerGeometry = require('../core/geometry').registerGeometry; var THREE = require('../lib/three'); var quaternion = new THREE.Quaternion(); var rotateVector = new THREE.Vector3(0, 0, 1); var uvMinVector = new THREE.Vector2(); var uvMaxVector = new THREE.Vector2(); var uvScaleVector = new THREE.Vector2(); registerGeometry('triangle', { schema: { vertexA: {type: 'vec3', default: {x: 0, y: 0.5, z: 0}}, vertexB: {type: 'vec3', default: {x: -0.5, y: -0.5, z: 0}}, vertexC: {type: 'vec3', default: {x: 0.5, y: -0.5, z: 0}} }, init: function (data) { var geometry; var normal; var triangle; var uvA; var uvB; var uvC; triangle = new THREE.Triangle(); triangle.a.set(data.vertexA.x, data.vertexA.y, data.vertexA.z); triangle.b.set(data.vertexB.x, data.vertexB.y, data.vertexB.z); triangle.c.set(data.vertexC.x, data.vertexC.y, data.vertexC.z); normal = triangle.getNormal(new THREE.Vector3()); // Rotate the 3D triangle to be parallel to XY plane. quaternion.setFromUnitVectors(normal, rotateVector); uvA = triangle.a.clone().applyQuaternion(quaternion); uvB = triangle.b.clone().applyQuaternion(quaternion); uvC = triangle.c.clone().applyQuaternion(quaternion); // Compute UVs. // Normalize x/y values of UV so they are within 0 to 1. uvMinVector.set(Math.min(uvA.x, uvB.x, uvC.x), Math.min(uvA.y, uvB.y, uvC.y)); uvMaxVector.set(Math.max(uvA.x, uvB.x, uvC.x), Math.max(uvA.y, uvB.y, uvC.y)); uvScaleVector.set(0, 0).subVectors(uvMaxVector, uvMinVector); uvA = new THREE.Vector2().subVectors(uvA, uvMinVector).divide(uvScaleVector); uvB = new THREE.Vector2().subVectors(uvB, uvMinVector).divide(uvScaleVector); uvC = new THREE.Vector2().subVectors(uvC, uvMinVector).divide(uvScaleVector); geometry = this.geometry = new THREE.Geometry(); geometry.vertices.push(triangle.a); geometry.vertices.push(triangle.b); geometry.vertices.push(triangle.c); geometry.faces.push(new THREE.Face3(0, 1, 2, normal)); geometry.faceVertexUvs[0] = [[uvA, uvB, uvC]]; } }); ",
    "// Polyfill `Promise`. window.Promise = window.Promise || require('promise-polyfill'); // WebVR polyfill // Check before the polyfill runs. window.hasNativeWebVRImplementation = !!window.navigator.getVRDisplays || !!window.navigator.getVRDevices; window.hasNativeWebXRImplementation = navigator.xr !== undefined; // If native WebXR or WebVR are defined WebVRPolyfill does not initialize. if (!window.hasNativeWebXRImplementation && !window.hasNativeWebVRImplementation) { var isIOSOlderThan10 = require('./utils/isIOSOlderThan10'); // Workaround for iOS Safari canvas sizing issues in stereo (webvr-polyfill/issues/102). // Only for iOS on versions older than 10. var bufferScale = isIOSOlderThan10(window.navigator.userAgent) ? 1 / window.devicePixelRatio : 1; var WebVRPolyfill = require('webvr-polyfill'); var polyfillConfig = { BUFFER_SCALE: bufferScale, CARDBOARD_UI_DISABLED: true, ROTATE_INSTRUCTIONS_DISABLED: true }; window.webvrpolyfill = new WebVRPolyfill(polyfillConfig); } var utils = require('./utils/'); var debug = utils.debug; if (utils.isIE11) { // Polyfill `CustomEvent`. require('custom-event-polyfill'); // Polyfill String.startsWith. require('../vendor/starts-with-polyfill'); } var error = debug('A-Frame:error'); var warn = debug('A-Frame:warn'); if (window.document.currentScript && window.document.currentScript.parentNode !== window.document.head && !window.debug) { warn('Put the A-Frame <script> tag in the <head> of the HTML *before* the scene to ' + 'ensure everything for A-Frame is properly registered before they are used from ' + 'HTML.'); } // Error if not using a server. if (window.location.protocol === 'file:') { error( 'This HTML file is currently being served via the file:// protocol. ' + 'Assets, textures, and models WILL NOT WORK due to cross-origin policy! ' + 'Please use a local or hosted server: ' + 'https://aframe.io/docs/0.5.0/introduction/getting-started.html#using-a-local-server.'); } require('present'); // Polyfill `performance.now()`. // CSS. if (utils.device.isBrowserEnvironment) { require('./style/aframe.css'); require('./style/rStats.css'); } // Required before `AEntity` so that all components are registered. var AScene = require('./core/scene/a-scene').AScene; var components = require('./core/component').components; var registerComponent = require('./core/component').registerComponent; var registerGeometry = require('./core/geometry').registerGeometry; var registerPrimitive = require('./extras/primitives/primitives').registerPrimitive; var registerShader = require('./core/shader').registerShader; var registerSystem = require('./core/system').registerSystem; var shaders = require('./core/shader').shaders; var systems = require('./core/system').systems; // Exports THREE to window so three.js can be used without alteration. var THREE = window.THREE = require('./lib/three'); var pkg = require('../package'); require('./components/index'); // Register standard components. require('./geometries/index'); // Register standard geometries. require('./shaders/index'); // Register standard shaders. require('./systems/index'); // Register standard systems. var ANode = require('./core/a-node'); var AEntity = require('./core/a-entity'); // Depends on ANode and core components. require('./core/a-assets'); require('./core/a-cubemap'); require('./core/a-mixin'); // Extras. require('./extras/components/'); require('./extras/primitives/'); console.log('A-Frame Version: 0.9.2 (Date 2019-05-06, Commit #f57a1fa)'); console.log('three Version (https://github.com/supermedium/three.js):', pkg.dependencies['super-three']); console.log('WebVR Polyfill Version:', pkg.dependencies['webvr-polyfill']); module.exports = window.AFRAME = { AComponent: require('./core/component').Component, AEntity: AEntity, ANode: ANode, ANIME: require('super-animejs'), AScene: AScene, components: components, coreComponents: Object.keys(components), geometries: require('./core/geometry').geometries, registerComponent: registerComponent, registerElement: require('./core/a-register-element').registerElement, registerGeometry: registerGeometry, registerPrimitive: registerPrimitive, registerShader: registerShader, registerSystem: registerSystem, primitives: { getMeshMixin: require('./extras/primitives/getMeshMixin'), primitives: require('./extras/primitives/primitives').primitives }, scenes: require('./core/scene/scenes'), schema: require('./core/schema'), shaders: shaders, systems: systems, THREE: THREE, utils: utils, version: pkg.version }; ",
    "window.aframeStats = function (scene) { var _rS = null; var _scene = scene; var _values = { te: { caption: 'Entities' }, lt: { caption: 'Load Time' } }; var _groups = [ { caption: 'A-Frame', values: [ 'te', 'lt' ] } ]; function _update () { _rS('te').set(getEntityCount()); if (window.performance.getEntriesByName) { _rS('lt').set(window.performance.getEntriesByName('render-started')[0].startTime.toFixed(0)); } } function getEntityCount () { var elements = _scene.querySelectorAll('*'); Array.prototype.slice.call(elements).filter(function (el) { return el.isEntity; }); return elements.length; } function _start () {} function _end () {} function _attach (r) { _rS = r; } return { update: _update, start: _start, end: _end, attach: _attach, values: _values, groups: _groups, fractions: [] }; }; if (typeof module === 'object') { module.exports = { aframeStats: window.aframeStats }; } ",
    "var THREE = global.THREE = require('super-three'); // Allow cross-origin images to be loaded. // This should not be on `THREE.Loader` nor `THREE.ImageUtils`. // Must be on `THREE.TextureLoader`. if (THREE.TextureLoader) { THREE.TextureLoader.prototype.crossOrigin = 'anonymous'; } // This is for images loaded from the model loaders. if (THREE.ImageLoader) { THREE.ImageLoader.prototype.crossOrigin = 'anonymous'; } // In-memory caching for XHRs (for images, audio files, textures, etc.). if (THREE.Cache) { THREE.Cache.enabled = true; } // TODO: Eventually include these only if they are needed by a component. require('super-three/examples/js/loaders/DRACOLoader'); // THREE.DRACOLoader require('super-three/examples/js/loaders/GLTFLoader'); // THREE.GLTFLoader require('super-three/examples/js/loaders/OBJLoader'); // THREE.OBJLoader require('super-three/examples/js/loaders/MTLLoader'); // THREE.MTLLoader THREE.DRACOLoader.prototype.crossOrigin = 'anonymous'; THREE.GLTFLoader.prototype.crossOrigin = 'anonymous'; THREE.MTLLoader.prototype.crossOrigin = 'anonymous'; THREE.OBJLoader.prototype.crossOrigin = 'anonymous'; module.exports = THREE; ",
    "var registerShader = require('../core/shader').registerShader; var THREE = require('../lib/three'); var utils = require('../utils/'); /** * Flat shader using THREE.MeshBasicMaterial. */ module.exports.Shader = registerShader('flat', { schema: { color: {type: 'color'}, fog: {default: true}, height: {default: 256}, offset: {type: 'vec2', default: {x: 0, y: 0}}, repeat: {type: 'vec2', default: {x: 1, y: 1}}, src: {type: 'map'}, width: {default: 512}, wireframe: {default: false}, wireframeLinewidth: {default: 2} }, /** * Initializes the shader. * Adds a reference from the scene to this entity as the camera. */ init: function (data) { this.rendererSystem = this.el.sceneEl.systems.renderer; this.materialData = {color: new THREE.Color()}; this.textureSrc = null; getMaterialData(data, this.materialData); this.rendererSystem.applyColorCorrection(this.materialData.color); this.material = new THREE.MeshBasicMaterial(this.materialData); utils.material.updateMap(this, data); }, update: function (data) { this.updateMaterial(data); utils.material.updateMap(this, data); }, /** * Updating existing material. * * @param {object} data - Material component data. */ updateMaterial: function (data) { var key; getMaterialData(data, this.materialData); this.rendererSystem.applyColorCorrection(this.materialData.color); for (key in this.materialData) { this.material[key] = this.materialData[key]; } } }); /** * Builds and normalize material data, normalizing stuff along the way. * * @param {object} data - Material data. * @param {object} materialData - Object to reuse. * @returns {object} Updated material data. */ function getMaterialData (data, materialData) { materialData.color.set(data.color); materialData.fog = data.fog; materialData.wireframe = data.wireframe; materialData.wireframeLinewidth = data.wireframeLinewidth; return materialData; } ",
    "require('./flat'); require('./standard'); require('./sdf'); require('./msdf'); require('./ios10hls'); ",
    "var registerShader = require('../core/shader').registerShader; /** * Custom shader for iOS 10 HTTP Live Streaming (HLS). * For more information on HLS, see https://datatracker.ietf.org/doc/draft-pantos-http-live-streaming/ */ module.exports.Shader = registerShader('ios10hls', { schema: { src: {type: 'map', is: 'uniform'}, opacity: {type: 'number', is: 'uniform', default: 1} }, vertexShader: [ 'varying vec2 vUV;', 'void main(void) {', ' gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);', ' vUV = uv;', '}' ].join('\n'), fragmentShader: [ 'uniform sampler2D src;', 'uniform float opacity;', 'varying vec2 vUV;', 'void main() {', ' vec2 offset = vec2(0, 0);', ' vec2 repeat = vec2(1, 1);', ' vec4 color = texture2D(src, vec2(vUV.x / repeat.x + offset.x, (1.0 - vUV.y) / repeat.y + offset.y)).bgra;', ' gl_FragColor = vec4(color.rgb, opacity);', '}' ].join('\n') }); ",
    "var registerShader = require('../core/shader').registerShader; /** * Multi-channel signed distance field. * Used by text component. */ module.exports.Shader = registerShader('msdf', { schema: { alphaTest: {type: 'number', is: 'uniform', default: 0.5}, color: {type: 'color', is: 'uniform', default: 'white'}, map: {type: 'map', is: 'uniform'}, negate: {type: 'boolean', is: 'uniform', default: true}, opacity: {type: 'number', is: 'uniform', default: 1.0} }, raw: true, vertexShader: [ 'attribute vec2 uv;', 'attribute vec3 position;', 'uniform mat4 projectionMatrix;', 'uniform mat4 modelViewMatrix;', 'varying vec2 vUV;', 'void main(void) {', ' gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);', ' vUV = uv;', '}' ].join('\n'), fragmentShader: [ '#ifdef GL_OES_standard_derivatives', '#extension GL_OES_standard_derivatives: enable', '#endif', 'precision highp float;', 'uniform bool negate;', 'uniform float alphaTest;', 'uniform float opacity;', 'uniform sampler2D map;', 'uniform vec3 color;', 'varying vec2 vUV;', 'float median(float r, float g, float b) {', ' return max(min(r, g), min(max(r, g), b));', '}', // FIXME: Experimentally determined constants. '#define BIG_ENOUGH 0.001', '#define MODIFIED_ALPHATEST (0.02 * isBigEnough / BIG_ENOUGH)', 'void main() {', ' vec3 sample = texture2D(map, vUV).rgb;', ' if (negate) { sample = 1.0 - sample; }', ' float sigDist = median(sample.r, sample.g, sample.b) - 0.5;', ' float alpha = clamp(sigDist / fwidth(sigDist) + 0.5, 0.0, 1.0);', ' float dscale = 0.353505;', ' vec2 duv = dscale * (dFdx(vUV) + dFdy(vUV));', ' float isBigEnough = max(abs(duv.x), abs(duv.y));', // When texel is too small, blend raw alpha value rather than supersampling. // FIXME: Experimentally determined constant. ' // Do modified alpha test.', ' if (isBigEnough > BIG_ENOUGH) {', ' float ratio = BIG_ENOUGH / isBigEnough;', ' alpha = ratio * alpha + (1.0 - ratio) * (sigDist + 0.5);', ' }', ' // Do modified alpha test.', ' if (alpha < alphaTest * MODIFIED_ALPHATEST) { discard; return; }', ' gl_FragColor = vec4(color.xyz, alpha * opacity);', '}' ].join('\n') }); ",
    "var registerShader = require('../core/shader').registerShader; /** * Signed distance field. * Used by text component. */ module.exports.Shader = registerShader('sdf', { schema: { alphaTest: {type: 'number', is: 'uniform', default: 0.5}, color: {type: 'color', is: 'uniform', default: 'white'}, map: {type: 'map', is: 'uniform'}, opacity: {type: 'number', is: 'uniform', default: 1.0} }, raw: true, vertexShader: [ 'attribute vec2 uv;', 'attribute vec3 position;', 'uniform mat4 projectionMatrix;', 'uniform mat4 modelViewMatrix;', 'varying vec2 vUV;', 'void main(void) {', ' gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);', ' vUV = uv;', '}' ].join('\n'), fragmentShader: [ '#ifdef GL_OES_standard_derivatives', '#extension GL_OES_standard_derivatives: enable', '#endif', 'precision highp float;', 'uniform float alphaTest;', 'uniform float opacity;', 'uniform sampler2D map;', 'uniform vec3 color;', 'varying vec2 vUV;', '#ifdef GL_OES_standard_derivatives', ' float contour(float width, float value) {', ' return smoothstep(0.5 - value, 0.5 + value, width);', ' }', '#else', ' float aastep(float value, float afwidth) {', ' return smoothstep(0.5 - afwidth, 0.5 + afwidth, value);', ' }', '#endif', // FIXME: Experimentally determined constants. '#define BIG_ENOUGH 0.001', '#define MODIFIED_ALPHATEST (0.02 * isBigEnough / BIG_ENOUGH)', '#define ALL_SMOOTH 0.4', '#define ALL_ROUGH 0.02', '#define DISCARD_ALPHA (alphaTest / (2.2 - 1.2 * ratio))', 'void main() {', // When we have derivatives and can get texel size for supersampling. ' #ifdef GL_OES_standard_derivatives', ' vec2 uv = vUV;', ' vec4 texColor = texture2D(map, uv);', ' float dist = texColor.a;', ' float width = fwidth(dist);', ' float alpha = contour(dist, width);', ' float dscale = 0.353505;', ' vec2 duv = dscale * (dFdx(uv) + dFdy(uv));', ' float isBigEnough = max(abs(duv.x), abs(duv.y));', // When texel is too small, blend raw alpha value rather than supersampling. // FIXME: experimentally determined constant ' if (isBigEnough > BIG_ENOUGH) {', ' float ratio = BIG_ENOUGH / isBigEnough;', ' alpha = ratio * alpha + (1.0 - ratio) * dist;', ' }', // Otherwise do weighted supersampling. // FIXME: why this weighting? ' if (isBigEnough <= BIG_ENOUGH) {', ' vec4 box = vec4 (uv - duv, uv + duv);', ' alpha = (alpha + 0.5 * (', ' contour(texture2D(map, box.xy).a, width)', ' + contour(texture2D(map, box.zw).a, width)', ' + contour(texture2D(map, box.xw).a, width)', ' + contour(texture2D(map, box.zy).a, width)', ' )) / 3.0;', ' }', // Do modified alpha test. ' if (alpha < alphaTest * MODIFIED_ALPHATEST) { discard; return; }', ' #else', // When we don't have derivatives, use approximations. ' vec4 texColor = texture2D(map, vUV);', ' float value = texColor.a;', // FIXME: if we understood font pixel dimensions, this could probably be improved ' float afwidth = (1.0 / 32.0) * (1.4142135623730951 / (2.0 * gl_FragCoord.w));', ' float alpha = aastep(value, afwidth);', // Use gl_FragCoord.w to guess when we should blend. // FIXME: If we understood font pixel dimensions, this could probably be improved. ' float ratio = (gl_FragCoord.w >= ALL_SMOOTH) ? 1.0 : (gl_FragCoord.w < ALL_ROUGH) ? 0.0 : (gl_FragCoord.w - ALL_ROUGH) / (ALL_SMOOTH - ALL_ROUGH);', ' if (alpha < alphaTest) { if (ratio >= 1.0) { discard; return; } alpha = 0.0; }', ' alpha = alpha * ratio + (1.0 - ratio) * value;', ' if (ratio < 1.0 && alpha <= DISCARD_ALPHA) { discard; return; }', ' #endif', ' gl_FragColor = vec4(color, opacity * alpha);', '}' ].join('\n') }); ",
    "var registerShader = require('../core/shader').registerShader; var THREE = require('../lib/three'); var utils = require('../utils/'); var CubeLoader = new THREE.CubeTextureLoader(); var texturePromises = {}; /** * Standard (physically-based) shader using THREE.MeshStandardMaterial. */ module.exports.Shader = registerShader('standard', { schema: { ambientOcclusionMap: {type: 'map'}, ambientOcclusionMapIntensity: {default: 1}, ambientOcclusionTextureOffset: {type: 'vec2'}, ambientOcclusionTextureRepeat: {type: 'vec2', default: {x: 1, y: 1}}, color: {type: 'color'}, displacementMap: {type: 'map'}, displacementScale: {default: 1}, displacementBias: {default: 0.5}, displacementTextureOffset: {type: 'vec2'}, displacementTextureRepeat: {type: 'vec2', default: {x: 1, y: 1}}, emissive: {type: 'color', default: '#000'}, emissiveIntensity: {default: 1}, envMap: {default: ''}, fog: {default: true}, height: {default: 256}, metalness: {default: 0.0, min: 0.0, max: 1.0}, metalnessMap: {type: 'map'}, metalnessTextureOffset: {type: 'vec2'}, metalnessTextureRepeat: {type: 'vec2', default: {x: 1, y: 1}}, normalMap: {type: 'map'}, normalScale: {type: 'vec2', default: {x: 1, y: 1}}, normalTextureOffset: {type: 'vec2'}, normalTextureRepeat: {type: 'vec2', default: {x: 1, y: 1}}, offset: {type: 'vec2', default: {x: 0, y: 0}}, repeat: {type: 'vec2', default: {x: 1, y: 1}}, roughness: {default: 0.5, min: 0.0, max: 1.0}, roughnessMap: {type: 'map'}, roughnessTextureOffset: {type: 'vec2'}, roughnessTextureRepeat: {type: 'vec2', default: {x: 1, y: 1}}, sphericalEnvMap: {type: 'map'}, src: {type: 'map'}, width: {default: 512}, wireframe: {default: false}, wireframeLinewidth: {default: 2} }, /** * Initializes the shader. * Adds a reference from the scene to this entity as the camera. */ init: function (data) { this.rendererSystem = this.el.sceneEl.systems.renderer; this.materialData = {color: new THREE.Color(), emissive: new THREE.Color()}; getMaterialData(data, this.materialData); this.rendererSystem.applyColorCorrection(this.materialData.color); this.rendererSystem.applyColorCorrection(this.materialData.emissive); this.material = new THREE.MeshStandardMaterial(this.materialData); utils.material.updateMap(this, data); if (data.normalMap) { utils.material.updateDistortionMap('normal', this, data); } if (data.displacementMap) { utils.material.updateDistortionMap('displacement', this, data); } if (data.ambientOcclusionMap) { utils.material.updateDistortionMap('ambientOcclusion', this, data); } if (data.metalnessMap) { utils.material.updateDistortionMap('metalness', this, data); } if (data.roughnessMap) { utils.material.updateDistortionMap('roughness', this, data); } this.updateEnvMap(data); }, update: function (data) { this.updateMaterial(data); utils.material.updateMap(this, data); if (data.normalMap) { utils.material.updateDistortionMap('normal', this, data); } if (data.displacementMap) { utils.material.updateDistortionMap('displacement', this, data); } if (data.ambientOcclusionMap) { utils.material.updateDistortionMap('ambientOcclusion', this, data); } if (data.metalnessMap) { utils.material.updateDistortionMap('metalness', this, data); } if (data.roughnessMap) { utils.material.updateDistortionMap('roughness', this, data); } this.updateEnvMap(data); }, /** * Updating existing material. * * @param {object} data - Material component data. * @returns {object} Material. */ updateMaterial: function (data) { var key; var material = this.material; getMaterialData(data, this.materialData); this.rendererSystem.applyColorCorrection(this.materialData.color); this.rendererSystem.applyColorCorrection(this.materialData.emissive); for (key in this.materialData) { material[key] = this.materialData[key]; } }, /** * Handle environment cubemap. Textures are cached in texturePromises. */ updateEnvMap: function (data) { var self = this; var material = this.material; var envMap = data.envMap; var sphericalEnvMap = data.sphericalEnvMap; // No envMap defined or already loading. if ((!envMap && !sphericalEnvMap) || this.isLoadingEnvMap) { material.envMap = null; material.needsUpdate = true; return; } this.isLoadingEnvMap = true; // if a spherical env map is defined then use it. if (sphericalEnvMap) { this.el.sceneEl.systems.material.loadTexture(sphericalEnvMap, {src: sphericalEnvMap}, function textureLoaded (texture) { self.isLoadingEnvMap = false; texture.mapping = THREE.SphericalReflectionMapping; material.envMap = texture; utils.material.handleTextureEvents(self.el, texture); material.needsUpdate = true; }); return; } // Another material is already loading this texture. Wait on promise. if (texturePromises[envMap]) { texturePromises[envMap].then(function (cube) { self.isLoadingEnvMap = false; material.envMap = cube; utils.material.handleTextureEvents(self.el, cube); material.needsUpdate = true; }); return; } // Material is first to load this texture. Load and resolve texture. texturePromises[envMap] = new Promise(function (resolve) { utils.srcLoader.validateCubemapSrc(envMap, function loadEnvMap (urls) { CubeLoader.load(urls, function (cube) { // Texture loaded. self.isLoadingEnvMap = false; material.envMap = cube; utils.material.handleTextureEvents(self.el, cube); resolve(cube); }); }); }); } }); /** * Builds and normalize material data, normalizing stuff along the way. * * @param {object} data - Material data. * @param {object} materialData - Object to use. * @returns {object} Updated materialData. */ function getMaterialData (data, materialData) { materialData.color.set(data.color); materialData.emissive.set(data.emissive); materialData.emissiveIntensity = data.emissiveIntensity; materialData.fog = data.fog; materialData.metalness = data.metalness; materialData.roughness = data.roughness; materialData.wireframe = data.wireframe; materialData.wireframeLinewidth = data.wireframeLinewidth; if (data.normalMap) { materialData.normalScale = data.normalScale; } if (data.ambientOcclusionMap) { materialData.aoMapIntensity = data.ambientOcclusionMapIntensity; } if (data.displacementMap) { materialData.displacementScale = data.displacementScale; materialData.displacementBias = data.displacementBias; } return materialData; } ",
    "var constants = require('../constants/'); var registerSystem = require('../core/system').registerSystem; var DEFAULT_CAMERA_ATTR = 'data-aframe-default-camera'; /** * Camera system. Manages which camera is active among multiple cameras in scene. * * @member {object} activeCameraEl - Active camera entity. */ module.exports.System = registerSystem('camera', { init: function () { this.activeCameraEl = null; this.render = this.render.bind(this); this.unwrapRender = this.unwrapRender.bind(this); this.wrapRender = this.wrapRender.bind(this); this.initialCameraFound = false; this.numUserCameras = 0; this.numUserCamerasChecked = 0; this.setupInitialCamera(); }, /** * Setup initial camera, either searching for camera or * creating a default camera if user has not added one during the initial scene traversal. * We want sceneEl.camera to be ready, set, and initialized before the rest of the scene * loads. * * Default camera offset height is at average eye level (~1.6m). */ setupInitialCamera: function () { var cameraEls; var i; var sceneEl = this.sceneEl; var self = this; // Camera already defined or the one defined it is an spectator one. if (sceneEl.camera && !sceneEl.camera.el.getAttribute('camera').spectator) { sceneEl.emit('cameraready', {cameraEl: sceneEl.camera.el}); return; } // Search for initial user-defined camera. cameraEls = sceneEl.querySelectorAll('a-camera, [camera]'); // No user cameras, create default one. if (!cameraEls.length) { this.createDefaultCamera(); return; } this.numUserCameras = cameraEls.length; for (i = 0; i < cameraEls.length; i++) { cameraEls[i].addEventListener('object3dset', function (evt) { if (evt.detail.type !== 'camera') { return; } self.checkUserCamera(this); }); // Load camera and wait for camera to initialize. if (cameraEls[i].isNode) { cameraEls[i].load(); } else { cameraEls[i].addEventListener('nodeready', function () { this.load(); }); } } }, /** * Check if a user-defined camera entity is appropriate to be initial camera. * (active + non-spectator). * * Keep track of the number of cameras we checked and whether we found one. */ checkUserCamera: function (cameraEl) { var cameraData; var sceneEl = this.el.sceneEl; this.numUserCamerasChecked++; // Already found one. if (this.initialCameraFound) { return; } // Check if camera is appropriate for being the initial camera. cameraData = cameraEl.getAttribute('camera'); if (!cameraData.active || cameraData.spectator) { // No user cameras eligible, create default camera. if (this.numUserCamerasChecked === this.numUserCameras) { this.createDefaultCamera(); } return; } this.initialCameraFound = true; sceneEl.camera = cameraEl.getObject3D('camera'); sceneEl.emit('cameraready', {cameraEl: cameraEl}); }, createDefaultCamera: function () { var defaultCameraEl; var sceneEl = this.sceneEl; // Set up default camera. defaultCameraEl = document.createElement('a-entity'); defaultCameraEl.setAttribute('camera', {active: true}); defaultCameraEl.setAttribute('position', { x: 0, y: constants.DEFAULT_CAMERA_HEIGHT, z: 0 }); defaultCameraEl.setAttribute('wasd-controls', ''); defaultCameraEl.setAttribute('look-controls', ''); defaultCameraEl.setAttribute(constants.AFRAME_INJECTED, ''); defaultCameraEl.addEventListener('object3dset', function (evt) { if (evt.detail.type !== 'camera') { return; } sceneEl.camera = evt.detail.object; sceneEl.emit('cameraready', {cameraEl: defaultCameraEl}); }); sceneEl.appendChild(defaultCameraEl); }, /** * Set a different active camera. * When we choose a (sort of) random scene camera as the replacement, set its `active` to * true. The camera component will call `setActiveCamera` and handle passing the torch to * the new camera. */ disableActiveCamera: function () { var cameraEls; var newActiveCameraEl; cameraEls = this.sceneEl.querySelectorAll('[camera]'); newActiveCameraEl = cameraEls[cameraEls.length - 1]; newActiveCameraEl.setAttribute('camera', 'active', true); }, /** * Set active camera to be used by renderer. * Removes the default camera (if present). * Disables all other cameras in the scene. * * @param {Element} newCameraEl - Entity with camera component. */ setActiveCamera: function (newCameraEl) { var cameraEl; var cameraEls; var i; var newCamera; var previousCamera = this.activeCameraEl; var sceneEl = this.sceneEl; // Same camera. newCamera = newCameraEl.getObject3D('camera'); if (!newCamera || newCameraEl === this.activeCameraEl) { return; } // Grab the default camera. var defaultCameraWrapper = sceneEl.querySelector('[' + DEFAULT_CAMERA_ATTR + ']'); var defaultCameraEl = defaultCameraWrapper && defaultCameraWrapper.querySelector('[camera]'); // Remove default camera if new camera is not the default camera. if (newCameraEl !== defaultCameraEl) { removeDefaultCamera(sceneEl); } // Make new camera active. this.activeCameraEl = newCameraEl; this.activeCameraEl.play(); sceneEl.camera = newCamera; // Disable current camera if (previousCamera) { previousCamera.setAttribute('camera', 'active', false); } // Disable other cameras in the scene cameraEls = sceneEl.querySelectorAll('[camera]'); for (i = 0; i < cameraEls.length; i++) { cameraEl = cameraEls[i]; if (!cameraEl.isEntity || newCameraEl === cameraEl) { continue; } cameraEl.setAttribute('camera', 'active', false); cameraEl.pause(); } sceneEl.emit('camera-set-active', {cameraEl: newCameraEl}); }, /** * Set spectator camera to render the scene on a 2D display. * * @param {Element} newCameraEl - Entity with camera component. */ setSpectatorCamera: function (newCameraEl) { var newCamera; var previousCamera = this.spectatorCameraEl; var sceneEl = this.sceneEl; var spectatorCameraEl; // Same camera. newCamera = newCameraEl.getObject3D('camera'); if (!newCamera || newCameraEl === this.spectatorCameraEl) { return; } // Disable current camera if (previousCamera) { previousCamera.setAttribute('camera', 'spectator', false); } spectatorCameraEl = this.spectatorCameraEl = newCameraEl; sceneEl.addEventListener('enter-vr', this.wrapRender); sceneEl.addEventListener('exit-vr', this.unwrapRender); spectatorCameraEl.setAttribute('camera', 'active', false); spectatorCameraEl.play(); sceneEl.emit('camera-set-spectator', {cameraEl: newCameraEl}); }, /** * Disables current spectator camera. */ disableSpectatorCamera: function () { this.spectatorCameraEl = undefined; }, /** * Wrap the render method of the renderer to render * the spectator camera after vrDisplay.submitFrame. */ wrapRender: function () { if (!this.spectatorCameraEl) { return; } this.originalRender = this.sceneEl.renderer.render; this.sceneEl.renderer.render = this.render; }, unwrapRender: function () { if (!this.originalRender) { return; } this.sceneEl.renderer.render = this.originalRender; this.originalRender = undefined; }, render: function (scene, camera) { var isVREnabled; var sceneEl = this.sceneEl; var spectatorCamera; isVREnabled = sceneEl.renderer.vr.enabled; this.originalRender.call(sceneEl.renderer, scene, camera); if (!this.spectatorCameraEl || sceneEl.isMobile || !isVREnabled) { return; } spectatorCamera = this.spectatorCameraEl.components.camera.camera; sceneEl.renderer.vr.enabled = false; this.originalRender.call(sceneEl.renderer, scene, spectatorCamera); sceneEl.renderer.vr.enabled = isVREnabled; } }); /** * Remove injected default camera from scene, if present. * * @param {Element} sceneEl */ function removeDefaultCamera (sceneEl) { var defaultCamera; var camera = sceneEl.camera; if (!camera) { return; } // Remove default camera if present. defaultCamera = sceneEl.querySelector('[' + DEFAULT_CAMERA_ATTR + ']'); if (!defaultCamera) { return; } sceneEl.removeChild(defaultCamera); } ",
    "var geometries = require('../core/geometry').geometries; var registerSystem = require('../core/system').registerSystem; var THREE = require('../lib/three'); /** * System for geometry component. * Handle geometry caching. * * @member {object} cache - Mapping of stringified component data to THREE.Geometry objects. * @member {object} cacheCount - Keep track of number of entities using a geometry to * know whether to dispose on removal. */ module.exports.System = registerSystem('geometry', { init: function () { this.cache = {}; this.cacheCount = {}; }, /** * Reset cache. Mainly for testing. */ clearCache: function () { this.cache = {}; this.cacheCount = {}; }, /** * Attempt to retrieve from cache. * * @returns {Object|null} A geometry if it exists, else null. */ getOrCreateGeometry: function (data) { var cache = this.cache; var cachedGeometry; var hash; // Skip all caching logic. if (data.skipCache) { return createGeometry(data); } // Try to retrieve from cache first. hash = this.hash(data); cachedGeometry = cache[hash]; incrementCacheCount(this.cacheCount, hash); if (cachedGeometry) { return cachedGeometry; } // Create geometry. cachedGeometry = createGeometry(data); // Cache and return geometry. cache[hash] = cachedGeometry; return cachedGeometry; }, /** * Let system know that an entity is no longer using a geometry. */ unuseGeometry: function (data) { var cache = this.cache; var cacheCount = this.cacheCount; var geometry; var hash; if (data.skipCache) { return; } hash = this.hash(data); if (!cache[hash]) { return; } decrementCacheCount(cacheCount, hash); // Another entity is still using this geometry. No need to do anything. if (cacheCount[hash] > 0) { return; } // No more entities are using this geometry. Dispose. geometry = cache[hash]; geometry.dispose(); delete cache[hash]; delete cacheCount[hash]; }, /** * Use JSON.stringify to turn component data into hash. * Should be deterministic within a single browser engine. * If not, then look into json-stable-stringify. */ hash: function (data) { return JSON.stringify(data); } }); /** * Create geometry using component data. * * @param {object} data - Component data. * @returns {object} Geometry. */ function createGeometry (data) { var geometryType = data.primitive; var GeometryClass = geometries[geometryType] && geometries[geometryType].Geometry; var geometryInstance = new GeometryClass(); if (!GeometryClass) { throw new Error('Unknown geometry `' + geometryType + '`'); } geometryInstance.init(data); return toBufferGeometry(geometryInstance.geometry, data.buffer); } /** * Decreate count of entity using a geometry. */ function decrementCacheCount (cacheCount, hash) { cacheCount[hash]--; } /** * Increase count of entity using a geometry. */ function incrementCacheCount (cacheCount, hash) { cacheCount[hash] = cacheCount[hash] === undefined ? 1 : cacheCount[hash] + 1; } /** * Transform geometry to BufferGeometry if `doBuffer`. * * @param {object} geometry * @param {boolean} doBuffer * @returns {object} Geometry. */ function toBufferGeometry (geometry, doBuffer) { var bufferGeometry; if (!doBuffer) { return geometry; } bufferGeometry = new THREE.BufferGeometry().fromGeometry(geometry); bufferGeometry.metadata = {type: geometry.type, parameters: geometry.parameters || {}}; geometry.dispose(); // Dispose no longer needed non-buffer geometry. return bufferGeometry; } ",
    "var registerSystem = require('../core/system').registerSystem; var THREE = require('../lib/three'); /** * glTF model system. * * Configures glTF loading options. Models using glTF compression require that a Draco decoder be * provided externally. * * @param {string} dracoDecoderPath - Base path from which to load Draco decoder library. */ module.exports.System = registerSystem('gltf-model', { schema: { dracoDecoderPath: {default: ''} }, init: function () { var path = this.data.dracoDecoderPath; THREE.DRACOLoader.setDecoderPath(path); this.dracoLoader = path ? new THREE.DRACOLoader() : null; }, update: function () { var path; if (this.dracoLoader) { return; } path = this.data.dracoDecoderPath; THREE.DRACOLoader.setDecoderPath(path); this.dracoLoader = path ? new THREE.DRACOLoader() : null; }, getDRACOLoader: function () { return this.dracoLoader; } }); ",
    "require('./camera'); require('./geometry'); require('./gltf-model'); require('./light'); require('./material'); require('./renderer'); require('./shadow'); require('./tracked-controls-webvr'); require('./tracked-controls-webxr'); ",
    "var registerSystem = require('../core/system').registerSystem; var bind = require('../utils/bind'); var constants = require('../constants/'); var DEFAULT_LIGHT_ATTR = 'data-aframe-default-light'; /** * Light system. * * Prescribes default lighting if not specified (one ambient, one directional). * Removes default lighting from the scene when a new light is added. * * @param {bool} defaultLights - Whether default lighting are defined. * @param {bool} userDefinedLights - Whether user lighting is defined. */ module.exports.System = registerSystem('light', { schema: { defaultLightsEnabled: {default: true} }, init: function () { this.defaultLights = false; this.userDefinedLights = false; // Wait for all entities to fully load before checking for existence of lights. // Since entities wait for <a-assets> to load, any lights attaching to the scene // will do so asynchronously. this.sceneEl.addEventListener('loaded', bind(this.setupDefaultLights, this)); }, /** * Notify scene that light has been added and to remove the default. * * @param {object} el - element holding the light component. */ registerLight: function (el) { if (!el.hasAttribute(DEFAULT_LIGHT_ATTR)) { // User added a light, remove default lights through DOM. this.removeDefaultLights(); this.userDefinedLights = true; } }, removeDefaultLights: function () { var defaultLights; var sceneEl = this.sceneEl; if (!this.defaultLights) { return; } defaultLights = document.querySelectorAll('[' + DEFAULT_LIGHT_ATTR + ']'); for (var i = 0; i < defaultLights.length; i++) { sceneEl.removeChild(defaultLights[i]); } this.defaultLights = false; }, /** * Prescibe default lights to the scene. * Does so by injecting markup such that this state is not invisible. * These lights are removed if the user adds any lights. */ setupDefaultLights: function () { var sceneEl = this.sceneEl; var ambientLight; var directionalLight; if (this.userDefinedLights || this.defaultLights || !this.data.defaultLightsEnabled) { return; } ambientLight = document.createElement('a-entity'); ambientLight.setAttribute('light', {color: '#BBB', type: 'ambient'}); ambientLight.setAttribute(DEFAULT_LIGHT_ATTR, ''); ambientLight.setAttribute(constants.AFRAME_INJECTED, ''); sceneEl.appendChild(ambientLight); directionalLight = document.createElement('a-entity'); directionalLight.setAttribute('light', {color: '#FFF', intensity: 0.6, castShadow: true}); directionalLight.setAttribute('position', {x: -0.5, y: 1, z: 1}); directionalLight.setAttribute(DEFAULT_LIGHT_ATTR, ''); directionalLight.setAttribute(constants.AFRAME_INJECTED, ''); sceneEl.appendChild(directionalLight); this.defaultLights = true; } }); ",
    "var registerSystem = require('../core/system').registerSystem; var THREE = require('../lib/three'); var utils = require('../utils/'); var isHLS = require('../utils/material').isHLS; var bind = utils.bind; var debug = utils.debug; var error = debug('components:texture:error'); var TextureLoader = new THREE.TextureLoader(); var warn = debug('components:texture:warn'); TextureLoader.setCrossOrigin('anonymous'); /** * System for material component. * Handle material registration, updates (for fog), and texture caching. * * @member {object} materials - Registered materials. * @member {object} textureCounts - Number of times each texture is used. Tracked * separately from textureCache, because the cache (1) is populated in * multiple places, and (2) may be cleared at any time. * @member {object} textureCache - Texture cache for: * - Images: textureCache has mapping of src -> repeat -> cached three.js texture. * - Videos: textureCache has mapping of videoElement -> cached three.js texture. */ module.exports.System = registerSystem('material', { init: function () { this.materials = {}; this.textureCounts = {}; this.textureCache = {}; this.sceneEl.addEventListener( 'materialtextureloaded', bind(this.onMaterialTextureLoaded, this) ); }, clearTextureCache: function () { this.textureCache = {}; }, /** * Determine whether `src` is a image or video. Then try to load the asset, then call back. * * @param {string, or element} src - Texture URL or element. * @param {string} data - Relevant texture data used for caching. * @param {function} cb - Callback to pass texture to. */ loadTexture: function (src, data, cb) { var self = this; // Canvas. if (src.tagName === 'CANVAS') { this.loadCanvas(src, data, cb); return; } // Video element. if (src.tagName === 'VIDEO') { if (!src.src && !src.srcObject && !src.childElementCount) { warn('Video element was defined with neither `source` elements nor `src` / `srcObject` attributes.'); } this.loadVideo(src, data, cb); return; } utils.srcLoader.validateSrc(src, loadImageCb, loadVideoCb); function loadImageCb (src) { self.loadImage(src, data, cb); } function loadVideoCb (src) { self.loadVideo(src, data, cb); } }, /** * High-level function for loading image textures (THREE.Texture). * * @param {Element|string} src - Texture source. * @param {object} data - Texture data. * @param {function} cb - Callback to pass texture to. */ loadImage: function (src, data, handleImageTextureLoaded) { var hash = this.hash(data); var textureCache = this.textureCache; // Texture already being loaded or already loaded. Wait on promise. if (textureCache[hash]) { textureCache[hash].then(handleImageTextureLoaded); return; } // Texture not yet being loaded. Start loading it. textureCache[hash] = loadImageTexture(src, data); textureCache[hash].then(handleImageTextureLoaded); }, /** * High-level function for loading canvas textures (THREE.Texture). * * @param {Element|string} src - Texture source. * @param {object} data - Texture data. * @param {function} cb - Callback to pass texture to. */ loadCanvas: function (src, data, cb) { var texture; texture = new THREE.CanvasTexture(src); setTextureProperties(texture, data); cb(texture); }, /** * Load video texture (THREE.VideoTexture). * Which is just an image texture that RAFs + needsUpdate. * Note that creating a video texture is synchronous unlike loading an image texture. * Made asynchronous to be consistent with image textures. * * @param {Element|string} src - Texture source. * @param {object} data - Texture data. * @param {function} cb - Callback to pass texture to. */ loadVideo: function (src, data, cb) { var hash; var texture; var textureCache = this.textureCache; var videoEl; var videoTextureResult; function handleVideoTextureLoaded (result) { result.texture.needsUpdate = true; cb(result.texture, result.videoEl); } // Video element provided. if (typeof src !== 'string') { // Check cache before creating texture. videoEl = src; hash = this.hashVideo(data, videoEl); if (textureCache[hash]) { textureCache[hash].then(handleVideoTextureLoaded); return; } // If not in cache, fix up the attributes then start to create the texture. fixVideoAttributes(videoEl); } // Only URL provided. Use video element to create texture. videoEl = videoEl || createVideoEl(src, data.width, data.height); // Generated video element already cached. Use that. hash = this.hashVideo(data, videoEl); if (textureCache[hash]) { textureCache[hash].then(handleVideoTextureLoaded); return; } // Create new video texture. texture = new THREE.VideoTexture(videoEl); texture.minFilter = THREE.LinearFilter; setTextureProperties(texture, data); // If iOS and video is HLS, do some hacks. if (this.sceneEl.isIOS && isHLS(videoEl.src || videoEl.getAttribute('src'), videoEl.type || videoEl.getAttribute('type'))) { // Actually BGRA. Tell shader to correct later. texture.format = THREE.RGBAFormat; texture.needsCorrectionBGRA = true; // Apparently needed for HLS. Tell shader to correct later. texture.flipY = false; texture.needsCorrectionFlipY = true; } // Cache as promise to be consistent with image texture caching. videoTextureResult = {texture: texture, videoEl: videoEl}; textureCache[hash] = Promise.resolve(videoTextureResult); handleVideoTextureLoaded(videoTextureResult); }, /** * Create a hash of the material properties for texture cache key. */ hash: function (data) { if (data.src.tagName) { // Since `data.src` can be an element, parse out the string if necessary for the hash. data = utils.extendDeep({}, data); data.src = data.src.src; } return JSON.stringify(data); }, hashVideo: function (data, videoEl) { return calculateVideoCacheHash(data, videoEl); }, /** * Keep track of material in case an update trigger is needed (e.g., fog). * * @param {object} material */ registerMaterial: function (material) { this.materials[material.uuid] = material; }, /** * Stop tracking material, and dispose of any textures not being used by * another material component. * * @param {object} material */ unregisterMaterial: function (material) { delete this.materials[material.uuid]; // If any textures on this material are no longer in use, dispose of them. var textureCounts = this.textureCounts; Object.keys(material) .filter(function (propName) { return material[propName] && material[propName].isTexture; }) .forEach(function (mapName) { textureCounts[material[mapName].uuid]--; if (textureCounts[material[mapName].uuid] <= 0) { material[mapName].dispose(); } }); }, /** * Trigger update to all registered materials. */ updateMaterials: function (material) { var materials = this.materials; Object.keys(materials).forEach(function (uuid) { materials[uuid].needsUpdate = true; }); }, /** * Track textures used by material components, so that they can be safely * disposed when no longer in use. Textures must be registered here, and not * through registerMaterial(), because textures may not be attached at the * time the material is registered. * * @param {Event} e */ onMaterialTextureLoaded: function (e) { if (!this.textureCounts[e.detail.texture.uuid]) { this.textureCounts[e.detail.texture.uuid] = 0; } this.textureCounts[e.detail.texture.uuid]++; } }); /** * Calculates consistent hash from a video element using its attributes. * If the video element has an ID, use that. * Else build a hash that looks like `src:myvideo.mp4;height:200;width:400;`. * * @param data {object} - Texture data such as repeat. * @param videoEl {Element} - Video element. * @returns {string} */ function calculateVideoCacheHash (data, videoEl) { var i; var id = videoEl.getAttribute('id'); var hash; var videoAttributes; if (id) { return id; } // Calculate hash using sorted video attributes. hash = ''; videoAttributes = data || {}; for (i = 0; i < videoEl.attributes.length; i++) { videoAttributes[videoEl.attributes[i].name] = videoEl.attributes[i].value; } Object.keys(videoAttributes).sort().forEach(function (name) { hash += name + ':' + videoAttributes[name] + ';'; }); return hash; } /** * Load image texture. * * @private * @param {string|object} src - An <img> element or url to an image file. * @param {object} data - Data to set texture properties like `repeat`. * @returns {Promise} Resolves once texture is loaded. */ function loadImageTexture (src, data) { return new Promise(doLoadImageTexture); function doLoadImageTexture (resolve, reject) { var isEl = typeof src !== 'string'; function resolveTexture (texture) { setTextureProperties(texture, data); texture.needsUpdate = true; resolve(texture); } // Create texture from an element. if (isEl) { resolveTexture(new THREE.Texture(src)); return; } // Request and load texture from src string. THREE will create underlying element. // Use THREE.TextureLoader (src, onLoad, onProgress, onError) to load texture. TextureLoader.load( src, resolveTexture, function () { /* no-op */ }, function (xhr) { error('`$s` could not be fetched (Error code: %s; Response: %s)', xhr.status, xhr.statusText); } ); } } /** * Set texture properties such as repeat and offset. * * @param {object} data - With keys like `repeat`. */ function setTextureProperties (texture, data) { var offset = data.offset || {x: 0, y: 0}; var repeat = data.repeat || {x: 1, y: 1}; var npot = data.npot || false; // To support NPOT textures, wrap must be ClampToEdge (not Repeat), // and filters must not use mipmaps (i.e. Nearest or Linear). if (npot) { texture.wrapS = THREE.ClampToEdgeWrapping; texture.wrapT = THREE.ClampToEdgeWrapping; texture.magFilter = THREE.LinearFilter; texture.minFilter = THREE.LinearFilter; } // Don't bother setting repeat if it is 1/1. Power-of-two is required to repeat. if (repeat.x !== 1 || repeat.y !== 1) { texture.wrapS = THREE.RepeatWrapping; texture.wrapT = THREE.RepeatWrapping; texture.repeat.set(repeat.x, repeat.y); } // Don't bother setting offset if it is 0/0. if (offset.x !== 0 || offset.y !== 0) { texture.offset.set(offset.x, offset.y); } } /** * Create video element to be used as a texture. * * @param {string} src - Url to a video file. * @param {number} width - Width of the video. * @param {number} height - Height of the video. * @returns {Element} Video element. */ function createVideoEl (src, width, height) { var videoEl = document.createElement('video'); videoEl.width = width; videoEl.height = height; // Support inline videos for iOS webviews. videoEl.setAttribute('playsinline', ''); videoEl.setAttribute('webkit-playsinline', ''); videoEl.autoplay = true; videoEl.loop = true; videoEl.crossOrigin = 'anonymous'; videoEl.addEventListener('error', function () { warn('`$s` is not a valid video', src); }, true); videoEl.src = src; return videoEl; } /** * Fixes a video element's attributes to prevent developers from accidentally passing the * wrong attribute values to commonly misused video attributes. * * <video> does not treat `autoplay`, `controls`, `crossorigin`, `loop`, and `preload` as * as booleans. Existence of those attributes will mean truthy. * * For example, translates <video loop="false"> to <video>. * * @see https://developer.mozilla.org/docs/Web/HTML/Element/video#Attributes * @param {Element} videoEl - Video element. * @returns {Element} Video element with the correct properties updated. */ function fixVideoAttributes (videoEl) { videoEl.autoplay = videoEl.hasAttribute('autoplay') && videoEl.getAttribute('autoplay') !== 'false'; videoEl.controls = videoEl.hasAttribute('controls') && videoEl.getAttribute('controls') !== 'false'; if (videoEl.getAttribute('loop') === 'false') { videoEl.removeAttribute('loop'); } if (videoEl.getAttribute('preload') === 'false') { videoEl.preload = 'none'; } videoEl.crossOrigin = videoEl.crossOrigin || 'anonymous'; // To support inline videos in iOS webviews. videoEl.setAttribute('playsinline', ''); videoEl.setAttribute('webkit-playsinline', ''); return videoEl; } ",
    "var registerSystem = require('../core/system').registerSystem; var utils = require('../utils/'); var THREE = require('../lib/three'); var debug = utils.debug; var warn = debug('components:renderer:warn'); /** * Determines state of various renderer properties. */ module.exports.System = registerSystem('renderer', { schema: { antialias: {default: 'auto', oneOf: ['true', 'false', 'auto']}, highRefreshRate: {default: false}, logarithmicDepthBuffer: {default: 'auto', oneOf: ['true', 'false', 'auto']}, maxCanvasWidth: {default: 1920}, maxCanvasHeight: {default: 1920}, physicallyCorrectLights: {default: false}, precision: {default: 'high', oneOf: ['high', 'medium', 'low']}, sortObjects: {default: false}, colorManagement: {default: false}, gammaOutput: {default: false}, alpha: {default: true}, foveationLevel: {default: 0} }, init: function () { var data = this.data; var sceneEl = this.el; // This is the rendering engine, such as THREE.js so copy over any persistent properties from the rendering system. var renderer = sceneEl.renderer; renderer.sortObjects = data.sortObjects; renderer.physicallyCorrectLights = data.physicallyCorrectLights; if (data.colorManagement || data.gammaOutput) { renderer.gammaOutput = true; renderer.gammaFactor = 2.2; if (data.gammaOutput) { warn('Property `gammaOutput` is deprecated. Use `renderer="colorManagement: true;"` instead.'); } } if (sceneEl.hasAttribute('antialias')) { warn('Component `antialias` is deprecated. Use `renderer="antialias: true"` instead.'); } if (sceneEl.hasAttribute('logarithmicDepthBuffer')) { warn('Component `logarithmicDepthBuffer` is deprecated. Use `renderer="logarithmicDepthBuffer: true"` instead.'); } }, applyColorCorrection: function (colorOrTexture) { if (!this.data.colorManagement || !colorOrTexture) { return; } else if (colorOrTexture.isColor) { colorOrTexture.convertSRGBToLinear(); } else if (colorOrTexture.isTexture) { colorOrTexture.encoding = THREE.sRGBEncoding; } } }); ",
    "var registerSystem = require('../core/system').registerSystem; var THREE = require('../lib/three'); var SHADOW_MAP_TYPE_MAP = { basic: THREE.BasicShadowMap, pcf: THREE.PCFShadowMap, pcfsoft: THREE.PCFSoftShadowMap }; /** * Shadow system. * * Enabled automatically when one or more shadow components are added to the scene, the system sets * options on the WebGLRenderer for configuring shadow appearance. */ module.exports.System = registerSystem('shadow', { schema: { enabled: {default: true}, autoUpdate: {default: true}, type: {default: 'pcf', oneOf: ['basic', 'pcf', 'pcfsoft']} }, init: function () { var sceneEl = this.sceneEl; var data = this.data; this.shadowMapEnabled = false; if (!sceneEl.renderer) { return; } // For tests. sceneEl.renderer.shadowMap.type = SHADOW_MAP_TYPE_MAP[data.type]; sceneEl.renderer.shadowMap.autoUpdate = data.autoUpdate; this.setShadowMapEnabled(this.shadowMapEnabled); }, update: function (prevData) { if (prevData.enabled !== this.data.enabled) { this.setShadowMapEnabled(this.data.enabled); } }, /** * Enables/disables the renderer shadow map. * @param {boolean} enabled */ setShadowMapEnabled: function (enabled) { var renderer = this.sceneEl.renderer; this.shadowMapEnabled = this.data.enabled && enabled; if (renderer) { renderer.shadowMap.enabled = this.shadowMapEnabled; } } }); ",
    "var registerSystem = require('../core/system').registerSystem; var utils = require('../utils'); /** * Tracked controls system. * Maintain list with available tracked controllers. */ module.exports.System = registerSystem('tracked-controls-webvr', { init: function () { var self = this; this.controllers = []; this.isChrome = navigator.userAgent.indexOf('Chrome') !== -1; this.updateControllerList(); this.throttledUpdateControllerList = utils.throttle(this.updateControllerList, 500, this); if (!navigator.getVRDisplays) { return; } this.sceneEl.addEventListener('enter-vr', function () { navigator.getVRDisplays().then(function (displays) { if (displays.length) { self.vrDisplay = displays[0]; } }); }); }, tick: function () { if (this.isChrome) { // Retrieve new controller handlers with updated state (pose, buttons...) this.updateControllerList(); } else { this.throttledUpdateControllerList(); } }, /** * Update controller list. */ updateControllerList: function () { var controllers = this.controllers; var gamepad; var gamepads; var i; var prevCount; gamepads = navigator.getGamepads && navigator.getGamepads(); if (!gamepads) { return; } prevCount = controllers.length; controllers.length = 0; for (i = 0; i < gamepads.length; ++i) { gamepad = gamepads[i]; if (gamepad && gamepad.pose) { controllers.push(gamepad); } } if (controllers.length !== prevCount) { this.el.emit('controllersupdated', undefined, false); } } }); ",
    "var registerSystem = require('../core/system').registerSystem; var utils = require('../utils'); /** * Tracked controls system. * Maintain list with available tracked controllers. */ module.exports.System = registerSystem('tracked-controls-webxr', { init: function () { this.controllers = []; this.throttledUpdateControllerList = utils.throttle(this.updateControllerList, 500, this); }, tick: function () { this.throttledUpdateControllerList(); }, updateControllerList: function () { var oldControllersLength = this.controllers.length; if (!this.el.xrSession) { return; } this.controllers = this.el.xrSession.getInputSources(); if (oldControllersLength === this.controllers.length) { return; } this.el.emit('controllersupdated', undefined, false); } }); ",
    "/** * Faster version of Function.prototype.bind * @param {Function} fn - Function to wrap. * @param {Object} ctx - What to bind as context. * @param {...*} arguments - Arguments to pass through. */ module.exports = function bind (fn, ctx/* , arg1, arg2 */) { return (function (prependedArgs) { return function bound () { // Concat the bound function arguments with those passed to original bind var args = prependedArgs.concat(Array.prototype.slice.call(arguments, 0)); return fn.apply(ctx, args); }; })(Array.prototype.slice.call(arguments, 2)); }; ",
    "/* global THREE */ var debug = require('./debug'); var extend = require('object-assign'); var warn = debug('utils:coordinates:warn'); // Order of coordinates parsed by coordinates.parse. var COORDINATE_KEYS = ['x', 'y', 'z', 'w']; // Coordinate string regex. Handles negative, positive, and decimals. var regex = /^\s*((-?\d*\.{0,1}\d+(e-?\d+)?)\s+){2,3}(-?\d*\.{0,1}\d+(e-?\d+)?)\s*$/; module.exports.regex = regex; var OBJECT = 'object'; var whitespaceRegex = /\s+/g; /** * Parses coordinates from an "x y z" string. * Example: "3 10 -5" to {x: 3, y: 10, z: -5}. * * @param {string} val - An "x y z" string. * @param {string} defaults - fallback value. * @returns {object} An object with keys [x, y, z]. */ function parse (value, defaultVec) { var coordinate; var defaultVal; var key; var i; var vec; var x; var y; var z; var w; if (value && value instanceof Object) { x = value.x === undefined ? defaultVec && defaultVec.x : value.x; y = value.y === undefined ? defaultVec && defaultVec.y : value.y; z = value.z === undefined ? defaultVec && defaultVec.z : value.z; w = value.w === undefined ? defaultVec && defaultVec.w : value.w; if (x !== undefined && x !== null) { value.x = parseIfString(x); } if (y !== undefined && y !== null) { value.y = parseIfString(y); } if (z !== undefined && z !== null) { value.z = parseIfString(z); } if (w !== undefined && w !== null) { value.w = parseIfString(w); } return value; } if (value === null || value === undefined) { return typeof defaultVec === OBJECT ? extend({}, defaultVec) : defaultVec; } coordinate = value.trim().split(whitespaceRegex); vec = {}; for (i = 0; i < COORDINATE_KEYS.length; i++) { key = COORDINATE_KEYS[i]; if (coordinate[i]) { vec[key] = parseFloat(coordinate[i], 10); } else { defaultVal = defaultVec && defaultVec[key]; if (defaultVal === undefined) { continue; } vec[key] = parseIfString(defaultVal); } } return vec; } module.exports.parse = parse; /** * Stringify coordinates from an object with keys [x y z]. * Example: {x: 3, y: 10, z: -5} to "3 10 -5". * * @param {object|string} data - An object with keys [x y z]. * @returns {string} An "x y z" string. */ function stringify (data) { var str; if (typeof data !== OBJECT) { return data; } str = data.x + ' ' + data.y; if (data.z != null) { str += ' ' + data.z; } if (data.w != null) { str += ' ' + data.w; } return str; } module.exports.stringify = stringify; /** * @returns {bool} */ function isCoordinates (value) { return regex.test(value); } module.exports.isCoordinates = isCoordinates; module.exports.isCoordinate = function (value) { warn('`AFRAME.utils.isCoordinate` has been renamed to `AFRAME.utils.isCoordinates`'); return isCoordinates(value); }; function parseIfString (val) { if (val !== null && val !== undefined && val.constructor === String) { return parseFloat(val, 10); } return val; } /** * Convert {x, y, z} object to three.js Vector3. */ module.exports.toVector3 = function (vec3) { return new THREE.Vector3(vec3.x, vec3.y, vec3.z); }; ",
    "var debugLib = require('debug'); var extend = require('object-assign'); var settings = { colors: { debug: 'gray', error: 'red', info: 'gray', warn: 'orange' } }; /** * Monkeypatches `debug` so we can colorize error/warning messages. * * (See issue: https://github.com/visionmedia/debug/issues/137) */ var debug = function (namespace) { var d = debugLib(namespace); d.color = getDebugNamespaceColor(namespace); return d; }; extend(debug, debugLib); /** * Returns the type of the namespace (e.g., `error`, `warn`). * * @param {String} namespace * The debug logger's namespace (e.g., `components:geometry:warn`). * @returns {String} The type of the namespace (e.g., `warn`). * @api private */ function getDebugNamespaceType (namespace) { var chunks = namespace.split(':'); return chunks[chunks.length - 1]; // Return the last one } /** * Returns the color of the namespace (e.g., `orange`). * * @param {String} namespace * The debug logger's namespace (e.g., `components:geometry:warn`). * @returns {String} The color of the namespace (e.g., `orange`). * @api private */ function getDebugNamespaceColor (namespace) { var type = getDebugNamespaceType(namespace); var color = settings.colors && settings.colors[type]; return color || null; } /** * Returns `localStorage` if possible. * * This is necessary because Safari throws when a user disables * cookies or `localStorage` and you attempt to access it. * * @returns {localStorage} * @api private */ function storage () { try { return window.localStorage; } catch (e) { } } /** * To enable console logging, type this in the Console of your Dev Tools: * * localStorage.logs = 1 * * To disable console logging: * * localStorage.logs = 0 * */ var ls = storage(); if (ls && (parseInt(ls.logs, 10) || ls.logs === 'true')) { debug.enable('*'); } else { debug.enable('*:error,*:info,*:warn'); } if (process.browser) { window.logs = debug; } module.exports = debug; ",
    "var error = require('debug')('device:error'); var vrDisplay; // Catch vrdisplayactivate early to ensure we can enter VR mode after the scene loads. window.addEventListener('vrdisplayactivate', function (evt) { var canvasEl; // WebXR takes priority if available. if (navigator.xr) { return; } canvasEl = document.createElement('canvas'); vrDisplay = evt.display; // Request present immediately. a-scene will be allowed to enter VR without user gesture. vrDisplay.requestPresent([{source: canvasEl}]).then(function () {}, function () {}); }); // Support both WebVR and WebXR APIs. if (navigator.xr) { navigator.xr.requestDevice().then(function (device) { if (!device) { return; } device.supportsSession({immersive: true, exclusive: true}).then(function () { var sceneEl = document.querySelector('a-scene'); vrDisplay = device; if (sceneEl) { sceneEl.emit('displayconnected', {vrDisplay: vrDisplay}); } }); }).catch(function (err) { error('WebXR Request Device: ' + err.message); }); } else { if (navigator.getVRDisplays) { navigator.getVRDisplays().then(function (displays) { var sceneEl = document.querySelector('a-scene'); vrDisplay = displays.length && displays[0]; if (sceneEl) { sceneEl.emit('displayconnected', {vrDisplay: vrDisplay}); } }); } } module.exports.isWebXRAvailable = navigator.xr !== undefined; function getVRDisplay () { return vrDisplay; } module.exports.getVRDisplay = getVRDisplay; /** * Determine if a headset is connected by checking if a vrDisplay is available. */ function checkHeadsetConnected () { return !!getVRDisplay(); } module.exports.checkHeadsetConnected = checkHeadsetConnected; /** * Checks if browser is mobile and not stand-alone dedicated vr device. * @return {Boolean} True if mobile browser detected. */ var isMobile = (function () { var _isMobile = false; (function (a) { // eslint-disable-next-line no-useless-escape if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))) { _isMobile = true; } if (isIOS() || isTablet() || isR7()) { _isMobile = true; } if (isMobileVR()) { _isMobile = false; } })(window.navigator.userAgent || window.navigator.vendor || window.opera); return function () { return _isMobile; }; })(); module.exports.isMobile = isMobile; /** * Detect tablet devices. * @param {string} mockUserAgent - Allow passing a mock user agent for testing. */ function isTablet (mockUserAgent) { var userAgent = mockUserAgent || window.navigator.userAgent; return /ipad|Nexus (7|9)|xoom|sch-i800|playbook|tablet|kindle/i.test(userAgent); } module.exports.isTablet = isTablet; function isIOS () { return /iPad|iPhone|iPod/.test(window.navigator.platform); } module.exports.isIOS = isIOS; /** * Detect browsers in Stand-Alone headsets */ function isMobileVR () { return /(OculusBrowser)|(SamsungBrowser)|(Mobile VR)/i.test(window.navigator.userAgent); } module.exports.isMobileVR = isMobileVR; function isR7 () { return /R7 Build/.test(window.navigator.userAgent); } module.exports.isR7 = isR7; /** * Checks mobile device orientation. * @return {Boolean} True if landscape orientation. */ module.exports.isLandscape = function () { var orientation = window.orientation; if (isR7()) { orientation += 90; } return orientation === 90 || orientation === -90; }; /** * Check if running in a browser or spoofed browser (bundler). * We need to check a node api that isn't mocked on either side. * `require` and `module.exports` are mocked in browser by bundlers. * `window` is mocked in node. * `process` is also mocked by browserify, but has custom properties. */ module.exports.isBrowserEnvironment = !!(!process || process.browser); /** * Check if running in node on the server. */ module.exports.isNodeEnvironment = !module.exports.isBrowserEnvironment; /** * Update an Object3D pose if a polyfilled vrDisplay is present. */ module.exports.PolyfillControls = function PolyfillControls (object) { var frameData; var vrDisplay = window.webvrpolyfill && window.webvrpolyfill.getPolyfillDisplays()[0]; if (window.VRFrameData) { frameData = new window.VRFrameData(); } this.update = function () { var pose; if (!vrDisplay) { return; } vrDisplay.getFrameData(frameData); pose = frameData.pose; if (pose.orientation !== null) { object.quaternion.fromArray(pose.orientation); } if (pose.position !== null) { object.position.fromArray(pose.position); } else { object.position.set(0, 0, 0); } }; }; ",
    "/** * Split a delimited component property string (e.g., `material.color`) to an object * containing `component` name and `property` name. If there is no delimiter, just return the * string back. * * Cache arrays from splitting strings via delimiter to save on memory. * * @param {string} str - e.g., `material.opacity`. * @param {string} delimiter - e.g., `.`. * @returns {array} e.g., `['material', 'opacity']`. */ var propertyPathCache = {}; function getComponentPropertyPath (str, delimiter) { delimiter = delimiter || '.'; if (!propertyPathCache[delimiter]) { propertyPathCache[delimiter] = {}; } if (str.indexOf(delimiter) !== -1) { propertyPathCache[delimiter][str] = str.split(delimiter); } else { propertyPathCache[delimiter][str] = str; } return propertyPathCache[delimiter][str]; } module.exports.getComponentPropertyPath = getComponentPropertyPath; module.exports.propertyPathCache = propertyPathCache; /** * Get component property using encoded component name + component property name with a * delimiter. */ module.exports.getComponentProperty = function (el, name, delimiter) { var splitName; delimiter = delimiter || '.'; if (name.indexOf(delimiter) !== -1) { splitName = getComponentPropertyPath(name, delimiter); if (splitName.constructor === String) { return el.getAttribute(splitName); } return el.getAttribute(splitName[0])[splitName[1]]; } return el.getAttribute(name); }; /** * Set component property using encoded component name + component property name with a * delimiter. */ module.exports.setComponentProperty = function (el, name, value, delimiter) { var splitName; delimiter = delimiter || '.'; if (name.indexOf(delimiter) !== -1) { splitName = getComponentPropertyPath(name, delimiter); if (splitName.constructor === String) { el.setAttribute(splitName, value); } else { el.setAttribute(splitName[0], splitName[1], value); } return; } el.setAttribute(name, value); }; ",
    "module.exports = function forceCanvasResizeSafariMobile (canvasEl) { var width = canvasEl.style.width; var height = canvasEl.style.height; // Taken from webvr-polyfill (https://github.com/borismus/webvr-polyfill/blob/85f657cd502ec9417bf26b87c3cb2afa6a70e079/src/util.js#L200) // iOS only workaround for https://bugs.webkit.org/show_bug.cgi?id=152556 // By changing the size 1 pixel and restoring the previous value // we trigger a size recalculation cycle. canvasEl.style.width = (parseInt(width, 10) + 1) + 'px'; canvasEl.style.height = (parseInt(height, 10) + 1) + 'px'; setTimeout(function () { canvasEl.style.width = width; canvasEl.style.height = height; }, 200); }; ",
    "/* global location */ /* Centralized place to reference utilities since utils is exposed to the user. */ var debug = require('./debug'); var deepAssign = require('deep-assign'); var device = require('./device'); var objectAssign = require('object-assign'); var objectPool = require('./object-pool'); var warn = debug('utils:warn'); module.exports.bind = require('./bind'); module.exports.coordinates = require('./coordinates'); module.exports.debug = debug; module.exports.device = device; module.exports.entity = require('./entity'); module.exports.forceCanvasResizeSafariMobile = require('./forceCanvasResizeSafariMobile'); module.exports.isIE11 = require('./is-ie11'); module.exports.material = require('./material'); module.exports.objectPool = objectPool; module.exports.split = require('./split').split; module.exports.styleParser = require('./styleParser'); module.exports.trackedControls = require('./tracked-controls'); module.exports.checkHeadsetConnected = function () { warn('`utils.checkHeadsetConnected` has moved to `utils.device.checkHeadsetConnected`'); return device.checkHeadsetConnected(arguments); }; module.exports.isGearVR = module.exports.device.isGearVR = function () { warn('`utils.isGearVR` has been deprecated, use `utils.device.isMobileVR`'); }; module.exports.isIOS = function () { warn('`utils.isIOS` has moved to `utils.device.isIOS`'); return device.isIOS(arguments); }; module.exports.isOculusGo = module.exports.device.isOculusGo = function () { warn('`utils.isOculusGo` has been deprecated, use `utils.device.isMobileVR`'); }; module.exports.isMobile = function () { warn('`utils.isMobile has moved to `utils.device.isMobile`'); return device.isMobile(arguments); }; /** * Returns throttle function that gets called at most once every interval. * * @param {function} functionToThrottle * @param {number} minimumInterval - Minimal interval between calls (milliseconds). * @param {object} optionalContext - If given, bind function to throttle to this context. * @returns {function} Throttled function. */ module.exports.throttle = function (functionToThrottle, minimumInterval, optionalContext) { var lastTime; if (optionalContext) { functionToThrottle = module.exports.bind(functionToThrottle, optionalContext); } return function () { var time = Date.now(); var sinceLastTime = typeof lastTime === 'undefined' ? minimumInterval : time - lastTime; if (typeof lastTime === 'undefined' || (sinceLastTime >= minimumInterval)) { lastTime = time; functionToThrottle.apply(null, arguments); } }; }; /** * Returns throttle function that gets called at most once every interval. * Uses the time/timeDelta timestamps provided by the global render loop for better perf. * * @param {function} functionToThrottle * @param {number} minimumInterval - Minimal interval between calls (milliseconds). * @param {object} optionalContext - If given, bind function to throttle to this context. * @returns {function} Throttled function. */ module.exports.throttleTick = function (functionToThrottle, minimumInterval, optionalContext) { var lastTime; if (optionalContext) { functionToThrottle = module.exports.bind(functionToThrottle, optionalContext); } return function (time, delta) { var sinceLastTime = typeof lastTime === 'undefined' ? delta : time - lastTime; if (typeof lastTime === 'undefined' || (sinceLastTime >= minimumInterval)) { lastTime = time; functionToThrottle(time, sinceLastTime); } }; }; /** * Returns debounce function that gets called only once after a set of repeated calls. * * @param {function} functionToDebounce * @param {number} wait - Time to wait for repeated function calls (milliseconds). * @param {boolean} immediate - Calls the function immediately regardless of if it should be waiting. * @returns {function} Debounced function. */ module.exports.debounce = function (func, wait, immediate) { var timeout; return function () { var context = this; var args = arguments; var later = function () { timeout = null; if (!immediate) func.apply(context, args); }; var callNow = immediate && !timeout; clearTimeout(timeout); timeout = setTimeout(later, wait); if (callNow) func.apply(context, args); }; }; /** * Mix the properties of source object(s) into a destination object. * * @param {object} dest - The object to which properties will be copied. * @param {...object} source - The object(s) from which properties will be copied. */ module.exports.extend = objectAssign; module.exports.extendDeep = deepAssign; module.exports.clone = function (obj) { return JSON.parse(JSON.stringify(obj)); }; /** * Checks if two values are equal. * Includes objects and arrays and nested objects and arrays. * Try to keep this function performant as it will be called often to see if a component * should be updated. * * @param {object} a - First object. * @param {object} b - Second object. * @returns {boolean} Whether two objects are deeply equal. */ var deepEqual = (function () { var arrayPool = objectPool.createPool(function () { return []; }); return function (a, b) { var key; var keysA; var keysB; var i; var valA; var valB; // If not objects or arrays, compare as values. if (a === undefined || b === undefined || a === null || b === null || !(a && b && (a.constructor === Object && b.constructor === Object) || (a.constructor === Array && b.constructor === Array))) { return a === b; } // Different number of keys, not equal. keysA = arrayPool.use(); keysB = arrayPool.use(); keysA.length = 0; keysB.length = 0; for (key in a) { keysA.push(key); } for (key in b) { keysB.push(key); } if (keysA.length !== keysB.length) { arrayPool.recycle(keysA); arrayPool.recycle(keysB); return false; } // Return `false` at the first sign of inequality. for (i = 0; i < keysA.length; ++i) { valA = a[keysA[i]]; valB = b[keysA[i]]; // Check nested array and object. if ((typeof valA === 'object' || typeof valB === 'object') || (Array.isArray(valA) && Array.isArray(valB))) { if (valA === valB) { continue; } if (!deepEqual(valA, valB)) { arrayPool.recycle(keysA); arrayPool.recycle(keysB); return false; } } else if (valA !== valB) { arrayPool.recycle(keysA); arrayPool.recycle(keysB); return false; } } arrayPool.recycle(keysA); arrayPool.recycle(keysB); return true; }; })(); module.exports.deepEqual = deepEqual; /** * Computes the difference between two objects. * * @param {object} a - First object to compare (e.g., oldData). * @param {object} b - Second object to compare (e.g., newData). * @returns {object} * Difference object where set of keys note which values were not equal, and values are * `b`'s values. */ module.exports.diff = (function () { var keys = []; return function (a, b, targetObject) { var aVal; var bVal; var bKey; var diff; var key; var i; var isComparingObjects; diff = targetObject || {}; // Collect A keys. keys.length = 0; for (key in a) { keys.push(key); } if (!b) { return diff; } // Collect B keys. for (bKey in b) { if (keys.indexOf(bKey) === -1) { keys.push(bKey); } } for (i = 0; i < keys.length; i++) { key = keys[i]; aVal = a[key]; bVal = b[key]; isComparingObjects = aVal && bVal && aVal.constructor === Object && bVal.constructor === Object; if ((isComparingObjects && !deepEqual(aVal, bVal)) || (!isComparingObjects && aVal !== bVal)) { diff[key] = bVal; } } return diff; }; })(); /** * Returns whether we should capture this keyboard event for keyboard shortcuts. * @param {Event} event Event object. * @returns {Boolean} Whether the key event should be captured. */ module.exports.shouldCaptureKeyEvent = function (event) { if (event.metaKey) { return false; } return document.activeElement === document.body; }; /** * Splits a string into an array based on a delimiter. * * @param {string=} [str=''] Source string * @param {string=} [delimiter=' '] Delimiter to use * @returns {array} Array of delimited strings */ module.exports.splitString = function (str, delimiter) { if (typeof delimiter === 'undefined') { delimiter = ' '; } // First collapse the whitespace (or whatever the delimiter is). var regex = new RegExp(delimiter, 'g'); str = (str || '').replace(regex, delimiter); // Then split. return str.split(delimiter); }; /** * Extracts data from the element given an object that contains expected keys. * * @param {Element} Source element. * @param {Object} [defaults={}] Object of default key-value pairs. * @returns {Object} */ module.exports.getElData = function (el, defaults) { defaults = defaults || {}; var data = {}; Object.keys(defaults).forEach(copyAttribute); function copyAttribute (key) { if (el.hasAttribute(key)) { data[key] = el.getAttribute(key); } } return data; }; /** * Retrieves querystring value. * @param {String} name Name of querystring key. * @return {String} Value */ module.exports.getUrlParameter = function (name) { // eslint-disable-next-line no-useless-escape name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]'); var regex = new RegExp('[\\?&]' + name + '=([^&#]*)'); var results = regex.exec(location.search); return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' ')); }; /** * Detects whether context is within iframe. */ module.exports.isIframed = function () { return window.top !== window.self; }; /** * Finds all elements under the element that have the isScene * property set to true */ module.exports.findAllScenes = function (el) { var matchingElements = []; var allElements = el.getElementsByTagName('*'); for (var i = 0, n = allElements.length; i < n; i++) { if (allElements[i].isScene) { // Element exists with isScene set. matchingElements.push(allElements[i]); } } return matchingElements; }; // Must be at bottom to avoid circular dependency. module.exports.srcLoader = require('./src-loader'); ",
    "// https://stackoverflow.com/a/17907562 function getInternetExplorerVersion () { var version = -1; var userAgent = navigator.userAgent; var re; if (navigator.appName === 'Microsoft Internet Explorer') { re = new RegExp('MSIE ([0-9]{1,}[\\.0-9]{0,})'); if (re.exec(userAgent) != null) { version = parseFloat(RegExp.$1); } } else if (navigator.appName === 'Netscape') { re = new RegExp('Trident/.*rv:([0-9]{1,}[\\.0-9]{0,})'); if (re.exec(userAgent) != null) { version = parseFloat(RegExp.$1); } } return version; } module.exports = getInternetExplorerVersion() === 11; ",
    "/** * Check if device is iOS and older than version 10. */ module.exports = function isIOSOlderThan10 (userAgent) { return /(iphone|ipod|ipad).*os.(7_|8_|9_)/i.test(userAgent); }; ",
    "var THREE = require('../lib/three'); var HLS_MIMETYPES = ['application/x-mpegurl', 'application/vnd.apple.mpegurl']; var COLOR_MAPS = new Set([ 'emissiveMap', 'envMap', 'map', 'specularMap' ]); /** * Update `material` texture property (usually but not always `map`) * from `data` property (usually but not always `src`) * * @param {object} shader - A-Frame shader instance. * @param {object} data */ module.exports.updateMapMaterialFromData = function (materialName, dataName, shader, data) { var el = shader.el; var material = shader.material; var rendererSystem = el.sceneEl.systems.renderer; var src = data[dataName]; // Because a single material / shader may have multiple textures, // we need to remember the source value for this data property // to avoid redundant operations which can be expensive otherwise // (e.g. video texture loads). if (!shader.materialSrcs) { shader.materialSrcs = {}; } if (!src) { // Forget the prior material src. delete shader.materialSrcs[materialName]; // Remove the texture. setMap(null); return; } // Don't process if material src hasn't changed. if (src === shader.materialSrcs[materialName]) { return; } // Remember the new src for this texture (there may be multiple). shader.materialSrcs[materialName] = src; // If the new material src is already a texture, just use it. if (src instanceof THREE.Texture) { setMap(src); } else { // Load texture for the new material src. // (And check if we should still use it once available in callback.) el.sceneEl.systems.material.loadTexture(src, {src: src, repeat: data.repeat, offset: data.offset, npot: data.npot}, checkSetMap); } function checkSetMap (texture) { // If the source has been changed, don't use loaded texture. if (shader.materialSrcs[materialName] !== src) { return; } setMap(texture); } function setMap (texture) { material[materialName] = texture; if (texture && COLOR_MAPS.has(materialName)) { rendererSystem.applyColorCorrection(texture); } material.needsUpdate = true; handleTextureEvents(el, texture); } }; /** * Update `material.map` given `data.src`. For standard and flat shaders. * * @param {object} shader - A-Frame shader instance. * @param {object} data */ module.exports.updateMap = function (shader, data) { return module.exports.updateMapMaterialFromData('map', 'src', shader, data); }; /** * Updates the material's maps which give the illusion of extra geometry. * * @param {string} longType - The friendly name of the map from the component e.g. ambientOcclusionMap becomes aoMap in THREE.js * @param {object} shader - A-Frame shader instance * @param {object} data */ module.exports.updateDistortionMap = function (longType, shader, data) { var shortType = longType; if (longType === 'ambientOcclusion') { shortType = 'ao'; } var el = shader.el; var material = shader.material; var rendererSystem = el.sceneEl.systems.renderer; var src = data[longType + 'Map']; var info = {}; info.src = src; // Pass through the repeat and offset to be handled by the material loader. info.offset = data[longType + 'TextureOffset']; info.repeat = data[longType + 'TextureRepeat']; info.wrap = data[longType + 'TextureWrap']; if (src) { if (src === shader[longType + 'TextureSrc']) { return; } // Texture added or changed. shader[longType + 'TextureSrc'] = src; el.sceneEl.systems.material.loadTexture(src, info, setMap); return; } // Texture removed. if (!material.map) { return; } setMap(null); function setMap (texture) { var slot = shortType + 'Map'; material[slot] = texture; if (texture && COLOR_MAPS.has(slot)) { rendererSystem.applyColorCorrection(texture); } material.needsUpdate = true; handleTextureEvents(el, texture); } }; /** * Emit event on entities on texture-related events. * * @param {Element} el - Entity. * @param {object} texture - three.js Texture. */ function handleTextureEvents (el, texture) { if (!texture) { return; } el.emit('materialtextureloaded', {src: texture.image, texture: texture}); // Video events. if (!texture.image || texture.image.tagName !== 'VIDEO') { return; } texture.image.addEventListener('loadeddata', function emitVideoTextureLoadedDataAll () { // Check to see if we need to use iOS 10 HLS shader. // Only override the shader if it is stock shader that we know doesn't correct. if (!el.components || !el.components.material) { return; } if (texture.needsCorrectionBGRA && texture.needsCorrectionFlipY && ['standard', 'flat'].indexOf(el.components.material.data.shader) !== -1) { el.setAttribute('material', 'shader', 'ios10hls'); } el.emit('materialvideoloadeddata', {src: texture.image, texture: texture}); }); texture.image.addEventListener('ended', function emitVideoTextureEndedAll () { // Works for non-looping videos only. el.emit('materialvideoended', {src: texture.image, texture: texture}); }); } module.exports.handleTextureEvents = handleTextureEvents; /** * Given video element src and type, guess whether stream is HLS. * * @param {string} src - src from video element (generally URL to content). * @param {string} type - type from video element (generally MIME type if present). */ module.exports.isHLS = function (src, type) { if (type && HLS_MIMETYPES.includes(type.toLowerCase())) { return true; } if (src && src.toLowerCase().indexOf('.m3u8') > 0) { return true; } return false; }; ",
    "/* Adapted deePool by Kyle Simpson. MIT License: http://getify.mit-license.org */ var EMPTY_SLOT = Object.freeze(Object.create(null)); // Default object factory. function defaultObjectFactory () { return {}; } /** * Create a new pool. */ module.exports.createPool = function createPool (objectFactory) { var objPool = []; var nextFreeSlot = null; // Pool location to look for a free object to use. objectFactory = objectFactory || defaultObjectFactory; function use () { var objToUse; if (nextFreeSlot === null || nextFreeSlot === objPool.length) { grow(objPool.length || 5); } objToUse = objPool[nextFreeSlot]; objPool[nextFreeSlot++] = EMPTY_SLOT; clearObject(objToUse); return objToUse; } function recycle (obj) { if (!(obj instanceof Object)) { return; } if (nextFreeSlot === null || nextFreeSlot === -1) { objPool[objPool.length] = obj; return; } objPool[--nextFreeSlot] = obj; } function grow (count) { var currentLength; var i; count = count === undefined ? objPool.length : count; if (count > 0 && nextFreeSlot == null) { nextFreeSlot = 0; } if (count > 0) { currentLength = objPool.length; objPool.length += Number(count); for (i = currentLength; i < objPool.length; i++) { // Add new obj to pool. objPool[i] = objectFactory(); } } return objPool.length; } function size () { return objPool.length; } return { grow: grow, pool: objPool, recycle: recycle, size: size, use: use }; }; function clearObject (obj) { var key; if (!obj || obj.constructor !== Object) { return; } for (key in obj) { obj[key] = undefined; } } module.exports.clearObject = clearObject; function removeUnusedKeys (obj, schema) { var key; if (!obj || obj.constructor !== Object) { return; } for (key in obj) { if (!(key in schema)) { delete obj[key]; } } } module.exports.removeUnusedKeys = removeUnusedKeys; ",
    "/** * String split with cached result. */ module.exports.split = (function () { var splitCache = {}; return function (str, delimiter) { if (!(delimiter in splitCache)) { splitCache[delimiter] = {}; } if (str in splitCache[delimiter]) { return splitCache[delimiter][str]; } splitCache[delimiter][str] = str.split(delimiter); return splitCache[delimiter][str]; }; })(); ",
    "/* global Image, XMLHttpRequest */ var debug = require('./debug'); var warn = debug('utils:src-loader:warn'); /** * Validate a texture, either as a selector or as a URL. * Detects whether `src` is pointing to an image or video and invokes the appropriate * callback. * * `src` will be passed into the callback * * @params {string|Element} src - URL or media element. * @params {function} isImageCb - callback if texture is an image. * @params {function} isVideoCb - callback if texture is a video. */ function validateSrc (src, isImageCb, isVideoCb) { checkIsImage(src, function isAnImageUrl (isImage) { if (isImage) { isImageCb(src); return; } isVideoCb(src); }); } /** * Validates six images as a cubemap, either as selector or comma-separated * URLs. * * @param {string} src - A selector or comma-separated image URLs. Image URLs must be wrapped by `url()`. * @param {string} src - A selector or comma-separated image URLs. Image URLs must be wrapped by `url()`. */ function validateCubemapSrc (src, cb) { var aCubemap; var cubemapSrcRegex = ''; var i; var urls; var validatedUrls = []; for (i = 0; i < 5; i++) { cubemapSrcRegex += '(url\\((?:[^\\)]+)\\),\\s*)'; } cubemapSrcRegex += '(url\\((?:[^\\)]+)\\)\\s*)'; urls = src.match(new RegExp(cubemapSrcRegex)); // `src` is a comma-separated list of URLs. // In this case, re-use validateSrc for each side of the cube. function isImageCb (url) { validatedUrls.push(url); if (validatedUrls.length === 6) { cb(validatedUrls); } } if (urls) { for (i = 1; i < 7; i++) { validateSrc(parseUrl(urls[i]), isImageCb); } return; } // `src` is a query selector to <a-cubemap> containing six $([src])s. aCubemap = validateAndGetQuerySelector(src); if (!aCubemap) { return; } if (aCubemap.tagName === 'A-CUBEMAP' && aCubemap.srcs) { return cb(aCubemap.srcs); } // Else if aCubeMap is not a <a-cubemap>. warn('Selector "%s" does not point to <a-cubemap>', src); } /** * Parses src from `url(src)`. * @param {string} src - String to parse. * @return {string} The parsed src, if parseable. */ function parseUrl (src) { var parsedSrc = src.match(/\url\((.+)\)/); if (!parsedSrc) { return; } return parsedSrc[1]; } /** * Call back whether `src` is an image. * * @param {string|Element} src - URL or element that will be tested. * @param {function} onResult - Callback with whether `src` is an image. */ function checkIsImage (src, onResult) { var request; if (src.tagName) { onResult(src.tagName === 'IMG'); return; } request = new XMLHttpRequest(); // Try to send HEAD request to check if image first. request.open('HEAD', src); request.addEventListener('load', function (event) { var contentType; if (request.status >= 200 && request.status < 300) { contentType = request.getResponseHeader('Content-Type'); if (contentType == null) { checkIsImageFallback(src, onResult); } else { if (contentType.startsWith('image')) { onResult(true); } else { onResult(false); } } } else { checkIsImageFallback(src, onResult); } request.abort(); }); request.send(); } function checkIsImageFallback (src, onResult) { var tester = new Image(); tester.addEventListener('load', onLoad); function onLoad () { onResult(true); } tester.addEventListener('error', onError); function onError () { onResult(false); } tester.src = src; } /** * Query and validate a query selector, * * @param {string} selector - DOM selector. * @return {object|null|undefined} Selected DOM element if exists. null if query yields no results. undefined if `selector` is not a valid selector. */ function validateAndGetQuerySelector (selector) { try { var el = document.querySelector(selector); if (!el) { warn('No element was found matching the selector: "%s"', selector); } return el; } catch (e) { // Capture exception if it's not a valid selector. warn('"%s" is not a valid selector', selector); return undefined; } } module.exports = { parseUrl: parseUrl, validateSrc: validateSrc, validateCubemapSrc: validateCubemapSrc }; ",
    "/** * Utils for parsing style-like strings (e.g., "primitive: box; width: 5; height: 4.5"). * Some code adapted from `style-attr` (https://github.com/joshwnj/style-attr) * by Josh Johnston (MIT License). */ var DASH_REGEX = /-([a-z])/g; /** * Deserialize style-like string into an object of properties. * * @param {string} value - HTML attribute value. * @param {object} obj - Reused object for object pooling. * @returns {object} Property data. */ module.exports.parse = function (value, obj) { var parsedData; if (typeof value !== 'string') { return value; } parsedData = styleParse(value, obj); // The style parser returns an object { "" : "test"} when fed a string if (parsedData['']) { return value; } return transformKeysToCamelCase(parsedData); }; /** * Serialize an object of properties into a style-like string. * * @param {object} data - Property data. * @returns {string} */ module.exports.stringify = function (data) { if (typeof data === 'string') { return data; } return styleStringify(data); }; /** * Converts string from hyphen to camelCase. * * @param {string} str - String to camelCase. * @return {string} CamelCased string. */ function toCamelCase (str) { return str.replace(DASH_REGEX, upperCase); } module.exports.toCamelCase = toCamelCase; /** * Converts object's keys from hyphens to camelCase (e.g., `max-value` to * `maxValue`). * * @param {object} obj - The object to camelCase keys. * @return {object} The object with keys camelCased. */ function transformKeysToCamelCase (obj) { var camelKey; var key; for (key in obj) { camelKey = toCamelCase(key); if (key === camelKey) { continue; } obj[camelKey] = obj[key]; delete obj[key]; } return obj; } module.exports.transformKeysToCamelCase = transformKeysToCamelCase; /** * Split a string into chunks matching `<key>: <value>` */ var getKeyValueChunks = (function () { var chunks = []; var hasUnclosedUrl = /url\([^)]+$/; return function getKeyValueChunks (raw) { var chunk = ''; var nextSplit; var offset = 0; var sep = ';'; chunks.length = 0; while (offset < raw.length) { nextSplit = raw.indexOf(sep, offset); if (nextSplit === -1) { nextSplit = raw.length; } chunk += raw.substring(offset, nextSplit); // data URIs can contain semicolons, so make sure we get the whole thing if (hasUnclosedUrl.test(chunk)) { chunk += ';'; offset = nextSplit + 1; continue; } chunks.push(chunk.trim()); chunk = ''; offset = nextSplit + 1; } return chunks; }; })(); /** * Convert a style attribute string to an object. * * @param {object} str - Attribute string. * @param {object} obj - Object to reuse as a base, else a new one will be allocated. */ function styleParse (str, obj) { var chunks; var i; var item; var pos; var key; var val; obj = obj || {}; chunks = getKeyValueChunks(str); for (i = 0; i < chunks.length; i++) { item = chunks[i]; if (!item) { continue; } // Split with `.indexOf` rather than `.split` because the value may also contain colons. pos = item.indexOf(':'); key = item.substr(0, pos).trim(); val = item.substr(pos + 1).trim(); obj[key] = val; } return obj; } /** * Convert an object into an attribute string **/ function styleStringify (obj) { var key; var keyCount = 0; var i = 0; var str = ''; for (key in obj) { keyCount++; } for (key in obj) { str += (key + ': ' + obj[key]); if (i < keyCount - 1) { str += '; '; } i++; } return str; } function upperCase (str) { return str[1].toUpperCase(); } ",
    "var DEFAULT_HANDEDNESS = require('../constants').DEFAULT_HANDEDNESS; var AXIS_LABELS = ['x', 'y', 'z', 'w']; var NUM_HANDS = 2; // Number of hands in a pair. Should always be 2. /** * Called on controller component `.play` handlers. * Check if controller matches parameters and inject tracked-controls component. * Handle event listeners. * Generate controllerconnected or controllerdisconnected events. * * @param {object} component - Tracked controls component. * @param {object} idPrefix - Prefix to match in gamepad id if any. * @param {object} queryObject - Map of values to match. */ module.exports.checkControllerPresentAndSetup = function (component, idPrefix, queryObject) { var el = component.el; var controller; var hasWebXR = el.sceneEl.hasWebXR; var isControllerPresent = hasWebXR ? isControllerPresentWebXR : isControllerPresentWebVR; var isPresent; controller = isControllerPresent(component, idPrefix, queryObject); isPresent = !!controller; // If component was previously paused and now playing, re-add event listeners. // Handle the event listeners here since this helper method is control of calling // `.addEventListeners` and `.removeEventListeners`. if (component.controllerPresent && !component.controllerEventsActive && !hasWebXR) { component.addEventListeners(); } // Nothing changed, no need to do anything. if (isPresent === component.controllerPresent) { return isPresent; } component.controllerPresent = isPresent; // Update controller presence. if (isPresent) { component.injectTrackedControls(); if (!hasWebXR) { component.addEventListeners(); } el.emit('controllerconnected', {name: component.name, component: component}); } else { component.removeEventListeners(); el.emit('controllerdisconnected', {name: component.name, component: component}); } }; /** * Enumerate controller (that have pose) and check if they match parameters for WebVR * * @param {object} component - Tracked controls component. * @param {object} idPrefix - Prefix to match in gamepad id if any. * @param {object} queryObject - Map of values to match. */ function isControllerPresentWebVR (component, idPrefix, queryObject) { var gamepads; var sceneEl = component.el.sceneEl; var trackedControlsSystem; var filterControllerIndex = queryObject.index || 0; if (!idPrefix) { return false; } trackedControlsSystem = sceneEl && sceneEl.systems['tracked-controls-webvr']; if (!trackedControlsSystem) { return false; } gamepads = trackedControlsSystem.controllers; if (!gamepads.length) { return false; } return !!findMatchingControllerWebVR(gamepads, null, idPrefix, queryObject.hand, filterControllerIndex); } /** * * @param {object} component - Tracked controls component. */ function isControllerPresentWebXR (component, idPrefix, queryObject) { var controllers; var sceneEl = component.el.sceneEl; var trackedControlsSystem = sceneEl && sceneEl.systems['tracked-controls-webxr']; if (!trackedControlsSystem) { return false; } controllers = trackedControlsSystem.controllers; if (!controllers || !controllers.length) { return false; } return findMatchingControllerWebXR(controllers, queryObject.hand); } module.exports.isControllerPresentWebVR = isControllerPresentWebVR; module.exports.isControllerPresentWebXR = isControllerPresentWebXR; /** * Walk through the given controllers to find any where the device ID equals * filterIdExact, or startsWith filterIdPrefix. * A controller where this considered true is considered a 'match'. * * For each matching controller: * If filterHand is set, and the controller: * is handed, we further verify that controller.hand equals filterHand. * is unhanded (controller.hand is ''), we skip until we have found a * number of matching controllers that equals filterControllerIndex * If filterHand is not set, we skip until we have found the nth matching * controller, where n equals filterControllerIndex * * The method should be called with one of: [filterIdExact, filterIdPrefix] AND * one or both of: [filterHand, filterControllerIndex] * * @param {object} controllers - Array of gamepads to search * @param {string} filterIdExact - If set, used to find controllers with id === this value * @param {string} filterIdPrefix - If set, used to find controllers with id startsWith this value * @param {object} filterHand - If set, further filters controllers with matching 'hand' property * @param {object} filterControllerIndex - Find the nth matching controller, * where n equals filterControllerIndex. defaults to 0. */ function findMatchingControllerWebVR (controllers, filterIdExact, filterIdPrefix, filterHand, filterControllerIndex) { var controller; var i; var matchingControllerOccurence = 0; var targetControllerMatch = filterControllerIndex || 0; for (i = 0; i < controllers.length; i++) { controller = controllers[i]; // Determine if the controller ID matches our criteria. if (filterIdPrefix && !controller.id.startsWith(filterIdPrefix)) { continue; } if (!filterIdPrefix && controller.id !== filterIdExact) { continue; } // If the hand filter and controller handedness are defined we compare them. if (filterHand && controller.hand && filterHand !== controller.hand) { continue; } // If we have detected an unhanded controller and the component was asking // for a particular hand, we need to treat the controllers in the array as // pairs of controllers. This effectively means that we need to skip // NUM_HANDS matches for each controller number, instead of 1. if (filterHand && !controller.hand) { targetControllerMatch = NUM_HANDS * filterControllerIndex + ((filterHand === DEFAULT_HANDEDNESS) ? 0 : 1); } // We are looking for the nth occurence of a matching controller // (n equals targetControllerMatch). if (matchingControllerOccurence === targetControllerMatch) { return controller; } ++matchingControllerOccurence; } return undefined; } function findMatchingControllerWebXR (controllers, handedness) { var i; var controllerHandedness; for (i = 0; i < controllers.length; i++) { controllerHandedness = controllers[i].handedness; if (!handedness || (controllerHandedness === '' && handedness === 'right') || controllers[i].handedness === handedness) { return controllers[i]; } } return undefined; } module.exports.findMatchingControllerWebVR = findMatchingControllerWebVR; module.exports.findMatchingControllerWebXR = findMatchingControllerWebXR; /** * Emit specific `moved` event(s) if axes changed based on original axismoved event. * * @param {object} component - Controller component in use. * @param {array} axesMapping - For example `{thumbstick: [0, 1]}`. * @param {object} evt - Event to process. */ module.exports.emitIfAxesChanged = function (component, axesMapping, evt) { var axes; var buttonType; var changed; var detail; var j; for (buttonType in axesMapping) { axes = axesMapping[buttonType]; changed = false; for (j = 0; j < axes.length; j++) { if (evt.detail.changed[axes[j]]) { changed = true; } } if (!changed) { continue; } // Axis has changed. Emit the specific moved event with axis values in detail. detail = {}; for (j = 0; j < axes.length; j++) { detail[AXIS_LABELS[j]] = evt.detail.axis[axes[j]]; } component.el.emit(buttonType + 'moved', detail); } }; /** * Handle a button event and reemits the events. * * @param {string} id - id of the button. * @param {string} evtName - name of the reemitted event * @param {object} component - reference to the component * @param {string} hand - handedness of the controller: left or right. */ module.exports.onButtonEvent = function (id, evtName, component, hand) { var mapping = hand ? component.mapping[hand] : component.mapping; var buttonName = mapping.buttons[id]; component.el.emit(buttonName + evtName); if (component.updateModel) { component.updateModel(buttonName, evtName); } }; ",
    "window.glStats = function () { var _rS = null; var _totalDrawArraysCalls = 0, _totalDrawElementsCalls = 0, _totalUseProgramCalls = 0, _totalFaces = 0, _totalVertices = 0, _totalPoints = 0, _totalBindTexures = 0; function _h ( f, c ) { return function () { c.apply( this, arguments ); f.apply( this, arguments ); }; } WebGLRenderingContext.prototype.drawArrays = _h( WebGLRenderingContext.prototype.drawArrays, function () { _totalDrawArraysCalls++; if ( arguments[ 0 ] == this.POINTS ) _totalPoints += arguments[ 2 ]; else _totalVertices += arguments[ 2 ]; } ); WebGLRenderingContext.prototype.drawElements = _h( WebGLRenderingContext.prototype.drawElements, function () { _totalDrawElementsCalls++; _totalFaces += arguments[ 1 ] / 3; _totalVertices += arguments[ 1 ]; } ); WebGLRenderingContext.prototype.useProgram = _h( WebGLRenderingContext.prototype.useProgram, function () { _totalUseProgramCalls++; } ); WebGLRenderingContext.prototype.bindTexture = _h( WebGLRenderingContext.prototype.bindTexture, function () { _totalBindTexures++; } ); var _values = { allcalls: { over: 3000, caption: 'Calls (hook)' }, drawelements: { caption: 'drawElements (hook)' }, drawarrays: { caption: 'drawArrays (hook)' } }; var _groups = [ { caption: 'WebGL', values: [ 'allcalls', 'drawelements', 'drawarrays', 'useprogram', 'bindtexture', 'glfaces', 'glvertices', 'glpoints' ] } ]; var _fractions = [ { base: 'allcalls', steps: [ 'drawelements', 'drawarrays' ] } ]; function _update () { _rS( 'allcalls' ).set( _totalDrawArraysCalls + _totalDrawElementsCalls ); _rS( 'drawElements' ).set( _totalDrawElementsCalls ); _rS( 'drawArrays' ).set( _totalDrawArraysCalls ); _rS( 'bindTexture' ).set( _totalBindTexures ); _rS( 'useProgram' ).set( _totalUseProgramCalls ); _rS( 'glfaces' ).set( _totalFaces ); _rS( 'glvertices' ).set( _totalVertices ); _rS( 'glpoints' ).set( _totalPoints ); } function _start () { _totalDrawArraysCalls = 0; _totalDrawElementsCalls = 0; _totalUseProgramCalls = 0; _totalFaces = 0; _totalVertices = 0; _totalPoints = 0; _totalBindTexures = 0; } function _end () {} function _attach ( r ) { _rS = r; } return { update: _update, start: _start, end: _end, attach: _attach, values: _values, groups: _groups, fractions: _fractions }; }; window.threeStats = function ( renderer ) { var _rS = null; var _values = { 'renderer.info.memory.geometries': { caption: 'Geometries' }, 'renderer.info.memory.textures': { caption: 'Textures' }, 'renderer.info.programs': { caption: 'Programs' }, 'renderer.info.render.calls': { caption: 'Calls' }, 'renderer.info.render.triangles': { caption: 'Triangles', over: 1000 }, 'renderer.info.render.points': { caption: 'Points' } }; var _groups = [ { caption: 'Three.js - Memory', values: [ 'renderer.info.memory.geometries', 'renderer.info.programs', 'renderer.info.memory.textures' ] }, { caption: 'Three.js - Render', values: [ 'renderer.info.render.calls', 'renderer.info.render.triangles', 'renderer.info.render.points' ] } ]; var _fractions = []; function _update () { _rS( 'renderer.info.memory.geometries' ).set( renderer.info.memory.geometries ); _rS( 'renderer.info.programs' ).set( renderer.info.programs.length ); _rS( 'renderer.info.memory.textures' ).set( renderer.info.memory.textures ); _rS( 'renderer.info.render.calls' ).set( renderer.info.render.calls ); _rS( 'renderer.info.render.triangles' ).set( renderer.info.render.triangles ); _rS( 'renderer.info.render.points' ).set( renderer.info.render.points ); } function _start () {} function _end () {} function _attach ( r ) { _rS = r; } return { update: _update, start: _start, end: _end, attach: _attach, values: _values, groups: _groups, fractions: _fractions }; }; /* * From https://github.com/paulirish/memory-stats.js */ window.BrowserStats = function () { var _rS = null; var _usedJSHeapSize = 0, _totalJSHeapSize = 0; if ( window.performance && !performance.memory ) { performance.memory = { usedJSHeapSize: 0, totalJSHeapSize: 0 }; } if ( performance.memory.totalJSHeapSize === 0 ) { console.warn( 'totalJSHeapSize === 0... performance.memory is only available in Chrome .' ); } var _values = { memory: { caption: 'Used Memory', average: true, avgMs: 1000, over: 22 }, total: { caption: 'Total Memory' } }; var _groups = [ { caption: 'Browser', values: [ 'memory', 'total' ] } ]; var _fractions = [ { base: 'total', steps: [ 'memory' ] } ]; var log1024 = Math.log( 1024 ); function _size ( v ) { var precision = 100; //Math.pow(10, 2); var i = Math.floor( Math.log( v ) / log1024 ); return Math.round( v * precision / Math.pow( 1024, i ) ) / precision; // + ' ' + sizes[i]; } function _update () { _usedJSHeapSize = _size( performance.memory.usedJSHeapSize ); _totalJSHeapSize = _size( performance.memory.totalJSHeapSize ); _rS( 'memory' ).set( _usedJSHeapSize ); _rS( 'total' ).set( _totalJSHeapSize ); } function _start () { _usedJSHeapSize = 0; } function _end () {} function _attach ( r ) { _rS = r; } return { update: _update, start: _start, end: _end, attach: _attach, values: _values, groups: _groups, fractions: _fractions }; }; if (typeof module === 'object') { module.exports = { glStats: window.glStats, threeStats: window.threeStats, BrowserStats: window.BrowserStats }; } ",
    "// performance.now() polyfill from https://gist.github.com/paulirish/5438650 'use strict'; ( function () { if ( 'performance' in window == false ) { window.performance = {}; } var performance = window.performance; if ( 'now' in performance == false ) { var nowOffset = Date.now(); if ( performance.timing && performance.timing.navigationStart ) { nowOffset = performance.timing.navigationStart; } performance.now = function now () { return Date.now() - nowOffset; }; } if( !performance.mark ) { performance.mark = function(){} } if( !performance.measure ) { performance.measure = function(){} } } )(); window.rStats = function rStats ( settings ) { function iterateKeys ( array, callback ) { var keys = Object.keys( array ); for ( var j = 0, l = keys.length; j < l; j++ ) { callback( keys[ j ] ); } } function importCSS ( url ) { var element = document.createElement( 'link' ); element.href = url; element.rel = 'stylesheet'; element.type = 'text/css'; document.getElementsByTagName( 'head' )[ 0 ].appendChild( element ); } var _settings = settings || {}; var _colours = _settings.colours || [ '#850700', '#c74900', '#fcb300', '#284280', '#4c7c0c' ]; var _cssFont = 'https://fonts.googleapis.com/css?family=Roboto+Condensed:400,700,300'; var _cssRStats = ( _settings.CSSPath ? _settings.CSSPath : '' ) + 'rStats.css'; var _css = _settings.css || [ _cssFont, _cssRStats ]; _css.forEach(function (uri) { importCSS( uri ); }); if ( !_settings.values ) _settings.values = {}; var _base, _div, _elHeight = 10, _elWidth = 200; var _perfCounters = {}; function Graph ( _dom, _id, _defArg ) { var _def = _defArg || {}; var _canvas = document.createElement( 'canvas' ), _ctx = _canvas.getContext( '2d' ), _max = 0, _current = 0; var c = _def.color ? _def.color : '#666666'; var _dotCanvas = document.createElement( 'canvas' ), _dotCtx = _dotCanvas.getContext( '2d' ); _dotCanvas.width = 1; _dotCanvas.height = 2 * _elHeight; _dotCtx.fillStyle = '#444444'; _dotCtx.fillRect( 0, 0, 1, 2 * _elHeight ); _dotCtx.fillStyle = c; _dotCtx.fillRect( 0, _elHeight, 1, _elHeight ); _dotCtx.fillStyle = '#ffffff'; _dotCtx.globalAlpha = 0.5; _dotCtx.fillRect( 0, _elHeight, 1, 1 ); _dotCtx.globalAlpha = 1; var _alarmCanvas = document.createElement( 'canvas' ), _alarmCtx = _alarmCanvas.getContext( '2d' ); _alarmCanvas.width = 1; _alarmCanvas.height = 2 * _elHeight; _alarmCtx.fillStyle = '#444444'; _alarmCtx.fillRect( 0, 0, 1, 2 * _elHeight ); _alarmCtx.fillStyle = '#b70000'; _alarmCtx.fillRect( 0, _elHeight, 1, _elHeight ); _alarmCtx.globalAlpha = 0.5; _alarmCtx.fillStyle = '#ffffff'; _alarmCtx.fillRect( 0, _elHeight, 1, 1 ); _alarmCtx.globalAlpha = 1; function _init () { _canvas.width = _elWidth; _canvas.height = _elHeight; _canvas.style.width = _canvas.width + 'px'; _canvas.style.height = _canvas.height + 'px'; _canvas.className = 'rs-canvas'; _dom.appendChild( _canvas ); _ctx.fillStyle = '#444444'; _ctx.fillRect( 0, 0, _canvas.width, _canvas.height ); } function _draw ( v, alarm ) { _current += ( v - _current ) * 0.1; _max *= 0.99; if ( _current > _max ) _max = _current; _ctx.drawImage( _canvas, 1, 0, _canvas.width - 1, _canvas.height, 0, 0, _canvas.width - 1, _canvas.height ); if ( alarm ) { _ctx.drawImage( _alarmCanvas, _canvas.width - 1, _canvas.height - _current * _canvas.height / _max - _elHeight ); } else { _ctx.drawImage( _dotCanvas, _canvas.width - 1, _canvas.height - _current * _canvas.height / _max - _elHeight ); } } _init(); return { draw: _draw }; } function StackGraph ( _dom, _num ) { var _canvas = document.createElement( 'canvas' ), _ctx = _canvas.getContext( '2d' ); function _init () { _canvas.width = _elWidth; _canvas.height = _elHeight * _num; _canvas.style.width = _canvas.width + 'px'; _canvas.style.height = _canvas.height + 'px'; _canvas.className = 'rs-canvas'; _dom.appendChild( _canvas ); _ctx.fillStyle = '#444444'; _ctx.fillRect( 0, 0, _canvas.width, _canvas.height ); } function _draw ( v ) { _ctx.drawImage( _canvas, 1, 0, _canvas.width - 1, _canvas.height, 0, 0, _canvas.width - 1, _canvas.height ); var th = 0; iterateKeys( v, function ( j ) { var h = v[ j ] * _canvas.height; _ctx.fillStyle = _colours[ j ]; _ctx.fillRect( _canvas.width - 1, th, 1, h ); th += h; } ); } _init(); return { draw: _draw }; } function PerfCounter ( id, group ) { var _id = id, _time, _value = 0, _total = 0, _averageValue = 0, _accumValue = 0, _accumStart = performance.now(), _accumSamples = 0, _dom = document.createElement( 'div' ), _spanId = document.createElement( 'span' ), _spanValue = document.createElement( 'div' ), _spanValueText = document.createTextNode( '' ), _def = _settings ? _settings.values[ _id.toLowerCase() ] : null, _graph = new Graph( _dom, _id, _def ), _started = false; _spanId.className = 'rs-counter-id'; _spanId.textContent = ( _def && _def.caption ) ? _def.caption : _id; _spanValue.className = 'rs-counter-value'; _spanValue.appendChild( _spanValueText ); _dom.appendChild( _spanId ); _dom.appendChild( _spanValue ); if ( group ) group.div.appendChild( _dom ); else _div.appendChild( _dom ); _time = performance.now(); function _average ( v ) { if ( _def && _def.average ) { _accumValue += v; _accumSamples++; var t = performance.now(); if ( t - _accumStart >= ( _def.avgMs || 1000 ) ) { _averageValue = _accumValue / _accumSamples; _accumValue = 0; _accumStart = t; _accumSamples = 0; } } } function _start () { _time = performance.now(); if( _settings.userTimingAPI ) performance.mark( _id + '-start' ); _started = true; } function _end () { _value = performance.now() - _time; if( _settings.userTimingAPI ) { performance.mark( _id + '-end' ); if( _started ) { performance.measure( _id, _id + '-start', _id + '-end' ); } } _average( _value ); } function _tick () { _end(); _start(); } function _draw () { var v = ( _def && _def.average ) ? _averageValue : _value; _spanValueText.nodeValue = Math.round( v * 100 ) / 100; var a = ( _def && ( ( _def.below && _value < _def.below ) || ( _def.over && _value > _def.over ) ) ); _graph.draw( _value, a ); _dom.className = a ? 'rs-counter-base alarm' : 'rs-counter-base'; } function _frame () { var t = performance.now(); var e = t - _time; _total++; if ( e > 1000 ) { if ( _def && _def.interpolate === false ) { _value = _total; } else { _value = _total * 1000 / e; } _total = 0; _time = t; _average( _value ); } } function _set ( v ) { _value = v; _average( _value ); } return { set: _set, start: _start, tick: _tick, end: _end, frame: _frame, value: function () { return _value; }, draw: _draw }; } function sample () { var _value = 0; function _set ( v ) { _value = v; } return { set: _set, value: function () { return _value; } }; } function _perf ( idArg ) { var id = idArg.toLowerCase(); if ( id === undefined ) id = 'default'; if ( _perfCounters[ id ] ) return _perfCounters[ id ]; var group = null; if ( _settings && _settings.groups ) { iterateKeys( _settings.groups, function ( j ) { var g = _settings.groups[ parseInt( j, 10 ) ]; if ( !group && g.values.indexOf( id.toLowerCase() ) !== -1 ) { group = g; } } ); } var p = new PerfCounter( id, group ); _perfCounters[ id ] = p; return p; } function _init () { if ( _settings.plugins ) { if ( !_settings.values ) _settings.values = {}; if ( !_settings.groups ) _settings.groups = []; if ( !_settings.fractions ) _settings.fractions = []; for ( var j = 0; j < _settings.plugins.length; j++ ) { _settings.plugins[ j ].attach( _perf ); iterateKeys( _settings.plugins[ j ].values, function ( k ) { _settings.values[ k ] = _settings.plugins[ j ].values[ k ]; } ); _settings.groups = _settings.groups.concat( _settings.plugins[ j ].groups ); _settings.fractions = _settings.fractions.concat( _settings.plugins[ j ].fractions ); } } else { _settings.plugins = {}; } _base = document.createElement( 'div' ); _base.className = 'rs-base'; _div = document.createElement( 'div' ); _div.className = 'rs-container'; _div.style.height = 'auto'; _base.appendChild( _div ); document.body.appendChild( _base ); if ( !_settings ) return; if ( _settings.groups ) { iterateKeys( _settings.groups, function ( j ) { var g = _settings.groups[ parseInt( j, 10 ) ]; var div = document.createElement( 'div' ); div.className = 'rs-group'; g.div = div; var h1 = document.createElement( 'h1' ); h1.textContent = g.caption; h1.addEventListener( 'click', function ( e ) { this.classList.toggle( 'hidden' ); e.preventDefault(); }.bind( div ) ); _div.appendChild( h1 ); _div.appendChild( div ); } ); } if ( _settings.fractions ) { iterateKeys( _settings.fractions, function ( j ) { var f = _settings.fractions[ parseInt( j, 10 ) ]; var div = document.createElement( 'div' ); div.className = 'rs-fraction'; var legend = document.createElement( 'div' ); legend.className = 'rs-legend'; var h = 0; iterateKeys( _settings.fractions[ j ].steps, function ( k ) { var p = document.createElement( 'p' ); p.textContent = _settings.fractions[ j ].steps[ k ]; p.style.color = _colours[ h ]; legend.appendChild( p ); h++; } ); div.appendChild( legend ); div.style.height = h * _elHeight + 'px'; f.div = div; var graph = new StackGraph( div, h ); f.graph = graph; _div.appendChild( div ); } ); } } function _update () { iterateKeys( _settings.plugins, function ( j ) { _settings.plugins[ j ].update(); } ); iterateKeys( _perfCounters, function ( j ) { _perfCounters[ j ].draw(); } ); if ( _settings && _settings.fractions ) { iterateKeys( _settings.fractions, function ( j ) { var f = _settings.fractions[ parseInt( j, 10 ) ]; var v = []; var base = _perfCounters[ f.base.toLowerCase() ]; if ( base ) { base = base.value(); iterateKeys( _settings.fractions[ j ].steps, function ( k ) { var s = _settings.fractions[ j ].steps[ parseInt( k, 10 ) ].toLowerCase(); var val = _perfCounters[ s ]; if ( val ) { v.push( val.value() / base ); } } ); } f.graph.draw( v ); } ); } /*if( _height != _div.clientHeight ) { _height = _div.clientHeight; _base.style.height = _height + 2 * _elHeight + 'px'; console.log( _base.clientHeight ); }*/ } _init(); return function ( id ) { if ( id ) return _perf( id ); return { element: _base, update: _update }; }; } if (typeof module === 'object') { module.exports = window.rStats; } ",
    "// https://stackoverflow.com/a/36213464 if (!String.prototype.startsWith) { String.prototype.startsWith = function(searchString, position){ position = position || 0; return this.substr(position, searchString.length) === searchString; }; } ",
    "/* * Copyright 2015 Google Inc. All Rights Reserved. * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ var Util = {}; Util.base64 = function(mimeType, base64) { return 'data:' + mimeType + ';base64,' + base64; }; Util.isMobile = function() { var check = false; (function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4)))check = true})(navigator.userAgent||navigator.vendor||window.opera); return check; }; Util.isIOS = function() { return /(iPad|iPhone|iPod)/g.test(navigator.userAgent); }; Util.isIFrame = function() { try { return window.self !== window.top; } catch (e) { return true; } }; Util.appendQueryParameter = function(url, key, value) { // Determine delimiter based on if the URL already GET parameters in it. var delimiter = (url.indexOf('?') < 0 ? '?' : '&'); url += delimiter + key + '=' + value; return url; }; // From http://goo.gl/4WX3tg Util.getQueryParameter = function(name) { name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]"); var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"), results = regex.exec(location.search); return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " ")); }; Util.isLandscapeMode = function() { return (window.orientation == 90 || window.orientation == -90); }; module.exports = Util; ",
    "/* * Copyright 2015 Google Inc. All Rights Reserved. * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ var Util = require('./util.js'); /** * Android and iOS compatible wakelock implementation. * * Refactored thanks to dkovalev@. */ function AndroidWakeLock() { var video = document.createElement('video'); video.addEventListener('ended', function() { video.play(); }); this.request = function() { if (video.paused) { // Base64 version of videos_src/no-sleep-60s.webm. video.src = Util.base64('video/webm', 'GkXfowEAAAAAAAAfQoaBAUL3gQFC8oEEQvOBCEKChHdlYm1Ch4ECQoWBAhhTgGcBAAAAAAAH4xFNm3RALE27i1OrhBVJqWZTrIHfTbuMU6uEFlSua1OsggEwTbuMU6uEHFO7a1OsggfG7AEAAAAAAACkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVSalmAQAAAAAAAEUq17GDD0JATYCNTGF2ZjU2LjQwLjEwMVdBjUxhdmY1Ni40MC4xMDFzpJAGSJTMbsLpDt/ySkipgX1fRImIQO1MAAAAAAAWVK5rAQAAAAAAADuuAQAAAAAAADLXgQFzxYEBnIEAIrWcg3VuZIaFVl9WUDmDgQEj44OEO5rKAOABAAAAAAAABrCBsLqBkB9DtnUBAAAAAAAAo+eBAKOmgQAAgKJJg0IAAV4BHsAHBIODCoAACmH2MAAAZxgz4dPSTFi5JACjloED6ACmAECSnABMQAADYAAAWi0quoCjloEH0ACmAECSnABNwAADYAAAWi0quoCjloELuACmAECSnABNgAADYAAAWi0quoCjloEPoACmAECSnABNYAADYAAAWi0quoCjloETiACmAECSnABNIAADYAAAWi0quoAfQ7Z1AQAAAAAAAJTnghdwo5aBAAAApgBAkpwATOAAA2AAAFotKrqAo5aBA+gApgBAkpwATMAAA2AAAFotKrqAo5aBB9AApgBAkpwATIAAA2AAAFotKrqAo5aBC7gApgBAkpwATEAAA2AAAFotKrqAo5aBD6AApgDAkpwAQ2AAA2AAAFotKrqAo5aBE4gApgBAkpwATCAAA2AAAFotKrqAH0O2dQEAAAAAAACU54Iu4KOWgQAAAKYAQJKcAEvAAANgAABaLSq6gKOWgQPoAKYAQJKcAEtgAANgAABaLSq6gKOWgQfQAKYAQJKcAEsAAANgAABaLSq6gKOWgQu4AKYAQJKcAEqAAANgAABaLSq6gKOWgQ+gAKYAQJKcAEogAANgAABaLSq6gKOWgROIAKYAQJKcAEnAAANgAABaLSq6gB9DtnUBAAAAAAAAlOeCRlCjloEAAACmAECSnABJgAADYAAAWi0quoCjloED6ACmAECSnABJIAADYAAAWi0quoCjloEH0ACmAMCSnABDYAADYAAAWi0quoCjloELuACmAECSnABI4AADYAAAWi0quoCjloEPoACmAECSnABIoAADYAAAWi0quoCjloETiACmAECSnABIYAADYAAAWi0quoAfQ7Z1AQAAAAAAAJTngl3Ao5aBAAAApgBAkpwASCAAA2AAAFotKrqAo5aBA+gApgBAkpwASAAAA2AAAFotKrqAo5aBB9AApgBAkpwAR8AAA2AAAFotKrqAo5aBC7gApgBAkpwAR4AAA2AAAFotKrqAo5aBD6AApgBAkpwAR2AAA2AAAFotKrqAo5aBE4gApgBAkpwARyAAA2AAAFotKrqAH0O2dQEAAAAAAACU54J1MKOWgQAAAKYAwJKcAENgAANgAABaLSq6gKOWgQPoAKYAQJKcAEbgAANgAABaLSq6gKOWgQfQAKYAQJKcAEagAANgAABaLSq6gKOWgQu4AKYAQJKcAEaAAANgAABaLSq6gKOWgQ+gAKYAQJKcAEZAAANgAABaLSq6gKOWgROIAKYAQJKcAEYAAANgAABaLSq6gB9DtnUBAAAAAAAAlOeCjKCjloEAAACmAECSnABF4AADYAAAWi0quoCjloED6ACmAECSnABFwAADYAAAWi0quoCjloEH0ACmAECSnABFoAADYAAAWi0quoCjloELuACmAECSnABFgAADYAAAWi0quoCjloEPoACmAMCSnABDYAADYAAAWi0quoCjloETiACmAECSnABFYAADYAAAWi0quoAfQ7Z1AQAAAAAAAJTngqQQo5aBAAAApgBAkpwARUAAA2AAAFotKrqAo5aBA+gApgBAkpwARSAAA2AAAFotKrqAo5aBB9AApgBAkpwARQAAA2AAAFotKrqAo5aBC7gApgBAkpwARQAAA2AAAFotKrqAo5aBD6AApgBAkpwAROAAA2AAAFotKrqAo5aBE4gApgBAkpwARMAAA2AAAFotKrqAH0O2dQEAAAAAAACU54K7gKOWgQAAAKYAQJKcAESgAANgAABaLSq6gKOWgQPoAKYAQJKcAESAAANgAABaLSq6gKOWgQfQAKYAwJKcAENgAANgAABaLSq6gKOWgQu4AKYAQJKcAERgAANgAABaLSq6gKOWgQ+gAKYAQJKcAERAAANgAABaLSq6gKOWgROIAKYAQJKcAEQgAANgAABaLSq6gB9DtnUBAAAAAAAAlOeC0vCjloEAAACmAECSnABEIAADYAAAWi0quoCjloED6ACmAECSnABEAAADYAAAWi0quoCjloEH0ACmAECSnABD4AADYAAAWi0quoCjloELuACmAECSnABDwAADYAAAWi0quoCjloEPoACmAECSnABDoAADYAAAWi0quoCjloETiACmAECSnABDgAADYAAAWi0quoAcU7trAQAAAAAAABG7j7OBALeK94EB8YIBd/CBAw=='); video.play(); } }; this.release = function() { video.pause(); video.src = ''; }; } function iOSWakeLock() { var timer = null; this.request = function() { if (!timer) { timer = setInterval(function() { window.location.href = '/'; setTimeout(window.stop, 0); }, 15000); } } this.release = function() { if (timer) { clearInterval(timer); timer = null; } } } function getWakeLock() { var userAgent = navigator.userAgent || navigator.vendor || window.opera; if (userAgent.match(/iPhone/i) || userAgent.match(/iPod/i)) { return iOSWakeLock; } else { return AndroidWakeLock; } } module.exports = getWakeLock(); "
    ]
    }